{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","directories","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=f0a0b3e0d1c53de2","-C","extra-filename=-f0a0b3e0d1c53de2","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--extern","cfg_if=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libcfg_if-ea23fff8dcc69735.rmeta","--extern","dirs_sys=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libdirs_sys-9c7d40dca0e66e6d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libdirectories-f0a0b3e0d1c53de2.rmeta"},"prelude":{"crate_id":{"name":"directories","disambiguator":[11671284262352474690,2386042012733394759]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","num":14,"id":{"name":"cfg_if","disambiguator":[2442249708866091360,16714075183114805585]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\win.rs","num":15,"id":{"name":"dirs_sys","disambiguator":[14946174080261484670,10594159815090633277]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\win.rs","num":16,"id":{"name":"winapi","disambiguator":[5636639422687459420,15773350436437932257]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":0,"byte_end":23905,"line_start":1,"line_end":465,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":0,"byte_end":23905,"line_start":1,"line_end":465,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":48},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":70},{"krate":0,"index":68},{"krate":0,"index":72},{"krate":0,"index":85},{"krate":0,"index":83},{"krate":0,"index":87},{"krate":0,"index":96},{"krate":0,"index":94},{"krate":0,"index":6},{"krate":0,"index":17},{"krate":0,"index":38}],"decl_id":null,"docs":" The _directories_ crate is\n\n - a tiny library with a minimal API (3 structs, 4 factory functions, getters)\n - that provides the platform-specific, user-accessible locations\n - for finding and storing configuration, cache and other data\n - on Linux, Redox, Windows (â‰¥ Vista) and macOS.\n\n The library provides the location of these directories by leveraging the mechanisms defined by\n\n - the [XDG base directory](https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html) and the [XDG user directory](https://www.freedesktop.org/wiki/Software/xdg-user-dirs/) specifications on Linux,\n - the [Known Folder](https://msdn.microsoft.com/en-us/library/windows/desktop/bb776911(v=vs.85).aspx) system on Windows, and\n - the [Standard Directories](https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html#//apple_ref/doc/uid/TP40010672-CH2-SW6) on macOS.\n\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":1000,"byte_end":1022,"line_start":15,"line_end":15,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":2149,"byte_end":2157,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"BaseDirs","qualname":"::BaseDirs","value":"BaseDirs {  }","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"decl_id":null,"docs":" `BaseDirs` provides paths of user-invisible standard directories, following the conventions of the operating system the library is running on.\n\n To compute the location of cache, config or data directories for individual projects or applications, use `ProjectDirs` instead.\n\n # Examples\n\n All examples on this page are computed with a user named _Alice_.\n\n ```\n use directories::BaseDirs;\n if let Some(base_dirs) = BaseDirs::new() {\n     base_dirs.config_dir();\n     // Linux:   /home/alice/.config\n     // Windows: C:\\Users\\Alice\\AppData\\Roaming\n     // macOS:   /Users/Alice/Library/Preferences\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":2954,"byte_end":2962,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"UserDirs","qualname":"::UserDirs","value":"UserDirs {  }","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":" `UserDirs` provides paths of user-facing standard directories, following the conventions of the operating system the library is running on.\n\n # Examples\n\n All examples on this page are computed with a user named _Alice_.\n\n ```\n use directories::UserDirs;\n if let Some(user_dirs) = UserDirs::new() {\n     user_dirs.audio_dir();\n     // Linux:   /home/alice/Music\n     // Windows: C:\\Users\\Alice\\Music\n     // macOS:   /Users/Alice/Music\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":4169,"byte_end":4180,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"ProjectDirs","qualname":"::ProjectDirs","value":"ProjectDirs {  }","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"decl_id":null,"docs":" `ProjectDirs` computes the location of cache, config or data directories for a specific application,\n which are derived from the standard directories and the name of the project/organization.\n\n # Examples\n\n All examples on this page are computed with a user named _Alice_,\n and a `ProjectDirs` struct created with `ProjectDirs::from(\"com\", \"Foo Corp\", \"Bar App\")`.\n\n ```\n use directories::ProjectDirs;\n if let Some(proj_dirs) = ProjectDirs::from(\"com\", \"Foo Corp\",  \"Bar App\") {\n     proj_dirs.config_dir();\n     // Linux:   /home/alice/.config/barapp\n     // Windows: C:\\Users\\Alice\\AppData\\Roaming\\Foo Corp\\Bar App\n     // macOS:   /Users/Alice/Library/Preferences/com.Foo-Corp.Bar-App\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":5728,"byte_end":5731,"line_start":158,"line_end":158,"column_start":12,"column_end":15},"name":"new","qualname":"<BaseDirs>::new","value":"fn () -> Option<BaseDirs>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BaseDirs` struct which holds the paths to user-invisible directories for cache, config, etc. data on the system.\n\n The returned value depends on the operating system and is either\n - `Some`, containing a snapshot of the state of the system's paths at the time `new()` was invoked, or\n - `None`, if no valid home directory path could be retrieved from the operating system.\n\n To determine whether a system provides a valid `$HOME` path, the following rules are applied:\n\n ### Linux and macOS:\n\n - Use `$HOME` if it is set and not empty.\n - If `$HOME` is not set or empty, then the function `getpwuid_r` is used to determine\n   the home directory of the current user.\n - If `getpwuid_r` lacks an entry for the current user id or the home directory field is empty,\n   then the function returns `None`.\n\n ### Windows:\n\n - Retrieve the user profile folder using `SHGetKnownFolderPath`.\n - If this fails, then the function returns `None`.\n\n _Note:_ This logic differs from [`std::env::home_dir`],\n which works incorrectly on Linux, macOS and Windows.\n\n [`std::env::home_dir`]: https://doc.rust-lang.org/std/env/fn.home_dir.html\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":6161,"byte_end":6169,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"home_dir","qualname":"<BaseDirs>::home_dir","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the user's home directory.\n\n |Platform | Value                | Example        |\n | ------- | -------------------- | -------------- |\n | Linux   | `$HOME`              | /home/alice    |\n | macOS   | `$HOME`              | /Users/Alice   |\n | Windows | `{FOLDERID_Profile}` | C:\\Users\\Alice |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":6746,"byte_end":6755,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"cache_dir","qualname":"<BaseDirs>::cache_dir","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the user's cache directory.\n\n |Platform | Value                               | Example                      |\n | ------- | ----------------------------------- | ---------------------------- |\n | Linux   | `$XDG_CACHE_HOME` or `$HOME`/.cache | /home/alice/.cache           |\n | macOS   | `$HOME`/Library/Caches              | /Users/Alice/Library/Caches  |\n | Windows | `{FOLDERID_LocalAppData}`           | C:\\Users\\Alice\\AppData\\Local |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":7364,"byte_end":7374,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"config_dir","qualname":"<BaseDirs>::config_dir","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the user's config directory.\n\n |Platform | Value                                 | Example                          |\n | ------- | ------------------------------------- | -------------------------------- |\n | Linux   | `$XDG_CONFIG_HOME` or `$HOME`/.config | /home/alice/.config              |\n | macOS   | `$HOME`/Library/Preferences           | /Users/Alice/Library/Preferences |\n | Windows | `{FOLDERID_RoamingAppData}`           | C:\\Users\\Alice\\AppData\\Roaming   |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":8037,"byte_end":8045,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"data_dir","qualname":"<BaseDirs>::data_dir","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the user's data directory.\n\n |Platform | Value                                    | Example                                  |\n | ------- | ---------------------------------------- | ---------------------------------------- |\n | Linux   | `$XDG_DATA_HOME` or `$HOME`/.local/share | /home/alice/.local/share                 |\n | macOS   | `$HOME`/Library/Application Support      | /Users/Alice/Library/Application Support |\n | Windows | `{FOLDERID_RoamingAppData}`              | C:\\Users\\Alice\\AppData\\Roaming           |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":8712,"byte_end":8726,"line_start":208,"line_end":208,"column_start":12,"column_end":26},"name":"data_local_dir","qualname":"<BaseDirs>::data_local_dir","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the user's local data directory.\n\n |Platform | Value                                    | Example                                  |\n | ------- | ---------------------------------------- | ---------------------------------------- |\n | Linux   | `$XDG_DATA_HOME` or `$HOME`/.local/share | /home/alice/.local/share                 |\n | macOS   | `$HOME`/Library/Application Support      | /Users/Alice/Library/Application Support |\n | Windows | `{FOLDERID_LocalAppData}`                | C:\\Users\\Alice\\AppData\\Local             |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":9437,"byte_end":9451,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"executable_dir","qualname":"<BaseDirs>::executable_dir","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the user's executable directory.\n\n |Platform | Value                                                            | Example                |\n | ------- | ---------------------------------------------------------------- | ---------------------- |\n | Linux   | `$XDG_BIN_HOME` or `$XDG_DATA_HOME`/../bin or `$HOME`/.local/bin | /home/alice/.local/bin |\n | macOS   | â€“                                                                | â€“                      |\n | Windows | â€“                                                                | â€“                      |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":9922,"byte_end":9933,"line_start":228,"line_end":228,"column_start":12,"column_end":23},"name":"runtime_dir","qualname":"<BaseDirs>::runtime_dir","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the user's runtime directory.\n\n |Platform | Value              | Example         |\n | ------- | ------------------ | --------------- |\n | Linux   | `$XDG_RUNTIME_DIR` | /run/user/1001/ |\n | macOS   | â€“                  | â€“               |\n | Windows | â€“                  | â€“               |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":10584,"byte_end":10587,"line_start":241,"line_end":241,"column_start":12,"column_end":15},"name":"new","qualname":"<UserDirs>::new","value":"fn () -> Option<UserDirs>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `UserDirs` struct which holds the paths to user-facing directories for audio, font, video, etc. data on the system.\n\n The returned value depends on the operating system and is either\n - `Some`, containing a snapshot of the state of the system's paths at the time `new()` was invoked, or\n - `None`, if no valid home directory path could be retrieved from the operating system.\n\n To determine whether a system provides a valid `$HOME` path, please refer to [`BaseDirs::new`]\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":11017,"byte_end":11025,"line_start":251,"line_end":251,"column_start":12,"column_end":20},"name":"home_dir","qualname":"<UserDirs>::home_dir","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the user's home directory.\n\n |Platform | Value                | Example        |\n | ------- | -------------------- | -------------- |\n | Linux   | `$HOME`              | /home/alice    |\n | macOS   | `$HOME`              | /Users/Alice   |\n | Windows | `{FOLDERID_Profile}` | C:\\Users\\Alice |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":11477,"byte_end":11486,"line_start":261,"line_end":261,"column_start":12,"column_end":21},"name":"audio_dir","qualname":"<UserDirs>::audio_dir","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the user's audio directory.\n\n |Platform | Value              | Example              |\n | ------- | ------------------ | -------------------- |\n | Linux   | `XDG_MUSIC_DIR`    | /home/alice/Music    |\n | macOS   | `$HOME`/Music      | /Users/Alice/Music   |\n | Windows | `{FOLDERID_Music}` | C:\\Users\\Alice\\Music |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":11989,"byte_end":12000,"line_start":271,"line_end":271,"column_start":12,"column_end":23},"name":"desktop_dir","qualname":"<UserDirs>::desktop_dir","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the user's desktop directory.\n\n |Platform | Value                | Example                |\n | ------- | -------------------- | ---------------------- |\n | Linux   | `XDG_DESKTOP_DIR`    | /home/alice/Desktop    |\n | macOS   | `$HOME`/Desktop      | /Users/Alice/Desktop   |\n | Windows | `{FOLDERID_Desktop}` | C:\\Users\\Alice\\Desktop |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":12526,"byte_end":12538,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"document_dir","qualname":"<UserDirs>::document_dir","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the user's document directory.\n\n |Platform | Value                  | Example                  |\n | ------- | ---------------------- | ------------------------ |\n | Linux   | `XDG_DOCUMENTS_DIR`    | /home/alice/Documents    |\n | macOS   | `$HOME`/Documents      | /Users/Alice/Documents   |\n | Windows | `{FOLDERID_Documents}` | C:\\Users\\Alice\\Documents |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":13065,"byte_end":13077,"line_start":291,"line_end":291,"column_start":12,"column_end":24},"name":"download_dir","qualname":"<UserDirs>::download_dir","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the user's download directory.\n\n |Platform | Value                  | Example                  |\n | ------- | ---------------------- | ------------------------ |\n | Linux   | `XDG_DOWNLOAD_DIR`     | /home/alice/Downloads    |\n | macOS   | `$HOME`/Downloads      | /Users/Alice/Downloads   |\n | Windows | `{FOLDERID_Downloads}` | C:\\Users\\Alice\\Downloads |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":13784,"byte_end":13792,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"font_dir","qualname":"<UserDirs>::font_dir","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the user's font directory.\n\n |Platform | Value                                                | Example                        |\n | ------- | ---------------------------------------------------- | ------------------------------ |\n | Linux   | `$XDG_DATA_HOME`/fonts or `$HOME`/.local/share/fonts | /home/alice/.local/share/fonts |\n | macOS   | `$HOME`/Library/Fonts                                | /Users/Alice/Library/Fonts     |\n | Windows | â€“                                                    | â€“                              |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":14304,"byte_end":14315,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"picture_dir","qualname":"<UserDirs>::picture_dir","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the user's picture directory.\n\n |Platform | Value                 | Example                 |\n | ------- | --------------------- | ----------------------- |\n | Linux   | `XDG_PICTURES_DIR`    | /home/alice/Pictures    |\n | macOS   | `$HOME`/Pictures      | /Users/Alice/Pictures   |\n | Windows | `{FOLDERID_Pictures}` | C:\\Users\\Alice\\Pictures |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":14809,"byte_end":14819,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"public_dir","qualname":"<UserDirs>::public_dir","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the user's public directory.\n\n |Platform | Value                 | Example             |\n | ------- | --------------------- | ------------------- |\n | Linux   | `XDG_PUBLICSHARE_DIR` | /home/alice/Public  |\n | macOS   | `$HOME`/Public        | /Users/Alice/Public |\n | Windows | `{FOLDERID_Public}`   | C:\\Users\\Public     |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":15518,"byte_end":15530,"line_start":331,"line_end":331,"column_start":12,"column_end":24},"name":"template_dir","qualname":"<UserDirs>::template_dir","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the user's template directory.\n\n |Platform | Value                  | Example                                                    |\n | ------- | ---------------------- | ---------------------------------------------------------- |\n | Linux   | `XDG_TEMPLATES_DIR`    | /home/alice/Templates                                      |\n | macOS   | â€“                      | â€“                                                          |\n | Windows | `{FOLDERID_Templates}` | C:\\Users\\Alice\\AppData\\Roaming\\Microsoft\\Windows\\Templates |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":16024,"byte_end":16033,"line_start":341,"line_end":341,"column_start":12,"column_end":21},"name":"video_dir","qualname":"<UserDirs>::video_dir","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the user's video directory.\n\n |Platform | Value               | Example               |\n | ------- | ------------------- | --------------------- |\n | Linux   | `XDG_VIDEOS_DIR`    | /home/alice/Videos    |\n | macOS   | `$HOME`/Movies      | /Users/Alice/Movies   |\n | Windows | `{FOLDERID_Videos}` | C:\\Users\\Alice\\Videos |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":16543,"byte_end":16552,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"from_path","qualname":"<ProjectDirs>::from_path","value":"fn (project_path: PathBuf) -> Option<ProjectDirs>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `ProjectDirs` struct directly from a `PathBuf` value.\n The argument is used verbatim and is not adapted to operating system standards.\n\n The use of `ProjectDirs::from_path` is strongly discouraged, as its results will\n not follow operating system standards on at least two of three platforms.\n \n Use [`ProjectDirs::from`] instead.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":18381,"byte_end":18385,"line_start":384,"line_end":384,"column_start":12,"column_end":16},"name":"from","qualname":"<ProjectDirs>::from","value":"fn (qualifier: &str, organization: &str, application: &str) -> Option<ProjectDirs>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `ProjectDirs` struct from values describing the project.\n\n The returned value depends on the operating system and is either\n - `Some`, containing project directory paths based on the state of the system's paths at the time `new()` was invoked, or\n - `None`, if no valid home directory path could be retrieved from the operating system.\n\n To determine whether a system provides a valid `$HOME` path, please refer to [`BaseDirs::new`]\n\n The use of `ProjectDirs::from` (instead of `ProjectDirs::from_path`) is strongly encouraged,\n as its results will follow operating system standards on Linux, macOS and Windows.\n\n # Parameters\n\n - `qualifier`    â€“ The reverse domain name notation of the application, excluding the organization or application name itself.<br/>\n   An empty string can be passed if no qualifier should be used (only affects macOS).<br/>\n   Example values: `\"com.example\"`, `\"org\"`, `\"uk.co\"`, `\"io\"`, `\"\"`\n - `organization` â€“ The name of the organization that develops this application, or for which the application is developed.<br/>\n   An empty string can be passed if no organization should be used (only affects macOS and Windows).<br/>\n   Example values: `\"Foo Corp\"`, `\"Alice and Bob Inc\"`, `\"\"`\n - `application`  â€“ The name of the application itself.<br/>\n   Example values: `\"Bar App\"`, `\"ExampleProgram\"`, `\"Unicorn-Programme\"`\n\n # Panics\n\n Panics if the home directory cannot be determined. See [`BaseDirs::home_dir`].\n\n [`BaseDirs::home_dir`]: struct.BaseDirs.html#method.home_dir\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":18746,"byte_end":18758,"line_start":389,"line_end":389,"column_start":12,"column_end":24},"name":"project_path","qualname":"<ProjectDirs>::project_path","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the project path fragment used to compute the project's cache/config/data directories.\n The value is derived from the `ProjectDirs::from` call and is platform-dependent.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":19627,"byte_end":19636,"line_start":399,"line_end":399,"column_start":12,"column_end":21},"name":"cache_dir","qualname":"<ProjectDirs>::cache_dir","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the project's cache directory.\n\n |Platform | Value                                                                 | Example                                             |\n | ------- | --------------------------------------------------------------------- | --------------------------------------------------- |\n | Linux   | `$XDG_CACHE_HOME`/`_project_path_` or `$HOME`/.cache/`_project_path_` | /home/alice/.cache/barapp                           |\n | macOS   | `$HOME`/Library/Caches/`_project_path_`                               | /Users/Alice/Library/Caches/com.Foo-Corp.Bar-App    |\n | Windows | `{FOLDERID_LocalAppData}`\\\\`_project_path_`\\\\cache                    | C:\\Users\\Alice\\AppData\\Local\\Foo Corp\\Bar App\\cache |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":20528,"byte_end":20538,"line_start":409,"line_end":409,"column_start":12,"column_end":22},"name":"config_dir","qualname":"<ProjectDirs>::config_dir","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the project's config directory.\n\n |Platform | Value                                                                   | Example                                                |\n | ------- | ----------------------------------------------------------------------- | ------------------------------------------------------ |\n | Linux   | `$XDG_CONFIG_HOME`/`_project_path_` or `$HOME`/.config/`_project_path_` | /home/alice/.config/barapp                             |\n | macOS   | `$HOME`/Library/Preferences/`_project_path_`                            | /Users/Alice/Library/Preferences/com.Foo-Corp.Bar-App  |\n | Windows | `{FOLDERID_RoamingAppData}`\\\\`_project_path_`\\\\config                   | C:\\Users\\Alice\\AppData\\Roaming\\Foo Corp\\Bar App\\config |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":21479,"byte_end":21487,"line_start":419,"line_end":419,"column_start":12,"column_end":20},"name":"data_dir","qualname":"<ProjectDirs>::data_dir","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the project's data directory.\n\n |Platform | Value                                                                      | Example                                                       |\n | ------- | -------------------------------------------------------------------------- | ------------------------------------------------------------- |\n | Linux   | `$XDG_DATA_HOME`/`_project_path_` or `$HOME`/.local/share/`_project_path_` | /home/alice/.local/share/barapp                               |\n | macOS   | `$HOME`/Library/Application Support/`_project_path_`                       | /Users/Alice/Library/Application Support/com.Foo-Corp.Bar-App |\n | Windows | `{FOLDERID_RoamingAppData}`\\\\`_project_path_`\\\\data                        | C:\\Users\\Alice\\AppData\\Roaming\\Foo Corp\\Bar App\\data          |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":22432,"byte_end":22446,"line_start":429,"line_end":429,"column_start":12,"column_end":26},"name":"data_local_dir","qualname":"<ProjectDirs>::data_local_dir","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the project's local data directory.\n\n |Platform | Value                                                                      | Example                                                       |\n | ------- | -------------------------------------------------------------------------- | ------------------------------------------------------------- |\n | Linux   | `$XDG_DATA_HOME`/`_project_path_` or `$HOME`/.local/share/`_project_path_` | /home/alice/.local/share/barapp                               |\n | macOS   | `$HOME`/Library/Application Support/`_project_path_`                       | /Users/Alice/Library/Application Support/com.Foo-Corp.Bar-App |\n | Windows | `{FOLDERID_LocalAppData}`\\\\`_project_path_`\\\\data                          | C:\\Users\\Alice\\AppData\\Local\\Foo Corp\\Bar App\\data            |\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":23007,"byte_end":23018,"line_start":439,"line_end":439,"column_start":12,"column_end":23},"name":"runtime_dir","qualname":"<ProjectDirs>::runtime_dir","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the project's runtime directory.\n\n |Platform | Value                               | Example               |\n | ------- | ----------------------------------- | --------------------- |\n | Linux   | `$XDG_RUNTIME_DIR`/`_project_path_` | /run/user/1001/barapp |\n | macOS   | â€“                                   | â€“                     |\n | Windows | â€“                                   | â€“                     |\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":4397,"byte_end":4405,"line_start":132,"line_end":132,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":10029,"byte_end":10037,"line_start":233,"line_end":233,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":16127,"byte_end":16138,"line_start":346,"line_end":346,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":4397,"byte_end":4405,"line_start":132,"line_end":132,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":60},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":10029,"byte_end":10037,"line_start":233,"line_end":233,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":72},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\directories-2.0.2\\src\\lib.rs","byte_start":16127,"byte_end":16138,"line_start":346,"line_end":346,"column_start":6,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}}]}