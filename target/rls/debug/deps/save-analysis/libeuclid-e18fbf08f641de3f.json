{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","euclid","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=e18fbf08f641de3f","-C","extra-filename=-e18fbf08f641de3f","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--extern","euclid_macros=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\euclid_macros-80a4a1d3433e5de5.dll","--extern","num_traits=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libnum_traits-06e054c4c95d48c0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libeuclid-e18fbf08f641de3f.rmeta"},"prelude":{"crate_id":{"name":"euclid","disambiguator":[9525940361148060044,17885180548363695299]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","num":4,"id":{"name":"euclid_macros","disambiguator":[150743972626710930,4136147709705277968]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","num":5,"id":{"name":"num_traits","disambiguator":[9658936450980938914,14161967064833628679]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","num":6,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","num":7,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","num":8,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","num":9,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","num":10,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","num":13,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","num":14,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":427,"byte_end":4877,"line_start":10,"line_end":141,"column_start":1,"column_end":26}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":2789,"byte_end":2799,"line_start":73,"line_end":73,"column_start":17,"column_end":27},"alias_span":null,"name":"TypedBox2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":2801,"byte_end":2806,"line_start":73,"line_end":73,"column_start":29,"column_end":34},"alias_span":null,"name":"Box2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":2825,"byte_end":2831,"line_start":74,"line_end":74,"column_start":17,"column_end":23},"alias_span":null,"name":"Length","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":2848,"byte_end":2858,"line_start":75,"line_end":75,"column_start":16,"column_end":26},"alias_span":null,"name":"TypedScale","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1721},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":2882,"byte_end":2893,"line_start":76,"line_end":76,"column_start":23,"column_end":34},"alias_span":null,"name":"Transform2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3135},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":2895,"byte_end":2911,"line_start":76,"line_end":76,"column_start":36,"column_end":52},"alias_span":null,"name":"TypedTransform2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1833},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":2936,"byte_end":2947,"line_start":77,"line_end":77,"column_start":23,"column_end":34},"alias_span":null,"name":"Transform3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3170},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":2949,"byte_end":2965,"line_start":77,"line_end":77,"column_start":36,"column_end":52},"alias_span":null,"name":"TypedTransform3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":2984,"byte_end":2991,"line_start":78,"line_end":78,"column_start":17,"column_end":24},"alias_span":null,"name":"Point2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":2993,"byte_end":3000,"line_start":78,"line_end":78,"column_start":26,"column_end":33},"alias_span":null,"name":"Point3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2865},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3002,"byte_end":3014,"line_start":78,"line_end":78,"column_start":35,"column_end":47},"alias_span":null,"name":"TypedPoint2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2890},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3016,"byte_end":3028,"line_start":78,"line_end":78,"column_start":49,"column_end":61},"alias_span":null,"name":"TypedPoint3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3030,"byte_end":3036,"line_start":78,"line_end":78,"column_start":63,"column_end":69},"alias_span":null,"name":"point2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3038,"byte_end":3044,"line_start":78,"line_end":78,"column_start":71,"column_end":77},"alias_span":null,"name":"point3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3294},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3064,"byte_end":3077,"line_start":79,"line_end":79,"column_start":18,"column_end":31},"alias_span":null,"name":"TypedVector2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3319},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3079,"byte_end":3092,"line_start":79,"line_end":79,"column_start":33,"column_end":46},"alias_span":null,"name":"TypedVector3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2154},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3094,"byte_end":3102,"line_start":79,"line_end":79,"column_start":48,"column_end":56},"alias_span":null,"name":"Vector2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2329},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3104,"byte_end":3112,"line_start":79,"line_end":79,"column_start":58,"column_end":66},"alias_span":null,"name":"Vector3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2554},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3114,"byte_end":3118,"line_start":79,"line_end":79,"column_start":68,"column_end":72},"alias_span":null,"name":"vec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2557},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3120,"byte_end":3124,"line_start":79,"line_end":79,"column_start":74,"column_end":78},"alias_span":null,"name":"vec3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3345},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3144,"byte_end":3156,"line_start":80,"line_end":80,"column_start":18,"column_end":30},"alias_span":null,"name":"BoolVector2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3363},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3158,"byte_end":3170,"line_start":80,"line_end":80,"column_start":32,"column_end":44},"alias_span":null,"name":"BoolVector3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2560},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3172,"byte_end":3177,"line_start":80,"line_end":80,"column_start":46,"column_end":51},"alias_span":null,"name":"bvec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2561},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3179,"byte_end":3184,"line_start":80,"line_end":80,"column_start":53,"column_end":58},"alias_span":null,"name":"bvec3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2778},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3204,"byte_end":3221,"line_start":81,"line_end":81,"column_start":18,"column_end":35},"alias_span":null,"name":"HomogeneousVector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3239,"byte_end":3243,"line_start":83,"line_end":83,"column_start":16,"column_end":20},"alias_span":null,"name":"rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3245,"byte_end":3249,"line_start":83,"line_end":83,"column_start":22,"column_end":26},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3251,"byte_end":3260,"line_start":83,"line_end":83,"column_start":28,"column_end":37},"alias_span":null,"name":"TypedRect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3279,"byte_end":3295,"line_start":84,"line_end":84,"column_start":17,"column_end":33},"alias_span":null,"name":"RigidTransform3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2916},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3297,"byte_end":3318,"line_start":84,"line_end":84,"column_start":35,"column_end":56},"alias_span":null,"name":"TypedRigidTransform3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2750},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3337,"byte_end":3342,"line_start":85,"line_end":85,"column_start":17,"column_end":22},"alias_span":null,"name":"box3d","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2590},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3344,"byte_end":3349,"line_start":85,"line_end":85,"column_start":24,"column_end":29},"alias_span":null,"name":"Box3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2585},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3351,"byte_end":3361,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"alias_span":null,"name":"TypedBox3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3215},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3386,"byte_end":3404,"line_start":86,"line_end":86,"column_start":23,"column_end":41},"alias_span":null,"name":"TypedTranslation2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3246},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3406,"byte_end":3424,"line_start":86,"line_end":86,"column_start":43,"column_end":61},"alias_span":null,"name":"TypedTranslation3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2961},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3446,"byte_end":3451,"line_start":87,"line_end":87,"column_start":20,"column_end":25},"alias_span":null,"name":"Angle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1148},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3453,"byte_end":3463,"line_start":87,"line_end":87,"column_start":27,"column_end":37},"alias_span":null,"name":"Rotation2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1179},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3465,"byte_end":3475,"line_start":87,"line_end":87,"column_start":39,"column_end":49},"alias_span":null,"name":"Rotation3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2994},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3477,"byte_end":3492,"line_start":87,"line_end":87,"column_start":51,"column_end":66},"alias_span":null,"name":"TypedRotation2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3024},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3494,"byte_end":3509,"line_start":87,"line_end":87,"column_start":68,"column_end":83},"alias_span":null,"name":"TypedRotation3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3535,"byte_end":3548,"line_start":88,"line_end":88,"column_start":24,"column_end":37},"alias_span":null,"name":"SideOffsets2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3057},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3550,"byte_end":3568,"line_start":88,"line_end":88,"column_start":39,"column_end":57},"alias_span":null,"name":"TypedSideOffsets2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3586,"byte_end":3592,"line_start":89,"line_end":89,"column_start":16,"column_end":22},"alias_span":null,"name":"Size2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3084},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3594,"byte_end":3605,"line_start":89,"line_end":89,"column_start":24,"column_end":35},"alias_span":null,"name":"TypedSize2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3607,"byte_end":3612,"line_start":89,"line_end":89,"column_start":37,"column_end":42},"alias_span":null,"name":"size2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3629,"byte_end":3633,"line_start":90,"line_end":90,"column_start":15,"column_end":19},"alias_span":null,"name":"Trig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2961},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":4860,"byte_end":4865,"line_start":141,"line_end":141,"column_start":9,"column_end":14},"alias_span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":4869,"byte_end":4876,"line_start":141,"line_end":141,"column_start":18,"column_end":25},"name":"Radians","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":427,"byte_end":4877,"line_start":10,"line_end":141,"column_start":1,"column_end":26},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":24},{"krate":0,"index":31},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":74},{"krate":0,"index":79},{"krate":0,"index":274},{"krate":0,"index":320},{"krate":0,"index":340},{"krate":0,"index":484},{"krate":0,"index":832},{"krate":0,"index":1015},{"krate":0,"index":1052},{"krate":0,"index":1238},{"krate":0,"index":1341},{"krate":0,"index":1385},{"krate":0,"index":1697},{"krate":0,"index":1803},{"krate":0,"index":1927},{"krate":0,"index":2111},{"krate":0,"index":2120},{"krate":0,"index":2562},{"krate":0,"index":3382},{"krate":0,"index":3402},{"krate":0,"index":3401},{"krate":0,"index":3399},{"krate":0,"index":3397},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3389},{"krate":0,"index":3387},{"krate":0,"index":3384},{"krate":0,"index":2753},{"krate":0,"index":2755},{"krate":0,"index":2759},{"krate":0,"index":2761},{"krate":0,"index":2765},{"krate":0,"index":2769}],"decl_id":null,"docs":" A collection of strongly typed math tools for computer graphics with an inclination\n towards 2d graphics and layout.\n\n All types are generic over the scalar type of their component (`f32`, `i32`, etc.),\n and tagged with a generic Unit parameter which is useful to prevent mixing\n values from different spaces. For example it should not be legal to translate\n a screen-space position by a world-space vector and this can be expressed using\n the generic Unit parameter.\n\n This unit system is not mandatory and all Typed* structures have an alias\n with the default unit: `UnknownUnit`.\n for example ```Point2D<T>``` is equivalent to ```TypedPoint2D<T, UnknownUnit>```.\n Client code typically creates a set of aliases for each type and doesn't need\n to deal with the specifics of typed units further. For example:\n\n ```rust\n use euclid::*;\n pub struct ScreenSpace;\n pub type ScreenPoint = TypedPoint2D<f32, ScreenSpace>;\n pub type ScreenSize = TypedSize2D<f32, ScreenSpace>;\n pub struct WorldSpace;\n pub type WorldPoint = TypedPoint3D<f32, WorldSpace>;\n pub type ProjectionMatrix = TypedTransform3D<f32, WorldSpace, ScreenSpace>;\n // etc...\n ```\n\n All euclid types are marked `#[repr(C)]` in order to facilitate exposing them to\n foreign function interfaces (provided the underlying scalar type is also `repr(C)`).\n\n Components are accessed in their scalar form by default for convenience, and most\n types additionally implement strongly typed accessors which return typed ```Length``` wrappers.\n For example:\n\n ```rust\n # use euclid::*;\n # pub struct WorldSpace;\n # pub type WorldPoint = TypedPoint3D<f32, WorldSpace>;\n let p = WorldPoint::new(0.0, 1.0, 1.0);\n // p.x is an f32.\n println!(\"p.x = {:?} \", p.x);\n // p.x is a Length<f32, WorldSpace>.\n println!(\"p.x_typed() = {:?} \", p.x_typed());\n // Length::get returns the scalar value (f32).\n assert_eq!(p.x, p.x_typed().get());\n ```\n","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":507,"byte_end":513,"line_start":11,"line_end":11,"column_start":24,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\approxeq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"approxeq","qualname":"::approxeq","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\approxeq.rs","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":73},{"krate":0,"index":2770},{"krate":0,"index":2774}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\approxeq.rs","byte_start":6448,"byte_end":6456,"line_start":11,"line_end":11,"column_start":11,"column_end":19},"name":"ApproxEq","qualname":"::approxeq::ApproxEq","value":"ApproxEq<Eps>","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72}],"decl_id":null,"docs":" Trait for testing approximate equality\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\approxeq.rs","byte_start":6471,"byte_end":6485,"line_start":12,"line_end":12,"column_start":8,"column_end":22},"name":"approx_epsilon","qualname":"::approxeq::ApproxEq::approx_epsilon","value":"fn () -> Eps","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\approxeq.rs","byte_start":6503,"byte_end":6512,"line_start":13,"line_end":13,"column_start":8,"column_end":17},"name":"approx_eq","qualname":"::approxeq::ApproxEq::approx_eq","value":"fn (&self, other: &Self) -> bool","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\approxeq.rs","byte_start":6550,"byte_end":6563,"line_start":14,"line_end":14,"column_start":8,"column_end":21},"name":"approx_eq_eps","qualname":"::approxeq::ApproxEq::approx_eq_eps","value":"fn (&self, other: &Self, approx_epsilon: &Eps) -> bool","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\approxord.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"approxord","qualname":"::approxord","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\approxord.rs","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":77}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\approxord.rs","byte_start":7726,"byte_end":7729,"line_start":12,"line_end":12,"column_start":8,"column_end":11},"name":"min","qualname":"::approxord::min","value":"fn <T> (x: T, y: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Utilities for testing approximate ordering - especially true for \n floating point types, where NaN's cannot be ordered. \n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\approxord.rs","byte_start":7829,"byte_end":7832,"line_start":20,"line_end":20,"column_start":8,"column_end":11},"name":"max","qualname":"::approxord::max","value":"fn <T> (x: T, y: T) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":9403,"byte_end":9413,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"TypedBox2D","qualname":"::box2d::TypedBox2D","value":"TypedBox2D { min, max }","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"decl_id":null,"docs":" An axis aligned rectangle represented by its minimum and maximum coordinates.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":9208,"byte_end":9218,"line_start":32,"line_end":32,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":9430,"byte_end":9433,"line_start":36,"line_end":36,"column_start":9,"column_end":12},"name":"min","qualname":"::box2d::TypedBox2D::min","value":"point::TypedPoint2D<T, U>","parent":{"krate":0,"index":107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":9463,"byte_end":9466,"line_start":37,"line_end":37,"column_start":9,"column_end":12},"name":"max","qualname":"::box2d::TypedBox2D::max","value":"point::TypedPoint2D<T, U>","parent":{"krate":0,"index":107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":9542,"byte_end":9547,"line_start":41,"line_end":41,"column_start":10,"column_end":15},"name":"Box2D","qualname":"::box2d::Box2D","value":"TypedBox2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" The default box 2d type with no unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":10553,"byte_end":10556,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedBox2D<T, U>>::new","value":"fn (min: TypedPoint2D<T, U>, max: TypedPoint2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":10844,"byte_end":10853,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"from_size","qualname":"<TypedBox2D<T, U>>::from_size","value":"fn (size: TypedSize2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Box2D of the given size, at offset zero.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":10823,"byte_end":10832,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":11357,"byte_end":11368,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<TypedBox2D<T, U>>::is_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the box has a negative area.\n\n The common interpretation for a negative box is to consider it empty. It can be obtained\n by calculating the intersection of two boxes that do not intersect.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":11336,"byte_end":11345,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":11531,"byte_end":11551,"line_start":116,"line_end":116,"column_start":12,"column_end":32},"name":"is_empty_or_negative","qualname":"<TypedBox2D<T, U>>::is_empty_or_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the size is zero or negative.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":11510,"byte_end":11519,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":11711,"byte_end":11721,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"intersects","qualname":"<TypedBox2D<T, U>>::intersects","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the two boxes intersect.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":11690,"byte_end":11699,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":12062,"byte_end":12074,"line_start":133,"line_end":133,"column_start":12,"column_end":24},"name":"intersection","qualname":"<TypedBox2D<T, U>>::intersection","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersection of two boxes.\n\n The result is a negative box if the boxes do not intersect.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":12041,"byte_end":12050,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":12528,"byte_end":12544,"line_start":148,"line_end":148,"column_start":12,"column_end":28},"name":"try_intersection","qualname":"<TypedBox2D<T, U>>::try_intersection","value":"fn (&self, other: &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersection of two boxes, returning `None` if the boxes do not intersect.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":12507,"byte_end":12516,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":12899,"byte_end":12908,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"name":"translate","qualname":"<TypedBox2D<T, U>>::translate","value":"fn (&self, by: &TypedVector2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the same box, translated by a vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":12878,"byte_end":12887,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":13312,"byte_end":13320,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"contains","qualname":"<TypedBox2D<T, U>>::contains","value":"fn (&self, p: &TypedPoint2D<T, U>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this box contains the point. Points are considered\n in the box if they are on the front, left or top faces, but outside if they\n are on the back, right or bottom faces.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":13291,"byte_end":13300,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":13782,"byte_end":13794,"line_start":192,"line_end":192,"column_start":12,"column_end":24},"name":"contains_box","qualname":"<TypedBox2D<T, U>>::contains_box","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this box contains the interior of the other box. Always\n returns true if other is empty, and always returns false if other is\n nonempty but this box is empty.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":13761,"byte_end":13770,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":14113,"byte_end":14117,"line_start":204,"line_end":204,"column_start":12,"column_end":16},"name":"size","qualname":"<TypedBox2D<T, U>>::size","value":"fn (&self) -> TypedSize2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":14092,"byte_end":14101,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":14219,"byte_end":14226,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"to_rect","qualname":"<TypedBox2D<T, U>>::to_rect","value":"fn (&self) -> TypedRect<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":14198,"byte_end":14207,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":14606,"byte_end":14613,"line_start":224,"line_end":224,"column_start":12,"column_end":19},"name":"inflate","qualname":"<TypedBox2D<T, U>>::inflate","value":"fn (&self, width: T, height: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inflates the box by the specified sizes on each side respectively.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":14537,"byte_end":14546,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":15167,"byte_end":15176,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"name":"inner_box","qualname":"<TypedBox2D<T, U>>::inner_box","value":"fn (&self, offsets: TypedSideOffsets2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculate the size and position of an inner box.\n\n Subtracts the side offsets from all sides. The horizontal, vertical\n and applicate offsets must not be larger than the original side length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":15534,"byte_end":15543,"line_start":250,"line_end":250,"column_start":12,"column_end":21},"name":"outer_box","qualname":"<TypedBox2D<T, U>>::outer_box","value":"fn (&self, offsets: TypedSideOffsets2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculate the b and position of an outer box.\n\n Add the offsets to all sides. The expanded box is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":15915,"byte_end":15926,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"from_points","qualname":"<TypedBox2D<T, U>>::from_points","value":"fn <I> (points: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest box containing all of the provided points.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":17478,"byte_end":17482,"line_start":320,"line_end":320,"column_start":12,"column_end":16},"name":"lerp","qualname":"<TypedBox2D<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this box and another box.\n\n `t` is expected to be between zero and one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":17457,"byte_end":17466,"line_start":319,"line_end":319,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":17741,"byte_end":17747,"line_start":332,"line_end":332,"column_start":12,"column_end":18},"name":"center","qualname":"<TypedBox2D<T, U>>::center","value":"fn (&self) -> TypedPoint2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":17962,"byte_end":17967,"line_start":343,"line_end":343,"column_start":12,"column_end":17},"name":"union","qualname":"<TypedBox2D<T, U>>::union","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":17941,"byte_end":17950,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":18377,"byte_end":18382,"line_start":362,"line_end":362,"column_start":12,"column_end":17},"name":"scale","qualname":"<TypedBox2D<T, U>>::scale","value":"fn <S> (&self, x: S, y: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":18356,"byte_end":18365,"line_start":361,"line_end":361,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":18735,"byte_end":18739,"line_start":378,"line_end":378,"column_start":12,"column_end":16},"name":"area","qualname":"<TypedBox2D<T, U>>::area","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":18714,"byte_end":18723,"line_start":377,"line_end":377,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":18943,"byte_end":18947,"line_start":389,"line_end":389,"column_start":12,"column_end":16},"name":"zero","qualname":"<TypedBox2D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all sides to zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":19158,"byte_end":19166,"line_start":400,"line_end":400,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<TypedBox2D<T, U>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the size is zero.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":19137,"byte_end":19146,"line_start":399,"line_end":399,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":20423,"byte_end":20433,"line_start":454,"line_end":454,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<TypedBox2D<T, Unit>>::to_untyped","value":"fn (&self) -> Box2D<T>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":20584,"byte_end":20596,"line_start":459,"line_end":459,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<TypedBox2D<T, Unit>>::from_untyped","value":"fn (c: &Box2D<T>) -> TypedBox2D<T, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":21214,"byte_end":21218,"line_start":476,"line_end":476,"column_start":12,"column_end":16},"name":"cast","qualname":"<TypedBox2D<T0, Unit>>::cast","value":"fn <T1> (&self) -> TypedBox2D<T1, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n\n When casting from floating point to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using round(), round_in or round_out() before casting.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":21751,"byte_end":21759,"line_start":488,"line_end":488,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<TypedBox2D<T0, Unit>>::try_cast","value":"fn <T1> (&self) -> Option<TypedBox2D<T1, Unit>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n\n When casting from floating point to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using round(), round_in or round_out() before casting.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":22615,"byte_end":22620,"line_start":510,"line_end":510,"column_start":12,"column_end":17},"name":"round","qualname":"<TypedBox2D<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box with edges rounded to integer coordinates, such that\n the returned box has the same set of pixel centers as the original\n one.\n Values equal to 0.5 round up.\n Suitable for most places where integral device coordinates\n are needed, but note that any translation should be applied first to\n avoid pixel rounding errors.\n Note that this is *not* rounding to nearest integer if the values are negative.\n They are always rounding as floor(n + 0.5).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":22956,"byte_end":22964,"line_start":522,"line_end":522,"column_start":12,"column_end":20},"name":"round_in","qualname":"<TypedBox2D<T, U>>::round_in","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box with faces/edges rounded to integer coordinates, such that\n the original box contains the resulting box.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":23291,"byte_end":23300,"line_start":531,"line_end":531,"column_start":12,"column_end":21},"name":"round_out","qualname":"<TypedBox2D<T, U>>::round_out","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box with faces/edges rounded to integer coordinates, such that\n the original box is contained in the resulting box.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":23567,"byte_end":23573,"line_start":541,"line_end":541,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<TypedBox2D<T, Unit>>::to_f32","value":"fn (&self) -> TypedBox2D<f32, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` box.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":23678,"byte_end":23684,"line_start":546,"line_end":546,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<TypedBox2D<T, Unit>>::to_f64","value":"fn (&self) -> TypedBox2D<f64, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` box.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":24035,"byte_end":24043,"line_start":555,"line_end":555,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<TypedBox2D<T, Unit>>::to_usize","value":"fn (&self) -> TypedBox2D<usize, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` box, truncating decimals if any.\n\n When casting from floating point boxes, it is worth considering whether\n to `round()`, `round_in()` or `round_out()` before the cast in order to\n obtain the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":24394,"byte_end":24400,"line_start":564,"line_end":564,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<TypedBox2D<T, Unit>>::to_u32","value":"fn (&self) -> TypedBox2D<u32, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` box, truncating decimals if any.\n\n When casting from floating point boxes, it is worth considering whether\n to `round()`, `round_in()` or `round_out()` before the cast in order to\n obtain the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":24749,"byte_end":24755,"line_start":573,"line_end":573,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<TypedBox2D<T, Unit>>::to_i32","value":"fn (&self) -> TypedBox2D<i32, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` box, truncating decimals if any.\n\n When casting from floating point boxes, it is worth considering whether\n to `round()`, `round_in()` or `round_out()` before the cast in order to\n obtain the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":25104,"byte_end":25110,"line_start":582,"line_end":582,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<TypedBox2D<T, Unit>>::to_i64","value":"fn (&self) -> TypedBox2D<i64, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` box, truncating decimals if any.\n\n When casting from floating point boxes, it is worth considering whether\n to `round()`, `round_in()` or `round_out()` before the cast in order to\n obtain the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2778},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":32406,"byte_end":32423,"line_start":23,"line_end":23,"column_start":12,"column_end":29},"name":"HomogeneousVector","qualname":"::homogen::HomogeneousVector","value":"HomogeneousVector { x, y, z, w, _unit }","parent":null,"children":[{"krate":0,"index":2781},{"krate":0,"index":2782},{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2785}],"decl_id":null,"docs":" Homogeneous vector in 3D space.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":32384,"byte_end":32394,"line_start":22,"line_end":22,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2781},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":32440,"byte_end":32441,"line_start":24,"line_end":24,"column_start":9,"column_end":10},"name":"x","qualname":"::homogen::HomogeneousVector::x","value":"T","parent":{"krate":0,"index":2778},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2782},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":32454,"byte_end":32455,"line_start":25,"line_end":25,"column_start":9,"column_end":10},"name":"y","qualname":"::homogen::HomogeneousVector::y","value":"T","parent":{"krate":0,"index":2778},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2783},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":32468,"byte_end":32469,"line_start":26,"line_end":26,"column_start":9,"column_end":10},"name":"z","qualname":"::homogen::HomogeneousVector::z","value":"T","parent":{"krate":0,"index":2778},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2784},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":32482,"byte_end":32483,"line_start":27,"line_end":27,"column_start":9,"column_end":10},"name":"w","qualname":"::homogen::HomogeneousVector::w","value":"T","parent":{"krate":0,"index":2778},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":32515,"byte_end":32520,"line_start":29,"line_end":29,"column_start":9,"column_end":14},"name":"_unit","qualname":"::homogen::HomogeneousVector::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":2778},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":32655,"byte_end":32658,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<HomogeneousVector<T, U>>::new","value":"fn (x: T, y: T, z: T, w: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":32634,"byte_end":32643,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":32990,"byte_end":33000,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"to_point2d","qualname":"<HomogeneousVector<T, U>>::to_point2d","value":"fn (&self) -> Option<TypedPoint2D<T, U>>","parent":null,"children":[],"decl_id":null,"docs":" Convert into Cartesian 2D point.\n\n Returns None if the point is on or behind the W=0 hemisphere.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":32969,"byte_end":32978,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":33337,"byte_end":33347,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"to_point3d","qualname":"<HomogeneousVector<T, U>>::to_point3d","value":"fn (&self) -> Option<TypedPoint3D<T, U>>","parent":null,"children":[],"decl_id":null,"docs":" Convert into Cartesian 3D point.\n\n Returns None if the point is on or behind the W=0 hemisphere.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":33316,"byte_end":33325,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"num","qualname":"::num","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":2805},{"krate":0,"index":2807},{"krate":0,"index":2809},{"krate":0,"index":2811},{"krate":0,"index":2813},{"krate":0,"index":2815},{"krate":0,"index":2817},{"krate":0,"index":2819},{"krate":0,"index":2821},{"krate":0,"index":2823},{"krate":0,"index":2825},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2831},{"krate":0,"index":2833},{"krate":0,"index":2835},{"krate":0,"index":2837},{"krate":0,"index":2839},{"krate":0,"index":2841},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2855},{"krate":0,"index":2857},{"krate":0,"index":2859},{"krate":0,"index":2861},{"krate":0,"index":2863}],"decl_id":null,"docs":" A one-dimensional length, tagged with its units.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":35909,"byte_end":35913,"line_start":13,"line_end":13,"column_start":11,"column_end":15},"name":"Zero","qualname":"::num::Zero","value":"Zero","parent":null,"children":[{"krate":0,"index":323}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":35923,"byte_end":35927,"line_start":14,"line_end":14,"column_start":8,"column_end":12},"name":"zero","qualname":"::num::Zero::zero","value":"fn () -> Self","parent":{"krate":0,"index":322},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":36054,"byte_end":36057,"line_start":23,"line_end":23,"column_start":11,"column_end":14},"name":"One","qualname":"::num::One","value":"One","parent":null,"children":[{"krate":0,"index":328}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":36067,"byte_end":36070,"line_start":24,"line_end":24,"column_start":8,"column_end":11},"name":"one","qualname":"::num::One::one","value":"fn () -> Self","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":36192,"byte_end":36197,"line_start":33,"line_end":33,"column_start":11,"column_end":16},"name":"Round","qualname":"::num::Round","value":"Round: Copy","parent":null,"children":[{"krate":0,"index":333}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":36213,"byte_end":36218,"line_start":34,"line_end":34,"column_start":8,"column_end":13},"name":"round","qualname":"::num::Round::round","value":"fn (self) -> Self","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":36246,"byte_end":36251,"line_start":36,"line_end":36,"column_start":11,"column_end":16},"name":"Floor","qualname":"::num::Floor","value":"Floor: Copy","parent":null,"children":[{"krate":0,"index":335}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":36267,"byte_end":36272,"line_start":37,"line_end":37,"column_start":8,"column_end":13},"name":"floor","qualname":"::num::Floor::floor","value":"fn (self) -> Self","parent":{"krate":0,"index":334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":36300,"byte_end":36304,"line_start":39,"line_end":39,"column_start":11,"column_end":15},"name":"Ceil","qualname":"::num::Ceil","value":"Ceil: Copy","parent":null,"children":[{"krate":0,"index":337}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":36320,"byte_end":36324,"line_start":40,"line_end":40,"column_start":8,"column_end":12},"name":"ceil","qualname":"::num::Ceil::ceil","value":"fn (self) -> Self","parent":{"krate":0,"index":336},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":38790,"byte_end":38796,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"Length","qualname":"::length::Length","value":"","parent":null,"children":[],"decl_id":null,"docs":" A one-dimensional distance, with value represented by `T` and unit of measurement `Unit`.\n\n `T` can be any numeric type, for example a primitive type like `u64` or `f32`.\n\n `Unit` is not used in the representation of a `Length` value. It is used only at compile time\n to ensure that a `Length` stored with one unit is converted explicitly before being used in an\n expression that requires a different unit.  It may be a type without values, such as an empty\n enum.\n\n You can multiply a `Length` by a `scale::TypedScale` to convert it from one unit to\n another. See the [`TypedScale`] docs for an example.\n\n [`TypedScale`]: struct.TypedScale.html\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":38768,"byte_end":38778,"line_start":37,"line_end":37,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":39675,"byte_end":39678,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<Length<T, Unit>>::new","value":"fn (x: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":39785,"byte_end":39788,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"get","qualname":"<Length<T, Unit>>::get","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":43341,"byte_end":43345,"line_start":214,"line_end":214,"column_start":12,"column_end":16},"name":"cast","qualname":"<Length<T0, Unit>>::cast","value":"fn <T1> (&self) -> Length<T1, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":43535,"byte_end":43543,"line_start":219,"line_end":219,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Length<T0, Unit>>::try_cast","value":"fn <T1> (&self) -> Option<Length<T1, Unit>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":44567,"byte_end":44571,"line_start":258,"line_end":258,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Length<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this length and another length.\n\n `t` is expected to be between zero and one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":44546,"byte_end":44555,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2865},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":52627,"byte_end":52639,"line_start":27,"line_end":27,"column_start":12,"column_end":24},"name":"TypedPoint2D","qualname":"::point::TypedPoint2D","value":"TypedPoint2D { x, y, _unit }","parent":null,"children":[{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870}],"decl_id":null,"docs":" A 2d Point tagged with a unit.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":52605,"byte_end":52615,"line_start":26,"line_end":26,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2868},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":52656,"byte_end":52657,"line_start":28,"line_end":28,"column_start":9,"column_end":10},"name":"x","qualname":"::point::TypedPoint2D::x","value":"T","parent":{"krate":0,"index":2865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2869},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":52670,"byte_end":52671,"line_start":29,"line_end":29,"column_start":9,"column_end":10},"name":"y","qualname":"::point::TypedPoint2D::y","value":"T","parent":{"krate":0,"index":2865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2870},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":52703,"byte_end":52708,"line_start":31,"line_end":31,"column_start":9,"column_end":14},"name":"_unit","qualname":"::point::TypedPoint2D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":2865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":52882,"byte_end":52889,"line_start":39,"line_end":39,"column_start":10,"column_end":17},"name":"Point2D","qualname":"::point::Point2D","value":"TypedPoint2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Default 2d point type with no unit.\n\n `Point2D` provides the same methods as `TypedPoint2D`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":53049,"byte_end":53055,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"origin","qualname":"<TypedPoint2D<T, U>>::origin","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to zero.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":53028,"byte_end":53037,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":53143,"byte_end":53147,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"zero","qualname":"<TypedPoint2D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":53122,"byte_end":53131,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":53248,"byte_end":53253,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"to_3d","qualname":"<TypedPoint2D<T, U>>::to_3d","value":"fn (&self) -> TypedPoint3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 3d point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":53227,"byte_end":53236,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":53970,"byte_end":53973,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedPoint2D<T, U>>::new","value":"fn (x: T, y: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":53949,"byte_end":53958,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":54239,"byte_end":54251,"line_start":93,"line_end":93,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<TypedPoint2D<T, U>>::from_lengths","value":"fn (x: Length<T, U>, y: Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking properly typed Lengths instead of scalar values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":54218,"byte_end":54227,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":54423,"byte_end":54429,"line_start":99,"line_end":99,"column_start":12,"column_end":18},"name":"extend","qualname":"<TypedPoint2D<T, U>>::extend","value":"fn (&self, z: T) -> TypedPoint3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d point from this one, using the specified z value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":54402,"byte_end":54411,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":54642,"byte_end":54651,"line_start":107,"line_end":107,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<TypedPoint2D<T, U>>::to_vector","value":"fn (&self) -> TypedVector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this point into a vector.\n\n Equivalent to subtracting the origin from this point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":54621,"byte_end":54630,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":54767,"byte_end":54769,"line_start":113,"line_end":113,"column_start":12,"column_end":14},"name":"yx","qualname":"<TypedPoint2D<T, U>>::yx","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Swap x and y.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":54746,"byte_end":54755,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":54904,"byte_end":54911,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"x_typed","qualname":"<TypedPoint2D<T, U>>::x_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.x as a Length carrying the unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":54883,"byte_end":54892,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":55051,"byte_end":55058,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"y_typed","qualname":"<TypedPoint2D<T, U>>::y_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.y as a Length carrying the unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":55030,"byte_end":55039,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":55203,"byte_end":55213,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<TypedPoint2D<T, U>>::to_untyped","value":"fn (&self) -> Point2D<T>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":55182,"byte_end":55191,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":55341,"byte_end":55353,"line_start":137,"line_end":137,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<TypedPoint2D<T, U>>::from_untyped","value":"fn (p: &Point2D<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":55320,"byte_end":55329,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":55437,"byte_end":55445,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"to_array","qualname":"<TypedPoint2D<T, U>>::to_array","value":"fn (&self) -> [T; 2]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":55416,"byte_end":55425,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":55522,"byte_end":55530,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<TypedPoint2D<T, U>>::to_tuple","value":"fn (&self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":55501,"byte_end":55510,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":55668,"byte_end":55676,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"add_size","qualname":"<TypedPoint2D<T, U>>::add_size","value":"fn (&self, other: &TypedSize2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":55647,"byte_end":55656,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":57227,"byte_end":57230,"line_start":207,"line_end":207,"column_start":12,"column_end":15},"name":"min","qualname":"<TypedPoint2D<T, U>>::min","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":57206,"byte_end":57215,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":57349,"byte_end":57352,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"max","qualname":"<TypedPoint2D<T, U>>::max","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":57328,"byte_end":57337,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":57471,"byte_end":57476,"line_start":217,"line_end":217,"column_start":12,"column_end":17},"name":"clamp","qualname":"<TypedPoint2D<T, U>>::clamp","value":"fn (&self, start: Self, end: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":57450,"byte_end":57459,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":59203,"byte_end":59208,"line_start":275,"line_end":275,"column_start":12,"column_end":17},"name":"round","qualname":"<TypedPoint2D<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n For example `{ -0.1, -0.8 }.round() == { 0.0, -1.0 }`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":59134,"byte_end":59143,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":59638,"byte_end":59642,"line_start":287,"line_end":287,"column_start":12,"column_end":16},"name":"ceil","qualname":"<TypedPoint2D<T, U>>::ceil","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n For example `{ -0.1, -0.8 }.ceil() == { 0.0, 0.0 }`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":59569,"byte_end":59578,"line_start":285,"line_end":285,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":60071,"byte_end":60076,"line_start":299,"line_end":299,"column_start":12,"column_end":17},"name":"floor","qualname":"<TypedPoint2D<T, U>>::floor","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n For example `{ -0.1, -0.8 }.floor() == { -1.0, -1.0 }`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":60002,"byte_end":60011,"line_start":297,"line_end":297,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":60582,"byte_end":60586,"line_start":311,"line_end":311,"column_start":12,"column_end":16},"name":"cast","qualname":"<TypedPoint2D<T, U>>::cast","value":"fn <NewT> (&self) -> TypedPoint2D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n\n When casting from floating point to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":60561,"byte_end":60570,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":61062,"byte_end":61070,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<TypedPoint2D<T, U>>::try_cast","value":"fn <NewT> (&self) -> Option<TypedPoint2D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n\n When casting from floating point to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":61398,"byte_end":61404,"line_start":331,"line_end":331,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<TypedPoint2D<T, U>>::to_f32","value":"fn (&self) -> TypedPoint2D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":61377,"byte_end":61386,"line_start":330,"line_end":330,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":61524,"byte_end":61530,"line_start":337,"line_end":337,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<TypedPoint2D<T, U>>::to_f64","value":"fn (&self) -> TypedPoint2D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":61503,"byte_end":61512,"line_start":336,"line_end":336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":61889,"byte_end":61897,"line_start":347,"line_end":347,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<TypedPoint2D<T, U>>::to_usize","value":"fn (&self) -> TypedPoint2D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` point, truncating decimals if any.\n\n When casting from floating point points, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":61868,"byte_end":61877,"line_start":346,"line_end":346,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":62256,"byte_end":62262,"line_start":357,"line_end":357,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<TypedPoint2D<T, U>>::to_u32","value":"fn (&self) -> TypedPoint2D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` point, truncating decimals if any.\n\n When casting from floating point points, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":62235,"byte_end":62244,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":62617,"byte_end":62623,"line_start":367,"line_end":367,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<TypedPoint2D<T, U>>::to_i32","value":"fn (&self) -> TypedPoint2D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an i32 point, truncating decimals if any.\n\n When casting from floating point points, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":62596,"byte_end":62605,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":62978,"byte_end":62984,"line_start":377,"line_end":377,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<TypedPoint2D<T, U>>::to_i64","value":"fn (&self) -> TypedPoint2D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an i64 point, truncating decimals if any.\n\n When casting from floating point points, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":62957,"byte_end":62966,"line_start":376,"line_end":376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":63310,"byte_end":63314,"line_start":390,"line_end":390,"column_start":12,"column_end":16},"name":"lerp","qualname":"<TypedPoint2D<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this point and another point.\n\n `t` is expected to be between zero and one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":63289,"byte_end":63298,"line_start":389,"line_end":389,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2890},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64563,"byte_end":64575,"line_start":440,"line_end":440,"column_start":12,"column_end":24},"name":"TypedPoint3D","qualname":"::point::TypedPoint3D","value":"TypedPoint3D { x, y, z, _unit }","parent":null,"children":[{"krate":0,"index":2893},{"krate":0,"index":2894},{"krate":0,"index":2895},{"krate":0,"index":2896}],"decl_id":null,"docs":" A 3d Point tagged with a unit.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64541,"byte_end":64551,"line_start":439,"line_end":439,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2893},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64592,"byte_end":64593,"line_start":441,"line_end":441,"column_start":9,"column_end":10},"name":"x","qualname":"::point::TypedPoint3D::x","value":"T","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2894},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64606,"byte_end":64607,"line_start":442,"line_end":442,"column_start":9,"column_end":10},"name":"y","qualname":"::point::TypedPoint3D::y","value":"T","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2895},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64620,"byte_end":64621,"line_start":443,"line_end":443,"column_start":9,"column_end":10},"name":"z","qualname":"::point::TypedPoint3D::z","value":"T","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2896},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64653,"byte_end":64658,"line_start":445,"line_end":445,"column_start":9,"column_end":14},"name":"_unit","qualname":"::point::TypedPoint3D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64835,"byte_end":64842,"line_start":453,"line_end":453,"column_start":10,"column_end":17},"name":"Point3D","qualname":"::point::Point3D","value":"TypedPoint3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Default 3d point type with no unit.\n\n `Point3D` provides the same methods as `TypedPoint3D`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":65002,"byte_end":65008,"line_start":458,"line_end":458,"column_start":12,"column_end":18},"name":"origin","qualname":"<TypedPoint3D<T, U>>::origin","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to zero.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64981,"byte_end":64990,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":65110,"byte_end":65114,"line_start":463,"line_end":463,"column_start":12,"column_end":16},"name":"zero","qualname":"<TypedPoint3D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":65089,"byte_end":65098,"line_start":462,"line_end":462,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":65228,"byte_end":65239,"line_start":470,"line_end":470,"column_start":12,"column_end":23},"name":"to_array_4d","qualname":"<TypedPoint3D<T, U>>::to_array_4d","value":"fn (&self) -> [T; 4]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":65207,"byte_end":65216,"line_start":469,"line_end":469,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":65336,"byte_end":65347,"line_start":475,"line_end":475,"column_start":12,"column_end":23},"name":"to_tuple_4d","qualname":"<TypedPoint3D<T, U>>::to_tuple_4d","value":"fn (&self) -> (T, T, T, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":65315,"byte_end":65324,"line_start":474,"line_end":474,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":65690,"byte_end":65694,"line_start":488,"line_end":488,"column_start":12,"column_end":16},"name":"lerp","qualname":"<TypedPoint3D<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this point and another point.\n\n `t` is expected to be between zero and one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":65669,"byte_end":65678,"line_start":487,"line_end":487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":66598,"byte_end":66601,"line_start":519,"line_end":519,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedPoint3D<T, U>>::new","value":"fn (x: T, y: T, z: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":66577,"byte_end":66586,"line_start":518,"line_end":518,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":66848,"byte_end":66860,"line_start":530,"line_end":530,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<TypedPoint3D<T, U>>::from_lengths","value":"fn (x: Length<T, U>, y: Length<T, U>, z: Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking properly typed Lengths instead of scalar values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":66827,"byte_end":66836,"line_start":529,"line_end":529,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":67091,"byte_end":67100,"line_start":538,"line_end":538,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<TypedPoint3D<T, U>>::to_vector","value":"fn (&self) -> TypedVector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this point into a vector.\n\n Equivalent to subtracting the origin to this point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":67070,"byte_end":67079,"line_start":537,"line_end":537,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":67268,"byte_end":67270,"line_start":544,"line_end":544,"column_start":12,"column_end":14},"name":"xy","qualname":"<TypedPoint3D<T, U>>::xy","value":"fn (&self) -> TypedPoint2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d point using this point's x and y coordinates\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":67247,"byte_end":67256,"line_start":543,"line_end":543,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":67431,"byte_end":67433,"line_start":550,"line_end":550,"column_start":12,"column_end":14},"name":"xz","qualname":"<TypedPoint3D<T, U>>::xz","value":"fn (&self) -> TypedPoint2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d point using this point's x and z coordinates\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":67410,"byte_end":67419,"line_start":549,"line_end":549,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":67594,"byte_end":67596,"line_start":556,"line_end":556,"column_start":12,"column_end":14},"name":"yz","qualname":"<TypedPoint3D<T, U>>::yz","value":"fn (&self) -> TypedPoint2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d point using this point's x and z coordinates\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":67573,"byte_end":67582,"line_start":555,"line_end":555,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":67745,"byte_end":67752,"line_start":562,"line_end":562,"column_start":12,"column_end":19},"name":"x_typed","qualname":"<TypedPoint3D<T, U>>::x_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.x as a Length carrying the unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":67724,"byte_end":67733,"line_start":561,"line_end":561,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":67892,"byte_end":67899,"line_start":568,"line_end":568,"column_start":12,"column_end":19},"name":"y_typed","qualname":"<TypedPoint3D<T, U>>::y_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.y as a Length carrying the unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":67871,"byte_end":67880,"line_start":567,"line_end":567,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":68039,"byte_end":68046,"line_start":574,"line_end":574,"column_start":12,"column_end":19},"name":"z_typed","qualname":"<TypedPoint3D<T, U>>::z_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.z as a Length carrying the unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":68018,"byte_end":68027,"line_start":573,"line_end":573,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":68132,"byte_end":68140,"line_start":579,"line_end":579,"column_start":12,"column_end":20},"name":"to_array","qualname":"<TypedPoint3D<T, U>>::to_array","value":"fn (&self) -> [T; 3]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":68111,"byte_end":68120,"line_start":578,"line_end":578,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":68225,"byte_end":68233,"line_start":584,"line_end":584,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<TypedPoint3D<T, U>>::to_tuple","value":"fn (&self) -> (T, T, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":68204,"byte_end":68213,"line_start":583,"line_end":583,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":68380,"byte_end":68390,"line_start":590,"line_end":590,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<TypedPoint3D<T, U>>::to_untyped","value":"fn (&self) -> Point3D<T>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":68359,"byte_end":68368,"line_start":589,"line_end":589,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":68526,"byte_end":68538,"line_start":596,"line_end":596,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<TypedPoint3D<T, U>>::from_untyped","value":"fn (p: &Point3D<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":68505,"byte_end":68514,"line_start":595,"line_end":595,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":68660,"byte_end":68665,"line_start":602,"line_end":602,"column_start":12,"column_end":17},"name":"to_2d","qualname":"<TypedPoint3D<T, U>>::to_2d","value":"fn (&self) -> TypedPoint2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 2d point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":68639,"byte_end":68648,"line_start":601,"line_end":601,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":68808,"byte_end":68816,"line_start":609,"line_end":609,"column_start":12,"column_end":20},"name":"add_size","qualname":"<TypedPoint3D<T, U>>::add_size","value":"fn (&self, other: &TypedSize3D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":68787,"byte_end":68796,"line_start":608,"line_end":608,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":71253,"byte_end":71256,"line_start":686,"line_end":686,"column_start":12,"column_end":15},"name":"min","qualname":"<TypedPoint3D<T, U>>::min","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":71232,"byte_end":71241,"line_start":685,"line_end":685,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":71443,"byte_end":71446,"line_start":695,"line_end":695,"column_start":12,"column_end":15},"name":"max","qualname":"<TypedPoint3D<T, U>>::max","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":71422,"byte_end":71431,"line_start":694,"line_end":694,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":71633,"byte_end":71638,"line_start":704,"line_end":704,"column_start":12,"column_end":17},"name":"clamp","qualname":"<TypedPoint3D<T, U>>::clamp","value":"fn (&self, start: Self, end: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":71612,"byte_end":71621,"line_start":703,"line_end":703,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":71982,"byte_end":71987,"line_start":715,"line_end":715,"column_start":12,"column_end":17},"name":"round","qualname":"<TypedPoint3D<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":71913,"byte_end":71922,"line_start":713,"line_end":713,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":72372,"byte_end":72376,"line_start":726,"line_end":726,"column_start":12,"column_end":16},"name":"ceil","qualname":"<TypedPoint3D<T, U>>::ceil","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":72303,"byte_end":72312,"line_start":724,"line_end":724,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":72756,"byte_end":72761,"line_start":737,"line_end":737,"column_start":12,"column_end":17},"name":"floor","qualname":"<TypedPoint3D<T, U>>::floor","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":72687,"byte_end":72696,"line_start":735,"line_end":735,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":73283,"byte_end":73287,"line_start":749,"line_end":749,"column_start":12,"column_end":16},"name":"cast","qualname":"<TypedPoint3D<T, U>>::cast","value":"fn <NewT> (&self) -> TypedPoint3D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n\n When casting from floating point to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":73262,"byte_end":73271,"line_start":748,"line_end":748,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":73777,"byte_end":73785,"line_start":759,"line_end":759,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<TypedPoint3D<T, U>>::try_cast","value":"fn <NewT> (&self) -> Option<TypedPoint3D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n\n When casting from floating point to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":73756,"byte_end":73765,"line_start":758,"line_end":758,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":74195,"byte_end":74201,"line_start":774,"line_end":774,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<TypedPoint3D<T, U>>::to_f32","value":"fn (&self) -> TypedPoint3D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":74174,"byte_end":74183,"line_start":773,"line_end":773,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":74321,"byte_end":74327,"line_start":780,"line_end":780,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<TypedPoint3D<T, U>>::to_f64","value":"fn (&self) -> TypedPoint3D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` point.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":74300,"byte_end":74309,"line_start":779,"line_end":779,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":74686,"byte_end":74694,"line_start":790,"line_end":790,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<TypedPoint3D<T, U>>::to_usize","value":"fn (&self) -> TypedPoint3D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` point, truncating decimals if any.\n\n When casting from floating point points, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":74665,"byte_end":74674,"line_start":789,"line_end":789,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":75053,"byte_end":75059,"line_start":800,"line_end":800,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<TypedPoint3D<T, U>>::to_u32","value":"fn (&self) -> TypedPoint3D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` point, truncating decimals if any.\n\n When casting from floating point points, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":75032,"byte_end":75041,"line_start":799,"line_end":799,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":75416,"byte_end":75422,"line_start":810,"line_end":810,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<TypedPoint3D<T, U>>::to_i32","value":"fn (&self) -> TypedPoint3D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` point, truncating decimals if any.\n\n When casting from floating point points, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":75395,"byte_end":75404,"line_start":809,"line_end":809,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":75779,"byte_end":75785,"line_start":820,"line_end":820,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<TypedPoint3D<T, U>>::to_i64","value":"fn (&self) -> TypedPoint3D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` point, truncating decimals if any.\n\n When casting from floating point points, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":75758,"byte_end":75767,"line_start":819,"line_end":819,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":77051,"byte_end":77057,"line_start":871,"line_end":871,"column_start":8,"column_end":14},"name":"point2","qualname":"::point::point2","value":"fn <T, U> (x: T, y: T) -> TypedPoint2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":77144,"byte_end":77150,"line_start":875,"line_end":875,"column_start":8,"column_end":14},"name":"point3","qualname":"::point::point3","value":"fn <T, U> (x: T, y: T, z: T) -> TypedPoint3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":82035,"byte_end":82044,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"name":"TypedRect","qualname":"::rect::TypedRect","value":"TypedRect { origin, size }","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862}],"decl_id":null,"docs":" A 2d Rectangle optionally tagged with a unit.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":82013,"byte_end":82023,"line_start":33,"line_end":33,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":82075,"byte_end":82081,"line_start":35,"line_end":35,"column_start":9,"column_end":15},"name":"origin","qualname":"::rect::TypedRect::origin","value":"point::TypedPoint2D<T, U>","parent":{"krate":0,"index":858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":82111,"byte_end":82115,"line_start":36,"line_end":36,"column_start":9,"column_end":13},"name":"size","qualname":"::rect::TypedRect::size","value":"size::TypedSize2D<T, U>","parent":{"krate":0,"index":858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":82193,"byte_end":82197,"line_start":40,"line_end":40,"column_start":10,"column_end":14},"name":"Rect","qualname":"::rect::Rect","value":"TypedRect<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" The default rectangle type with no unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":83960,"byte_end":83963,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedRect<T, U>>::new","value":"fn (origin: TypedPoint2D<T, U>, size: TypedSize2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":84227,"byte_end":84236,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"from_size","qualname":"<TypedRect<T, U>>::from_size","value":"fn (size: TypedSize2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rect of the given size, at offset zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":84526,"byte_end":84536,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"intersects","qualname":"<TypedRect<T, U>>::intersects","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":84505,"byte_end":84514,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":84853,"byte_end":84858,"line_start":140,"line_end":140,"column_start":12,"column_end":17},"name":"max_x","qualname":"<TypedRect<T, U>>::max_x","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":84832,"byte_end":84841,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":84945,"byte_end":84950,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"min_x","qualname":"<TypedRect<T, U>>::min_x","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":84924,"byte_end":84933,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":85019,"byte_end":85024,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"max_y","qualname":"<TypedRect<T, U>>::max_y","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":84998,"byte_end":85007,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":85112,"byte_end":85117,"line_start":155,"line_end":155,"column_start":12,"column_end":17},"name":"min_y","qualname":"<TypedRect<T, U>>::min_y","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":85091,"byte_end":85100,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":85186,"byte_end":85197,"line_start":160,"line_end":160,"column_start":12,"column_end":23},"name":"max_x_typed","qualname":"<TypedRect<T, U>>::max_x_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":85165,"byte_end":85174,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":85289,"byte_end":85300,"line_start":165,"line_end":165,"column_start":12,"column_end":23},"name":"min_x_typed","qualname":"<TypedRect<T, U>>::min_x_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":85268,"byte_end":85277,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":85392,"byte_end":85403,"line_start":170,"line_end":170,"column_start":12,"column_end":23},"name":"max_y_typed","qualname":"<TypedRect<T, U>>::max_y_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":85371,"byte_end":85380,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":85495,"byte_end":85506,"line_start":175,"line_end":175,"column_start":12,"column_end":23},"name":"min_y_typed","qualname":"<TypedRect<T, U>>::min_y_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":85474,"byte_end":85483,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":85598,"byte_end":85605,"line_start":180,"line_end":180,"column_start":12,"column_end":19},"name":"x_range","qualname":"<TypedRect<T, U>>::x_range","value":"fn (&self) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":85577,"byte_end":85586,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":85694,"byte_end":85701,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"y_range","qualname":"<TypedRect<T, U>>::y_range","value":"fn (&self) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":85673,"byte_end":85682,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":85790,"byte_end":85802,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"intersection","qualname":"<TypedRect<T, U>>::intersection","value":"fn (&self, other: &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":85769,"byte_end":85778,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":86481,"byte_end":86490,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"translate","qualname":"<TypedRect<T, U>>::translate","value":"fn (&self, by: &TypedVector2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the same rectangle, translated by a vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":86412,"byte_end":86421,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":86818,"byte_end":86826,"line_start":219,"line_end":219,"column_start":12,"column_end":20},"name":"contains","qualname":"<TypedRect<T, U>>::contains","value":"fn (&self, other: &TypedPoint2D<T, U>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this rectangle contains the point. Points are considered\n in the rectangle if they are on the left or top edge, but outside if they\n are on the right or bottom edge.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":86797,"byte_end":86806,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":87266,"byte_end":87279,"line_start":228,"line_end":228,"column_start":12,"column_end":25},"name":"contains_rect","qualname":"<TypedRect<T, U>>::contains_rect","value":"fn (&self, rect: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this rectangle contains the interior of rect. Always\n returns true if rect is empty, and always returns false if rect is\n nonempty but this rectangle is empty.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":87245,"byte_end":87254,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":87572,"byte_end":87579,"line_start":236,"line_end":236,"column_start":12,"column_end":19},"name":"inflate","qualname":"<TypedRect<T, U>>::inflate","value":"fn (&self, width: T, height: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":87503,"byte_end":87512,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":87956,"byte_end":87969,"line_start":248,"line_end":248,"column_start":12,"column_end":25},"name":"inflate_typed","qualname":"<TypedRect<T, U>>::inflate_typed","value":"fn (&self, width: Length<T, U>, height: Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":87887,"byte_end":87896,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":88110,"byte_end":88119,"line_start":253,"line_end":253,"column_start":12,"column_end":21},"name":"top_right","qualname":"<TypedRect<T, U>>::top_right","value":"fn (&self) -> TypedPoint2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":88089,"byte_end":88098,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":88238,"byte_end":88249,"line_start":258,"line_end":258,"column_start":12,"column_end":23},"name":"bottom_left","qualname":"<TypedRect<T, U>>::bottom_left","value":"fn (&self) -> TypedPoint2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":88217,"byte_end":88226,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":88368,"byte_end":88380,"line_start":263,"line_end":263,"column_start":12,"column_end":24},"name":"bottom_right","qualname":"<TypedRect<T, U>>::bottom_right","value":"fn (&self) -> TypedPoint2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":88347,"byte_end":88356,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":88498,"byte_end":88506,"line_start":268,"line_end":268,"column_start":12,"column_end":20},"name":"to_box2d","qualname":"<TypedRect<T, U>>::to_box2d","value":"fn (&self) -> TypedBox2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":88477,"byte_end":88486,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":88715,"byte_end":88732,"line_start":277,"line_end":277,"column_start":12,"column_end":29},"name":"translate_by_size","qualname":"<TypedRect<T, U>>::translate_by_size","value":"fn (&self, size: &TypedSize2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":88646,"byte_end":88655,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":89052,"byte_end":89062,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"inner_rect","qualname":"<TypedRect<T, U>>::inner_rect","value":"fn (&self, offsets: TypedSideOffsets2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculate the size and position of an inner rectangle.\n\n Subtracts the side offsets from all sides. The horizontal and vertical\n offsets must not be larger than the original side length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":89740,"byte_end":89750,"line_start":304,"line_end":304,"column_start":12,"column_end":22},"name":"outer_rect","qualname":"<TypedRect<T, U>>::outer_rect","value":"fn (&self, offsets: TypedSideOffsets2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculate the size and position of an outer rectangle.\n\n Add the offsets to all sides. The expanded rectangle is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":90698,"byte_end":90709,"line_start":326,"line_end":326,"column_start":12,"column_end":23},"name":"from_points","qualname":"<TypedRect<T, U>>::from_points","value":"fn <I> (points: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest rectangle defined by the top/bottom/left/right-most\n points provided as parameter.\n\n Note: This function has a behavior that can be surprising because\n the right-most and bottom-most points are exactly on the edge\n of the rectangle while the `contains` function is has exclusive\n semantic on these edges. This means that the right-most and bottom-most\n points provided to `from_points` will count as not contained by the rect.\n This behavior may change in the future.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":91875,"byte_end":91879,"line_start":369,"line_end":369,"column_start":12,"column_end":16},"name":"lerp","qualname":"<TypedRect<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this rectangle and another rectangle.\n\n `t` is expected to be between zero and one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":91854,"byte_end":91863,"line_start":368,"line_end":368,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":92145,"byte_end":92151,"line_start":381,"line_end":381,"column_start":12,"column_end":18},"name":"center","qualname":"<TypedRect<T, U>>::center","value":"fn (&self) -> TypedPoint2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":92424,"byte_end":92429,"line_start":392,"line_end":392,"column_start":12,"column_end":17},"name":"union","qualname":"<TypedRect<T, U>>::union","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":92403,"byte_end":92412,"line_start":391,"line_end":391,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":93098,"byte_end":93103,"line_start":417,"line_end":417,"column_start":12,"column_end":17},"name":"scale","qualname":"<TypedRect<T, U>>::scale","value":"fn <S> (&self, x: S, y: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":93077,"byte_end":93086,"line_start":416,"line_end":416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":93476,"byte_end":93480,"line_start":430,"line_end":430,"column_start":12,"column_end":16},"name":"area","qualname":"<TypedRect<T, U>>::area","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":93455,"byte_end":93464,"line_start":429,"line_end":429,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":93642,"byte_end":93646,"line_start":437,"line_end":437,"column_start":12,"column_end":16},"name":"zero","qualname":"<TypedRect<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all sides to zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":93821,"byte_end":93829,"line_start":442,"line_end":442,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<TypedRect<T, U>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the size is zero, regardless of the origin's value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":95039,"byte_end":95049,"line_start":481,"line_end":481,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<TypedRect<T, Unit>>::to_untyped","value":"fn (&self) -> Rect<T>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":95202,"byte_end":95214,"line_start":486,"line_end":486,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<TypedRect<T, Unit>>::from_untyped","value":"fn (r: &Rect<T>) -> TypedRect<T, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":95817,"byte_end":95821,"line_start":500,"line_end":500,"column_start":12,"column_end":16},"name":"cast","qualname":"<TypedRect<T0, Unit>>::cast","value":"fn <T1> (&self) -> TypedRect<T1, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n\n When casting from floating point to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using round(), round_in or round_out() before casting.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":96356,"byte_end":96364,"line_start":512,"line_end":512,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<TypedRect<T0, Unit>>::try_cast","value":"fn <T1> (&self) -> Option<TypedRect<T1, Unit>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n\n When casting from floating point to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using round(), round_in or round_out() before casting.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":97293,"byte_end":97298,"line_start":531,"line_end":531,"column_start":12,"column_end":17},"name":"round","qualname":"<TypedRect<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a rectangle with edges rounded to integer coordinates, such that\n the returned rectangle has the same set of pixel centers as the original\n one.\n Edges at offset 0.5 round up.\n Suitable for most places where integral device coordinates\n are needed, but note that any translation should be applied first to\n avoid pixel rounding errors.\n Note that this is *not* rounding to nearest integer if the values are negative.\n They are always rounding as floor(n + 0.5).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":97704,"byte_end":97712,"line_start":540,"line_end":540,"column_start":12,"column_end":20},"name":"round_in","qualname":"<TypedRect<T, U>>::round_in","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a rectangle with edges rounded to integer coordinates, such that\n the original rectangle contains the resulting rectangle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":98124,"byte_end":98133,"line_start":549,"line_end":549,"column_start":12,"column_end":21},"name":"round_out","qualname":"<TypedRect<T, U>>::round_out","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a rectangle with edges rounded to integer coordinates, such that\n the original rectangle is contained in the resulting rectangle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":98478,"byte_end":98484,"line_start":559,"line_end":559,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<TypedRect<T, Unit>>::to_f32","value":"fn (&self) -> TypedRect<f32, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` rectangle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":98594,"byte_end":98600,"line_start":564,"line_end":564,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<TypedRect<T, Unit>>::to_f64","value":"fn (&self) -> TypedRect<f64, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` rectangle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":98961,"byte_end":98969,"line_start":573,"line_end":573,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<TypedRect<T, Unit>>::to_usize","value":"fn (&self) -> TypedRect<usize, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` rectangle, truncating decimals if any.\n\n When casting from floating point rectangles, it is worth considering whether\n to `round()`, `round_in()` or `round_out()` before the cast in order to\n obtain the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":99330,"byte_end":99336,"line_start":582,"line_end":582,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<TypedRect<T, Unit>>::to_u32","value":"fn (&self) -> TypedRect<u32, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` rectangle, truncating decimals if any.\n\n When casting from floating point rectangles, it is worth considering whether\n to `round()`, `round_in()` or `round_out()` before the cast in order to\n obtain the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":99695,"byte_end":99701,"line_start":591,"line_end":591,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<TypedRect<T, Unit>>::to_i32","value":"fn (&self) -> TypedRect<i32, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` rectangle, truncating decimals if any.\n\n When casting from floating point rectangles, it is worth considering whether\n to `round()`, `round_in()` or `round_out()` before the cast in order to\n obtain the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":100060,"byte_end":100066,"line_start":600,"line_end":600,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<TypedRect<T, Unit>>::to_i64","value":"fn (&self) -> TypedRect<i64, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` rectangle, truncating decimals if any.\n\n When casting from floating point rectangles, it is worth considering whether\n to `round()`, `round_in()` or `round_out()` before the cast in order to\n obtain the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":100385,"byte_end":100389,"line_start":614,"line_end":614,"column_start":8,"column_end":12},"name":"rect","qualname":"::rect::rect","value":"fn <T, U> (x: T, y: T, w: T, h: T) -> TypedRect<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `TypedRect::new(TypedPoint2D::new(x, y), TypedSize2D::new(w, h))`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2916},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":109936,"byte_end":109957,"line_start":17,"line_end":17,"column_start":12,"column_end":33},"name":"TypedRigidTransform3D","qualname":"::rigid::TypedRigidTransform3D","value":"TypedRigidTransform3D { rotation, translation }","parent":null,"children":[{"krate":0,"index":2920},{"krate":0,"index":2921}],"decl_id":null,"docs":" A rigid transformation. All lengths are preserved under such a transformation.\n\n\n Internally, this is a rotation and a translation, with the rotation\n applied first (i.e. `Rotation * Translation`, in row-vector notation)\n\n This can be more efficient to use over full matrices, especially if you\n have to deal with the decomposed quantities often.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":109914,"byte_end":109924,"line_start":16,"line_end":16,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2920},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":109981,"byte_end":109989,"line_start":18,"line_end":18,"column_start":9,"column_end":17},"name":"rotation","qualname":"::rigid::TypedRigidTransform3D::rotation","value":"rotation::TypedRotation3D<T, Src, Dst>","parent":{"krate":0,"index":2916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2921},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":110029,"byte_end":110040,"line_start":19,"line_end":19,"column_start":9,"column_end":20},"name":"translation","qualname":"::rigid::TypedRigidTransform3D::translation","value":"vector::TypedVector3D<T, Dst>","parent":{"krate":0,"index":2916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":110077,"byte_end":110093,"line_start":22,"line_end":22,"column_start":10,"column_end":26},"name":"RigidTransform3D","qualname":"::rigid::RigidTransform3D","value":"TypedRigidTransform3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":110517,"byte_end":110520,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedRigidTransform3D<T, Src, Dst>>::new","value":"fn (rotation: TypedRotation3D<T, Src, Dst>, translation: TypedVector3D<T, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new rigid transformation, where the `rotation` applies first\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":110496,"byte_end":110505,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":110751,"byte_end":110759,"line_start":40,"line_end":40,"column_start":12,"column_end":20},"name":"identity","qualname":"<TypedRigidTransform3D<T, Src, Dst>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an identity transform\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":110730,"byte_end":110739,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":111012,"byte_end":111029,"line_start":49,"line_end":49,"column_start":12,"column_end":29},"name":"new_from_reversed","qualname":"<TypedRigidTransform3D<T, Src, Dst>>::new_from_reversed","value":"fn (translation: TypedVector3D<T, Src>, rotation: TypedRotation3D<T, Src, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new rigid transformation, where the `translation` applies first\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":110991,"byte_end":111000,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":111595,"byte_end":111608,"line_start":70,"line_end":70,"column_start":12,"column_end":25},"name":"from_rotation","qualname":"<TypedRigidTransform3D<T, Src, Dst>>::from_rotation","value":"fn (rotation: TypedRotation3D<T, Src, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":111574,"byte_end":111583,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":111786,"byte_end":111802,"line_start":78,"line_end":78,"column_start":12,"column_end":28},"name":"from_translation","qualname":"<TypedRigidTransform3D<T, Src, Dst>>::from_translation","value":"fn (translation: TypedVector3D<T, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":111765,"byte_end":111774,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":112133,"byte_end":112151,"line_start":89,"line_end":89,"column_start":12,"column_end":30},"name":"decompose_reversed","qualname":"<TypedRigidTransform3D<T, Src, Dst>>::decompose_reversed","value":"fn (&self) -> (TypedVector3D<T, Src>, TypedRotation3D<T, Src, Dst>)","parent":null,"children":[],"decl_id":null,"docs":" Decompose this into a translation and an rotation to be applied in the opposite order\n\n i.e., the translation is applied _first_\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":112112,"byte_end":112121,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":112771,"byte_end":112779,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"post_mul","qualname":"<TypedRigidTransform3D<T, Src, Dst>>::post_mul","value":"fn <Dst2> (&self, other: &TypedRigidTransform3D<T, Dst, Dst2>) -> TypedRigidTransform3D<T, Src, Dst2>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two transforms such that\n other's transformation applies after self's transformation.\n\n i.e., this produces `self * other` in row-vector notation\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":112750,"byte_end":112759,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":113889,"byte_end":113896,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"pre_mul","qualname":"<TypedRigidTransform3D<T, Src, Dst>>::pre_mul","value":"fn <Src2> (&self, other: &TypedRigidTransform3D<T, Src2, Src>) -> TypedRigidTransform3D<T, Src2, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two transforms such that\n self's transformation applies after other's transformation.\n\n i.e., this produces `other * self` in row-vector notation\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":113868,"byte_end":113877,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":114116,"byte_end":114123,"line_start":147,"line_end":147,"column_start":12,"column_end":19},"name":"inverse","qualname":"<TypedRigidTransform3D<T, Src, Dst>>::inverse","value":"fn (&self) -> TypedRigidTransform3D<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Inverts the transformation\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":114095,"byte_end":114104,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":114719,"byte_end":114731,"line_start":166,"line_end":166,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<TypedRigidTransform3D<T, Src, Dst>>::to_transform","value":"fn (&self) -> TypedTransform3D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2961},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":118810,"byte_end":118815,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"name":"Angle","qualname":"::rotation::Angle","value":"Angle { radians }","parent":null,"children":[{"krate":0,"index":2963}],"decl_id":null,"docs":" An angle in radians\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2963},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":118829,"byte_end":118836,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"name":"radians","qualname":"::rotation::Angle::radians","value":"T","parent":{"krate":0,"index":2961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":118888,"byte_end":118895,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"radians","qualname":"<Angle<T>>::radians","value":"fn (radians: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":118867,"byte_end":118876,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":118976,"byte_end":118979,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"get","qualname":"<Angle<T>>::get","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":118955,"byte_end":118964,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":119086,"byte_end":119093,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"degrees","qualname":"<Angle<T>>::degrees","value":"fn (deg: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":119065,"byte_end":119074,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":119219,"byte_end":119229,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"to_degrees","qualname":"<Angle<T>>::to_degrees","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":119198,"byte_end":119207,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":119483,"byte_end":119491,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"positive","qualname":"<Angle<T>>::positive","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns this angle in the [0..2*PI[ range.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":119752,"byte_end":119758,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"signed","qualname":"<Angle<T>>::signed","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns this angle in the ]-PI..PI] range.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":119930,"byte_end":119937,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"sin_cos","qualname":"<Angle<T>>::sin_cos","value":"fn (self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Returns (sin(self), cos(self)).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":120045,"byte_end":120049,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"zero","qualname":"<Angle<T>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":120178,"byte_end":120180,"line_start":98,"line_end":98,"column_start":12,"column_end":14},"name":"pi","qualname":"<Angle<T>>::pi","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":120243,"byte_end":120249,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"two_pi","qualname":"<Angle<T>>::two_pi","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":120322,"byte_end":120331,"line_start":106,"line_end":106,"column_start":12,"column_end":21},"name":"frac_pi_2","qualname":"<Angle<T>>::frac_pi_2","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":120401,"byte_end":120410,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"frac_pi_3","qualname":"<Angle<T>>::frac_pi_3","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":120480,"byte_end":120489,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"name":"frac_pi_4","qualname":"<Angle<T>>::frac_pi_4","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2994},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":122400,"byte_end":122415,"line_start":191,"line_end":191,"column_start":12,"column_end":27},"name":"TypedRotation2D","qualname":"::rotation::TypedRotation2D","value":"TypedRotation2D { angle, _unit }","parent":null,"children":[{"krate":0,"index":2998},{"krate":0,"index":2999}],"decl_id":null,"docs":" A transform that can represent rotations in 2d, represented as an angle in radians.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":122378,"byte_end":122388,"line_start":190,"line_end":190,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2998},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":122439,"byte_end":122444,"line_start":192,"line_end":192,"column_start":9,"column_end":14},"name":"angle","qualname":"::rotation::TypedRotation2D::angle","value":"T","parent":{"krate":0,"index":2994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2999},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":122477,"byte_end":122482,"line_start":194,"line_end":194,"column_start":9,"column_end":14},"name":"_unit","qualname":"::rotation::TypedRotation2D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":2994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1148},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":122569,"byte_end":122579,"line_start":198,"line_end":198,"column_start":10,"column_end":20},"name":"Rotation2D","qualname":"::rotation::Rotation2D","value":"TypedRotation2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" The default 2d rotation type with no units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":122759,"byte_end":122762,"line_start":203,"line_end":203,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedRotation2D<T, Src, Dst>>::new","value":"fn (angle: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation from an angle in radians.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":122685,"byte_end":122694,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":122910,"byte_end":122917,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"radians","qualname":"<TypedRotation2D<T, Src, Dst>>::radians","value":"fn (angle: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":123050,"byte_end":123058,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"identity","qualname":"<TypedRotation2D<T, Src, Dst>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates the identity rotation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":123029,"byte_end":123038,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":123283,"byte_end":123292,"line_start":229,"line_end":229,"column_start":12,"column_end":21},"name":"get_angle","qualname":"<TypedRotation2D<T, Src, Dst>>::get_angle","value":"fn (&self) -> Angle<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.angle as a strongly typed `Angle<T>`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":123756,"byte_end":123761,"line_start":250,"line_end":250,"column_start":12,"column_end":17},"name":"to_3d","qualname":"<TypedRotation2D<T, Src, Dst>>::to_3d","value":"fn (&self) -> TypedRotation3D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Creates a 3d rotation (around the z axis) from this 2d rotation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":123735,"byte_end":123744,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":123933,"byte_end":123940,"line_start":256,"line_end":256,"column_start":12,"column_end":19},"name":"inverse","qualname":"<TypedRotation2D<T, Src, Dst>>::inverse","value":"fn (&self) -> TypedRotation2D<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse of this rotation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":123912,"byte_end":123921,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":124146,"byte_end":124156,"line_start":262,"line_end":262,"column_start":12,"column_end":22},"name":"pre_rotate","qualname":"<TypedRotation2D<T, Src, Dst>>::pre_rotate","value":"fn <NewSrc> (&self, other: &TypedRotation2D<T, NewSrc, Src>) -> TypedRotation2D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns a rotation representing the other rotation followed by this rotation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":124125,"byte_end":124134,"line_start":261,"line_end":261,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":124450,"byte_end":124461,"line_start":271,"line_end":271,"column_start":12,"column_end":23},"name":"post_rotate","qualname":"<TypedRotation2D<T, Src, Dst>>::post_rotate","value":"fn <NewDst> (&self, other: &TypedRotation2D<T, Dst, NewDst>) -> TypedRotation2D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns a rotation representing this rotation followed by the other rotation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":124429,"byte_end":124438,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":124805,"byte_end":124820,"line_start":282,"line_end":282,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<TypedRotation2D<T, Src, Dst>>::transform_point","value":"fn (&self, point: &TypedPoint2D<T, Src>) -> TypedPoint2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d point transformed by this rotation.\n\n The input point must be use the unit Src, and the returned point has the unit Dst.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":124784,"byte_end":124793,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":125211,"byte_end":125227,"line_start":291,"line_end":291,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<TypedRotation2D<T, Src, Dst>>::transform_vector","value":"fn (&self, vector: &TypedVector2D<T, Src>) -> TypedVector2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d vector transformed by this rotation.\n\n The input point must be use the unit Src, and the returned point has the unit Dst.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":125190,"byte_end":125199,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":125714,"byte_end":125726,"line_start":311,"line_end":311,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<TypedRotation2D<T, Src, Dst>>::to_transform","value":"fn (&self) -> TypedTransform2D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the matrix representation of this rotation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":125693,"byte_end":125702,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3024},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":126394,"byte_end":126409,"line_start":327,"line_end":327,"column_start":12,"column_end":27},"name":"TypedRotation3D","qualname":"::rotation::TypedRotation3D","value":"TypedRotation3D { i, j, k, r, _unit }","parent":null,"children":[{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3032}],"decl_id":null,"docs":" A transform that can represent rotations in 3d, represented as a quaternion.\n\n Most methods expect the quaternion to be normalized.\n When in doubt, use `unit_quaternion` instead of `quaternion` to create\n a rotation as the former will ensure that its result is normalized.\n\n Some people use the `x, y, z, w` (or `w, x, y, z`) notations. The equivalence is\n as follows: `x -> i`, `y -> j`, `z -> k`, `w -> r`.\n The memory layout of this type corresponds to the `x, y, z, w` notation\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":126372,"byte_end":126382,"line_start":326,"line_end":326,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3028},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":126491,"byte_end":126492,"line_start":329,"line_end":329,"column_start":9,"column_end":10},"name":"i","qualname":"::rotation::TypedRotation3D::i","value":"T","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":" Component multiplied by the imaginary number `i`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3029},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":126563,"byte_end":126564,"line_start":331,"line_end":331,"column_start":9,"column_end":10},"name":"j","qualname":"::rotation::TypedRotation3D::j","value":"T","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":" Component multiplied by the imaginary number `j`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3030},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":126635,"byte_end":126636,"line_start":333,"line_end":333,"column_start":9,"column_end":10},"name":"k","qualname":"::rotation::TypedRotation3D::k","value":"T","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":" Component multiplied by the imaginary number `k`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3031},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":126672,"byte_end":126673,"line_start":335,"line_end":335,"column_start":9,"column_end":10},"name":"r","qualname":"::rotation::TypedRotation3D::r","value":"T","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":" The real part.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3032},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":126705,"byte_end":126710,"line_start":337,"line_end":337,"column_start":9,"column_end":14},"name":"_unit","qualname":"::rotation::TypedRotation3D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1179},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":126797,"byte_end":126807,"line_start":341,"line_end":341,"column_start":10,"column_end":20},"name":"Rotation3D","qualname":"::rotation::Rotation3D","value":"TypedRotation3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" The default 3d rotation type with no units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":127300,"byte_end":127310,"line_start":352,"line_end":352,"column_start":12,"column_end":22},"name":"quaternion","qualname":"<TypedRotation3D<T, Src, Dst>>::quaternion","value":"fn (a: T, b: T, c: T, r: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around from a quaternion representation.\n\n The parameters are a, b, c and r compose the quaternion `a*i + b*j + c*k + r`\n where `a`, `b` and `c` describe the vector part and the last parameter `r` is\n the real part.\n\n The resulting quaternion is not necessarily normalized. See `unit_quaternion`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":127279,"byte_end":127288,"line_start":351,"line_end":351,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":127646,"byte_end":127657,"line_start":369,"line_end":369,"column_start":12,"column_end":23},"name":"vector_part","qualname":"<TypedRotation3D<T, Src, Dst>>::vector_part","value":"fn (&self) -> Vector3D<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector part (i, j, k) of this quaternion.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":127625,"byte_end":127634,"line_start":368,"line_end":368,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":127861,"byte_end":127869,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"identity","qualname":"<TypedRotation3D<T, Src, Dst>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates the identity rotation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":127840,"byte_end":127849,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":128331,"byte_end":128346,"line_start":392,"line_end":392,"column_start":12,"column_end":27},"name":"unit_quaternion","qualname":"<TypedRotation3D<T, Src, Dst>>::unit_quaternion","value":"fn (i: T, j: T, k: T, r: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around from a quaternion representation and normalizes it.\n\n The parameters are a, b, c and r compose the quaternion `a*i + b*j + c*k + r`\n before normalization, where `a`, `b` and `c` describe the vector part and the\n last parameter `r` is the real part.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":128310,"byte_end":128319,"line_start":391,"line_end":391,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":128496,"byte_end":128507,"line_start":397,"line_end":397,"column_start":12,"column_end":23},"name":"around_axis","qualname":"<TypedRotation3D<T, Src, Dst>>::around_axis","value":"fn (axis: TypedVector3D<T, Src>, angle: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around a given axis.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":128830,"byte_end":128838,"line_start":405,"line_end":405,"column_start":12,"column_end":20},"name":"around_x","qualname":"<TypedRotation3D<T, Src, Dst>>::around_x","value":"fn (angle: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around the x axis.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":129103,"byte_end":129111,"line_start":413,"line_end":413,"column_start":12,"column_end":20},"name":"around_y","qualname":"<TypedRotation3D<T, Src, Dst>>::around_y","value":"fn (angle: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around the y axis.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":129376,"byte_end":129384,"line_start":421,"line_end":421,"column_start":12,"column_end":20},"name":"around_z","qualname":"<TypedRotation3D<T, Src, Dst>>::around_z","value":"fn (angle: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around the z axis.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":129944,"byte_end":129949,"line_start":435,"line_end":435,"column_start":12,"column_end":17},"name":"euler","qualname":"<TypedRotation3D<T, Src, Dst>>::euler","value":"fn (roll: Angle<T>, pitch: Angle<T>, yaw: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation from Euler angles.\n\n The rotations are applied in roll then pitch then yaw order.\n\n  - Roll (also called bank) is a rotation around the x axis.\n  - Pitch (also called bearing) is a rotation around the y axis.\n  - Yaw (also called heading) is a rotation around the z axis.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":130515,"byte_end":130522,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"inverse","qualname":"<TypedRotation3D<T, Src, Dst>>::inverse","value":"fn (&self) -> TypedRotation3D<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse of this rotation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":130494,"byte_end":130503,"line_start":451,"line_end":451,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":130712,"byte_end":130716,"line_start":458,"line_end":458,"column_start":12,"column_end":16},"name":"norm","qualname":"<TypedRotation3D<T, Src, Dst>>::norm","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes the norm of this quaternion\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":130691,"byte_end":130700,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":130797,"byte_end":130808,"line_start":463,"line_end":463,"column_start":12,"column_end":23},"name":"square_norm","qualname":"<TypedRotation3D<T, Src, Dst>>::square_norm","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":130776,"byte_end":130785,"line_start":462,"line_end":462,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":130984,"byte_end":130993,"line_start":469,"line_end":469,"column_start":12,"column_end":21},"name":"normalize","qualname":"<TypedRotation3D<T, Src, Dst>>::normalize","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a unit quaternion from this one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":130963,"byte_end":130972,"line_start":468,"line_end":468,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":131084,"byte_end":131097,"line_start":474,"line_end":474,"column_start":12,"column_end":25},"name":"is_normalized","qualname":"<TypedRotation3D<T, Src, Dst>>::is_normalized","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":131063,"byte_end":131072,"line_start":473,"line_end":473,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":131422,"byte_end":131427,"line_start":485,"line_end":485,"column_start":12,"column_end":17},"name":"slerp","qualname":"<TypedRotation3D<T, Src, Dst>>::slerp","value":"fn (&self, other: &Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Spherical linear interpolation between this rotation and another rotation.\n\n `t` is expected to be between zero and one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":132749,"byte_end":132753,"line_start":528,"line_end":528,"column_start":12,"column_end":16},"name":"lerp","qualname":"<TypedRotation3D<T, Src, Dst>>::lerp","value":"fn (&self, other: &Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Basic Linear interpolation between this rotation and another rotation.\n\n `t` is expected to be between zero and one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":132728,"byte_end":132737,"line_start":527,"line_end":527,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":133061,"byte_end":133075,"line_start":536,"line_end":536,"column_start":12,"column_end":26},"name":"rotate_point3d","qualname":"<TypedRotation3D<T, Src, Dst>>::rotate_point3d","value":"fn (&self, point: &TypedPoint3D<T, Src>) -> TypedPoint3D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 3d point transformed by this rotation.\n\n The input point must be use the unit Src, and the returned point has the unit Dst.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":133834,"byte_end":133848,"line_start":556,"line_end":556,"column_start":12,"column_end":26},"name":"rotate_point2d","qualname":"<TypedRotation3D<T, Src, Dst>>::rotate_point2d","value":"fn (&self, point: &TypedPoint2D<T, Src>) -> TypedPoint2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d point transformed by this rotation then projected on the xy plane.\n\n The input point must be use the unit Src, and the returned point has the unit Dst.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":133813,"byte_end":133822,"line_start":555,"line_end":555,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":134197,"byte_end":134212,"line_start":567,"line_end":567,"column_start":12,"column_end":27},"name":"rotate_vector3d","qualname":"<TypedRotation3D<T, Src, Dst>>::rotate_vector3d","value":"fn (&self, vector: &TypedVector3D<T, Src>) -> TypedVector3D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 3d vector transformed by this rotation.\n\n The input vector must be use the unit Src, and the returned point has the unit Dst.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":134176,"byte_end":134185,"line_start":566,"line_end":566,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":134606,"byte_end":134621,"line_start":578,"line_end":578,"column_start":12,"column_end":27},"name":"rotate_vector2d","qualname":"<TypedRotation3D<T, Src, Dst>>::rotate_vector2d","value":"fn (&self, vector: &TypedVector2D<T, Src>) -> TypedVector2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d vector transformed by this rotation then projected on the xy plane.\n\n The input vector must be use the unit Src, and the returned point has the unit Dst.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":134585,"byte_end":134594,"line_start":577,"line_end":577,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":134869,"byte_end":134881,"line_start":587,"line_end":587,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<TypedRotation3D<T, Src, Dst>>::to_transform","value":"fn (&self) -> TypedTransform3D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the matrix representation of this rotation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":134848,"byte_end":134857,"line_start":586,"line_end":586,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":136139,"byte_end":136149,"line_start":642,"line_end":642,"column_start":12,"column_end":22},"name":"pre_rotate","qualname":"<TypedRotation3D<T, Src, Dst>>::pre_rotate","value":"fn <NewSrc> (&self, other: &TypedRotation3D<T, NewSrc, Src>) -> TypedRotation3D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns a rotation representing the other rotation followed by this rotation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":136862,"byte_end":136873,"line_start":660,"line_end":660,"column_start":12,"column_end":23},"name":"post_rotate","qualname":"<TypedRotation3D<T, Src, Dst>>::post_rotate","value":"fn <NewDst> (&self, other: &TypedRotation3D<T, Dst, NewDst>) -> TypedRotation3D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns a rotation representing this rotation followed by the other rotation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":136841,"byte_end":136850,"line_start":659,"line_end":659,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":150339,"byte_end":150349,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"TypedScale","qualname":"::scale::TypedScale","value":"","parent":null,"children":[],"decl_id":null,"docs":" A scaling factor between two different units of measurement.\n\n This is effectively a type-safe float, intended to be used in combination with other types like\n `length::Length` to enforce conversion between systems of measurement at compile time.\n\n `Src` and `Dst` represent the units before and after multiplying a value by a `TypedScale`. They\n may be types without values, such as empty enums.  For example:\n\n ```rust\n use euclid::TypedScale;\n use euclid::Length;\n enum Mm {};\n enum Inch {};\n\n let mm_per_inch: TypedScale<f32, Inch, Mm> = TypedScale::new(25.4);\n\n let one_foot: Length<f32, Inch> = Length::new(12.0);\n let one_foot_in_mm: Length<f32, Mm> = one_foot * mm_per_inch;\n ```\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":150317,"byte_end":150327,"line_start":40,"line_end":40,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":151116,"byte_end":151119,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedScale<T, Src, Dst>>::new","value":"fn (x: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":151242,"byte_end":151245,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"get","qualname":"<TypedScale<T, Src, Dst>>::get","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":151434,"byte_end":151437,"line_start":86,"line_end":86,"column_start":15,"column_end":18},"name":"ONE","qualname":"::scale::TypedScale::<f32, Src, Dst>::ONE","value":"Self","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":" Identity scaling, could be used to safely transit from one space to another.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":151613,"byte_end":151616,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"inv","qualname":"<TypedScale<T, Src, Dst>>::inv","value":"fn (&self) -> TypedScale<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" The inverse TypedScale (1.0 / self).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":152773,"byte_end":152777,"line_start":126,"line_end":126,"column_start":12,"column_end":16},"name":"cast","qualname":"<TypedScale<T, Src, Dst0>>::cast","value":"fn <T1> (&self) -> TypedScale<T1, Src, Dst0>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":152976,"byte_end":152984,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<TypedScale<T, Src, Dst0>>::try_cast","value":"fn <T1> (&self) -> Option<TypedScale<T1, Src, Dst0>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":153328,"byte_end":153343,"line_start":142,"line_end":142,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<TypedScale<T, Src, Dst>>::transform_point","value":"fn (&self, point: &TypedPoint2D<T, Src>) -> TypedPoint2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given point transformed by this scale.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":153307,"byte_end":153316,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":153569,"byte_end":153585,"line_start":148,"line_end":148,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<TypedScale<T, Src, Dst>>::transform_vector","value":"fn (&self, vec: &TypedVector2D<T, Src>) -> TypedVector2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given vector transformed by this scale.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":153548,"byte_end":153557,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":153808,"byte_end":153822,"line_start":154,"line_end":154,"column_start":12,"column_end":26},"name":"transform_size","qualname":"<TypedScale<T, Src, Dst>>::transform_size","value":"fn (&self, size: &TypedSize2D<T, Src>) -> TypedSize2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given vector transformed by this scale.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":153787,"byte_end":153796,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":154049,"byte_end":154063,"line_start":160,"line_end":160,"column_start":12,"column_end":26},"name":"transform_rect","qualname":"<TypedScale<T, Src, Dst>>::transform_rect","value":"fn (&self, rect: &TypedRect<T, Src>) -> TypedRect<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given rect transformed by this scale.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":154028,"byte_end":154037,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":154322,"byte_end":154329,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"inverse","qualname":"<TypedScale<T, Src, Dst>>::inverse","value":"fn (&self) -> TypedScale<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse of this scale.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":154301,"byte_end":154310,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":154485,"byte_end":154496,"line_start":175,"line_end":175,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<TypedScale<T, Src, Dst>>::is_identity","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this scale has no effect.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":154464,"byte_end":154473,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3057},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":157096,"byte_end":157114,"line_start":24,"line_end":24,"column_start":12,"column_end":30},"name":"TypedSideOffsets2D","qualname":"::side_offsets::TypedSideOffsets2D","value":"TypedSideOffsets2D { top, right, bottom, left, _unit }","parent":null,"children":[{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064}],"decl_id":null,"docs":" A group of 2D side offsets, which correspond to top/left/bottom/right for borders, padding,\n and margins in CSS, optionally tagged with a unit.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":157074,"byte_end":157084,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3060},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":157131,"byte_end":157134,"line_start":25,"line_end":25,"column_start":9,"column_end":12},"name":"top","qualname":"::side_offsets::TypedSideOffsets2D::top","value":"T","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3061},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":157147,"byte_end":157152,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"name":"right","qualname":"::side_offsets::TypedSideOffsets2D::right","value":"T","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3062},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":157165,"byte_end":157171,"line_start":27,"line_end":27,"column_start":9,"column_end":15},"name":"bottom","qualname":"::side_offsets::TypedSideOffsets2D::bottom","value":"T","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3063},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":157184,"byte_end":157188,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"name":"left","qualname":"::side_offsets::TypedSideOffsets2D::left","value":"T","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3064},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":157220,"byte_end":157225,"line_start":30,"line_end":30,"column_start":9,"column_end":14},"name":"_unit","qualname":"::side_offsets::TypedSideOffsets2D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":157893,"byte_end":157906,"line_start":56,"line_end":56,"column_start":10,"column_end":23},"name":"SideOffsets2D","qualname":"::side_offsets::SideOffsets2D","value":"TypedSideOffsets2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" The default 2D side offset type with no unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":158055,"byte_end":158058,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedSideOffsets2D<T, U>>::new","value":"fn (top: T, right: T, bottom: T, left: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking a scalar for each side.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":158327,"byte_end":158339,"line_start":71,"line_end":71,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<TypedSideOffsets2D<T, U>>::from_lengths","value":"fn (top: Length<T, U>, right: Length<T, U>, bottom: Length<T, U>, left: Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking a typed Length for each side.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":158624,"byte_end":158633,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"top_typed","qualname":"<TypedSideOffsets2D<T, U>>::top_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Access self.top as a typed Length instead of a scalar value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":158778,"byte_end":158789,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"right_typed","qualname":"<TypedSideOffsets2D<T, U>>::right_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Access self.right as a typed Length instead of a scalar value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":158937,"byte_end":158949,"line_start":91,"line_end":91,"column_start":12,"column_end":24},"name":"bottom_typed","qualname":"<TypedSideOffsets2D<T, U>>::bottom_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Access self.bottom as a typed Length instead of a scalar value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":159096,"byte_end":159106,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"left_typed","qualname":"<TypedSideOffsets2D<T, U>>::left_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Access self.left as a typed Length instead of a scalar value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":159270,"byte_end":159282,"line_start":101,"line_end":101,"column_start":12,"column_end":24},"name":"new_all_same","qualname":"<TypedSideOffsets2D<T, U>>::new_all_same","value":"fn (all: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting the same value to all sides, taking a scalar value directly.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":159451,"byte_end":159471,"line_start":106,"line_end":106,"column_start":12,"column_end":32},"name":"from_length_all_same","qualname":"<TypedSideOffsets2D<T, U>>::from_length_all_same","value":"fn (all: Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting the same value to all sides, taking a typed Length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":159647,"byte_end":159657,"line_start":115,"line_end":115,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<TypedSideOffsets2D<T, U>>::horizontal","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":159721,"byte_end":159729,"line_start":119,"line_end":119,"column_start":12,"column_end":20},"name":"vertical","qualname":"<TypedSideOffsets2D<T, U>>::vertical","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":159793,"byte_end":159809,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"horizontal_typed","qualname":"<TypedSideOffsets2D<T, U>>::horizontal_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":159892,"byte_end":159906,"line_start":127,"line_end":127,"column_start":12,"column_end":26},"name":"vertical_typed","qualname":"<TypedSideOffsets2D<T, U>>::vertical_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":160438,"byte_end":160442,"line_start":149,"line_end":149,"column_start":12,"column_end":16},"name":"zero","qualname":"<TypedSideOffsets2D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all sides to zero.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3084},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":161398,"byte_end":161409,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"TypedSize2D","qualname":"::size::TypedSize2D","value":"TypedSize2D { width, height, _unit }","parent":null,"children":[{"krate":0,"index":3087},{"krate":0,"index":3088},{"krate":0,"index":3089}],"decl_id":null,"docs":" A 2d size tagged with a unit.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":161376,"byte_end":161386,"line_start":26,"line_end":26,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3087},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":161426,"byte_end":161431,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"name":"width","qualname":"::size::TypedSize2D::width","value":"T","parent":{"krate":0,"index":3084},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3088},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":161444,"byte_end":161450,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"name":"height","qualname":"::size::TypedSize2D::height","value":"T","parent":{"krate":0,"index":3084},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3089},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":161482,"byte_end":161487,"line_start":31,"line_end":31,"column_start":9,"column_end":14},"name":"_unit","qualname":"::size::TypedSize2D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":3084},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":161617,"byte_end":161623,"line_start":37,"line_end":37,"column_start":10,"column_end":16},"name":"Size2D","qualname":"::size::Size2D","value":"TypedSize2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Default 2d size type with no unit.\n\n `Size2D` provides the same methods as `TypedSize2D`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":162279,"byte_end":162282,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedSize2D<T, U>>::new","value":"fn (width: T, height: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":162533,"byte_end":162545,"line_start":70,"line_end":70,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<TypedSize2D<T, U>>::from_lengths","value":"fn (width: Length<T, U>, height: Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar strongly typed lengths.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":162857,"byte_end":162862,"line_start":79,"line_end":79,"column_start":12,"column_end":17},"name":"round","qualname":"<TypedSize2D<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":163187,"byte_end":163191,"line_start":88,"line_end":88,"column_start":12,"column_end":16},"name":"ceil","qualname":"<TypedSize2D<T, U>>::ceil","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":163512,"byte_end":163517,"line_start":97,"line_end":97,"column_start":12,"column_end":17},"name":"floor","qualname":"<TypedSize2D<T, U>>::floor","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":164111,"byte_end":164115,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"area","qualname":"<TypedSize2D<T, U>>::area","value":"fn (&self) -> T::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":164440,"byte_end":164444,"line_start":130,"line_end":130,"column_start":12,"column_end":16},"name":"lerp","qualname":"<TypedSize2D<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this size and another size.\n\n `t` is expected to be between zero and one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":164419,"byte_end":164428,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":164712,"byte_end":164732,"line_start":140,"line_end":140,"column_start":12,"column_end":32},"name":"is_empty_or_negative","qualname":"<TypedSize2D<T, U>>::is_empty_or_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":164887,"byte_end":164891,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"zero","qualname":"<TypedSize2D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":166266,"byte_end":166277,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"width_typed","qualname":"<TypedSize2D<T, U>>::width_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.width as a Length carrying the unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":166245,"byte_end":166254,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":166426,"byte_end":166438,"line_start":199,"line_end":199,"column_start":12,"column_end":24},"name":"height_typed","qualname":"<TypedSize2D<T, U>>::height_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.height as a Length carrying the unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":166405,"byte_end":166414,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":166529,"byte_end":166537,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"to_array","qualname":"<TypedSize2D<T, U>>::to_array","value":"fn (&self) -> [T; 2]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":166508,"byte_end":166517,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":166623,"byte_end":166631,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<TypedSize2D<T, U>>::to_tuple","value":"fn (&self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":166602,"byte_end":166611,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":166717,"byte_end":166726,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<TypedSize2D<T, U>>::to_vector","value":"fn (&self) -> TypedVector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":166696,"byte_end":166705,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":166874,"byte_end":166884,"line_start":219,"line_end":219,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<TypedSize2D<T, U>>::to_untyped","value":"fn (&self) -> Size2D<T>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":167016,"byte_end":167028,"line_start":224,"line_end":224,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<TypedSize2D<T, U>>::from_untyped","value":"fn (p: &Size2D<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":167530,"byte_end":167534,"line_start":235,"line_end":235,"column_start":12,"column_end":16},"name":"cast","qualname":"<TypedSize2D<T, Unit>>::cast","value":"fn <NewT> (&self) -> TypedSize2D<NewT, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n\n When casting from floating point to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":168012,"byte_end":168020,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<TypedSize2D<T, Unit>>::try_cast","value":"fn <NewT> (&self) -> Option<TypedSize2D<NewT, Unit>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n\n When casting from floating point to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":168354,"byte_end":168360,"line_start":254,"line_end":254,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<TypedSize2D<T, Unit>>::to_f32","value":"fn (&self) -> TypedSize2D<f32, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` size.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":168467,"byte_end":168473,"line_start":259,"line_end":259,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<TypedSize2D<T, Unit>>::to_f64","value":"fn (&self) -> TypedSize2D<f64, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` size.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":168817,"byte_end":168825,"line_start":268,"line_end":268,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<TypedSize2D<T, Unit>>::to_usize","value":"fn (&self) -> TypedSize2D<usize, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `uint` size, truncating decimals if any.\n\n When casting from floating point sizes, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":169170,"byte_end":169176,"line_start":277,"line_end":277,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<TypedSize2D<T, Unit>>::to_u32","value":"fn (&self) -> TypedSize2D<u32, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` size, truncating decimals if any.\n\n When casting from floating point sizes, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":169519,"byte_end":169525,"line_start":286,"line_end":286,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<TypedSize2D<T, Unit>>::to_i32","value":"fn (&self) -> TypedSize2D<i32, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` size, truncating decimals if any.\n\n When casting from floating point sizes, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":169868,"byte_end":169874,"line_start":295,"line_end":295,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<TypedSize2D<T, Unit>>::to_i64","value":"fn (&self) -> TypedSize2D<i64, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` size, truncating decimals if any.\n\n When casting from floating point sizes, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":170002,"byte_end":170005,"line_start":304,"line_end":304,"column_start":12,"column_end":15},"name":"abs","qualname":"<TypedSize2D<T, U>>::abs","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":170092,"byte_end":170103,"line_start":308,"line_end":308,"column_start":12,"column_end":23},"name":"is_positive","qualname":"<TypedSize2D<T, U>>::is_positive","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":170246,"byte_end":170258,"line_start":314,"line_end":314,"column_start":12,"column_end":24},"name":"greater_than","qualname":"<TypedSize2D<T, U>>::greater_than","value":"fn (&self, other: &Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":170433,"byte_end":170443,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"lower_than","qualname":"<TypedSize2D<T, U>>::lower_than","value":"fn (&self, other: &Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":170663,"byte_end":170668,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"equal","qualname":"<TypedSize2D<T, U>>::equal","value":"fn (&self, other: &Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":170845,"byte_end":170854,"line_start":338,"line_end":338,"column_start":12,"column_end":21},"name":"not_equal","qualname":"<TypedSize2D<T, U>>::not_equal","value":"fn (&self, other: &Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":171085,"byte_end":171088,"line_start":348,"line_end":348,"column_start":12,"column_end":15},"name":"min","qualname":"<TypedSize2D<T, U>>::min","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":171064,"byte_end":171073,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":171259,"byte_end":171262,"line_start":356,"line_end":356,"column_start":12,"column_end":15},"name":"max","qualname":"<TypedSize2D<T, U>>::max","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":171238,"byte_end":171247,"line_start":355,"line_end":355,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":171433,"byte_end":171438,"line_start":364,"line_end":364,"column_start":12,"column_end":17},"name":"clamp","qualname":"<TypedSize2D<T, U>>::clamp","value":"fn (&self, start: Self, end: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":171412,"byte_end":171421,"line_start":363,"line_end":363,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":171574,"byte_end":171579,"line_start":371,"line_end":371,"column_start":8,"column_end":13},"name":"size2","qualname":"::size::size2","value":"fn <T, U> (w: T, h: T) -> TypedSize2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `TypedSize2D::new(w, h)`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3109},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":174291,"byte_end":174302,"line_start":483,"line_end":483,"column_start":12,"column_end":23},"name":"TypedSize3D","qualname":"::size::TypedSize3D","value":"TypedSize3D { width, height, depth, _unit }","parent":null,"children":[{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3114},{"krate":0,"index":3115}],"decl_id":null,"docs":" A 3d size tagged with a unit.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":174269,"byte_end":174279,"line_start":482,"line_end":482,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3112},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":174319,"byte_end":174324,"line_start":484,"line_end":484,"column_start":9,"column_end":14},"name":"width","qualname":"::size::TypedSize3D::width","value":"T","parent":{"krate":0,"index":3109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3113},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":174337,"byte_end":174343,"line_start":485,"line_end":485,"column_start":9,"column_end":15},"name":"height","qualname":"::size::TypedSize3D::height","value":"T","parent":{"krate":0,"index":3109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3114},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":174356,"byte_end":174361,"line_start":486,"line_end":486,"column_start":9,"column_end":14},"name":"depth","qualname":"::size::TypedSize3D::depth","value":"T","parent":{"krate":0,"index":3109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3115},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":174393,"byte_end":174398,"line_start":488,"line_end":488,"column_start":9,"column_end":14},"name":"_unit","qualname":"::size::TypedSize3D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":3109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":175243,"byte_end":175246,"line_start":516,"line_end":516,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedSize3D<T, U>>::new","value":"fn (width: T, height: T, depth: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1584},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":175526,"byte_end":175538,"line_start":528,"line_end":528,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<TypedSize3D<T, U>>::from_lengths","value":"fn (width: Length<T, U>, height: Length<T, U>, depth: Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar strongly typed lengths.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":175884,"byte_end":175889,"line_start":537,"line_end":537,"column_start":12,"column_end":17},"name":"round","qualname":"<TypedSize3D<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":176234,"byte_end":176238,"line_start":546,"line_end":546,"column_start":12,"column_end":16},"name":"ceil","qualname":"<TypedSize3D<T, U>>::ceil","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":176578,"byte_end":176583,"line_start":555,"line_end":555,"column_start":12,"column_end":17},"name":"floor","qualname":"<TypedSize3D<T, U>>::floor","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":177259,"byte_end":177265,"line_start":575,"line_end":575,"column_start":12,"column_end":18},"name":"volume","qualname":"<TypedSize3D<T, U>>::volume","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":177595,"byte_end":177599,"line_start":588,"line_end":588,"column_start":12,"column_end":16},"name":"lerp","qualname":"<TypedSize3D<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this size and another size.\n\n `t` is expected to be between zero and one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":177574,"byte_end":177583,"line_start":587,"line_end":587,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1618},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":177917,"byte_end":177937,"line_start":599,"line_end":599,"column_start":12,"column_end":32},"name":"is_empty_or_negative","qualname":"<TypedSize3D<T, U>>::is_empty_or_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":178114,"byte_end":178118,"line_start":606,"line_end":606,"column_start":12,"column_end":16},"name":"zero","qualname":"<TypedSize3D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1652},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":179613,"byte_end":179624,"line_start":652,"line_end":652,"column_start":12,"column_end":23},"name":"width_typed","qualname":"<TypedSize3D<T, U>>::width_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.width as a Length carrying the unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":179592,"byte_end":179601,"line_start":651,"line_end":651,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":179773,"byte_end":179785,"line_start":658,"line_end":658,"column_start":12,"column_end":24},"name":"height_typed","qualname":"<TypedSize3D<T, U>>::height_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.height as a Length carrying the unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":179752,"byte_end":179761,"line_start":657,"line_end":657,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":179934,"byte_end":179945,"line_start":664,"line_end":664,"column_start":12,"column_end":23},"name":"depth_typed","qualname":"<TypedSize3D<T, U>>::depth_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.depth as a Length carrying the unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":179913,"byte_end":179922,"line_start":663,"line_end":663,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":180035,"byte_end":180043,"line_start":669,"line_end":669,"column_start":12,"column_end":20},"name":"to_array","qualname":"<TypedSize3D<T, U>>::to_array","value":"fn (&self) -> [T; 3]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":180014,"byte_end":180023,"line_start":668,"line_end":668,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":180141,"byte_end":180150,"line_start":674,"line_end":674,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<TypedSize3D<T, U>>::to_vector","value":"fn (&self) -> TypedVector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":180120,"byte_end":180129,"line_start":673,"line_end":673,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":180310,"byte_end":180320,"line_start":679,"line_end":679,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<TypedSize3D<T, U>>::to_untyped","value":"fn (&self) -> Size3D<T>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":180464,"byte_end":180476,"line_start":684,"line_end":684,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<TypedSize3D<T, U>>::from_untyped","value":"fn (p: &Size3D<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":180987,"byte_end":180991,"line_start":695,"line_end":695,"column_start":12,"column_end":16},"name":"cast","qualname":"<TypedSize3D<T, Unit>>::cast","value":"fn <NewT> (&self) -> TypedSize3D<NewT, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n\n When casting from floating point to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":181469,"byte_end":181477,"line_start":704,"line_end":704,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<TypedSize3D<T, Unit>>::try_cast","value":"fn <NewT> (&self) -> Option<TypedSize3D<NewT, Unit>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n\n When casting from floating point to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1667},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":181850,"byte_end":181856,"line_start":714,"line_end":714,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<TypedSize3D<T, Unit>>::to_f32","value":"fn (&self) -> TypedSize3D<f32, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` size.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":181963,"byte_end":181969,"line_start":719,"line_end":719,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<TypedSize3D<T, Unit>>::to_f64","value":"fn (&self) -> TypedSize3D<f64, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` size.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":182313,"byte_end":182321,"line_start":728,"line_end":728,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<TypedSize3D<T, Unit>>::to_usize","value":"fn (&self) -> TypedSize3D<usize, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `uint` size, truncating decimals if any.\n\n When casting from floating point sizes, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":182666,"byte_end":182672,"line_start":737,"line_end":737,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<TypedSize3D<T, Unit>>::to_u32","value":"fn (&self) -> TypedSize3D<u32, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` size, truncating decimals if any.\n\n When casting from floating point sizes, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":183015,"byte_end":183021,"line_start":746,"line_end":746,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<TypedSize3D<T, Unit>>::to_i32","value":"fn (&self) -> TypedSize3D<i32, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` size, truncating decimals if any.\n\n When casting from floating point sizes, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":183364,"byte_end":183370,"line_start":755,"line_end":755,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<TypedSize3D<T, Unit>>::to_i64","value":"fn (&self) -> TypedSize3D<i64, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` size, truncating decimals if any.\n\n When casting from floating point sizes, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":183498,"byte_end":183501,"line_start":764,"line_end":764,"column_start":12,"column_end":15},"name":"abs","qualname":"<TypedSize3D<T, U>>::abs","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":183606,"byte_end":183617,"line_start":768,"line_end":768,"column_start":12,"column_end":23},"name":"is_positive","qualname":"<TypedSize3D<T, U>>::is_positive","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":183788,"byte_end":183800,"line_start":774,"line_end":774,"column_start":12,"column_end":24},"name":"greater_than","qualname":"<TypedSize3D<T, U>>::greater_than","value":"fn (&self, other: &Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":184016,"byte_end":184026,"line_start":782,"line_end":782,"column_start":12,"column_end":22},"name":"lower_than","qualname":"<TypedSize3D<T, U>>::lower_than","value":"fn (&self, other: &Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":184287,"byte_end":184292,"line_start":793,"line_end":793,"column_start":12,"column_end":17},"name":"equal","qualname":"<TypedSize3D<T, U>>::equal","value":"fn (&self, other: &Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":184511,"byte_end":184520,"line_start":801,"line_end":801,"column_start":12,"column_end":21},"name":"not_equal","qualname":"<TypedSize3D<T, U>>::not_equal","value":"fn (&self, other: &Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":184793,"byte_end":184796,"line_start":812,"line_end":812,"column_start":12,"column_end":15},"name":"min","qualname":"<TypedSize3D<T, U>>::min","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":184772,"byte_end":184781,"line_start":811,"line_end":811,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":185008,"byte_end":185011,"line_start":821,"line_end":821,"column_start":12,"column_end":15},"name":"max","qualname":"<TypedSize3D<T, U>>::max","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":184987,"byte_end":184996,"line_start":820,"line_end":820,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":185223,"byte_end":185228,"line_start":830,"line_end":830,"column_start":12,"column_end":17},"name":"clamp","qualname":"<TypedSize3D<T, U>>::clamp","value":"fn (&self, start: Self, end: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":185202,"byte_end":185211,"line_start":829,"line_end":829,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3135},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":187814,"byte_end":187830,"line_start":44,"line_end":44,"column_start":12,"column_end":28},"name":"TypedTransform2D","qualname":"::transform2d::TypedTransform2D","value":"TypedTransform2D { m11, m12, m21, m22, m31, m32, _unit }","parent":null,"children":[{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3141},{"krate":0,"index":3142},{"krate":0,"index":3143},{"krate":0,"index":3144},{"krate":0,"index":3145}],"decl_id":null,"docs":" A 2d transform stored as a 3 by 2 matrix in row-major order in memory.\n\n Transforms can be parametrized over the source and destination units, to describe a\n transformation from a space to another.\n For example, `TypedTransform2D<f32, WorldSpace, ScreenSpace>::transform_point4d`\n takes a `TypedPoint2D<f32, WorldSpace>` and returns a `TypedPoint2D<f32, ScreenSpace>`.\n\n Transforms expose a set of convenience methods for pre- and post-transformations.\n A pre-transformation corresponds to adding an operation that is applied before\n the rest of the transformation, while a post-transformation adds an operation\n that is applied after.\n\n These transforms are for working with _row vectors_, so the matrix math for transforming\n a vector is `v * T`. If your library is using column vectors, use `row_major` functions when you\n are asked for `column_major` representations and vice versa.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":187768,"byte_end":187778,"line_start":42,"line_end":42,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3139},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":187854,"byte_end":187857,"line_start":45,"line_end":45,"column_start":9,"column_end":12},"name":"m11","qualname":"::transform2d::TypedTransform2D::m11","value":"T","parent":{"krate":0,"index":3135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3140},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":187866,"byte_end":187869,"line_start":45,"line_end":45,"column_start":21,"column_end":24},"name":"m12","qualname":"::transform2d::TypedTransform2D::m12","value":"T","parent":{"krate":0,"index":3135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3141},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":187882,"byte_end":187885,"line_start":46,"line_end":46,"column_start":9,"column_end":12},"name":"m21","qualname":"::transform2d::TypedTransform2D::m21","value":"T","parent":{"krate":0,"index":3135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3142},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":187894,"byte_end":187897,"line_start":46,"line_end":46,"column_start":21,"column_end":24},"name":"m22","qualname":"::transform2d::TypedTransform2D::m22","value":"T","parent":{"krate":0,"index":3135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3143},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":187910,"byte_end":187913,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"m31","qualname":"::transform2d::TypedTransform2D::m31","value":"T","parent":{"krate":0,"index":3135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3144},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":187922,"byte_end":187925,"line_start":47,"line_end":47,"column_start":21,"column_end":24},"name":"m32","qualname":"::transform2d::TypedTransform2D::m32","value":"T","parent":{"krate":0,"index":3135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3145},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":187957,"byte_end":187962,"line_start":49,"line_end":49,"column_start":9,"column_end":14},"name":"_unit","qualname":"::transform2d::TypedTransform2D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":3135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1721},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":188050,"byte_end":188061,"line_start":53,"line_end":53,"column_start":10,"column_end":21},"name":"Transform2D","qualname":"::transform2d::Transform2D","value":"TypedTransform2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" The default 2d transform type with no units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":188485,"byte_end":188494,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"row_major","qualname":"<TypedTransform2D<T, Src, Dst>>::row_major","value":"fn (m11: T, m12: T, m21: T, m22: T, m31: T, m32: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a transform specifying its matrix elements in row-major order.\n\n Beware: This library is written with the assumption that row vectors\n are being used. If your matrices use column vectors (i.e. transforming a vector\n is `T * v`), then please use `column_major`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":189009,"byte_end":189021,"line_start":75,"line_end":75,"column_start":12,"column_end":24},"name":"column_major","qualname":"<TypedTransform2D<T, Src, Dst>>::column_major","value":"fn (m11: T, m21: T, m31: T, m12: T, m22: T, m32: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a transform specifying its matrix elements in column-major order.\n\n Beware: This library is written with the assumption that row vectors\n are being used. If your matrices use column vectors (i.e. transforming a vector\n is `T * v`), then please use `row_major`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":189620,"byte_end":189638,"line_start":90,"line_end":90,"column_start":12,"column_end":30},"name":"to_row_major_array","qualname":"<TypedTransform2D<T, Src, Dst>>::to_row_major_array","value":"fn (&self) -> [T; 6]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's terms in row-major order (the order\n in which the transform is actually laid out in memory).\n\n Beware: This library is written with the assumption that row vectors\n are being used. If your matrices use column vectors (i.e. transforming a vector\n is `T * v`), then please use `to_column_major_array`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":190104,"byte_end":190125,"line_start":103,"line_end":103,"column_start":12,"column_end":33},"name":"to_column_major_array","qualname":"<TypedTransform2D<T, Src, Dst>>::to_column_major_array","value":"fn (&self) -> [T; 6]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's terms in column-major order.\n\n Beware: This library is written with the assumption that row vectors\n are being used. If your matrices use column vectors (i.e. transforming a vector\n is `T * v`), then please use `to_row_major_array`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":190692,"byte_end":190705,"line_start":118,"line_end":118,"column_start":12,"column_end":25},"name":"to_row_arrays","qualname":"<TypedTransform2D<T, Src, Dst>>::to_row_arrays","value":"fn (&self) -> [[T; 2]; 3]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's 3 rows in (in row-major order)\n as arrays.\n\n This is a convenience method to interface with other libraries like glium.\n\n Beware: This library is written with the assumption that row vectors\n are being used. If your matrices use column vectors (i.e. transforming a vector\n is `T * v`), this will return column major arrays.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":191177,"byte_end":191197,"line_start":131,"line_end":131,"column_start":12,"column_end":32},"name":"from_row_major_array","qualname":"<TypedTransform2D<T, Src, Dst>>::from_row_major_array","value":"fn (array: [T; 6]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a transform from an array of 6 elements in row-major order.\n\n Beware: This library is written with the assumption that row vectors\n are being used. If your matrices use column vectors (i.e. transforming a vector\n is `T * v`), please provide a column major array.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":191676,"byte_end":191691,"line_start":144,"line_end":144,"column_start":12,"column_end":27},"name":"from_row_arrays","qualname":"<TypedTransform2D<T, Src, Dst>>::from_row_arrays","value":"fn (array: [[T; 2]; 3]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a transform from 3 rows of 2 elements (row-major order).\n\n Beware: This library is written with the assumption that row vectors\n are being used. If your matrices use column vectors (i.e. transforming a vector\n is `T * v`), please provide a column major array.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":191948,"byte_end":191958,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<TypedTransform2D<T, Src, Dst>>::to_untyped","value":"fn (&self) -> Transform2D<T>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":192182,"byte_end":192194,"line_start":162,"line_end":162,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<TypedTransform2D<T, Src, Dst>>::from_untyped","value":"fn (p: &Transform2D<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":192516,"byte_end":192520,"line_start":173,"line_end":173,"column_start":12,"column_end":16},"name":"cast","qualname":"<TypedTransform2D<T0, Src, Dst>>::cast","value":"fn <T1> (&self) -> TypedTransform2D<T1, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":192723,"byte_end":192731,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<TypedTransform2D<T0, Src, Dst>>::try_cast","value":"fn <T1> (&self) -> Option<TypedTransform2D<T1, Src, Dst>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":193442,"byte_end":193450,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"identity","qualname":"<TypedTransform2D<T, Src, Dst>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":194420,"byte_end":194428,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"post_mul","qualname":"<TypedTransform2D<T, Src, Dst>>::post_mul","value":"fn <NewDst> (&self, mat: &TypedTransform2D<T, Dst, NewDst>) -> TypedTransform2D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two matrices such that mat's transformation\n applies after self's transformation.\n\n Assuming row vectors, this is equivalent to self * mat\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":195176,"byte_end":195183,"line_start":248,"line_end":248,"column_start":12,"column_end":19},"name":"pre_mul","qualname":"<TypedTransform2D<T, Src, Dst>>::pre_mul","value":"fn <NewSrc> (&self, mat: &TypedTransform2D<T, NewSrc, Src>) -> TypedTransform2D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two matrices such that mat's transformation\n applies before self's transformation.\n\n Assuming row vectors, this is equivalent to mat * self\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":195363,"byte_end":195381,"line_start":253,"line_end":253,"column_start":12,"column_end":30},"name":"create_translation","qualname":"<TypedTransform2D<T, Src, Dst>>::create_translation","value":"fn (x: T, y: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a translation transform.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":195732,"byte_end":195746,"line_start":264,"line_end":264,"column_start":12,"column_end":26},"name":"post_translate","qualname":"<TypedTransform2D<T, Src, Dst>>::post_translate","value":"fn (&self, v: TypedVector2D<T, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a translation after self's transformation and returns the resulting transform.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":196023,"byte_end":196036,"line_start":270,"line_end":270,"column_start":12,"column_end":25},"name":"pre_translate","qualname":"<TypedTransform2D<T, Src, Dst>>::pre_translate","value":"fn (&self, v: TypedVector2D<T, Src>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a translation before self's transformation and returns the resulting transform.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":196203,"byte_end":196215,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"create_scale","qualname":"<TypedTransform2D<T, Src, Dst>>::create_scale","value":"fn (x: T, y: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a scale transform.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":196530,"byte_end":196540,"line_start":286,"line_end":286,"column_start":12,"column_end":22},"name":"post_scale","qualname":"<TypedTransform2D<T, Src, Dst>>::post_scale","value":"fn (&self, x: T, y: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a scale after self's transformation and returns the resulting transform.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":196787,"byte_end":196796,"line_start":292,"line_end":292,"column_start":12,"column_end":21},"name":"pre_scale","qualname":"<TypedTransform2D<T, Src, Dst>>::pre_scale","value":"fn (&self, x: T, y: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a scale before self's transformation and returns the resulting transform.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":197040,"byte_end":197055,"line_start":301,"line_end":301,"column_start":12,"column_end":27},"name":"create_rotation","qualname":"<TypedTransform2D<T, Src, Dst>>::create_rotation","value":"fn (theta: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a rotation transform.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":197462,"byte_end":197473,"line_start":314,"line_end":314,"column_start":12,"column_end":23},"name":"post_rotate","qualname":"<TypedTransform2D<T, Src, Dst>>::post_rotate","value":"fn (&self, theta: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a rotation after self's transformation and returns the resulting transform.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":197731,"byte_end":197741,"line_start":320,"line_end":320,"column_start":12,"column_end":22},"name":"pre_rotate","qualname":"<TypedTransform2D<T, Src, Dst>>::pre_rotate","value":"fn (&self, theta: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a rotation after self's transformation and returns the resulting transform.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":198054,"byte_end":198069,"line_start":329,"line_end":329,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<TypedTransform2D<T, Src, Dst>>::transform_point","value":"fn (&self, point: &TypedPoint2D<T, Src>) -> TypedPoint2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given point transformed by this transform.\n\n Assuming row vectors, this is equivalent to `p * self`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":197985,"byte_end":197994,"line_start":327,"line_end":327,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":198501,"byte_end":198517,"line_start":339,"line_end":339,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<TypedTransform2D<T, Src, Dst>>::transform_vector","value":"fn (&self, vec: &TypedVector2D<T, Src>) -> TypedVector2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given vector transformed by this matrix.\n\n Assuming row vectors, this is equivalent to `v * self`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":198432,"byte_end":198441,"line_start":337,"line_end":337,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":198880,"byte_end":198894,"line_start":348,"line_end":348,"column_start":12,"column_end":26},"name":"transform_rect","qualname":"<TypedTransform2D<T, Src, Dst>>::transform_rect","value":"fn (&self, rect: &TypedRect<T, Src>) -> TypedRect<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns a rectangle that encompasses the result of transforming the given rectangle by this\n transform.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":198811,"byte_end":198820,"line_start":346,"line_end":346,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":199290,"byte_end":199301,"line_start":358,"line_end":358,"column_start":12,"column_end":23},"name":"determinant","qualname":"<TypedTransform2D<T, Src, Dst>>::determinant","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes and returns the determinant of this transform.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":199483,"byte_end":199490,"line_start":364,"line_end":364,"column_start":12,"column_end":19},"name":"inverse","qualname":"<TypedTransform2D<T, Src, Dst>>::inverse","value":"fn (&self) -> Option<TypedTransform2D<T, Dst, Src>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse transform if possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":200167,"byte_end":200183,"line_start":387,"line_end":387,"column_start":12,"column_end":28},"name":"with_destination","qualname":"<TypedTransform2D<T, Src, Dst>>::with_destination","value":"fn <NewDst> (&self) -> TypedTransform2D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same transform with a different destination unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":200146,"byte_end":200155,"line_start":386,"line_end":386,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":200477,"byte_end":200488,"line_start":397,"line_end":397,"column_start":12,"column_end":23},"name":"with_source","qualname":"<TypedTransform2D<T, Src, Dst>>::with_source","value":"fn <NewSrc> (&self) -> TypedTransform2D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same transform with a different source unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":200456,"byte_end":200465,"line_start":396,"line_end":396,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":201032,"byte_end":201037,"line_start":417,"line_end":417,"column_start":12,"column_end":17},"name":"to_3d","qualname":"<TypedTransform2D<T, Src, Dst>>::to_3d","value":"fn (&self) -> TypedTransform3D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Create a 3D transform from the current transform\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":201430,"byte_end":201439,"line_start":432,"line_end":432,"column_start":12,"column_end":21},"name":"approx_eq","qualname":"<TypedTransform2D<T, Src, Dst>>::approx_eq","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3170},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209245,"byte_end":209261,"line_start":46,"line_end":46,"column_start":12,"column_end":28},"name":"TypedTransform3D","qualname":"::transform3d::TypedTransform3D","value":"TypedTransform3D { m11, m12, m13, m14, m21, m22, m23, m24, m31, m32, m33, m34, m41, m42, m43, m44, _unit }","parent":null,"children":[{"krate":0,"index":3174},{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3190}],"decl_id":null,"docs":" A 3d transform stored as a 4 by 4 matrix in row-major order in memory.\n\n Transforms can be parametrized over the source and destination units, to describe a\n transformation from a space to another.\n For example, `TypedTransform3D<f32, WorldSpace, ScreenSpace>::transform_point3d`\n takes a `TypedPoint3D<f32, WorldSpace>` and returns a `TypedPoint3D<f32, ScreenSpace>`.\n\n Transforms expose a set of convenience methods for pre- and post-transformations.\n A pre-transformation corresponds to adding an operation that is applied before\n the rest of the transformation, while a post-transformation adds an operation\n that is applied after.\n\n These transforms are for working with _row vectors_, so the matrix math for transforming\n a vector is `v * T`. If your library is using column vectors, use `row_major` functions when you\n are asked for `column_major` representations and vice versa.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209223,"byte_end":209233,"line_start":45,"line_end":45,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3174},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209285,"byte_end":209288,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"m11","qualname":"::transform3d::TypedTransform3D::m11","value":"T","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3175},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209297,"byte_end":209300,"line_start":47,"line_end":47,"column_start":21,"column_end":24},"name":"m12","qualname":"::transform3d::TypedTransform3D::m12","value":"T","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3176},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209309,"byte_end":209312,"line_start":47,"line_end":47,"column_start":33,"column_end":36},"name":"m13","qualname":"::transform3d::TypedTransform3D::m13","value":"T","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3177},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209321,"byte_end":209324,"line_start":47,"line_end":47,"column_start":45,"column_end":48},"name":"m14","qualname":"::transform3d::TypedTransform3D::m14","value":"T","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3178},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209337,"byte_end":209340,"line_start":48,"line_end":48,"column_start":9,"column_end":12},"name":"m21","qualname":"::transform3d::TypedTransform3D::m21","value":"T","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3179},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209349,"byte_end":209352,"line_start":48,"line_end":48,"column_start":21,"column_end":24},"name":"m22","qualname":"::transform3d::TypedTransform3D::m22","value":"T","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3180},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209361,"byte_end":209364,"line_start":48,"line_end":48,"column_start":33,"column_end":36},"name":"m23","qualname":"::transform3d::TypedTransform3D::m23","value":"T","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3181},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209373,"byte_end":209376,"line_start":48,"line_end":48,"column_start":45,"column_end":48},"name":"m24","qualname":"::transform3d::TypedTransform3D::m24","value":"T","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3182},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209389,"byte_end":209392,"line_start":49,"line_end":49,"column_start":9,"column_end":12},"name":"m31","qualname":"::transform3d::TypedTransform3D::m31","value":"T","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3183},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209401,"byte_end":209404,"line_start":49,"line_end":49,"column_start":21,"column_end":24},"name":"m32","qualname":"::transform3d::TypedTransform3D::m32","value":"T","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3184},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209413,"byte_end":209416,"line_start":49,"line_end":49,"column_start":33,"column_end":36},"name":"m33","qualname":"::transform3d::TypedTransform3D::m33","value":"T","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3185},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209425,"byte_end":209428,"line_start":49,"line_end":49,"column_start":45,"column_end":48},"name":"m34","qualname":"::transform3d::TypedTransform3D::m34","value":"T","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3186},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209441,"byte_end":209444,"line_start":50,"line_end":50,"column_start":9,"column_end":12},"name":"m41","qualname":"::transform3d::TypedTransform3D::m41","value":"T","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3187},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209453,"byte_end":209456,"line_start":50,"line_end":50,"column_start":21,"column_end":24},"name":"m42","qualname":"::transform3d::TypedTransform3D::m42","value":"T","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3188},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209465,"byte_end":209468,"line_start":50,"line_end":50,"column_start":33,"column_end":36},"name":"m43","qualname":"::transform3d::TypedTransform3D::m43","value":"T","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3189},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209477,"byte_end":209480,"line_start":50,"line_end":50,"column_start":45,"column_end":48},"name":"m44","qualname":"::transform3d::TypedTransform3D::m44","value":"T","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3190},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209512,"byte_end":209517,"line_start":52,"line_end":52,"column_start":9,"column_end":14},"name":"_unit","qualname":"::transform3d::TypedTransform3D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1833},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209605,"byte_end":209616,"line_start":56,"line_end":56,"column_start":10,"column_end":21},"name":"Transform3D","qualname":"::transform3d::Transform3D","value":"TypedTransform3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" The default 3d transform type with no units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":210272,"byte_end":210281,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"row_major","qualname":"<TypedTransform3D<T, Src, Dst>>::row_major","value":"fn (m11: T, m12: T, m13: T, m14: T, m21: T, m22: T, m23: T, m24: T, m31: T, m32: T, m33: T, m34: T, m41: T, m42: T, m43: T, m44: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a transform specifying its components in row-major order.\n\n For example, the translation terms m41, m42, m43 on the last row with the\n row-major convention) are the 13rd, 14th and 15th parameters.\n\n Beware: This library is written with the assumption that row vectors\n are being used. If your matrices use column vectors (i.e. transforming a vector\n is `T * v`), then please use `column_major`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":210182,"byte_end":210191,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":211238,"byte_end":211250,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"column_major","qualname":"<TypedTransform3D<T, Src, Dst>>::column_major","value":"fn (m11: T, m21: T, m31: T, m41: T, m12: T, m22: T, m32: T, m42: T, m13: T, m23: T, m33: T, m43: T, m14: T, m24: T, m34: T, m44: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a transform specifying its components in column-major order.\n\n For example, the translation terms m41, m42, m43 on the last column with the\n column-major convention) are the 4th, 8th and 12nd parameters.\n\n Beware: This library is written with the assumption that row vectors\n are being used. If your matrices use column vectors (i.e. transforming a vector\n is `T * v`), then please use `row_major`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":211148,"byte_end":211157,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":211794,"byte_end":211802,"line_start":115,"line_end":115,"column_start":12,"column_end":20},"name":"identity","qualname":"<TypedTransform3D<T, Src, Dst>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":211773,"byte_end":211782,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1851},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":212760,"byte_end":212772,"line_start":148,"line_end":148,"column_start":12,"column_end":24},"name":"row_major_2d","qualname":"<TypedTransform3D<T, Src, Dst>>::row_major_2d","value":"fn (m11: T, m12: T, m21: T, m22: T, m41: T, m42: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 4 by 4 transform representing a 2d transformation, specifying its components\n in row-major order.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":212739,"byte_end":212748,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1852},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":213124,"byte_end":213129,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"ortho","qualname":"<TypedTransform3D<T, Src, Dst>>::ortho","value":"fn (left: T, right: T, bottom: T, top: T, near: T, far: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an orthogonal projection transform.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1853},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":214021,"byte_end":214026,"line_start":180,"line_end":180,"column_start":12,"column_end":17},"name":"is_2d","qualname":"<TypedTransform3D<T, Src, Dst>>::is_2d","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this transform can be represented with a `TypedTransform2D`.\n\n See <https://drafts.csswg.org/css-transforms/#2d-transform>\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":214000,"byte_end":214009,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":214566,"byte_end":214571,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"to_2d","qualname":"<TypedTransform3D<T, Src, Dst>>::to_2d","value":"fn (&self) -> TypedTransform2D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Create a 2D transform picking the relevant terms from this transform.\n\n This method assumes that self represents a 2d transformation, callers\n should check that self.is_2d() returns true beforehand.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":214911,"byte_end":214930,"line_start":203,"line_end":203,"column_start":12,"column_end":31},"name":"is_backface_visible","qualname":"<TypedTransform3D<T, Src, Dst>>::is_backface_visible","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether shapes on the XY plane with Z pointing towards the\n screen transformed by this matrix would be facing back.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":215344,"byte_end":215353,"line_start":213,"line_end":213,"column_start":12,"column_end":21},"name":"approx_eq","qualname":"<TypedTransform3D<T, Src, Dst>>::approx_eq","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":216118,"byte_end":216134,"line_start":227,"line_end":227,"column_start":12,"column_end":28},"name":"with_destination","qualname":"<TypedTransform3D<T, Src, Dst>>::with_destination","value":"fn <NewDst> (&self) -> TypedTransform3D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same transform with a different destination unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":216097,"byte_end":216106,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":216540,"byte_end":216551,"line_start":238,"line_end":238,"column_start":12,"column_end":23},"name":"with_source","qualname":"<TypedTransform3D<T, Src, Dst>>::with_source","value":"fn <NewSrc> (&self) -> TypedTransform3D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same transform with a different source unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":216519,"byte_end":216528,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1861},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":216951,"byte_end":216961,"line_start":249,"line_end":249,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<TypedTransform3D<T, Src, Dst>>::to_untyped","value":"fn (&self) -> Transform3D<T>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":216930,"byte_end":216939,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1862},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":217312,"byte_end":217324,"line_start":260,"line_end":260,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<TypedTransform3D<T, Src, Dst>>::from_untyped","value":"fn (m: &Transform3D<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":217291,"byte_end":217300,"line_start":259,"line_end":259,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1863},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":217782,"byte_end":217790,"line_start":273,"line_end":273,"column_start":12,"column_end":20},"name":"post_mul","qualname":"<TypedTransform3D<T, Src, Dst>>::post_mul","value":"fn <NewDst> (&self, mat: &TypedTransform3D<T, Dst, NewDst>) -> TypedTransform3D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two matrices such that mat's transformation\n applies after self's transformation.\n\n Assuming row vectors, this is equivalent to self * mat\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":219768,"byte_end":219775,"line_start":298,"line_end":298,"column_start":12,"column_end":19},"name":"pre_mul","qualname":"<TypedTransform3D<T, Src, Dst>>::pre_mul","value":"fn <NewSrc> (&self, mat: &TypedTransform3D<T, NewSrc, Src>) -> TypedTransform3D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two matrices such that mat's transformation\n applies before self's transformation.\n\n Assuming row vectors, this is equivalent to mat * self\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":219965,"byte_end":219972,"line_start":303,"line_end":303,"column_start":12,"column_end":19},"name":"inverse","qualname":"<TypedTransform3D<T, Src, Dst>>::inverse","value":"fn (&self) -> Option<TypedTransform3D<T, Dst, Src>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse transform if possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":223783,"byte_end":223794,"line_start":383,"line_end":383,"column_start":12,"column_end":23},"name":"determinant","qualname":"<TypedTransform3D<T, Src, Dst>>::determinant","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Compute the determinant of the transform.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1869},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":225209,"byte_end":225214,"line_start":412,"line_end":412,"column_start":12,"column_end":17},"name":"mul_s","qualname":"<TypedTransform3D<T, Src, Dst>>::mul_s","value":"fn (&self, x: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies all of the transform's component by a scalar and returns the result.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":225652,"byte_end":225662,"line_start":422,"line_end":422,"column_start":12,"column_end":22},"name":"from_scale","qualname":"<TypedTransform3D<T, Src, Dst>>::from_scale","value":"fn (scale: TypedScale<T, Src, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to create a scale transform from a `TypedScale`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1871},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":226067,"byte_end":226096,"line_start":432,"line_end":432,"column_start":12,"column_end":41},"name":"transform_point2d_homogeneous","qualname":"<TypedTransform3D<T, Src, Dst>>::transform_point2d_homogeneous","value":"fn (&self, p: &TypedPoint2D<T, Src>) -> HomogeneousVector<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the homogeneous vector corresponding to the transformed 2d point.\n\n The input point must be use the unit Src, and the returned point has the unit Dst.\n\n Assuming row vectors, this is equivalent to `p * self`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":226046,"byte_end":226055,"line_start":431,"line_end":431,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":226786,"byte_end":226803,"line_start":450,"line_end":450,"column_start":12,"column_end":29},"name":"transform_point2d","qualname":"<TypedTransform3D<T, Src, Dst>>::transform_point2d","value":"fn (&self, p: &TypedPoint2D<T, Src>) -> Option<TypedPoint2D<T, Dst>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d point transformed by this transform, if the transform makes sense,\n or `None` otherwise.\n\n The input point must be use the unit Src, and the returned point has the unit Dst.\n\n Assuming row vectors, this is equivalent to `p * self`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":226765,"byte_end":226774,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":227546,"byte_end":227564,"line_start":469,"line_end":469,"column_start":12,"column_end":30},"name":"transform_vector2d","qualname":"<TypedTransform3D<T, Src, Dst>>::transform_vector2d","value":"fn (&self, v: &TypedVector2D<T, Src>) -> TypedVector2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d vector transformed by this matrix.\n\n The input point must be use the unit Src, and the returned point has the unit Dst.\n\n Assuming row vectors, this is equivalent to `v * self`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":227525,"byte_end":227534,"line_start":468,"line_end":468,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":228024,"byte_end":228053,"line_start":482,"line_end":482,"column_start":12,"column_end":41},"name":"transform_point3d_homogeneous","qualname":"<TypedTransform3D<T, Src, Dst>>::transform_point3d_homogeneous","value":"fn (&self, p: &TypedPoint3D<T, Src>) -> HomogeneousVector<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the homogeneous vector corresponding to the transformed 3d point.\n\n The input point must be use the unit Src, and the returned point has the unit Dst.\n\n Assuming row vectors, this is equivalent to `p * self`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":228003,"byte_end":228012,"line_start":481,"line_end":481,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":228811,"byte_end":228828,"line_start":500,"line_end":500,"column_start":12,"column_end":29},"name":"transform_point3d","qualname":"<TypedTransform3D<T, Src, Dst>>::transform_point3d","value":"fn (&self, p: &TypedPoint3D<T, Src>) -> Option<TypedPoint3D<T, Dst>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 3d point transformed by this transform, if the transform makes sense,\n or `None` otherwise.\n\n The input point must be use the unit Src, and the returned point has the unit Dst.\n\n Assuming row vectors, this is equivalent to `p * self`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":228790,"byte_end":228799,"line_start":499,"line_end":499,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1876},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":229221,"byte_end":229239,"line_start":510,"line_end":510,"column_start":12,"column_end":30},"name":"transform_vector3d","qualname":"<TypedTransform3D<T, Src, Dst>>::transform_vector3d","value":"fn (&self, v: &TypedVector3D<T, Src>) -> TypedVector3D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 3d vector transformed by this matrix.\n\n The input point must be use the unit Src, and the returned point has the unit Dst.\n\n Assuming row vectors, this is equivalent to `v * self`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":229200,"byte_end":229209,"line_start":509,"line_end":509,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":229706,"byte_end":229720,"line_start":520,"line_end":520,"column_start":12,"column_end":26},"name":"transform_rect","qualname":"<TypedTransform3D<T, Src, Dst>>::transform_rect","value":"fn (&self, rect: &TypedRect<T, Src>) -> Option<TypedRect<T, Dst>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a rectangle that encompasses the result of transforming the given rectangle by this\n transform, if the transform makes sense for it, or `None` otherwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1878},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":230120,"byte_end":230138,"line_start":530,"line_end":530,"column_start":12,"column_end":30},"name":"create_translation","qualname":"<TypedTransform3D<T, Src, Dst>>::create_translation","value":"fn (x: T, y: T, z: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d translation transform\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":230535,"byte_end":230548,"line_start":542,"line_end":542,"column_start":12,"column_end":25},"name":"pre_translate","qualname":"<TypedTransform3D<T, Src, Dst>>::pre_translate","value":"fn (&self, v: TypedVector3D<T, Src>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a translation applied before self's transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1880},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":230817,"byte_end":230831,"line_start":548,"line_end":548,"column_start":12,"column_end":26},"name":"post_translate","qualname":"<TypedTransform3D<T, Src, Dst>>::post_translate","value":"fn (&self, v: TypedVector3D<T, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a translation applied after self's transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":231029,"byte_end":231042,"line_start":553,"line_end":553,"column_start":12,"column_end":25},"name":"project_to_2d","qualname":"<TypedTransform3D<T, Src, Dst>>::project_to_2d","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a projection of this transform in 2d space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":232419,"byte_end":232431,"line_start":589,"line_end":589,"column_start":12,"column_end":24},"name":"create_scale","qualname":"<TypedTransform3D<T, Src, Dst>>::create_scale","value":"fn (x: T, y: T, z: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d scale transform\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":232822,"byte_end":232831,"line_start":601,"line_end":601,"column_start":12,"column_end":21},"name":"pre_scale","qualname":"<TypedTransform3D<T, Src, Dst>>::pre_scale","value":"fn (&self, x: T, y: T, z: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a scale applied before self's transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":233313,"byte_end":233323,"line_start":612,"line_end":612,"column_start":12,"column_end":22},"name":"post_scale","qualname":"<TypedTransform3D<T, Src, Dst>>::post_scale","value":"fn (&self, x: T, y: T, z: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a scale applied after self's transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":233548,"byte_end":233563,"line_start":618,"line_end":618,"column_start":12,"column_end":27},"name":"create_rotation","qualname":"<TypedTransform3D<T, Src, Dst>>::create_rotation","value":"fn (x: T, y: T, z: T, theta: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d rotation transform from an angle / axis.\n The supplied axis must be normalized.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":234582,"byte_end":234593,"line_start":655,"line_end":655,"column_start":12,"column_end":23},"name":"post_rotate","qualname":"<TypedTransform3D<T, Src, Dst>>::post_rotate","value":"fn (&self, x: T, y: T, z: T, theta: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a rotation applied after self's transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1887},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":234868,"byte_end":234878,"line_start":661,"line_end":661,"column_start":12,"column_end":22},"name":"pre_rotate","qualname":"<TypedTransform3D<T, Src, Dst>>::pre_rotate","value":"fn (&self, x: T, y: T, z: T, theta: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a rotation applied before self's transformation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":235134,"byte_end":235145,"line_start":668,"line_end":668,"column_start":12,"column_end":23},"name":"create_skew","qualname":"<TypedTransform3D<T, Src, Dst>>::create_skew","value":"fn (alpha: Angle<T>, beta: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 2d skew transform.\n\n See <https://drafts.csswg.org/css-transforms/#funcdef-skew>\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":235543,"byte_end":235561,"line_start":680,"line_end":680,"column_start":12,"column_end":30},"name":"create_perspective","qualname":"<TypedTransform3D<T, Src, Dst>>::create_perspective","value":"fn (d: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a simple perspective projection transform\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":236263,"byte_end":236281,"line_start":698,"line_end":698,"column_start":12,"column_end":30},"name":"to_row_major_array","qualname":"<TypedTransform3D<T, Src, Dst>>::to_row_major_array","value":"fn (&self) -> [T; 16]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's terms in row-major order (the order\n in which the transform is actually laid out in memory).\n\n Beware: This library is written with the assumption that row vectors\n are being used. If your matrices use column vectors (i.e. transforming a vector\n is `T * v`), then please use `to_column_major_array`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1896},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":236860,"byte_end":236881,"line_start":712,"line_end":712,"column_start":12,"column_end":33},"name":"to_column_major_array","qualname":"<TypedTransform3D<T, Src, Dst>>::to_column_major_array","value":"fn (&self) -> [T; 16]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's terms in column-major order.\n\n Beware: This library is written with the assumption that row vectors\n are being used. If your matrices use column vectors (i.e. transforming a vector\n is `T * v`), then please use `to_row_major_array`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":237570,"byte_end":237583,"line_start":729,"line_end":729,"column_start":12,"column_end":25},"name":"to_row_arrays","qualname":"<TypedTransform3D<T, Src, Dst>>::to_row_arrays","value":"fn (&self) -> [[T; 4]; 4]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's 4 rows in (in row-major order)\n as arrays.\n\n This is a convenience method to interface with other libraries like glium.\n\n Beware: This library is written with the assumption that row vectors\n are being used. If your matrices use column vectors (i.e. transforming a vector\n is `T * v`), then please use `to_column_arrays`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1901},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":238317,"byte_end":238333,"line_start":746,"line_end":746,"column_start":12,"column_end":28},"name":"to_column_arrays","qualname":"<TypedTransform3D<T, Src, Dst>>::to_column_arrays","value":"fn (&self) -> [[T; 4]; 4]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's 4 columns in (in row-major order,\n or 4 rows in column-major order) as arrays.\n\n This is a convenience method to interface with other libraries like glium.\n\n Beware: This library is written with the assumption that row vectors\n are being used. If your matrices use column vectors (i.e. transforming a vector\n is `T * v`), then please use `to_row_arrays`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":238933,"byte_end":238943,"line_start":760,"line_end":760,"column_start":12,"column_end":22},"name":"from_array","qualname":"<TypedTransform3D<T, Src, Dst>>::from_array","value":"fn (array: [T; 16]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a transform from an array of 16 elements in row-major order.\n\n Beware: This library is written with the assumption that row vectors\n are being used. If your matrices use column vectors (i.e. transforming a vector\n is `T * v`), please provide column-major data to this function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":239562,"byte_end":239577,"line_start":774,"line_end":774,"column_start":12,"column_end":27},"name":"from_row_arrays","qualname":"<TypedTransform3D<T, Src, Dst>>::from_row_arrays","value":"fn (array: [[T; 4]; 4]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a transform from 4 rows of 4 elements (row-major order).\n\n Beware: This library is written with the assumption that row vectors\n are being used. If your matrices use column vectors (i.e. transforming a vector\n is `T * v`), please provide column-major data to tis function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":240066,"byte_end":240070,"line_start":786,"line_end":786,"column_start":12,"column_end":16},"name":"cast","qualname":"<TypedTransform3D<T0, Src, Dst>>::cast","value":"fn <T1> (&self) -> TypedTransform3D<T1, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":240273,"byte_end":240281,"line_start":791,"line_end":791,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<TypedTransform3D<T0, Src, Dst>>::try_cast","value":"fn <T1> (&self) -> Option<TypedTransform3D<T1, Src, Dst>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3215},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":254779,"byte_end":254797,"line_start":40,"line_end":40,"column_start":12,"column_end":30},"name":"TypedTranslation2D","qualname":"::translation::TypedTranslation2D","value":"TypedTranslation2D { x, y, _unit }","parent":null,"children":[{"krate":0,"index":3219},{"krate":0,"index":3220},{"krate":0,"index":3221}],"decl_id":null,"docs":" A 2d transformation from a space to another that can only express translations.\n\n The main benefit of this type over a TypedVector2D is the ability to cast\n between a source and a destination spaces.\n\n Example:\n\n ```\n use euclid::{TypedTranslation2D, TypedPoint2D, point2};\n struct ParentSpace;\n struct ChildSpace;\n type ScrollOffset = TypedTranslation2D<i32, ParentSpace, ChildSpace>;\n type ParentPoint = TypedPoint2D<i32, ParentSpace>;\n type ChildPoint = TypedPoint2D<i32, ChildSpace>;\n\n let scrolling = ScrollOffset::new(0, 100);\n let p1: ParentPoint = point2(0, 0);\n let p2: ChildPoint = scrolling.transform_point(&p1);\n ```\n\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":254757,"byte_end":254767,"line_start":39,"line_end":39,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3219},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":254821,"byte_end":254822,"line_start":41,"line_end":41,"column_start":9,"column_end":10},"name":"x","qualname":"::translation::TypedTranslation2D::x","value":"T","parent":{"krate":0,"index":3215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3220},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":254835,"byte_end":254836,"line_start":42,"line_end":42,"column_start":9,"column_end":10},"name":"y","qualname":"::translation::TypedTranslation2D::y","value":"T","parent":{"krate":0,"index":3215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3221},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":254868,"byte_end":254873,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"name":"_unit","qualname":"::translation::TypedTranslation2D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":3215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1956},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":254980,"byte_end":254983,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedTranslation2D<T, Src, Dst>>::new","value":"fn (x: T, y: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":254959,"byte_end":254968,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1961},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255212,"byte_end":255220,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"to_array","qualname":"<TypedTranslation2D<T, Src, Dst>>::to_array","value":"fn (&self) -> [T; 2]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255191,"byte_end":255200,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1963},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255297,"byte_end":255305,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<TypedTranslation2D<T, Src, Dst>>::to_tuple","value":"fn (&self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255276,"byte_end":255285,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255462,"byte_end":255470,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"identity","qualname":"<TypedTranslation2D<T, Src, Dst>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255441,"byte_end":255450,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255667,"byte_end":255678,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<TypedTranslation2D<T, Src, Dst>>::is_identity","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255646,"byte_end":255655,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255917,"byte_end":255932,"line_start":100,"line_end":100,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<TypedTranslation2D<T, Src, Dst>>::transform_point","value":"fn (&self, p: &TypedPoint2D<T, Src>) -> TypedPoint2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Translate a point and cast its unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255896,"byte_end":255905,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":256116,"byte_end":256130,"line_start":106,"line_end":106,"column_start":12,"column_end":26},"name":"transform_rect","qualname":"<TypedTranslation2D<T, Src, Dst>>::transform_rect","value":"fn (&self, r: &TypedRect<T, Src>) -> TypedRect<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Translate a rectangle and cast its unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":256095,"byte_end":256104,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1980},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":256382,"byte_end":256396,"line_start":115,"line_end":115,"column_start":12,"column_end":26},"name":"transform_size","qualname":"<TypedTranslation2D<T, Src, Dst>>::transform_size","value":"fn (&self, s: &TypedSize2D<T, Src>) -> TypedSize2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" No-op, just cast the unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":256361,"byte_end":256370,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1981},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":256547,"byte_end":256556,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<TypedTranslation2D<T, Src, Dst>>::to_vector","value":"fn (&self) -> TypedVector2D<T, Src>","parent":null,"children":[],"decl_id":null,"docs":" Cast into a 2D vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1986},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":256785,"byte_end":256792,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"inverse","qualname":"<TypedTranslation2D<T, Src, Dst>>::inverse","value":"fn (&self) -> TypedTranslation2D<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Return the inverse transformation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":256764,"byte_end":256773,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":258066,"byte_end":258078,"line_start":180,"line_end":180,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<TypedTranslation2D<T, Src, Dst>>::to_transform","value":"fn (&self) -> TypedTransform2D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the matrix representation of this translation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":258045,"byte_end":258054,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3246},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":259580,"byte_end":259598,"line_start":244,"line_end":244,"column_start":12,"column_end":30},"name":"TypedTranslation3D","qualname":"::translation::TypedTranslation3D","value":"TypedTranslation3D { x, y, z, _unit }","parent":null,"children":[{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3252},{"krate":0,"index":3253}],"decl_id":null,"docs":" A 3d transformation from a space to another that can only express translations.\n\n The main benefit of this type over a TypedVector3D is the ability to cast\n between a source and a destination spaces.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":259558,"byte_end":259568,"line_start":243,"line_end":243,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3250},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":259622,"byte_end":259623,"line_start":245,"line_end":245,"column_start":9,"column_end":10},"name":"x","qualname":"::translation::TypedTranslation3D::x","value":"T","parent":{"krate":0,"index":3246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3251},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":259636,"byte_end":259637,"line_start":246,"line_end":246,"column_start":9,"column_end":10},"name":"y","qualname":"::translation::TypedTranslation3D::y","value":"T","parent":{"krate":0,"index":3246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3252},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":259650,"byte_end":259651,"line_start":247,"line_end":247,"column_start":9,"column_end":10},"name":"z","qualname":"::translation::TypedTranslation3D::z","value":"T","parent":{"krate":0,"index":3246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3253},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":259683,"byte_end":259688,"line_start":249,"line_end":249,"column_start":9,"column_end":14},"name":"_unit","qualname":"::translation::TypedTranslation3D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":3246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2035},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":259795,"byte_end":259798,"line_start":254,"line_end":254,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedTranslation3D<T, Src, Dst>>::new","value":"fn (x: T, y: T, z: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":259774,"byte_end":259783,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2040},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":260047,"byte_end":260055,"line_start":269,"line_end":269,"column_start":12,"column_end":20},"name":"to_array","qualname":"<TypedTranslation3D<T, Src, Dst>>::to_array","value":"fn (&self) -> [T; 3]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":260026,"byte_end":260035,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":260140,"byte_end":260148,"line_start":274,"line_end":274,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<TypedTranslation3D<T, Src, Dst>>::to_tuple","value":"fn (&self) -> (T, T, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":260119,"byte_end":260128,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":260315,"byte_end":260323,"line_start":284,"line_end":284,"column_start":12,"column_end":20},"name":"identity","qualname":"<TypedTranslation3D<T, Src, Dst>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":260294,"byte_end":260303,"line_start":283,"line_end":283,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2052},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":260524,"byte_end":260535,"line_start":295,"line_end":295,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<TypedTranslation3D<T, Src, Dst>>::is_identity","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":260503,"byte_end":260512,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":260797,"byte_end":260814,"line_start":306,"line_end":306,"column_start":12,"column_end":29},"name":"transform_point3d","qualname":"<TypedTranslation3D<T, Src, Dst>>::transform_point3d","value":"fn (&self, p: &TypedPoint3D<T, Src>) -> TypedPoint3D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Translate a point and cast its unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":260776,"byte_end":260785,"line_start":305,"line_end":305,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":261008,"byte_end":261025,"line_start":312,"line_end":312,"column_start":12,"column_end":29},"name":"transform_point2d","qualname":"<TypedTranslation3D<T, Src, Dst>>::transform_point2d","value":"fn (&self, p: &TypedPoint2D<T, Src>) -> TypedPoint2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Translate a point and cast its unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":260987,"byte_end":260996,"line_start":311,"line_end":311,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":261209,"byte_end":261223,"line_start":318,"line_end":318,"column_start":12,"column_end":26},"name":"transform_rect","qualname":"<TypedTranslation3D<T, Src, Dst>>::transform_rect","value":"fn (&self, r: &TypedRect<T, Src>) -> TypedRect<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Translate a rectangle and cast its unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":261188,"byte_end":261197,"line_start":317,"line_end":317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":261477,"byte_end":261491,"line_start":327,"line_end":327,"column_start":12,"column_end":26},"name":"transform_size","qualname":"<TypedTranslation3D<T, Src, Dst>>::transform_size","value":"fn (&self, s: &TypedSize2D<T, Src>) -> TypedSize2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" No-op, just cast the unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":261456,"byte_end":261465,"line_start":326,"line_end":326,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":261642,"byte_end":261651,"line_start":332,"line_end":332,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<TypedTranslation3D<T, Src, Dst>>::to_vector","value":"fn (&self) -> TypedVector3D<T, Src>","parent":null,"children":[],"decl_id":null,"docs":" Cast into a 3D vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":261888,"byte_end":261895,"line_start":343,"line_end":343,"column_start":12,"column_end":19},"name":"inverse","qualname":"<TypedTranslation3D<T, Src, Dst>>::inverse","value":"fn (&self) -> TypedTranslation3D<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Return the inverse transformation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":261867,"byte_end":261876,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":263238,"byte_end":263250,"line_start":393,"line_end":393,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<TypedTranslation3D<T, Src, Dst>>::to_transform","value":"fn (&self) -> TypedTransform3D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the matrix representation of this translation.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":263217,"byte_end":263226,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\trig.rs","byte_start":266059,"byte_end":266063,"line_start":11,"line_end":11,"column_start":11,"column_end":15},"name":"Trig","qualname":"::trig::Trig","value":"Trig","parent":null,"children":[{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118}],"decl_id":null,"docs":" Trait for basic trigonometry functions, so they can be used on generic numeric types\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\trig.rs","byte_start":266073,"byte_end":266076,"line_start":12,"line_end":12,"column_start":8,"column_end":11},"name":"sin","qualname":"::trig::Trig::sin","value":"fn (self) -> Self","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\trig.rs","byte_start":266099,"byte_end":266102,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"cos","qualname":"::trig::Trig::cos","value":"fn (self) -> Self","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\trig.rs","byte_start":266125,"byte_end":266128,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"tan","qualname":"::trig::Trig::tan","value":"fn (self) -> Self","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\trig.rs","byte_start":266151,"byte_end":266161,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"fast_atan2","qualname":"::trig::Trig::fast_atan2","value":"fn (y: Self, x: Self) -> Self","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\trig.rs","byte_start":266196,"byte_end":266214,"line_start":16,"line_end":16,"column_start":8,"column_end":26},"name":"degrees_to_radians","qualname":"::trig::Trig::degrees_to_radians","value":"fn (deg: Self) -> Self","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\trig.rs","byte_start":266242,"byte_end":266260,"line_start":17,"line_end":17,"column_start":8,"column_end":26},"name":"radians_to_degrees","qualname":"::trig::Trig::radians_to_degrees","value":"fn (rad: Self) -> Self","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3294},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":269052,"byte_end":269065,"line_start":31,"line_end":31,"column_start":12,"column_end":25},"name":"TypedVector2D","qualname":"::vector::TypedVector2D","value":"TypedVector2D { x, y, _unit }","parent":null,"children":[{"krate":0,"index":3297},{"krate":0,"index":3298},{"krate":0,"index":3299}],"decl_id":null,"docs":" A 2d Vector tagged with a unit.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":269030,"byte_end":269040,"line_start":30,"line_end":30,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3297},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":269082,"byte_end":269083,"line_start":32,"line_end":32,"column_start":9,"column_end":10},"name":"x","qualname":"::vector::TypedVector2D::x","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3298},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":269096,"byte_end":269097,"line_start":33,"line_end":33,"column_start":9,"column_end":10},"name":"y","qualname":"::vector::TypedVector2D::y","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3299},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":269129,"byte_end":269134,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"_unit","qualname":"::vector::TypedVector2D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2154},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":269313,"byte_end":269321,"line_start":43,"line_end":43,"column_start":10,"column_end":18},"name":"Vector2D","qualname":"::vector::Vector2D","value":"TypedVector2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Default 2d vector type with no unit.\n\n `Vector2D` provides the same methods as `TypedVector2D`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":269483,"byte_end":269487,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"zero","qualname":"<TypedVector2D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to zero.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":269462,"byte_end":269471,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":269621,"byte_end":269626,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"to_3d","qualname":"<TypedVector2D<T, U>>::to_3d","value":"fn (&self) -> TypedVector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 3d vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":269600,"byte_end":269609,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":270347,"byte_end":270350,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedVector2D<T, U>>::new","value":"fn (x: T, y: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":270326,"byte_end":270335,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":270618,"byte_end":270630,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<TypedVector2D<T, U>>::from_lengths","value":"fn (x: Length<T, U>, y: Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking properly typed Lengths instead of scalar values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":270597,"byte_end":270606,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2181},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":270801,"byte_end":270807,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"extend","qualname":"<TypedVector2D<T, U>>::extend","value":"fn (&self, z: T) -> TypedVector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d vector from this one, using the specified z value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":270780,"byte_end":270789,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":271013,"byte_end":271021,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"to_point","qualname":"<TypedVector2D<T, U>>::to_point","value":"fn (&self) -> TypedPoint2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this vector into a point.\n\n Equivalent to adding this vector to the origin.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":270992,"byte_end":271001,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2183},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":271138,"byte_end":271140,"line_start":112,"line_end":112,"column_start":12,"column_end":14},"name":"yx","qualname":"<TypedVector2D<T, U>>::yx","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Swap x and y.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":271117,"byte_end":271126,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":271257,"byte_end":271264,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"to_size","qualname":"<TypedVector2D<T, U>>::to_size","value":"fn (&self) -> TypedSize2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this vector into a size.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":271236,"byte_end":271245,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2185},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":271411,"byte_end":271418,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"x_typed","qualname":"<TypedVector2D<T, U>>::x_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.x as a Length carrying the unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":271390,"byte_end":271399,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2186},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":271558,"byte_end":271565,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"y_typed","qualname":"<TypedVector2D<T, U>>::y_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.y as a Length carrying the unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":271537,"byte_end":271546,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":271710,"byte_end":271720,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<TypedVector2D<T, U>>::to_untyped","value":"fn (&self) -> Vector2D<T>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":271689,"byte_end":271698,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":271848,"byte_end":271860,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<TypedVector2D<T, U>>::from_untyped","value":"fn (p: &Vector2D<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unit-less value with units.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":271827,"byte_end":271836,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":271965,"byte_end":271974,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<TypedVector2D<T, U>>::cast_unit","value":"fn <V> (&self) -> TypedVector2D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":271944,"byte_end":271953,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":272071,"byte_end":272079,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"to_array","qualname":"<TypedVector2D<T, U>>::to_array","value":"fn (&self) -> [T; 2]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":272050,"byte_end":272059,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":272156,"byte_end":272164,"line_start":158,"line_end":158,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<TypedVector2D<T, U>>::to_tuple","value":"fn (&self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":272135,"byte_end":272144,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":272491,"byte_end":272503,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<TypedVector2D<T, U>>::to_transform","value":"fn (&self) -> TypedTransform2D<T, U, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":272470,"byte_end":272479,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":272784,"byte_end":272801,"line_start":186,"line_end":186,"column_start":12,"column_end":29},"name":"angle_from_x_axis","qualname":"<TypedVector2D<T, U>>::angle_from_x_axis","value":"fn (&self) -> Angle<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the angle between this vector and the x axis between -PI and PI.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":273050,"byte_end":273053,"line_start":197,"line_end":197,"column_start":12,"column_end":15},"name":"dot","qualname":"<TypedVector2D<T, U>>::dot","value":"fn (self, other: Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Dot product.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":273029,"byte_end":273038,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2206},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":273248,"byte_end":273253,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"cross","qualname":"<TypedVector2D<T, U>>::cross","value":"fn (self, other: Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the norm of the cross product [self.x, self.y, 0] x [other.x, other.y, 0]..\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":273227,"byte_end":273236,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":273356,"byte_end":273365,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"normalize","qualname":"<TypedVector2D<T, U>>::normalize","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":273335,"byte_end":273344,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2208},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":273570,"byte_end":273586,"line_start":217,"line_end":217,"column_start":12,"column_end":28},"name":"robust_normalize","qualname":"<TypedVector2D<T, U>>::robust_normalize","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the normalized vector even if the length is larger than the max value of Float.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":273549,"byte_end":273558,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":273875,"byte_end":273888,"line_start":231,"line_end":231,"column_start":12,"column_end":25},"name":"square_length","qualname":"<TypedVector2D<T, U>>::square_length","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":273854,"byte_end":273863,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":273977,"byte_end":273983,"line_start":236,"line_end":236,"column_start":12,"column_end":18},"name":"length","qualname":"<TypedVector2D<T, U>>::length","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":273956,"byte_end":273965,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2214},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":274341,"byte_end":274345,"line_start":252,"line_end":252,"column_start":12,"column_end":16},"name":"lerp","qualname":"<TypedVector2D<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this vector and another vector.\n\n `t` is expected to be between zero and one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":274320,"byte_end":274329,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":275467,"byte_end":275470,"line_start":297,"line_end":297,"column_start":12,"column_end":15},"name":"min","qualname":"<TypedVector2D<T, U>>::min","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":275446,"byte_end":275455,"line_start":296,"line_end":296,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":275587,"byte_end":275590,"line_start":302,"line_end":302,"column_start":12,"column_end":15},"name":"max","qualname":"<TypedVector2D<T, U>>::max","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":275566,"byte_end":275575,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":275707,"byte_end":275712,"line_start":307,"line_end":307,"column_start":12,"column_end":17},"name":"clamp","qualname":"<TypedVector2D<T, U>>::clamp","value":"fn (&self, start: Self, end: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":275686,"byte_end":275695,"line_start":306,"line_end":306,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2277},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":277426,"byte_end":277431,"line_start":365,"line_end":365,"column_start":12,"column_end":17},"name":"round","qualname":"<TypedVector2D<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n For example `{ -0.1, -0.8 }.round() == { 0.0, -1.0 }`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":277357,"byte_end":277366,"line_start":363,"line_end":363,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2281},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":277860,"byte_end":277864,"line_start":377,"line_end":377,"column_start":12,"column_end":16},"name":"ceil","qualname":"<TypedVector2D<T, U>>::ceil","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n For example `{ -0.1, -0.8 }.ceil() == { 0.0, 0.0 }`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":277791,"byte_end":277800,"line_start":375,"line_end":375,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":278292,"byte_end":278297,"line_start":389,"line_end":389,"column_start":12,"column_end":17},"name":"floor","qualname":"<TypedVector2D<T, U>>::floor","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n For example `{ -0.1, -0.8 }.floor() == { -1.0, -1.0 }`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":278223,"byte_end":278232,"line_start":387,"line_end":387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2289},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":278803,"byte_end":278807,"line_start":401,"line_end":401,"column_start":12,"column_end":16},"name":"cast","qualname":"<TypedVector2D<T, U>>::cast","value":"fn <NewT> (&self) -> TypedVector2D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n\n When casting from floating vector to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":278782,"byte_end":278791,"line_start":400,"line_end":400,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2291},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":279299,"byte_end":279307,"line_start":411,"line_end":411,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<TypedVector2D<T, U>>::try_cast","value":"fn <NewT> (&self) -> Option<TypedVector2D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n\n When casting from floating vector to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":279278,"byte_end":279287,"line_start":410,"line_end":410,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2293},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":279649,"byte_end":279655,"line_start":422,"line_end":422,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<TypedVector2D<T, U>>::to_f32","value":"fn (&self) -> TypedVector2D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":279628,"byte_end":279637,"line_start":421,"line_end":421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":279777,"byte_end":279783,"line_start":428,"line_end":428,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<TypedVector2D<T, U>>::to_f64","value":"fn (&self) -> TypedVector2D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":279756,"byte_end":279765,"line_start":427,"line_end":427,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":280146,"byte_end":280154,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<TypedVector2D<T, U>>::to_usize","value":"fn (&self) -> TypedVector2D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` vector, truncating decimals if any.\n\n When casting from floating vector vectors, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":280125,"byte_end":280134,"line_start":437,"line_end":437,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":280517,"byte_end":280523,"line_start":448,"line_end":448,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<TypedVector2D<T, U>>::to_u32","value":"fn (&self) -> TypedVector2D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` vector, truncating decimals if any.\n\n When casting from floating vector vectors, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":280496,"byte_end":280505,"line_start":447,"line_end":447,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2297},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":280882,"byte_end":280888,"line_start":458,"line_end":458,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<TypedVector2D<T, U>>::to_i32","value":"fn (&self) -> TypedVector2D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an i32 vector, truncating decimals if any.\n\n When casting from floating vector vectors, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":280861,"byte_end":280870,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":281247,"byte_end":281253,"line_start":468,"line_end":468,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<TypedVector2D<T, U>>::to_i64","value":"fn (&self) -> TypedVector2D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an i64 vector, truncating decimals if any.\n\n When casting from floating vector vectors, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":281226,"byte_end":281235,"line_start":467,"line_end":467,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2328},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282395,"byte_end":282398,"line_start":518,"line_end":518,"column_start":12,"column_end":15},"name":"abs","qualname":"<TypedVector2D<T, U>>::abs","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3319},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282548,"byte_end":282561,"line_start":526,"line_end":526,"column_start":12,"column_end":25},"name":"TypedVector3D","qualname":"::vector::TypedVector3D","value":"TypedVector3D { x, y, z, _unit }","parent":null,"children":[{"krate":0,"index":3322},{"krate":0,"index":3323},{"krate":0,"index":3324},{"krate":0,"index":3325}],"decl_id":null,"docs":" A 3d Vector tagged with a unit.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282526,"byte_end":282536,"line_start":525,"line_end":525,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3322},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282578,"byte_end":282579,"line_start":527,"line_end":527,"column_start":9,"column_end":10},"name":"x","qualname":"::vector::TypedVector3D::x","value":"T","parent":{"krate":0,"index":3319},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3323},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282592,"byte_end":282593,"line_start":528,"line_end":528,"column_start":9,"column_end":10},"name":"y","qualname":"::vector::TypedVector3D::y","value":"T","parent":{"krate":0,"index":3319},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3324},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282606,"byte_end":282607,"line_start":529,"line_end":529,"column_start":9,"column_end":10},"name":"z","qualname":"::vector::TypedVector3D::z","value":"T","parent":{"krate":0,"index":3319},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3325},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282639,"byte_end":282644,"line_start":531,"line_end":531,"column_start":9,"column_end":14},"name":"_unit","qualname":"::vector::TypedVector3D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":3319},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2329},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282826,"byte_end":282834,"line_start":539,"line_end":539,"column_start":10,"column_end":18},"name":"Vector3D","qualname":"::vector::Vector3D","value":"TypedVector3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Default 3d vector type with no unit.\n\n `Vector3D` provides the same methods as `TypedVector3D`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282996,"byte_end":283000,"line_start":544,"line_end":544,"column_start":12,"column_end":16},"name":"zero","qualname":"<TypedVector3D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to zero.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282975,"byte_end":282984,"line_start":543,"line_end":543,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":283100,"byte_end":283111,"line_start":549,"line_end":549,"column_start":12,"column_end":23},"name":"to_array_4d","qualname":"<TypedVector3D<T, U>>::to_array_4d","value":"fn (&self) -> [T; 4]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":283079,"byte_end":283088,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":283210,"byte_end":283221,"line_start":554,"line_end":554,"column_start":12,"column_end":23},"name":"to_tuple_4d","qualname":"<TypedVector3D<T, U>>::to_tuple_4d","value":"fn (&self) -> (T, T, T, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":283189,"byte_end":283198,"line_start":553,"line_end":553,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2353},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":283967,"byte_end":283970,"line_start":580,"line_end":580,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedVector3D<T, U>>::new","value":"fn (x: T, y: T, z: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":283946,"byte_end":283955,"line_start":579,"line_end":579,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2357},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":284259,"byte_end":284271,"line_start":593,"line_end":593,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<TypedVector3D<T, U>>::from_lengths","value":"fn (x: Length<T, U>, y: Length<T, U>, z: Length<T, U>) -> TypedVector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking properly typed Lengths instead of scalar values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":284238,"byte_end":284247,"line_start":592,"line_end":592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":284511,"byte_end":284519,"line_start":601,"line_end":601,"column_start":12,"column_end":20},"name":"to_point","qualname":"<TypedVector3D<T, U>>::to_point","value":"fn (&self) -> TypedPoint3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this vector into a point.\n\n Equivalent to adding this vector to the origin.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":284490,"byte_end":284499,"line_start":600,"line_end":600,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2359},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":284690,"byte_end":284692,"line_start":607,"line_end":607,"column_start":12,"column_end":14},"name":"xy","qualname":"<TypedVector3D<T, U>>::xy","value":"fn (&self) -> TypedVector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and y coordinates\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":284669,"byte_end":284678,"line_start":606,"line_end":606,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":284854,"byte_end":284856,"line_start":613,"line_end":613,"column_start":12,"column_end":14},"name":"xz","qualname":"<TypedVector3D<T, U>>::xz","value":"fn (&self) -> TypedVector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and z coordinates\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":284833,"byte_end":284842,"line_start":612,"line_end":612,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2361},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":285018,"byte_end":285020,"line_start":619,"line_end":619,"column_start":12,"column_end":14},"name":"yz","qualname":"<TypedVector3D<T, U>>::yz","value":"fn (&self) -> TypedVector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and z coordinates\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":284997,"byte_end":285006,"line_start":618,"line_end":618,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":285168,"byte_end":285175,"line_start":625,"line_end":625,"column_start":12,"column_end":19},"name":"x_typed","qualname":"<TypedVector3D<T, U>>::x_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.x as a Length carrying the unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":285147,"byte_end":285156,"line_start":624,"line_end":624,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2363},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":285315,"byte_end":285322,"line_start":631,"line_end":631,"column_start":12,"column_end":19},"name":"y_typed","qualname":"<TypedVector3D<T, U>>::y_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.y as a Length carrying the unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":285294,"byte_end":285303,"line_start":630,"line_end":630,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":285462,"byte_end":285469,"line_start":637,"line_end":637,"column_start":12,"column_end":19},"name":"z_typed","qualname":"<TypedVector3D<T, U>>::z_typed","value":"fn (&self) -> Length<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.z as a Length carrying the unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":285441,"byte_end":285450,"line_start":636,"line_end":636,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2365},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":285555,"byte_end":285563,"line_start":642,"line_end":642,"column_start":12,"column_end":20},"name":"to_array","qualname":"<TypedVector3D<T, U>>::to_array","value":"fn (&self) -> [T; 3]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":285534,"byte_end":285543,"line_start":641,"line_end":641,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2367},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":285648,"byte_end":285656,"line_start":647,"line_end":647,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<TypedVector3D<T, U>>::to_tuple","value":"fn (&self) -> (T, T, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":285627,"byte_end":285636,"line_start":646,"line_end":646,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":285803,"byte_end":285813,"line_start":653,"line_end":653,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<TypedVector3D<T, U>>::to_untyped","value":"fn (&self) -> Vector3D<T>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":285782,"byte_end":285791,"line_start":652,"line_end":652,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2369},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":285948,"byte_end":285960,"line_start":659,"line_end":659,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<TypedVector3D<T, U>>::from_untyped","value":"fn (p: &Vector3D<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":285927,"byte_end":285936,"line_start":658,"line_end":658,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2370},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":286082,"byte_end":286087,"line_start":665,"line_end":665,"column_start":12,"column_end":17},"name":"to_2d","qualname":"<TypedVector3D<T, U>>::to_2d","value":"fn (&self) -> TypedVector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 2d vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":286061,"byte_end":286070,"line_start":664,"line_end":664,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":286446,"byte_end":286458,"line_start":684,"line_end":684,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<TypedVector3D<T, U>>::to_transform","value":"fn (&self) -> TypedTransform3D<T, U, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":286425,"byte_end":286434,"line_start":683,"line_end":683,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2378},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":286726,"byte_end":286729,"line_start":693,"line_end":693,"column_start":12,"column_end":15},"name":"dot","qualname":"<TypedVector3D<T, U>>::dot","value":"fn (self, other: Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":286705,"byte_end":286714,"line_start":692,"line_end":692,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2379},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":286873,"byte_end":286878,"line_start":699,"line_end":699,"column_start":12,"column_end":17},"name":"cross","qualname":"<TypedVector3D<T, U>>::cross","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":286852,"byte_end":286861,"line_start":698,"line_end":698,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":287111,"byte_end":287120,"line_start":708,"line_end":708,"column_start":12,"column_end":21},"name":"normalize","qualname":"<TypedVector3D<T, U>>::normalize","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":287090,"byte_end":287099,"line_start":707,"line_end":707,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2381},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":287325,"byte_end":287341,"line_start":717,"line_end":717,"column_start":12,"column_end":28},"name":"robust_normalize","qualname":"<TypedVector3D<T, U>>::robust_normalize","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the normalized vector even if the length is larger than the max value of Float.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":287304,"byte_end":287313,"line_start":716,"line_end":716,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":287630,"byte_end":287643,"line_start":731,"line_end":731,"column_start":12,"column_end":25},"name":"square_length","qualname":"<TypedVector3D<T, U>>::square_length","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":287609,"byte_end":287618,"line_start":730,"line_end":730,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2383},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":287750,"byte_end":287756,"line_start":736,"line_end":736,"column_start":12,"column_end":18},"name":"length","qualname":"<TypedVector3D<T, U>>::length","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":287729,"byte_end":287738,"line_start":735,"line_end":735,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2387},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":288114,"byte_end":288118,"line_start":752,"line_end":752,"column_start":12,"column_end":16},"name":"lerp","qualname":"<TypedVector3D<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this vector and another vector.\n\n `t` is expected to be between zero and one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":288093,"byte_end":288102,"line_start":751,"line_end":751,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2432},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":290069,"byte_end":290072,"line_start":828,"line_end":828,"column_start":12,"column_end":15},"name":"min","qualname":"<TypedVector3D<T, U>>::min","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":290048,"byte_end":290057,"line_start":827,"line_end":827,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2433},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":290257,"byte_end":290260,"line_start":837,"line_end":837,"column_start":12,"column_end":15},"name":"max","qualname":"<TypedVector3D<T, U>>::max","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":290236,"byte_end":290245,"line_start":836,"line_end":836,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2434},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":290445,"byte_end":290450,"line_start":846,"line_end":846,"column_start":12,"column_end":17},"name":"clamp","qualname":"<TypedVector3D<T, U>>::clamp","value":"fn (&self, start: Self, end: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":290424,"byte_end":290433,"line_start":845,"line_end":845,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":291403,"byte_end":291408,"line_start":873,"line_end":873,"column_start":12,"column_end":17},"name":"round","qualname":"<TypedVector3D<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":291334,"byte_end":291343,"line_start":871,"line_end":871,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":291792,"byte_end":291796,"line_start":884,"line_end":884,"column_start":12,"column_end":16},"name":"ceil","qualname":"<TypedVector3D<T, U>>::ceil","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":291723,"byte_end":291732,"line_start":882,"line_end":882,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2458},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":292175,"byte_end":292180,"line_start":895,"line_end":895,"column_start":12,"column_end":17},"name":"floor","qualname":"<TypedVector3D<T, U>>::floor","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.\n\n This behavior is preserved for negative values (unlike the basic cast).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":292106,"byte_end":292115,"line_start":893,"line_end":893,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":292702,"byte_end":292706,"line_start":907,"line_end":907,"column_start":12,"column_end":16},"name":"cast","qualname":"<TypedVector3D<T, U>>::cast","value":"fn <NewT> (&self) -> TypedVector3D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n\n When casting from floating vector to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":292681,"byte_end":292690,"line_start":906,"line_end":906,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":293198,"byte_end":293206,"line_start":917,"line_end":917,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<TypedVector3D<T, U>>::try_cast","value":"fn <NewT> (&self) -> Option<TypedVector3D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n\n When casting from floating vector to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":293177,"byte_end":293186,"line_start":916,"line_end":916,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":293616,"byte_end":293622,"line_start":932,"line_end":932,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<TypedVector3D<T, U>>::to_f32","value":"fn (&self) -> TypedVector3D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":293595,"byte_end":293604,"line_start":931,"line_end":931,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":293744,"byte_end":293750,"line_start":938,"line_end":938,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<TypedVector3D<T, U>>::to_f64","value":"fn (&self) -> TypedVector3D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":293723,"byte_end":293732,"line_start":937,"line_end":937,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":294113,"byte_end":294121,"line_start":948,"line_end":948,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<TypedVector3D<T, U>>::to_usize","value":"fn (&self) -> TypedVector3D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` vector, truncating decimals if any.\n\n When casting from floating vector vectors, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":294092,"byte_end":294101,"line_start":947,"line_end":947,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":294484,"byte_end":294490,"line_start":958,"line_end":958,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<TypedVector3D<T, U>>::to_u32","value":"fn (&self) -> TypedVector3D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` vector, truncating decimals if any.\n\n When casting from floating vector vectors, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":294463,"byte_end":294472,"line_start":957,"line_end":957,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":294851,"byte_end":294857,"line_start":968,"line_end":968,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<TypedVector3D<T, U>>::to_i32","value":"fn (&self) -> TypedVector3D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` vector, truncating decimals if any.\n\n When casting from floating vector vectors, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":294830,"byte_end":294839,"line_start":967,"line_end":967,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":295218,"byte_end":295224,"line_start":978,"line_end":978,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<TypedVector3D<T, U>>::to_i64","value":"fn (&self) -> TypedVector3D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` vector, truncating decimals if any.\n\n When casting from floating vector vectors, it is worth considering whether\n to `round()`, `ceil()` or `floor()` before the cast in order to obtain\n the desired conversion behavior.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":295197,"byte_end":295206,"line_start":977,"line_end":977,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296549,"byte_end":296552,"line_start":1033,"line_end":1033,"column_start":12,"column_end":15},"name":"abs","qualname":"<TypedVector3D<T, U>>::abs","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3345},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296696,"byte_end":296708,"line_start":1039,"line_end":1039,"column_start":12,"column_end":24},"name":"BoolVector2D","qualname":"::vector::BoolVector2D","value":"BoolVector2D { x, y }","parent":null,"children":[{"krate":0,"index":3346},{"krate":0,"index":3347}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3346},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296719,"byte_end":296720,"line_start":1040,"line_end":1040,"column_start":9,"column_end":10},"name":"x","qualname":"::vector::BoolVector2D::x","value":"bool","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3347},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296736,"byte_end":296737,"line_start":1041,"line_end":1041,"column_start":9,"column_end":10},"name":"y","qualname":"::vector::BoolVector2D::y","value":"bool","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3363},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296810,"byte_end":296822,"line_start":1045,"line_end":1045,"column_start":12,"column_end":24},"name":"BoolVector3D","qualname":"::vector::BoolVector3D","value":"BoolVector3D { x, y, z }","parent":null,"children":[{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3364},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296833,"byte_end":296834,"line_start":1046,"line_end":1046,"column_start":9,"column_end":10},"name":"x","qualname":"::vector::BoolVector3D::x","value":"bool","parent":{"krate":0,"index":3363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3365},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296850,"byte_end":296851,"line_start":1047,"line_end":1047,"column_start":9,"column_end":10},"name":"y","qualname":"::vector::BoolVector3D::y","value":"bool","parent":{"krate":0,"index":3363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3366},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296867,"byte_end":296868,"line_start":1048,"line_end":1048,"column_start":9,"column_end":10},"name":"z","qualname":"::vector::BoolVector3D::z","value":"bool","parent":{"krate":0,"index":3363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296924,"byte_end":296927,"line_start":1053,"line_end":1053,"column_start":12,"column_end":15},"name":"all","qualname":"<BoolVector2D>::all","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296903,"byte_end":296912,"line_start":1052,"line_end":1052,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":297002,"byte_end":297005,"line_start":1058,"line_end":1058,"column_start":12,"column_end":15},"name":"any","qualname":"<BoolVector2D>::any","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296981,"byte_end":296990,"line_start":1057,"line_end":1057,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":297080,"byte_end":297084,"line_start":1063,"line_end":1063,"column_start":12,"column_end":16},"name":"none","qualname":"<BoolVector2D>::none","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":297059,"byte_end":297068,"line_start":1062,"line_end":1062,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":297154,"byte_end":297157,"line_start":1068,"line_end":1068,"column_start":12,"column_end":15},"name":"and","qualname":"<BoolVector2D>::and","value":"fn (&self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":297133,"byte_end":297142,"line_start":1067,"line_end":1067,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2507},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":297321,"byte_end":297323,"line_start":1076,"line_end":1076,"column_start":12,"column_end":14},"name":"or","qualname":"<BoolVector2D>::or","value":"fn (&self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":297300,"byte_end":297309,"line_start":1075,"line_end":1075,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2508},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":297487,"byte_end":297490,"line_start":1084,"line_end":1084,"column_start":12,"column_end":15},"name":"not","qualname":"<BoolVector2D>::not","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":297466,"byte_end":297475,"line_start":1083,"line_end":1083,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":297621,"byte_end":297633,"line_start":1092,"line_end":1092,"column_start":12,"column_end":24},"name":"select_point","qualname":"<BoolVector2D>::select_point","value":"fn <T, U> (&self, a: &TypedPoint2D<T, U>, b: &TypedPoint2D<T, U>) -> TypedPoint2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":297600,"byte_end":297609,"line_start":1091,"line_end":1091,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":297871,"byte_end":297884,"line_start":1100,"line_end":1100,"column_start":12,"column_end":25},"name":"select_vector","qualname":"<BoolVector2D>::select_vector","value":"fn <T, U> (&self, a: &TypedVector2D<T, U>, b: &TypedVector2D<T, U>) -> TypedVector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":297850,"byte_end":297859,"line_start":1099,"line_end":1099,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":298123,"byte_end":298134,"line_start":1108,"line_end":1108,"column_start":12,"column_end":23},"name":"select_size","qualname":"<BoolVector2D>::select_size","value":"fn <T, U> (&self, a: &TypedSize2D<T, U>, b: &TypedSize2D<T, U>) -> TypedSize2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":298102,"byte_end":298111,"line_start":1107,"line_end":1107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":298408,"byte_end":298411,"line_start":1118,"line_end":1118,"column_start":12,"column_end":15},"name":"all","qualname":"<BoolVector3D>::all","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":298387,"byte_end":298396,"line_start":1117,"line_end":1117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":298496,"byte_end":298499,"line_start":1123,"line_end":1123,"column_start":12,"column_end":15},"name":"any","qualname":"<BoolVector3D>::any","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":298475,"byte_end":298484,"line_start":1122,"line_end":1122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":298584,"byte_end":298588,"line_start":1128,"line_end":1128,"column_start":12,"column_end":16},"name":"none","qualname":"<BoolVector3D>::none","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":298563,"byte_end":298572,"line_start":1127,"line_end":1127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2522},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":298658,"byte_end":298661,"line_start":1133,"line_end":1133,"column_start":12,"column_end":15},"name":"and","qualname":"<BoolVector3D>::and","value":"fn (&self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":298637,"byte_end":298646,"line_start":1132,"line_end":1132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":298859,"byte_end":298861,"line_start":1142,"line_end":1142,"column_start":12,"column_end":14},"name":"or","qualname":"<BoolVector3D>::or","value":"fn (&self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":298838,"byte_end":298847,"line_start":1141,"line_end":1141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":299059,"byte_end":299062,"line_start":1151,"line_end":1151,"column_start":12,"column_end":15},"name":"not","qualname":"<BoolVector3D>::not","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":299038,"byte_end":299047,"line_start":1150,"line_end":1150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":299218,"byte_end":299230,"line_start":1161,"line_end":1161,"column_start":12,"column_end":24},"name":"select_point","qualname":"<BoolVector3D>::select_point","value":"fn <T, U> (&self, a: &TypedPoint3D<T, U>, b: &TypedPoint3D<T, U>) -> TypedPoint3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":299197,"byte_end":299206,"line_start":1160,"line_end":1160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":299512,"byte_end":299525,"line_start":1170,"line_end":1170,"column_start":12,"column_end":25},"name":"select_vector","qualname":"<BoolVector3D>::select_vector","value":"fn <T, U> (&self, a: &TypedVector3D<T, U>, b: &TypedVector3D<T, U>) -> TypedVector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":299491,"byte_end":299500,"line_start":1169,"line_end":1169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":299808,"byte_end":299810,"line_start":1179,"line_end":1179,"column_start":12,"column_end":14},"name":"xy","qualname":"<BoolVector3D>::xy","value":"fn (&self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":299787,"byte_end":299796,"line_start":1178,"line_end":1178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":299947,"byte_end":299949,"line_start":1187,"line_end":1187,"column_start":12,"column_end":14},"name":"xz","qualname":"<BoolVector3D>::xz","value":"fn (&self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":299926,"byte_end":299935,"line_start":1186,"line_end":1186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":300086,"byte_end":300088,"line_start":1195,"line_end":1195,"column_start":12,"column_end":14},"name":"yz","qualname":"<BoolVector3D>::yz","value":"fn (&self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":300065,"byte_end":300074,"line_start":1194,"line_end":1194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":300258,"byte_end":300270,"line_start":1204,"line_end":1204,"column_start":12,"column_end":24},"name":"greater_than","qualname":"<TypedVector2D<T, U>>::greater_than","value":"fn (&self, other: &Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":300427,"byte_end":300437,"line_start":1211,"line_end":1211,"column_start":12,"column_end":22},"name":"lower_than","qualname":"<TypedVector2D<T, U>>::lower_than","value":"fn (&self, other: &Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":300641,"byte_end":300646,"line_start":1221,"line_end":1221,"column_start":12,"column_end":17},"name":"equal","qualname":"<TypedVector2D<T, U>>::equal","value":"fn (&self, other: &Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":300805,"byte_end":300814,"line_start":1228,"line_end":1228,"column_start":12,"column_end":21},"name":"not_equal","qualname":"<TypedVector2D<T, U>>::not_equal","value":"fn (&self, other: &Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2547},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":301020,"byte_end":301032,"line_start":1237,"line_end":1237,"column_start":12,"column_end":24},"name":"greater_than","qualname":"<TypedVector3D<T, U>>::greater_than","value":"fn (&self, other: &Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2548},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":301222,"byte_end":301232,"line_start":1245,"line_end":1245,"column_start":12,"column_end":22},"name":"lower_than","qualname":"<TypedVector3D<T, U>>::lower_than","value":"fn (&self, other: &Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2552},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":301469,"byte_end":301474,"line_start":1256,"line_end":1256,"column_start":12,"column_end":17},"name":"equal","qualname":"<TypedVector3D<T, U>>::equal","value":"fn (&self, other: &Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":301667,"byte_end":301676,"line_start":1264,"line_end":1264,"column_start":12,"column_end":21},"name":"not_equal","qualname":"<TypedVector3D<T, U>>::not_equal","value":"fn (&self, other: &Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2554},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":301906,"byte_end":301910,"line_start":1275,"line_end":1275,"column_start":8,"column_end":12},"name":"vec2","qualname":"::vector::vec2","value":"fn <T, U> (x: T, y: T) -> TypedVector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convenience constructor.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":301889,"byte_end":301898,"line_start":1274,"line_end":1274,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2557},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":302032,"byte_end":302036,"line_start":1281,"line_end":1281,"column_start":8,"column_end":12},"name":"vec3","qualname":"::vector::vec3","value":"fn <T, U> (x: T, y: T, z: T) -> TypedVector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convenience constructor.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":302015,"byte_end":302024,"line_start":1280,"line_end":1280,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2560},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":302138,"byte_end":302143,"line_start":1286,"line_end":1286,"column_start":8,"column_end":13},"name":"bvec2","qualname":"::vector::bvec2","value":"fn (x: bool, y: bool) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":302121,"byte_end":302130,"line_start":1285,"line_end":1285,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2561},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":302226,"byte_end":302231,"line_start":1291,"line_end":1291,"column_start":8,"column_end":13},"name":"bvec3","qualname":"::vector::bvec3","value":"fn (x: bool, y: bool, z: bool) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":302209,"byte_end":302218,"line_start":1290,"line_end":1290,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":2585},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":312489,"byte_end":312499,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"TypedBox3D","qualname":"::box3d::TypedBox3D","value":"TypedBox3D { min, max }","parent":null,"children":[{"krate":0,"index":2588},{"krate":0,"index":2589}],"decl_id":null,"docs":" An axis aligned 3D box represented by its minimum and maximum coordinates.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":312294,"byte_end":312304,"line_start":31,"line_end":31,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2588},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":312516,"byte_end":312519,"line_start":35,"line_end":35,"column_start":9,"column_end":12},"name":"min","qualname":"::box3d::TypedBox3D::min","value":"point::TypedPoint3D<T, U>","parent":{"krate":0,"index":2585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2589},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":312550,"byte_end":312553,"line_start":36,"line_end":36,"column_start":9,"column_end":12},"name":"max","qualname":"::box3d::TypedBox3D::max","value":"point::TypedPoint3D<T, U>","parent":{"krate":0,"index":2585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2590},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":312629,"byte_end":312634,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Box3D","qualname":"::box3d::Box3D","value":"TypedBox3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" The default box 3d type with no unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2622},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":313640,"byte_end":313643,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedBox3D<T, U>>::new","value":"fn (min: TypedPoint3D<T, U>, max: TypedPoint3D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2626},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":313931,"byte_end":313940,"line_start":93,"line_end":93,"column_start":12,"column_end":21},"name":"from_size","qualname":"<TypedBox3D<T, U>>::from_size","value":"fn (size: TypedSize3D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Box3D of the given size, at offset zero.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":313910,"byte_end":313919,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2630},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":314446,"byte_end":314457,"line_start":109,"line_end":109,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<TypedBox3D<T, U>>::is_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the box has a negative volume.\n\n The common interpretation for a negative box is to consider it empty. It can be obtained\n by calculating the intersection of two boxes that do not intersect.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":314425,"byte_end":314434,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":314647,"byte_end":314667,"line_start":115,"line_end":115,"column_start":12,"column_end":32},"name":"is_empty_or_negative","qualname":"<TypedBox3D<T, U>>::is_empty_or_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the size is zero or negative.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":314626,"byte_end":314635,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":314807,"byte_end":314817,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"intersects","qualname":"<TypedBox3D<T, U>>::intersects","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":314786,"byte_end":314795,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2633},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":315114,"byte_end":315130,"line_start":131,"line_end":131,"column_start":12,"column_end":28},"name":"try_intersection","qualname":"<TypedBox3D<T, U>>::try_intersection","value":"fn (&self, other: &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":315093,"byte_end":315102,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":315300,"byte_end":315312,"line_start":139,"line_end":139,"column_start":12,"column_end":24},"name":"intersection","qualname":"<TypedBox3D<T, U>>::intersection","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":316024,"byte_end":316033,"line_start":166,"line_end":166,"column_start":12,"column_end":21},"name":"translate","qualname":"<TypedBox3D<T, U>>::translate","value":"fn (&self, by: &TypedVector3D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the same box3d, translated by a vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":315955,"byte_end":315964,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":316441,"byte_end":316449,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"contains","qualname":"<TypedBox3D<T, U>>::contains","value":"fn (&self, other: &TypedPoint3D<T, U>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this box3d contains the point. Points are considered\n in the box3d if they are on the front, left or top faces, but outside if they\n are on the back, right or bottom faces.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":316420,"byte_end":316429,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":316998,"byte_end":317010,"line_start":194,"line_end":194,"column_start":12,"column_end":24},"name":"contains_box","qualname":"<TypedBox3D<T, U>>::contains_box","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this box3d contains the interior of the other box3d. Always\n returns true if other is empty, and always returns false if other is\n nonempty but this box3d is empty.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":316977,"byte_end":316986,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2650},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":317403,"byte_end":317407,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"size","qualname":"<TypedBox3D<T, U>>::size","value":"fn (&self) -> TypedSize3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":317382,"byte_end":317391,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2654},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":317844,"byte_end":317851,"line_start":223,"line_end":223,"column_start":12,"column_end":19},"name":"inflate","qualname":"<TypedBox3D<T, U>>::inflate","value":"fn (&self, width: T, height: T, depth: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inflates the box by the specified sizes on each side respectively.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":317775,"byte_end":317784,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":318199,"byte_end":318212,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"inflate_typed","qualname":"<TypedBox3D<T, U>>::inflate_typed","value":"fn (&self, width: Length<T, U>, height: Length<T, U>, depth: Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":318130,"byte_end":318139,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":318516,"byte_end":318527,"line_start":242,"line_end":242,"column_start":12,"column_end":23},"name":"from_points","qualname":"<TypedBox3D<T, U>>::from_points","value":"fn <I> (points: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest box containing all of the provided points.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2665},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":320307,"byte_end":320311,"line_start":301,"line_end":301,"column_start":12,"column_end":16},"name":"lerp","qualname":"<TypedBox3D<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this box3d and another box3d.\n\n `t` is expected to be between zero and one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":320286,"byte_end":320295,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2669},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":320570,"byte_end":320576,"line_start":313,"line_end":313,"column_start":12,"column_end":18},"name":"center","qualname":"<TypedBox3D<T, U>>::center","value":"fn (&self) -> TypedPoint3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":320848,"byte_end":320853,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"union","qualname":"<TypedBox3D<T, U>>::union","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":320827,"byte_end":320836,"line_start":323,"line_end":323,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":321371,"byte_end":321376,"line_start":345,"line_end":345,"column_start":12,"column_end":17},"name":"scale","qualname":"<TypedBox3D<T, U>>::scale","value":"fn <S> (&self, x: S, y: S, z: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":321350,"byte_end":321359,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":321783,"byte_end":321789,"line_start":361,"line_end":361,"column_start":12,"column_end":18},"name":"volume","qualname":"<TypedBox3D<T, U>>::volume","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":321762,"byte_end":321771,"line_start":360,"line_end":360,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2683},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":321914,"byte_end":321921,"line_start":367,"line_end":367,"column_start":12,"column_end":19},"name":"xy_area","qualname":"<TypedBox3D<T, U>>::xy_area","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":321893,"byte_end":321902,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2684},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":322033,"byte_end":322040,"line_start":373,"line_end":373,"column_start":12,"column_end":19},"name":"yz_area","qualname":"<TypedBox3D<T, U>>::yz_area","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":322012,"byte_end":322021,"line_start":372,"line_end":372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2685},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":322152,"byte_end":322159,"line_start":379,"line_end":379,"column_start":12,"column_end":19},"name":"xz_area","qualname":"<TypedBox3D<T, U>>::xz_area","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":322131,"byte_end":322140,"line_start":378,"line_end":378,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2689},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":322363,"byte_end":322367,"line_start":390,"line_end":390,"column_start":12,"column_end":16},"name":"zero","qualname":"<TypedBox3D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all sides to zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2693},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":322580,"byte_end":322588,"line_start":401,"line_end":401,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<TypedBox3D<T, U>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the volume is zero.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":322559,"byte_end":322568,"line_start":400,"line_end":400,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2719},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":323878,"byte_end":323888,"line_start":455,"line_end":455,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<TypedBox3D<T, Unit>>::to_untyped","value":"fn (&self) -> Box3D<T>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":324039,"byte_end":324051,"line_start":460,"line_end":460,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<TypedBox3D<T, Unit>>::from_untyped","value":"fn (c: &Box3D<T>) -> TypedBox3D<T, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2724},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":324670,"byte_end":324674,"line_start":477,"line_end":477,"column_start":12,"column_end":16},"name":"cast","qualname":"<TypedBox3D<T0, Unit>>::cast","value":"fn <T1> (&self) -> TypedBox3D<T1, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n\n When casting from floating point to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using round(), round_in or round_out() before casting.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":325207,"byte_end":325215,"line_start":489,"line_end":489,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<TypedBox3D<T0, Unit>>::try_cast","value":"fn <T1> (&self) -> Option<TypedBox3D<T1, Unit>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n\n When casting from floating point to integer coordinates, the decimals are truncated\n as one would expect from a simple cast, but this behavior does not always make sense\n geometrically. Consider using round(), round_in or round_out() before casting.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":326076,"byte_end":326081,"line_start":511,"line_end":511,"column_start":12,"column_end":17},"name":"round","qualname":"<TypedBox3D<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box3d with edges rounded to integer coordinates, such that\n the returned box3d has the same set of pixel centers as the original\n one.\n Values equal to 0.5 round up.\n Suitable for most places where integral device coordinates\n are needed, but note that any translation should be applied first to\n avoid pixel rounding errors.\n Note that this is *not* rounding to nearest integer if the values are negative.\n They are always rounding as floor(n + 0.5).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2735},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":326424,"byte_end":326432,"line_start":523,"line_end":523,"column_start":12,"column_end":20},"name":"round_in","qualname":"<TypedBox3D<T, U>>::round_in","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box3d with faces/edges rounded to integer coordinates, such that\n the original box3d contains the resulting box3d.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":326762,"byte_end":326771,"line_start":533,"line_end":533,"column_start":12,"column_end":21},"name":"round_out","qualname":"<TypedBox3D<T, U>>::round_out","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box3d with faces/edges rounded to integer coordinates, such that\n the original box3d is contained in the resulting box3d.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":327037,"byte_end":327043,"line_start":544,"line_end":544,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<TypedBox3D<T, Unit>>::to_f32","value":"fn (&self) -> TypedBox3D<f32, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` box3d.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":327150,"byte_end":327156,"line_start":549,"line_end":549,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<TypedBox3D<T, Unit>>::to_f64","value":"fn (&self) -> TypedBox3D<f64, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` box3d.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":327511,"byte_end":327519,"line_start":558,"line_end":558,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<TypedBox3D<T, Unit>>::to_usize","value":"fn (&self) -> TypedBox3D<usize, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` box3d, truncating decimals if any.\n\n When casting from floating point cuboids, it is worth considering whether\n to `round()`, `round_in()` or `round_out()` before the cast in order to\n obtain the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2743},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":327874,"byte_end":327880,"line_start":567,"line_end":567,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<TypedBox3D<T, Unit>>::to_u32","value":"fn (&self) -> TypedBox3D<u32, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` box3d, truncating decimals if any.\n\n When casting from floating point cuboids, it is worth considering whether\n to `round()`, `round_in()` or `round_out()` before the cast in order to\n obtain the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":328233,"byte_end":328239,"line_start":576,"line_end":576,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<TypedBox3D<T, Unit>>::to_i32","value":"fn (&self) -> TypedBox3D<i32, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` box3d, truncating decimals if any.\n\n When casting from floating point cuboids, it is worth considering whether\n to `round()`, `round_in()` or `round_out()` before the cast in order to\n obtain the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":328592,"byte_end":328598,"line_start":585,"line_end":585,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<TypedBox3D<T, Unit>>::to_i64","value":"fn (&self) -> TypedBox3D<i64, Unit>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` box3d, truncating decimals if any.\n\n When casting from floating point cuboids, it is worth considering whether\n to `round()`, `round_in()` or `round_out()` before the cast in order to\n obtain the desired conversion behavior.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2750},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":328946,"byte_end":328951,"line_start":600,"line_end":600,"column_start":8,"column_end":13},"name":"box3d","qualname":"::box3d::box3d","value":"fn <T, U> (min_x: T, min_y: T, min_z: T, max_x: T, max_y: T, max_z: T) -> TypedBox3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `TypedBox3D::new(TypedPoint3D::new(x1, y1, z1), TypedPoint3D::new(x2, y2, z2))`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3382},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":4028,"byte_end":4039,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"UnknownUnit","qualname":"::UnknownUnit","value":"","parent":null,"children":[],"decl_id":null,"docs":" The default unit.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2753},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":4139,"byte_end":4147,"line_start":121,"line_end":121,"column_start":10,"column_end":18},"name":"Matrix2D","qualname":"::Matrix2D","value":"Transform2D<T>","parent":null,"children":[],"decl_id":null,"docs":" Temporary alias to facilitate the transition to the new naming scheme\n","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":4116,"byte_end":4129,"line_start":120,"line_end":120,"column_start":1,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":2755},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":4267,"byte_end":4280,"line_start":125,"line_end":125,"column_start":10,"column_end":23},"name":"TypedMatrix2D","qualname":"::TypedMatrix2D","value":"TypedTransform2D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Temporary alias to facilitate the transition to the new naming scheme\n","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":4244,"byte_end":4257,"line_start":124,"line_end":124,"column_start":1,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":2759},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":4425,"byte_end":4433,"line_start":129,"line_end":129,"column_start":10,"column_end":18},"name":"Matrix4D","qualname":"::Matrix4D","value":"Transform3D<T>","parent":null,"children":[],"decl_id":null,"docs":" Temporary alias to facilitate the transition to the new naming scheme\n","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":4402,"byte_end":4415,"line_start":128,"line_end":128,"column_start":1,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":2761},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":4553,"byte_end":4566,"line_start":133,"line_end":133,"column_start":10,"column_end":23},"name":"TypedMatrix4D","qualname":"::TypedMatrix4D","value":"TypedTransform3D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Temporary alias to facilitate the transition to the new naming scheme\n","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":4530,"byte_end":4543,"line_start":132,"line_end":132,"column_start":1,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":2765},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":4711,"byte_end":4722,"line_start":137,"line_end":137,"column_start":10,"column_end":21},"name":"ScaleFactor","qualname":"::ScaleFactor","value":"TypedScale<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Temporary alias to facilitate the transition to the new naming scheme\n","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":4688,"byte_end":4701,"line_start":136,"line_end":136,"column_start":1,"column_end":14}}]}],"impls":[{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":9608,"byte_end":9618,"line_start":43,"line_end":43,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":9757,"byte_end":9767,"line_start":50,"line_end":50,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":9805,"byte_end":9815,"line_start":52,"line_end":52,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":9931,"byte_end":9941,"line_start":58,"line_end":58,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":10081,"byte_end":10091,"line_start":64,"line_end":64,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":10140,"byte_end":10150,"line_start":66,"line_end":66,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":10333,"byte_end":10343,"line_start":72,"line_end":72,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":10502,"byte_end":10512,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":10702,"byte_end":10712,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":11047,"byte_end":11057,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":12761,"byte_end":12771,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":13022,"byte_end":13032,"line_start":170,"line_end":170,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":13481,"byte_end":13491,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":14029,"byte_end":14039,"line_start":199,"line_end":199,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":14366,"byte_end":14376,"line_start":217,"line_end":217,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":14835,"byte_end":14845,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":15774,"byte_end":15784,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":17232,"byte_end":17242,"line_start":312,"line_end":312,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":17650,"byte_end":17660,"line_start":328,"line_end":328,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":17886,"byte_end":17896,"line_start":338,"line_end":338,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":18314,"byte_end":18324,"line_start":357,"line_end":357,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":18630,"byte_end":18640,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":18839,"byte_end":18849,"line_start":384,"line_end":384,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":19048,"byte_end":19058,"line_start":394,"line_end":394,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":19276,"byte_end":19286,"line_start":405,"line_end":405,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":19501,"byte_end":19511,"line_start":416,"line_end":416,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":19751,"byte_end":19761,"line_start":427,"line_end":427,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":20048,"byte_end":20058,"line_start":438,"line_end":438,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":20312,"byte_end":20322,"line_start":449,"line_end":449,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":20791,"byte_end":20801,"line_start":467,"line_end":467,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":21996,"byte_end":22006,"line_start":496,"line_end":496,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":22718,"byte_end":22728,"line_start":515,"line_end":515,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":23502,"byte_end":23512,"line_start":539,"line_end":539,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":25213,"byte_end":25223,"line_start":587,"line_end":587,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":32553,"byte_end":32570,"line_start":33,"line_end":33,"column_start":12,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":32820,"byte_end":32837,"line_start":42,"line_end":42,"column_start":57,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":33606,"byte_end":33623,"line_start":68,"line_end":68,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":33811,"byte_end":33828,"line_start":75,"line_end":75,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":34015,"byte_end":34032,"line_start":82,"line_end":82,"column_start":53,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":34216,"byte_end":34233,"line_start":89,"line_end":89,"column_start":46,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":34404,"byte_end":34421,"line_start":96,"line_end":96,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":34615,"byte_end":34632,"line_start":102,"line_end":102,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":35977,"byte_end":35978,"line_start":17,"line_end":17,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":36118,"byte_end":36119,"line_start":27,"line_end":27,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":38884,"byte_end":38890,"line_start":40,"line_end":40,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":39014,"byte_end":39020,"line_start":46,"line_end":46,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":39646,"byte_end":39652,"line_start":77,"line_end":77,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":39756,"byte_end":39762,"line_start":83,"line_end":83,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":39881,"byte_end":39887,"line_start":89,"line_end":89,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":40040,"byte_end":40046,"line_start":95,"line_end":95,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":40215,"byte_end":40221,"line_start":102,"line_end":102,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":40440,"byte_end":40446,"line_start":110,"line_end":110,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":40627,"byte_end":40633,"line_start":117,"line_end":117,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":40861,"byte_end":40867,"line_start":125,"line_end":125,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":41065,"byte_end":41071,"line_start":132,"line_end":132,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":41439,"byte_end":41445,"line_start":143,"line_end":143,"column_start":71,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":41709,"byte_end":41715,"line_start":152,"line_end":152,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":41923,"byte_end":41929,"line_start":161,"line_end":161,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":42100,"byte_end":42106,"line_start":169,"line_end":169,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":42314,"byte_end":42320,"line_start":178,"line_end":178,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":42526,"byte_end":42532,"line_start":186,"line_end":186,"column_start":80,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":42818,"byte_end":42824,"line_start":195,"line_end":195,"column_start":80,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":43062,"byte_end":43068,"line_start":204,"line_end":204,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":43232,"byte_end":43238,"line_start":212,"line_end":212,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":43709,"byte_end":43715,"line_start":224,"line_end":224,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":43862,"byte_end":43868,"line_start":230,"line_end":230,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":44029,"byte_end":44035,"line_start":236,"line_end":236,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":44084,"byte_end":44090,"line_start":238,"line_end":238,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":44223,"byte_end":44229,"line_start":244,"line_end":244,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":44319,"byte_end":44325,"line_start":250,"line_end":250,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":52950,"byte_end":52962,"line_start":41,"line_end":41,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":53377,"byte_end":53389,"line_start":60,"line_end":60,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":53557,"byte_end":53569,"line_start":66,"line_end":66,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":53739,"byte_end":53751,"line_start":72,"line_end":72,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":53873,"byte_end":53885,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":54117,"byte_end":54129,"line_start":90,"line_end":90,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":55622,"byte_end":55634,"line_start":152,"line_end":152,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":55855,"byte_end":55867,"line_start":159,"line_end":159,"column_start":66,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":56109,"byte_end":56121,"line_start":167,"line_end":167,"column_start":74,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":56315,"byte_end":56327,"line_start":174,"line_end":174,"column_start":74,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":56515,"byte_end":56527,"line_start":181,"line_end":181,"column_start":68,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":56735,"byte_end":56747,"line_start":189,"line_end":189,"column_start":47,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":56989,"byte_end":57001,"line_start":197,"line_end":197,"column_start":68,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":57181,"byte_end":57193,"line_start":205,"line_end":205,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":57609,"byte_end":57621,"line_start":222,"line_end":222,"column_start":50,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":57816,"byte_end":57828,"line_start":230,"line_end":230,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":57980,"byte_end":57992,"line_start":237,"line_end":237,"column_start":50,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":58187,"byte_end":58199,"line_start":245,"line_end":245,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":58376,"byte_end":58388,"line_start":252,"line_end":252,"column_start":75,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":58665,"byte_end":58677,"line_start":260,"line_end":260,"column_start":75,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":58898,"byte_end":58910,"line_start":268,"line_end":268,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":59299,"byte_end":59311,"line_start":280,"line_end":280,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":59732,"byte_end":59744,"line_start":292,"line_end":292,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":60177,"byte_end":60189,"line_start":304,"line_end":304,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":63058,"byte_end":63070,"line_start":382,"line_end":382,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":63533,"byte_end":63545,"line_start":396,"line_end":396,"column_start":65,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64010,"byte_end":64022,"line_start":413,"line_end":413,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64128,"byte_end":64140,"line_start":419,"line_end":419,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64264,"byte_end":64276,"line_start":425,"line_end":425,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64382,"byte_end":64394,"line_start":431,"line_end":431,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64903,"byte_end":64915,"line_start":455,"line_end":455,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":65182,"byte_end":65194,"line_start":468,"line_end":468,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":65438,"byte_end":65450,"line_start":480,"line_end":480,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":65964,"byte_end":65976,"line_start":498,"line_end":498,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":66157,"byte_end":66169,"line_start":504,"line_end":504,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":66341,"byte_end":66353,"line_start":510,"line_end":510,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":66501,"byte_end":66513,"line_start":516,"line_end":516,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":68762,"byte_end":68774,"line_start":607,"line_end":607,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":69025,"byte_end":69037,"line_start":614,"line_end":614,"column_start":74,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":69231,"byte_end":69243,"line_start":621,"line_end":621,"column_start":74,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":69431,"byte_end":69443,"line_start":628,"line_end":628,"column_start":68,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":69669,"byte_end":69681,"line_start":636,"line_end":636,"column_start":47,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":69941,"byte_end":69953,"line_start":644,"line_end":644,"column_start":68,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":70182,"byte_end":70194,"line_start":652,"line_end":652,"column_start":50,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":70424,"byte_end":70436,"line_start":660,"line_end":660,"column_start":75,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":70710,"byte_end":70722,"line_start":668,"line_end":668,"column_start":50,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":70952,"byte_end":70964,"line_start":676,"line_end":676,"column_start":75,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":71207,"byte_end":71219,"line_start":684,"line_end":684,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":71740,"byte_end":71752,"line_start":709,"line_end":709,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":72094,"byte_end":72106,"line_start":720,"line_end":720,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":72481,"byte_end":72493,"line_start":731,"line_end":731,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":72878,"byte_end":72890,"line_start":742,"line_end":742,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":75912,"byte_end":75924,"line_start":825,"line_end":825,"column_start":65,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":76541,"byte_end":76553,"line_start":847,"line_end":847,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":76659,"byte_end":76671,"line_start":853,"line_end":853,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":76808,"byte_end":76820,"line_start":859,"line_end":859,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":76932,"byte_end":76944,"line_start":865,"line_end":865,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":82853,"byte_end":82862,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":83005,"byte_end":83014,"line_start":70,"line_end":70,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":83052,"byte_end":83061,"line_start":72,"line_end":72,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":83176,"byte_end":83185,"line_start":78,"line_end":78,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":83333,"byte_end":83342,"line_start":84,"line_end":84,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":83391,"byte_end":83400,"line_start":86,"line_end":86,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":83588,"byte_end":83597,"line_start":92,"line_end":92,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":83782,"byte_end":83791,"line_start":98,"line_end":98,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":83910,"byte_end":83919,"line_start":104,"line_end":104,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":84115,"byte_end":84124,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":84382,"byte_end":84391,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":91618,"byte_end":91627,"line_start":361,"line_end":361,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":92055,"byte_end":92064,"line_start":377,"line_end":377,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":92292,"byte_end":92301,"line_start":387,"line_end":387,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":93055,"byte_end":93064,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":93433,"byte_end":93442,"line_start":428,"line_end":428,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":93565,"byte_end":93574,"line_start":435,"line_end":435,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":93981,"byte_end":93990,"line_start":447,"line_end":447,"column_start":50,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":94195,"byte_end":94204,"line_start":455,"line_end":455,"column_start":50,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":967},{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":94434,"byte_end":94443,"line_start":463,"line_end":463,"column_start":75,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":94718,"byte_end":94727,"line_start":471,"line_end":471,"column_start":75,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":94948,"byte_end":94957,"line_start":479,"line_end":479,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":95425,"byte_end":95434,"line_start":494,"line_end":494,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":96683,"byte_end":96692,"line_start":520,"line_end":520,"column_start":76,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":98408,"byte_end":98417,"line_start":557,"line_end":557,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":100168,"byte_end":100177,"line_start":605,"line_end":605,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":110374,"byte_end":110395,"line_start":28,"line_end":28,"column_start":40,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":115001,"byte_end":115022,"line_start":177,"line_end":177,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":115212,"byte_end":115233,"line_start":185,"line_end":185,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":118852,"byte_end":118857,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":119031,"byte_end":119036,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":119304,"byte_end":119309,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":119848,"byte_end":119853,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":120004,"byte_end":120009,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":120113,"byte_end":120118,"line_start":94,"line_end":94,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":120594,"byte_end":120599,"line_start":119,"line_end":119,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":120787,"byte_end":120792,"line_start":126,"line_end":126,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":120948,"byte_end":120953,"line_start":132,"line_end":132,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":121154,"byte_end":121159,"line_start":139,"line_end":139,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":121315,"byte_end":121320,"line_start":145,"line_end":145,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1128},{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":121495,"byte_end":121500,"line_start":153,"line_end":153,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":121692,"byte_end":121697,"line_start":161,"line_end":161,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":121833,"byte_end":121838,"line_start":167,"line_end":167,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":122030,"byte_end":122035,"line_start":175,"line_end":175,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":122157,"byte_end":122162,"line_start":181,"line_end":181,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":122650,"byte_end":122665,"line_start":200,"line_end":200,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":123162,"byte_end":123177,"line_start":224,"line_end":224,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":123384,"byte_end":123399,"line_start":234,"line_end":234,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":125382,"byte_end":125397,"line_start":296,"line_end":296,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":126878,"byte_end":126893,"line_start":343,"line_end":343,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":127509,"byte_end":127524,"line_start":363,"line_end":363,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":127746,"byte_end":127761,"line_start":374,"line_end":374,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":137920,"byte_end":137935,"line_start":704,"line_end":704,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":138205,"byte_end":138220,"line_start":714,"line_end":714,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":138467,"byte_end":138482,"line_start":724,"line_end":724,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":151079,"byte_end":151089,"line_start":72,"line_end":72,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":151205,"byte_end":151215,"line_start":78,"line_end":78,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":151307,"byte_end":151317,"line_start":84,"line_end":84,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":151531,"byte_end":151541,"line_start":89,"line_end":89,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":151830,"byte_end":151840,"line_start":98,"line_end":98,"column_start":75,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":152107,"byte_end":152117,"line_start":107,"line_end":107,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":152400,"byte_end":152410,"line_start":116,"line_end":116,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1297},{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":152656,"byte_end":152666,"line_start":124,"line_end":124,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":153134,"byte_end":153144,"line_start":136,"line_end":136,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":154724,"byte_end":154734,"line_start":183,"line_end":183,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":154880,"byte_end":154890,"line_start":189,"line_end":189,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":155033,"byte_end":155043,"line_start":195,"line_end":195,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":155106,"byte_end":155116,"line_start":197,"line_end":197,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":155271,"byte_end":155281,"line_start":203,"line_end":203,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":157284,"byte_end":157302,"line_start":33,"line_end":33,"column_start":39,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":157546,"byte_end":157564,"line_start":43,"line_end":43,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":157966,"byte_end":157984,"line_start":58,"line_end":58,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":159569,"byte_end":159587,"line_start":111,"line_end":111,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":159997,"byte_end":160015,"line_start":132,"line_end":132,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":160352,"byte_end":160370,"line_start":147,"line_end":147,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":161697,"byte_end":161708,"line_start":39,"line_end":39,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":161884,"byte_end":161895,"line_start":45,"line_end":45,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":162074,"byte_end":162085,"line_start":51,"line_end":51,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":162206,"byte_end":162217,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":162444,"byte_end":162455,"line_start":68,"line_end":68,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":162678,"byte_end":162689,"line_start":75,"line_end":75,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":162972,"byte_end":162983,"line_start":84,"line_end":84,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":163300,"byte_end":163311,"line_start":93,"line_end":93,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":163656,"byte_end":163667,"line_start":102,"line_end":102,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1446},{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":163874,"byte_end":163885,"line_start":109,"line_end":109,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1451},{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":164080,"byte_end":164091,"line_start":116,"line_end":116,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":164191,"byte_end":164202,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":164681,"byte_end":164692,"line_start":139,"line_end":139,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":164856,"byte_end":164867,"line_start":146,"line_end":146,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":164992,"byte_end":165003,"line_start":152,"line_end":152,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":165147,"byte_end":165158,"line_start":158,"line_end":158,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1476},{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":165366,"byte_end":165377,"line_start":166,"line_end":166,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":165610,"byte_end":165621,"line_start":174,"line_end":174,"column_start":75,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":1487},{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":165915,"byte_end":165926,"line_start":182,"line_end":182,"column_start":75,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":1494}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":166163,"byte_end":166174,"line_start":190,"line_end":190,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":167137,"byte_end":167148,"line_start":229,"line_end":229,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1509},{"krate":0,"index":1511},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":169950,"byte_end":169961,"line_start":300,"line_end":300,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1522},{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":170215,"byte_end":170226,"line_start":313,"line_end":313,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":170632,"byte_end":170643,"line_start":330,"line_end":330,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1532},{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":171040,"byte_end":171051,"line_start":346,"line_end":346,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":172153,"byte_end":172164,"line_start":395,"line_end":395,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":172270,"byte_end":172281,"line_start":401,"line_end":401,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":172404,"byte_end":172415,"line_start":407,"line_end":407,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":172521,"byte_end":172532,"line_start":413,"line_end":413,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":174608,"byte_end":174619,"line_start":496,"line_end":496,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":174813,"byte_end":174824,"line_start":502,"line_end":502,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":175018,"byte_end":175029,"line_start":508,"line_end":508,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":175170,"byte_end":175181,"line_start":514,"line_end":514,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":175437,"byte_end":175448,"line_start":526,"line_end":526,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":175705,"byte_end":175716,"line_start":533,"line_end":533,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":176019,"byte_end":176030,"line_start":542,"line_end":542,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":176366,"byte_end":176377,"line_start":551,"line_end":551,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":176742,"byte_end":176753,"line_start":560,"line_end":560,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1600},{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":176986,"byte_end":176997,"line_start":567,"line_end":567,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1605},{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":177228,"byte_end":177239,"line_start":574,"line_end":574,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":177346,"byte_end":177357,"line_start":580,"line_end":580,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":177886,"byte_end":177897,"line_start":598,"line_end":598,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":178083,"byte_end":178094,"line_start":605,"line_end":605,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":178233,"byte_end":178244,"line_start":611,"line_end":611,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":178402,"byte_end":178413,"line_start":617,"line_end":617,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1630},{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":178641,"byte_end":178652,"line_start":625,"line_end":625,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":178905,"byte_end":178916,"line_start":633,"line_end":633,"column_start":75,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":1641},{"krate":0,"index":1642}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":179236,"byte_end":179247,"line_start":641,"line_end":641,"column_start":75,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":1647},{"krate":0,"index":1648}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":179510,"byte_end":179521,"line_start":649,"line_end":649,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":180594,"byte_end":180605,"line_start":689,"line_end":689,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1665},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":183446,"byte_end":183457,"line_start":760,"line_end":760,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1676},{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":183757,"byte_end":183768,"line_start":773,"line_end":773,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1681},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":184256,"byte_end":184267,"line_start":792,"line_end":792,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":184748,"byte_end":184759,"line_start":810,"line_end":810,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":188139,"byte_end":188155,"line_start":55,"line_end":55,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1731},{"krate":0,"index":1733},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1741},{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":192393,"byte_end":192409,"line_start":171,"line_end":171,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1747},{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":193342,"byte_end":193358,"line_start":196,"line_end":196,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1755},{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":193931,"byte_end":193947,"line_start":217,"line_end":217,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1763},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":200713,"byte_end":200729,"line_start":406,"line_end":406,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1787}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":201220,"byte_end":201236,"line_start":423,"line_end":423,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":201387,"byte_end":201403,"line_start":431,"line_end":431,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1797}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":201757,"byte_end":201773,"line_start":439,"line_end":439,"column_start":53,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209688,"byte_end":209704,"line_start":58,"line_end":58,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1839},{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":211672,"byte_end":211688,"line_start":110,"line_end":110,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1845},{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":212361,"byte_end":212377,"line_start":134,"line_end":134,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1859},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1865},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":235833,"byte_end":235849,"line_start":691,"line_end":691,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1896},{"krate":0,"index":1898},{"krate":0,"index":1901},{"krate":0,"index":1904},{"krate":0,"index":1906}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":239943,"byte_end":239959,"line_start":784,"line_end":784,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1913},{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":241472,"byte_end":241488,"line_start":814,"line_end":814,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1921}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":241641,"byte_end":241657,"line_start":822,"line_end":822,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":254921,"byte_end":254939,"line_start":47,"line_end":47,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1956}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255134,"byte_end":255152,"line_start":58,"line_end":58,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1961},{"krate":0,"index":1963}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255377,"byte_end":255395,"line_start":73,"line_end":73,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1968}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255578,"byte_end":255596,"line_start":84,"line_end":84,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1973}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255774,"byte_end":255792,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":256647,"byte_end":256665,"line_start":125,"line_end":125,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1986}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":256964,"byte_end":256982,"line_start":137,"line_end":137,"column_start":5,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1992},{"krate":0,"index":1993}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":257375,"byte_end":257393,"line_start":152,"line_end":152,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1999},{"krate":0,"index":2000}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":257728,"byte_end":257746,"line_start":165,"line_end":165,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2005}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":258241,"byte_end":258259,"line_start":185,"line_end":185,"column_start":51,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2010}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":258442,"byte_end":258460,"line_start":194,"line_end":194,"column_start":51,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":258635,"byte_end":258653,"line_start":203,"line_end":203,"column_start":59,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":259006,"byte_end":259024,"line_start":221,"line_end":221,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2025}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":259159,"byte_end":259177,"line_start":229,"line_end":229,"column_start":34,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2030}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":259736,"byte_end":259754,"line_start":252,"line_end":252,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2035}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":259970,"byte_end":259988,"line_start":264,"line_end":264,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2040},{"krate":0,"index":2042}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":260231,"byte_end":260249,"line_start":279,"line_end":279,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2047}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":260435,"byte_end":260453,"line_start":290,"line_end":290,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2052}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":260654,"byte_end":260672,"line_start":300,"line_end":300,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":261750,"byte_end":261768,"line_start":337,"line_end":337,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2066}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":262076,"byte_end":262094,"line_start":349,"line_end":349,"column_start":5,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2072},{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":262517,"byte_end":262535,"line_start":365,"line_end":365,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2079},{"krate":0,"index":2080}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":262900,"byte_end":262918,"line_start":379,"line_end":379,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":263421,"byte_end":263439,"line_start":398,"line_end":398,"column_start":51,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2090}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":263627,"byte_end":263645,"line_start":407,"line_end":407,"column_start":51,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":263828,"byte_end":263846,"line_start":416,"line_end":416,"column_start":59,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":264199,"byte_end":264217,"line_start":433,"line_end":433,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":264352,"byte_end":264370,"line_start":441,"line_end":441,"column_start":34,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":269383,"byte_end":269396,"line_start":45,"line_end":45,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2159},{"krate":0,"index":2160}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":269749,"byte_end":269762,"line_start":59,"line_end":59,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":269930,"byte_end":269943,"line_start":65,"line_end":65,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2168}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":270113,"byte_end":270126,"line_start":71,"line_end":71,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2172}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":270249,"byte_end":270262,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2176}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":270495,"byte_end":270508,"line_start":89,"line_end":89,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2191},{"krate":0,"index":2193}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":272229,"byte_end":272242,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2197}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":272623,"byte_end":272636,"line_start":181,"line_end":181,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2201}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":272900,"byte_end":272913,"line_start":191,"line_end":191,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":274086,"byte_end":274099,"line_start":244,"line_end":244,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2214}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":274507,"byte_end":274520,"line_start":258,"line_end":258,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2218},{"krate":0,"index":2219}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":274717,"byte_end":274730,"line_start":265,"line_end":265,"column_start":53,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":274909,"byte_end":274922,"line_start":272,"line_end":272,"column_start":74,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":275074,"byte_end":275087,"line_start":279,"line_end":279,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2231},{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":275275,"byte_end":275288,"line_start":287,"line_end":287,"column_start":44,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2236},{"krate":0,"index":2237}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":275420,"byte_end":275433,"line_start":295,"line_end":295,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":275845,"byte_end":275858,"line_start":312,"line_end":312,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2247},{"krate":0,"index":2248}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":276045,"byte_end":276058,"line_start":320,"line_end":320,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2252},{"krate":0,"index":2253}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":276251,"byte_end":276264,"line_start":328,"line_end":328,"column_start":56,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2257}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":276422,"byte_end":276435,"line_start":335,"line_end":335,"column_start":56,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":276612,"byte_end":276625,"line_start":342,"line_end":342,"column_start":75,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":2266},{"krate":0,"index":2267}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":276894,"byte_end":276907,"line_start":350,"line_end":350,"column_start":75,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":2272},{"krate":0,"index":2273}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":277120,"byte_end":277133,"line_start":358,"line_end":358,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2277}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":277520,"byte_end":277533,"line_start":370,"line_end":370,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2281}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":277952,"byte_end":277965,"line_start":382,"line_end":382,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2285}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":278396,"byte_end":278409,"line_start":394,"line_end":394,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2289},{"krate":0,"index":2291},{"krate":0,"index":2293},{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":281382,"byte_end":281395,"line_start":473,"line_end":473,"column_start":66,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":281858,"byte_end":281871,"line_start":490,"line_end":490,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2309}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":281977,"byte_end":281990,"line_start":496,"line_end":496,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282112,"byte_end":282125,"line_start":502,"line_end":502,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2320}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282231,"byte_end":282244,"line_start":508,"line_end":508,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2324}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282341,"byte_end":282354,"line_start":514,"line_end":514,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2328}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282896,"byte_end":282909,"line_start":541,"line_end":541,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2337}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":283341,"byte_end":283354,"line_start":559,"line_end":559,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2341}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":283535,"byte_end":283548,"line_start":565,"line_end":565,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":283713,"byte_end":283726,"line_start":571,"line_end":571,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2349}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":283869,"byte_end":283882,"line_start":577,"line_end":577,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2353}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":284136,"byte_end":284149,"line_start":590,"line_end":590,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":286158,"byte_end":286171,"line_start":670,"line_end":670,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":286659,"byte_end":286672,"line_start":690,"line_end":690,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":287859,"byte_end":287872,"line_start":744,"line_end":744,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2387}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":288280,"byte_end":288293,"line_start":758,"line_end":758,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2391},{"krate":0,"index":2392}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":288502,"byte_end":288515,"line_start":766,"line_end":766,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2396},{"krate":0,"index":2397}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":288730,"byte_end":288743,"line_start":774,"line_end":774,"column_start":53,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2401}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":288922,"byte_end":288935,"line_start":781,"line_end":781,"column_start":74,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":2405}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":289084,"byte_end":289097,"line_start":788,"line_end":788,"column_start":44,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2409},{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":289269,"byte_end":289282,"line_start":796,"line_end":796,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2414},{"krate":0,"index":2415}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":289490,"byte_end":289503,"line_start":804,"line_end":804,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2419},{"krate":0,"index":2420}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":289717,"byte_end":289730,"line_start":812,"line_end":812,"column_start":56,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2424}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":289888,"byte_end":289901,"line_start":819,"line_end":819,"column_start":56,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2428}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":290022,"byte_end":290035,"line_start":826,"line_end":826,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":290608,"byte_end":290621,"line_start":851,"line_end":851,"column_start":75,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":2439},{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":290912,"byte_end":290925,"line_start":859,"line_end":859,"column_start":75,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":2445},{"krate":0,"index":2446}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":291160,"byte_end":291173,"line_start":867,"line_end":867,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":291513,"byte_end":291526,"line_start":878,"line_end":878,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2454}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":291899,"byte_end":291912,"line_start":889,"line_end":889,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":292295,"byte_end":292308,"line_start":900,"line_end":900,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2462},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":295353,"byte_end":295366,"line_start":983,"line_end":983,"column_start":66,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":2475},{"krate":0,"index":2476},{"krate":0,"index":2477}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":295981,"byte_end":295994,"line_start":1005,"line_end":1005,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2482}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296100,"byte_end":296113,"line_start":1011,"line_end":1011,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296248,"byte_end":296261,"line_start":1017,"line_end":1017,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2493}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296373,"byte_end":296386,"line_start":1023,"line_end":1023,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2497}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296495,"byte_end":296508,"line_start":1029,"line_end":1029,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2501}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296884,"byte_end":296896,"line_start":1051,"line_end":1051,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2512},{"krate":0,"index":2515}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":298368,"byte_end":298380,"line_start":1116,"line_end":1116,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2519},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2528},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":300225,"byte_end":300238,"line_start":1203,"line_end":1203,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2537},{"krate":0,"index":2538}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":300608,"byte_end":300621,"line_start":1220,"line_end":1220,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2542},{"krate":0,"index":2543}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":300987,"byte_end":301000,"line_start":1236,"line_end":1236,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2547},{"krate":0,"index":2548}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":301436,"byte_end":301449,"line_start":1255,"line_end":1255,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2552},{"krate":0,"index":2553}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":312695,"byte_end":312705,"line_start":42,"line_end":42,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":312844,"byte_end":312854,"line_start":49,"line_end":49,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":312892,"byte_end":312902,"line_start":51,"line_end":51,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2603}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":313018,"byte_end":313028,"line_start":57,"line_end":57,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2607}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":313168,"byte_end":313178,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":313227,"byte_end":313237,"line_start":65,"line_end":65,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2614}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":313420,"byte_end":313430,"line_start":71,"line_end":71,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2618}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":313589,"byte_end":313599,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2622}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":313789,"byte_end":313799,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2626}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":314134,"byte_end":314144,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2633},{"krate":0,"index":2634}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":315836,"byte_end":315846,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2638}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":316147,"byte_end":316157,"line_start":171,"line_end":171,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2642}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":316691,"byte_end":316701,"line_start":186,"line_end":186,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2646}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":317319,"byte_end":317329,"line_start":202,"line_end":202,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2650}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":317604,"byte_end":317614,"line_start":216,"line_end":216,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2654},{"krate":0,"index":2655}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":318375,"byte_end":318385,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":320057,"byte_end":320067,"line_start":293,"line_end":293,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":320479,"byte_end":320489,"line_start":309,"line_end":309,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2669}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":320715,"byte_end":320725,"line_start":319,"line_end":319,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2673}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":321308,"byte_end":321318,"line_start":340,"line_end":340,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2677}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":321678,"byte_end":321688,"line_start":356,"line_end":356,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2685}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":322258,"byte_end":322268,"line_start":385,"line_end":385,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2689}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":322468,"byte_end":322478,"line_start":395,"line_end":395,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2693}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":322726,"byte_end":322736,"line_start":406,"line_end":406,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2697},{"krate":0,"index":2698}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":322952,"byte_end":322962,"line_start":417,"line_end":417,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2702},{"krate":0,"index":2703}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":323203,"byte_end":323213,"line_start":428,"line_end":428,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2708},{"krate":0,"index":2709}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":323501,"byte_end":323511,"line_start":439,"line_end":439,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2714},{"krate":0,"index":2715}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":323766,"byte_end":323776,"line_start":450,"line_end":450,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2719},{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":324246,"byte_end":324256,"line_start":468,"line_end":468,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2724},{"krate":0,"index":2726}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":325452,"byte_end":325462,"line_start":497,"line_end":497,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2731}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":326179,"byte_end":326189,"line_start":516,"line_end":516,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2735},{"krate":0,"index":2736}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":326970,"byte_end":326980,"line_start":542,"line_end":542,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":328701,"byte_end":328711,"line_start":590,"line_end":590,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2749}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3670,"byte_end":3678,"line_start":95,"line_end":95,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":67}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3688,"byte_end":3697,"line_start":96,"line_end":96,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":74}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\lib.rs","byte_start":3731,"byte_end":3734,"line_start":99,"line_end":99,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":320}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":9608,"byte_end":9618,"line_start":43,"line_end":43,"column_start":27,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":9757,"byte_end":9767,"line_start":50,"line_end":50,"column_start":27,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":1543}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":9805,"byte_end":9815,"line_start":52,"line_end":52,"column_start":28,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":9931,"byte_end":9941,"line_start":58,"line_end":58,"column_start":55,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":10081,"byte_end":10091,"line_start":64,"line_end":64,"column_start":23,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":10140,"byte_end":10150,"line_start":66,"line_end":66,"column_start":39,"column_end":49},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":10333,"byte_end":10343,"line_start":72,"line_end":72,"column_start":43,"column_end":53},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":10502,"byte_end":10512,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":10702,"byte_end":10712,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":11047,"byte_end":11057,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":12761,"byte_end":12771,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":13022,"byte_end":13032,"line_start":170,"line_end":170,"column_start":12,"column_end":22},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":13481,"byte_end":13491,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":14029,"byte_end":14039,"line_start":199,"line_end":199,"column_start":12,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":14366,"byte_end":14376,"line_start":217,"line_end":217,"column_start":12,"column_end":22},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":14835,"byte_end":14845,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":15774,"byte_end":15784,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":17232,"byte_end":17242,"line_start":312,"line_end":312,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":17650,"byte_end":17660,"line_start":328,"line_end":328,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":17886,"byte_end":17896,"line_start":338,"line_end":338,"column_start":12,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":18314,"byte_end":18324,"line_start":357,"line_end":357,"column_start":12,"column_end":22},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":18630,"byte_end":18640,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":18839,"byte_end":18849,"line_start":384,"line_end":384,"column_start":12,"column_end":22},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":19048,"byte_end":19058,"line_start":394,"line_end":394,"column_start":12,"column_end":22},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":19276,"byte_end":19286,"line_start":405,"line_end":405,"column_start":23,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":19501,"byte_end":19511,"line_start":416,"line_end":416,"column_start":23,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":19751,"byte_end":19761,"line_start":427,"line_end":427,"column_start":48,"column_end":58},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":20048,"byte_end":20058,"line_start":438,"line_end":438,"column_start":48,"column_end":58},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":20312,"byte_end":20322,"line_start":449,"line_end":449,"column_start":15,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":20791,"byte_end":20801,"line_start":467,"line_end":467,"column_start":16,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":21996,"byte_end":22006,"line_start":496,"line_end":496,"column_start":12,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":22718,"byte_end":22728,"line_start":515,"line_end":515,"column_start":12,"column_end":22},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":23502,"byte_end":23512,"line_start":539,"line_end":539,"column_start":31,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box2d.rs","byte_start":25213,"byte_end":25223,"line_start":587,"line_end":587,"column_start":40,"column_end":50},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":32553,"byte_end":32570,"line_start":33,"line_end":33,"column_start":12,"column_end":29},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":32820,"byte_end":32837,"line_start":42,"line_end":42,"column_start":57,"column_end":74},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":33606,"byte_end":33623,"line_start":68,"line_end":68,"column_start":48,"column_end":65},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2778},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":33811,"byte_end":33828,"line_start":75,"line_end":75,"column_start":48,"column_end":65},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2778},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":34015,"byte_end":34032,"line_start":82,"line_end":82,"column_start":53,"column_end":70},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2778},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":34216,"byte_end":34233,"line_start":89,"line_end":89,"column_start":46,"column_end":63},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2778},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":34404,"byte_end":34421,"line_start":96,"line_end":96,"column_start":39,"column_end":56},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2778},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\homogen.rs","byte_start":34615,"byte_end":34632,"line_start":102,"line_end":102,"column_start":43,"column_end":60},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2778},"to":{"krate":1,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":35977,"byte_end":35978,"line_start":17,"line_end":17,"column_start":36,"column_end":37},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":325},"to":{"krate":0,"index":322}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":36118,"byte_end":36119,"line_start":27,"line_end":27,"column_start":34,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":330},"to":{"krate":0,"index":327}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":36199,"byte_end":36203,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":1543},"to":{"krate":0,"index":332}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":36253,"byte_end":36257,"line_start":36,"line_end":36,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":1543},"to":{"krate":0,"index":334}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\num.rs","byte_start":36306,"byte_end":36310,"line_start":39,"line_end":39,"column_start":17,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":1543},"to":{"krate":0,"index":336}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":38884,"byte_end":38890,"line_start":40,"line_end":40,"column_start":32,"column_end":38},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":39014,"byte_end":39020,"line_start":46,"line_end":46,"column_start":30,"column_end":36},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":1543}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":39646,"byte_end":39652,"line_start":77,"line_end":77,"column_start":15,"column_end":21},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":39756,"byte_end":39762,"line_start":83,"line_end":83,"column_start":22,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":39881,"byte_end":39887,"line_start":89,"line_end":89,"column_start":47,"column_end":53},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":40040,"byte_end":40046,"line_start":95,"line_end":95,"column_start":51,"column_end":57},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":40215,"byte_end":40221,"line_start":102,"line_end":102,"column_start":48,"column_end":54},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":1596}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":40440,"byte_end":40446,"line_start":110,"line_end":110,"column_start":48,"column_end":54},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":1629}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":40627,"byte_end":40633,"line_start":117,"line_end":117,"column_start":62,"column_end":68},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":1601}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":40861,"byte_end":40867,"line_start":125,"line_end":125,"column_start":48,"column_end":54},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":1633}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":41065,"byte_end":41071,"line_start":132,"line_end":132,"column_start":47,"column_end":53},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":361},"to":{"krate":5,"index":420}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":41439,"byte_end":41445,"line_start":143,"line_end":143,"column_start":71,"column_end":77},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":41709,"byte_end":41715,"line_start":152,"line_end":152,"column_start":50,"column_end":56},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":41923,"byte_end":41929,"line_start":161,"line_end":161,"column_start":56,"column_end":62},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":1637}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":42100,"byte_end":42106,"line_start":169,"line_end":169,"column_start":50,"column_end":56},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":42314,"byte_end":42320,"line_start":178,"line_end":178,"column_start":56,"column_end":62},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":1641}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":42526,"byte_end":42532,"line_start":186,"line_end":186,"column_start":80,"column_end":86},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":42818,"byte_end":42824,"line_start":195,"line_end":195,"column_start":80,"column_end":86},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":43062,"byte_end":43068,"line_start":204,"line_end":204,"column_start":45,"column_end":51},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":1623}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":43232,"byte_end":43238,"line_start":212,"line_end":212,"column_start":33,"column_end":39},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":43709,"byte_end":43715,"line_start":224,"line_end":224,"column_start":48,"column_end":54},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":43862,"byte_end":43868,"line_start":230,"line_end":230,"column_start":50,"column_end":56},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":2077}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":44029,"byte_end":44035,"line_start":236,"line_end":236,"column_start":34,"column_end":40},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":44084,"byte_end":44090,"line_start":238,"line_end":238,"column_start":36,"column_end":42},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":2066}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":44223,"byte_end":44229,"line_start":244,"line_end":244,"column_start":30,"column_end":36},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":361},"to":{"krate":0,"index":322}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\length.rs","byte_start":44319,"byte_end":44325,"line_start":250,"line_end":250,"column_start":12,"column_end":18},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":52950,"byte_end":52962,"line_start":41,"line_end":41,"column_start":25,"column_end":37},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":53377,"byte_end":53389,"line_start":60,"line_end":60,"column_start":39,"column_end":51},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":53557,"byte_end":53569,"line_start":66,"line_end":66,"column_start":43,"column_end":55},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":53739,"byte_end":53751,"line_start":72,"line_end":72,"column_start":33,"column_end":45},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":53873,"byte_end":53885,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":54117,"byte_end":54129,"line_start":90,"line_end":90,"column_start":18,"column_end":30},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":55622,"byte_end":55634,"line_start":152,"line_end":152,"column_start":39,"column_end":51},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":55855,"byte_end":55867,"line_start":159,"line_end":159,"column_start":66,"column_end":78},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":1596}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":56109,"byte_end":56121,"line_start":167,"line_end":167,"column_start":74,"column_end":86},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":1629}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":56315,"byte_end":56327,"line_start":174,"line_end":174,"column_start":74,"column_end":86},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":1633}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":56515,"byte_end":56527,"line_start":181,"line_end":181,"column_start":68,"column_end":80},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":1596}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":56735,"byte_end":56747,"line_start":189,"line_end":189,"column_start":47,"column_end":59},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":1601}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":56989,"byte_end":57001,"line_start":197,"line_end":197,"column_start":68,"column_end":80},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":1601}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":57181,"byte_end":57193,"line_start":205,"line_end":205,"column_start":19,"column_end":31},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":57609,"byte_end":57621,"line_start":222,"line_end":222,"column_start":50,"column_end":62},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":57816,"byte_end":57828,"line_start":230,"line_end":230,"column_start":56,"column_end":68},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":1637}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":57980,"byte_end":57992,"line_start":237,"line_end":237,"column_start":50,"column_end":62},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":58187,"byte_end":58199,"line_start":245,"line_end":245,"column_start":56,"column_end":68},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":1641}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":58376,"byte_end":58388,"line_start":252,"line_end":252,"column_start":75,"column_end":87},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":58665,"byte_end":58677,"line_start":260,"line_end":260,"column_start":75,"column_end":87},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":58898,"byte_end":58910,"line_start":268,"line_end":268,"column_start":19,"column_end":31},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":59299,"byte_end":59311,"line_start":280,"line_end":280,"column_start":18,"column_end":30},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":59732,"byte_end":59744,"line_start":292,"line_end":292,"column_start":19,"column_end":31},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":60177,"byte_end":60189,"line_start":304,"line_end":304,"column_start":28,"column_end":40},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":63058,"byte_end":63070,"line_start":382,"line_end":382,"column_start":12,"column_end":24},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":63533,"byte_end":63545,"line_start":396,"line_end":396,"column_start":65,"column_end":77},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2865},"to":{"krate":0,"index":68}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64010,"byte_end":64022,"line_start":413,"line_end":413,"column_start":35,"column_end":47},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":2255}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64128,"byte_end":64140,"line_start":419,"line_end":419,"column_start":35,"column_end":47},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64264,"byte_end":64276,"line_start":425,"line_end":425,"column_start":35,"column_end":47},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":2255}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64382,"byte_end":64394,"line_start":431,"line_end":431,"column_start":35,"column_end":47},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2865},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":64903,"byte_end":64915,"line_start":455,"line_end":455,"column_start":25,"column_end":37},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":65182,"byte_end":65194,"line_start":468,"line_end":468,"column_start":24,"column_end":36},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":65438,"byte_end":65450,"line_start":480,"line_end":480,"column_start":12,"column_end":24},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":65964,"byte_end":65976,"line_start":498,"line_end":498,"column_start":39,"column_end":51},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":66157,"byte_end":66169,"line_start":504,"line_end":504,"column_start":43,"column_end":55},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":66341,"byte_end":66353,"line_start":510,"line_end":510,"column_start":40,"column_end":52},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":66501,"byte_end":66513,"line_start":516,"line_end":516,"column_start":18,"column_end":30},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":68762,"byte_end":68774,"line_start":607,"line_end":607,"column_start":39,"column_end":51},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":69025,"byte_end":69037,"line_start":614,"line_end":614,"column_start":74,"column_end":86},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":1629}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":69231,"byte_end":69243,"line_start":621,"line_end":621,"column_start":74,"column_end":86},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":1633}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":69431,"byte_end":69443,"line_start":628,"line_end":628,"column_start":68,"column_end":80},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":1596}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":69669,"byte_end":69681,"line_start":636,"line_end":636,"column_start":47,"column_end":59},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":1601}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":69941,"byte_end":69953,"line_start":644,"line_end":644,"column_start":68,"column_end":80},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":1601}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":70182,"byte_end":70194,"line_start":652,"line_end":652,"column_start":50,"column_end":62},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":70424,"byte_end":70436,"line_start":660,"line_end":660,"column_start":75,"column_end":87},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":70710,"byte_end":70722,"line_start":668,"line_end":668,"column_start":50,"column_end":62},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":70952,"byte_end":70964,"line_start":676,"line_end":676,"column_start":75,"column_end":87},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":71207,"byte_end":71219,"line_start":684,"line_end":684,"column_start":19,"column_end":31},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":71740,"byte_end":71752,"line_start":709,"line_end":709,"column_start":19,"column_end":31},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":72094,"byte_end":72106,"line_start":720,"line_end":720,"column_start":18,"column_end":30},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":72481,"byte_end":72493,"line_start":731,"line_end":731,"column_start":19,"column_end":31},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":72878,"byte_end":72890,"line_start":742,"line_end":742,"column_start":28,"column_end":40},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":75912,"byte_end":75924,"line_start":825,"line_end":825,"column_start":65,"column_end":77},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2890},"to":{"krate":0,"index":68}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":76541,"byte_end":76553,"line_start":847,"line_end":847,"column_start":35,"column_end":47},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":2255}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":76659,"byte_end":76671,"line_start":853,"line_end":853,"column_start":35,"column_end":47},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":76808,"byte_end":76820,"line_start":859,"line_end":859,"column_start":38,"column_end":50},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":2255}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\point.rs","byte_start":76932,"byte_end":76944,"line_start":865,"line_end":865,"column_start":38,"column_end":50},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":82853,"byte_end":82862,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":858},"to":{"krate":1,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":83005,"byte_end":83014,"line_start":70,"line_end":70,"column_start":27,"column_end":36},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":858},"to":{"krate":1,"index":1543}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":83052,"byte_end":83061,"line_start":72,"line_end":72,"column_start":28,"column_end":37},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":858},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":83176,"byte_end":83185,"line_start":78,"line_end":78,"column_start":54,"column_end":63},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":858},"to":{"krate":1,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":83333,"byte_end":83342,"line_start":84,"line_end":84,"column_start":23,"column_end":32},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":858},"to":{"krate":1,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":83391,"byte_end":83400,"line_start":86,"line_end":86,"column_start":39,"column_end":48},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":858},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":83588,"byte_end":83597,"line_start":92,"line_end":92,"column_start":43,"column_end":52},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":858},"to":{"krate":1,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":83782,"byte_end":83791,"line_start":98,"line_end":98,"column_start":33,"column_end":42},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":858},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":83910,"byte_end":83919,"line_start":104,"line_end":104,"column_start":12,"column_end":21},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":84115,"byte_end":84124,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":84382,"byte_end":84391,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":91618,"byte_end":91627,"line_start":361,"line_end":361,"column_start":12,"column_end":21},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":92055,"byte_end":92064,"line_start":377,"line_end":377,"column_start":12,"column_end":21},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":92292,"byte_end":92301,"line_start":387,"line_end":387,"column_start":12,"column_end":21},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":93055,"byte_end":93064,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":93433,"byte_end":93442,"line_start":428,"line_end":428,"column_start":47,"column_end":56},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":93565,"byte_end":93574,"line_start":435,"line_end":435,"column_start":37,"column_end":46},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":93981,"byte_end":93990,"line_start":447,"line_end":447,"column_start":50,"column_end":59},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":858},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":94195,"byte_end":94204,"line_start":455,"line_end":455,"column_start":50,"column_end":59},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":858},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":94434,"byte_end":94443,"line_start":463,"line_end":463,"column_start":75,"column_end":84},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":858},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":94718,"byte_end":94727,"line_start":471,"line_end":471,"column_start":75,"column_end":84},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":858},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":94948,"byte_end":94957,"line_start":479,"line_end":479,"column_start":21,"column_end":30},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":95425,"byte_end":95434,"line_start":494,"line_end":494,"column_start":32,"column_end":41},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":96683,"byte_end":96692,"line_start":520,"line_end":520,"column_start":76,"column_end":85},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":98408,"byte_end":98417,"line_start":557,"line_end":557,"column_start":31,"column_end":40},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rect.rs","byte_start":100168,"byte_end":100177,"line_start":605,"line_end":605,"column_start":40,"column_end":49},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":858},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":110374,"byte_end":110395,"line_start":28,"line_end":28,"column_start":40,"column_end":61},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":115001,"byte_end":115022,"line_start":177,"line_end":177,"column_start":9,"column_end":30},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2916},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rigid.rs","byte_start":115212,"byte_end":115233,"line_start":185,"line_end":185,"column_start":9,"column_end":30},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2916},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":118852,"byte_end":118857,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":119031,"byte_end":119036,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":119304,"byte_end":119309,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":119848,"byte_end":119853,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":120004,"byte_end":120009,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":120113,"byte_end":120118,"line_start":94,"line_end":94,"column_start":9,"column_end":14},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":120594,"byte_end":120599,"line_start":119,"line_end":119,"column_start":45,"column_end":50},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2961},"to":{"krate":1,"index":1596}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":120787,"byte_end":120792,"line_start":126,"line_end":126,"column_start":45,"column_end":50},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2961},"to":{"krate":1,"index":1629}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":120948,"byte_end":120953,"line_start":132,"line_end":132,"column_start":55,"column_end":60},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2961},"to":{"krate":1,"index":1601}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":121154,"byte_end":121159,"line_start":139,"line_end":139,"column_start":45,"column_end":50},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2961},"to":{"krate":1,"index":1633}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":121315,"byte_end":121320,"line_start":145,"line_end":145,"column_start":55,"column_end":60},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2961},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":121495,"byte_end":121500,"line_start":153,"line_end":153,"column_start":48,"column_end":53},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2961},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":121692,"byte_end":121697,"line_start":161,"line_end":161,"column_start":48,"column_end":53},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2961},"to":{"krate":1,"index":1641}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":121833,"byte_end":121838,"line_start":167,"line_end":167,"column_start":48,"column_end":53},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2961},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":122030,"byte_end":122035,"line_start":175,"line_end":175,"column_start":48,"column_end":53},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2961},"to":{"krate":1,"index":1637}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":122157,"byte_end":122162,"line_start":181,"line_end":181,"column_start":34,"column_end":39},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2961},"to":{"krate":1,"index":1623}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":122650,"byte_end":122665,"line_start":200,"line_end":200,"column_start":19,"column_end":34},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":123162,"byte_end":123177,"line_start":224,"line_end":224,"column_start":19,"column_end":34},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":123384,"byte_end":123399,"line_start":234,"line_end":234,"column_start":19,"column_end":34},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":125382,"byte_end":125397,"line_start":296,"line_end":296,"column_start":19,"column_end":34},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":126878,"byte_end":126893,"line_start":343,"line_end":343,"column_start":19,"column_end":34},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":127509,"byte_end":127524,"line_start":363,"line_end":363,"column_start":19,"column_end":34},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":127746,"byte_end":127761,"line_start":374,"line_end":374,"column_start":19,"column_end":34},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":137920,"byte_end":137935,"line_start":704,"line_end":704,"column_start":46,"column_end":61},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3024},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":138205,"byte_end":138220,"line_start":714,"line_end":714,"column_start":50,"column_end":65},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3024},"to":{"krate":1,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\rotation.rs","byte_start":138467,"byte_end":138482,"line_start":724,"line_end":724,"column_start":35,"column_end":50},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3024},"to":{"krate":0,"index":68}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":151079,"byte_end":151089,"line_start":72,"line_end":72,"column_start":19,"column_end":29},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":1254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":151205,"byte_end":151215,"line_start":78,"line_end":78,"column_start":26,"column_end":36},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":1254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":151307,"byte_end":151317,"line_start":84,"line_end":84,"column_start":16,"column_end":26},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":1254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":151531,"byte_end":151541,"line_start":89,"line_end":89,"column_start":53,"column_end":63},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":1254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":151830,"byte_end":151840,"line_start":98,"line_end":98,"column_start":75,"column_end":85},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":1254},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":152107,"byte_end":152117,"line_start":107,"line_end":107,"column_start":55,"column_end":65},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":1254},"to":{"krate":1,"index":1596}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":152400,"byte_end":152410,"line_start":116,"line_end":116,"column_start":55,"column_end":65},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":1254},"to":{"krate":1,"index":1601}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":152656,"byte_end":152666,"line_start":124,"line_end":124,"column_start":37,"column_end":47},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":1254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":153134,"byte_end":153144,"line_start":136,"line_end":136,"column_start":19,"column_end":29},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":1254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":154724,"byte_end":154734,"line_start":183,"line_end":183,"column_start":44,"column_end":54},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":1254},"to":{"krate":1,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":154880,"byte_end":154890,"line_start":189,"line_end":189,"column_start":36,"column_end":46},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":1254},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":155033,"byte_end":155043,"line_start":195,"line_end":195,"column_start":34,"column_end":44},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":1254},"to":{"krate":1,"index":1543}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":155106,"byte_end":155116,"line_start":197,"line_end":197,"column_start":46,"column_end":56},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":1254},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\scale.rs","byte_start":155271,"byte_end":155281,"line_start":203,"line_end":203,"column_start":50,"column_end":60},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":1254},"to":{"krate":1,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":157284,"byte_end":157302,"line_start":33,"line_end":33,"column_start":39,"column_end":57},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3057},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":157546,"byte_end":157564,"line_start":43,"line_end":43,"column_start":33,"column_end":51},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3057},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":157966,"byte_end":157984,"line_start":58,"line_end":58,"column_start":18,"column_end":36},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":159569,"byte_end":159587,"line_start":111,"line_end":111,"column_start":12,"column_end":30},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":159997,"byte_end":160015,"line_start":132,"line_end":132,"column_start":20,"column_end":38},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3057},"to":{"krate":1,"index":1596}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\side_offsets.rs","byte_start":160352,"byte_end":160370,"line_start":147,"line_end":147,"column_start":25,"column_end":43},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":161697,"byte_end":161708,"line_start":39,"line_end":39,"column_start":39,"column_end":50},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3084},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":161884,"byte_end":161895,"line_start":45,"line_end":45,"column_start":43,"column_end":54},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3084},"to":{"krate":1,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":162074,"byte_end":162085,"line_start":51,"line_end":51,"column_start":33,"column_end":44},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3084},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":162206,"byte_end":162217,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":162444,"byte_end":162455,"line_start":68,"line_end":68,"column_start":19,"column_end":30},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":162678,"byte_end":162689,"line_start":75,"line_end":75,"column_start":19,"column_end":30},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":162972,"byte_end":162983,"line_start":84,"line_end":84,"column_start":18,"column_end":29},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":163300,"byte_end":163311,"line_start":93,"line_end":93,"column_start":19,"column_end":30},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":163656,"byte_end":163667,"line_start":102,"line_end":102,"column_start":47,"column_end":58},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3084},"to":{"krate":1,"index":1596}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":163874,"byte_end":163885,"line_start":109,"line_end":109,"column_start":47,"column_end":58},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3084},"to":{"krate":1,"index":1601}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":164080,"byte_end":164091,"line_start":116,"line_end":116,"column_start":35,"column_end":46},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":164191,"byte_end":164202,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":164681,"byte_end":164692,"line_start":139,"line_end":139,"column_start":31,"column_end":42},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":164856,"byte_end":164867,"line_start":146,"line_end":146,"column_start":18,"column_end":29},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":164992,"byte_end":165003,"line_start":152,"line_end":152,"column_start":27,"column_end":38},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3084},"to":{"krate":0,"index":322}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":165147,"byte_end":165158,"line_start":158,"line_end":158,"column_start":50,"column_end":61},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3084},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":165366,"byte_end":165377,"line_start":166,"line_end":166,"column_start":50,"column_end":61},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3084},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":165610,"byte_end":165621,"line_start":174,"line_end":174,"column_start":75,"column_end":86},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3084},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":165915,"byte_end":165926,"line_start":182,"line_end":182,"column_start":75,"column_end":86},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3084},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":166163,"byte_end":166174,"line_start":190,"line_end":190,"column_start":18,"column_end":29},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":167137,"byte_end":167148,"line_start":229,"line_end":229,"column_start":31,"column_end":42},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":169950,"byte_end":169961,"line_start":300,"line_end":300,"column_start":12,"column_end":23},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":170215,"byte_end":170226,"line_start":313,"line_end":313,"column_start":24,"column_end":35},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":170632,"byte_end":170643,"line_start":330,"line_end":330,"column_start":23,"column_end":34},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":171040,"byte_end":171051,"line_start":346,"line_end":346,"column_start":19,"column_end":30},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":172153,"byte_end":172164,"line_start":395,"line_end":395,"column_start":35,"column_end":46},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3084},"to":{"krate":1,"index":2255}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":172270,"byte_end":172281,"line_start":401,"line_end":401,"column_start":35,"column_end":46},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3084},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":172404,"byte_end":172415,"line_start":407,"line_end":407,"column_start":35,"column_end":46},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3084},"to":{"krate":1,"index":2255}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":172521,"byte_end":172532,"line_start":413,"line_end":413,"column_start":35,"column_end":46},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3084},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":174608,"byte_end":174619,"line_start":496,"line_end":496,"column_start":39,"column_end":50},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3109},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":174813,"byte_end":174824,"line_start":502,"line_end":502,"column_start":43,"column_end":54},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":3109},"to":{"krate":1,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":175018,"byte_end":175029,"line_start":508,"line_end":508,"column_start":33,"column_end":44},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":3109},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":175170,"byte_end":175181,"line_start":514,"line_end":514,"column_start":12,"column_end":23},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":3109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":175437,"byte_end":175448,"line_start":526,"line_end":526,"column_start":19,"column_end":30},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":3109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":175705,"byte_end":175716,"line_start":533,"line_end":533,"column_start":19,"column_end":30},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":3109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":176019,"byte_end":176030,"line_start":542,"line_end":542,"column_start":18,"column_end":29},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":3109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":176366,"byte_end":176377,"line_start":551,"line_end":551,"column_start":19,"column_end":30},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":3109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":176742,"byte_end":176753,"line_start":560,"line_end":560,"column_start":47,"column_end":58},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":3109},"to":{"krate":1,"index":1596}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":176986,"byte_end":176997,"line_start":567,"line_end":567,"column_start":47,"column_end":58},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":3109},"to":{"krate":1,"index":1601}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":177228,"byte_end":177239,"line_start":574,"line_end":574,"column_start":45,"column_end":56},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":3109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":177346,"byte_end":177357,"line_start":580,"line_end":580,"column_start":12,"column_end":23},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":3109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":177886,"byte_end":177897,"line_start":598,"line_end":598,"column_start":31,"column_end":42},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":3109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":178083,"byte_end":178094,"line_start":605,"line_end":605,"column_start":18,"column_end":29},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":3109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":178233,"byte_end":178244,"line_start":611,"line_end":611,"column_start":27,"column_end":38},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":3109},"to":{"krate":0,"index":322}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":178402,"byte_end":178413,"line_start":617,"line_end":617,"column_start":50,"column_end":61},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":3109},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":178641,"byte_end":178652,"line_start":625,"line_end":625,"column_start":50,"column_end":61},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":3109},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":178905,"byte_end":178916,"line_start":633,"line_end":633,"column_start":75,"column_end":86},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":3109},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":179236,"byte_end":179247,"line_start":641,"line_end":641,"column_start":75,"column_end":86},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":3109},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":179510,"byte_end":179521,"line_start":649,"line_end":649,"column_start":18,"column_end":29},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":3109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":180594,"byte_end":180605,"line_start":689,"line_end":689,"column_start":31,"column_end":42},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":3109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":183446,"byte_end":183457,"line_start":760,"line_end":760,"column_start":12,"column_end":23},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":183757,"byte_end":183768,"line_start":773,"line_end":773,"column_start":24,"column_end":35},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":184256,"byte_end":184267,"line_start":792,"line_end":792,"column_start":23,"column_end":34},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\size.rs","byte_start":184748,"byte_end":184759,"line_start":810,"line_end":810,"column_start":19,"column_end":30},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":3109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":188139,"byte_end":188155,"line_start":55,"line_end":55,"column_start":25,"column_end":41},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":3135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":192393,"byte_end":192409,"line_start":171,"line_end":171,"column_start":36,"column_end":52},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":3135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":193342,"byte_end":193358,"line_start":196,"line_end":196,"column_start":19,"column_end":35},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":3135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":193931,"byte_end":193947,"line_start":217,"line_end":217,"column_start":19,"column_end":35},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":3135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":200713,"byte_end":200729,"line_start":406,"line_end":406,"column_start":20,"column_end":36},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":3135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":201220,"byte_end":201236,"line_start":423,"line_end":423,"column_start":32,"column_end":48},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":3135},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":201387,"byte_end":201403,"line_start":431,"line_end":431,"column_start":32,"column_end":48},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":3135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform2d.rs","byte_start":201757,"byte_end":201773,"line_start":439,"line_end":439,"column_start":53,"column_end":69},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":3135},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":209688,"byte_end":209704,"line_start":58,"line_end":58,"column_start":19,"column_end":35},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":3170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":211672,"byte_end":211688,"line_start":110,"line_end":110,"column_start":20,"column_end":36},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":3170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":212361,"byte_end":212377,"line_start":134,"line_end":134,"column_start":20,"column_end":36},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":3170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":235833,"byte_end":235849,"line_start":691,"line_end":691,"column_start":25,"column_end":41},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":3170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":239943,"byte_end":239959,"line_start":784,"line_end":784,"column_start":36,"column_end":52},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":3170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":241472,"byte_end":241488,"line_start":814,"line_end":814,"column_start":32,"column_end":48},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":3170},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\transform3d.rs","byte_start":241641,"byte_end":241657,"line_start":822,"line_end":822,"column_start":34,"column_end":50},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":3170},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":254921,"byte_end":254939,"line_start":47,"line_end":47,"column_start":19,"column_end":37},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":3215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255134,"byte_end":255152,"line_start":58,"line_end":58,"column_start":19,"column_end":37},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":3215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255377,"byte_end":255395,"line_start":73,"line_end":73,"column_start":19,"column_end":37},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":3215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255578,"byte_end":255596,"line_start":84,"line_end":84,"column_start":19,"column_end":37},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":3215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":255774,"byte_end":255792,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":3215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":256647,"byte_end":256665,"line_start":125,"line_end":125,"column_start":19,"column_end":37},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":3215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":256964,"byte_end":256982,"line_start":137,"line_end":137,"column_start":5,"column_end":23},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":3215},"to":{"krate":1,"index":1596}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":257375,"byte_end":257393,"line_start":152,"line_end":152,"column_start":9,"column_end":27},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":3215},"to":{"krate":1,"index":1601}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":257728,"byte_end":257746,"line_start":165,"line_end":165,"column_start":19,"column_end":37},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":3215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":258241,"byte_end":258259,"line_start":185,"line_end":185,"column_start":51,"column_end":69},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":3215},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":258442,"byte_end":258460,"line_start":194,"line_end":194,"column_start":51,"column_end":69},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":3215},"to":{"krate":1,"index":2255}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":258635,"byte_end":258653,"line_start":203,"line_end":203,"column_start":59,"column_end":77},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":3215},"to":{"krate":1,"index":2255}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":259006,"byte_end":259024,"line_start":221,"line_end":221,"column_start":32,"column_end":50},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":3215},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":259159,"byte_end":259177,"line_start":229,"line_end":229,"column_start":34,"column_end":52},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":3215},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":259736,"byte_end":259754,"line_start":252,"line_end":252,"column_start":19,"column_end":37},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":3246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":259970,"byte_end":259988,"line_start":264,"line_end":264,"column_start":19,"column_end":37},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":3246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":260231,"byte_end":260249,"line_start":279,"line_end":279,"column_start":19,"column_end":37},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":3246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":260435,"byte_end":260453,"line_start":290,"line_end":290,"column_start":19,"column_end":37},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":3246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":260654,"byte_end":260672,"line_start":300,"line_end":300,"column_start":19,"column_end":37},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":3246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":261750,"byte_end":261768,"line_start":337,"line_end":337,"column_start":19,"column_end":37},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":3246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":262076,"byte_end":262094,"line_start":349,"line_end":349,"column_start":5,"column_end":23},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":3246},"to":{"krate":1,"index":1596}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":262517,"byte_end":262535,"line_start":365,"line_end":365,"column_start":9,"column_end":27},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":3246},"to":{"krate":1,"index":1601}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":262900,"byte_end":262918,"line_start":379,"line_end":379,"column_start":19,"column_end":37},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":3246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":263421,"byte_end":263439,"line_start":398,"line_end":398,"column_start":51,"column_end":69},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":3246},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":263627,"byte_end":263645,"line_start":407,"line_end":407,"column_start":51,"column_end":69},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":3246},"to":{"krate":1,"index":2255}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":263828,"byte_end":263846,"line_start":416,"line_end":416,"column_start":59,"column_end":77},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":3246},"to":{"krate":1,"index":2255}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":264199,"byte_end":264217,"line_start":433,"line_end":433,"column_start":32,"column_end":50},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":3246},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\translation.rs","byte_start":264352,"byte_end":264370,"line_start":441,"line_end":441,"column_start":34,"column_end":52},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":3246},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":269383,"byte_end":269396,"line_start":45,"line_end":45,"column_start":25,"column_end":38},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":269749,"byte_end":269762,"line_start":59,"line_end":59,"column_start":39,"column_end":52},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":269930,"byte_end":269943,"line_start":65,"line_end":65,"column_start":43,"column_end":56},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":270113,"byte_end":270126,"line_start":71,"line_end":71,"column_start":33,"column_end":46},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":270249,"byte_end":270262,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":270495,"byte_end":270508,"line_start":89,"line_end":89,"column_start":18,"column_end":31},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":272229,"byte_end":272242,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":272623,"byte_end":272636,"line_start":181,"line_end":181,"column_start":12,"column_end":25},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":272900,"byte_end":272913,"line_start":191,"line_end":191,"column_start":12,"column_end":25},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":274086,"byte_end":274099,"line_start":244,"line_end":244,"column_start":12,"column_end":25},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":274507,"byte_end":274520,"line_start":258,"line_end":258,"column_start":47,"column_end":60},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":1596}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":274717,"byte_end":274730,"line_start":265,"line_end":265,"column_start":53,"column_end":66},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":1629}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":274909,"byte_end":274922,"line_start":272,"line_end":272,"column_start":74,"column_end":87},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":1633}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":275074,"byte_end":275087,"line_start":279,"line_end":279,"column_start":47,"column_end":60},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":1601}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":275275,"byte_end":275288,"line_start":287,"line_end":287,"column_start":44,"column_end":57},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":1623}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":275420,"byte_end":275433,"line_start":295,"line_end":295,"column_start":19,"column_end":32},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":275845,"byte_end":275858,"line_start":312,"line_end":312,"column_start":50,"column_end":63},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":276045,"byte_end":276058,"line_start":320,"line_end":320,"column_start":50,"column_end":63},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":276251,"byte_end":276264,"line_start":328,"line_end":328,"column_start":56,"column_end":69},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":1637}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":276422,"byte_end":276435,"line_start":335,"line_end":335,"column_start":56,"column_end":69},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":1641}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":276612,"byte_end":276625,"line_start":342,"line_end":342,"column_start":75,"column_end":88},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":276894,"byte_end":276907,"line_start":350,"line_end":350,"column_start":75,"column_end":88},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":277120,"byte_end":277133,"line_start":358,"line_end":358,"column_start":19,"column_end":32},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":277520,"byte_end":277533,"line_start":370,"line_end":370,"column_start":18,"column_end":31},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":277952,"byte_end":277965,"line_start":382,"line_end":382,"column_start":19,"column_end":32},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":278396,"byte_end":278409,"line_start":394,"line_end":394,"column_start":28,"column_end":41},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":281382,"byte_end":281395,"line_start":473,"line_end":473,"column_start":66,"column_end":79},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":3294},"to":{"krate":0,"index":68}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":281858,"byte_end":281871,"line_start":490,"line_end":490,"column_start":35,"column_end":48},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":2255}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":281977,"byte_end":281990,"line_start":496,"line_end":496,"column_start":35,"column_end":48},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282112,"byte_end":282125,"line_start":502,"line_end":502,"column_start":35,"column_end":48},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":2255}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282231,"byte_end":282244,"line_start":508,"line_end":508,"column_start":35,"column_end":48},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282341,"byte_end":282354,"line_start":514,"line_end":514,"column_start":12,"column_end":25},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":282896,"byte_end":282909,"line_start":541,"line_end":541,"column_start":25,"column_end":38},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":3319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":283341,"byte_end":283354,"line_start":559,"line_end":559,"column_start":39,"column_end":52},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":283535,"byte_end":283548,"line_start":565,"line_end":565,"column_start":43,"column_end":56},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":283713,"byte_end":283726,"line_start":571,"line_end":571,"column_start":33,"column_end":46},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":283869,"byte_end":283882,"line_start":577,"line_end":577,"column_start":12,"column_end":25},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":3319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":284136,"byte_end":284149,"line_start":590,"line_end":590,"column_start":18,"column_end":31},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":3319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":286158,"byte_end":286171,"line_start":670,"line_end":670,"column_start":12,"column_end":25},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":3319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":286659,"byte_end":286672,"line_start":690,"line_end":690,"column_start":5,"column_end":18},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":3319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":287859,"byte_end":287872,"line_start":744,"line_end":744,"column_start":12,"column_end":25},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":3319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":288280,"byte_end":288293,"line_start":758,"line_end":758,"column_start":47,"column_end":60},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":1596}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":288502,"byte_end":288515,"line_start":766,"line_end":766,"column_start":47,"column_end":60},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":1601}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":288730,"byte_end":288743,"line_start":774,"line_end":774,"column_start":53,"column_end":66},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":1629}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":288922,"byte_end":288935,"line_start":781,"line_end":781,"column_start":74,"column_end":87},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":1633}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":289084,"byte_end":289097,"line_start":788,"line_end":788,"column_start":44,"column_end":57},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":1623}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":289269,"byte_end":289282,"line_start":796,"line_end":796,"column_start":50,"column_end":63},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":289490,"byte_end":289503,"line_start":804,"line_end":804,"column_start":50,"column_end":63},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":289717,"byte_end":289730,"line_start":812,"line_end":812,"column_start":56,"column_end":69},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":1637}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":289888,"byte_end":289901,"line_start":819,"line_end":819,"column_start":56,"column_end":69},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":1641}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":290022,"byte_end":290035,"line_start":826,"line_end":826,"column_start":19,"column_end":32},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":3319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":290608,"byte_end":290621,"line_start":851,"line_end":851,"column_start":75,"column_end":88},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":290912,"byte_end":290925,"line_start":859,"line_end":859,"column_start":75,"column_end":88},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":291160,"byte_end":291173,"line_start":867,"line_end":867,"column_start":19,"column_end":32},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":3319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":291513,"byte_end":291526,"line_start":878,"line_end":878,"column_start":18,"column_end":31},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":3319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":291899,"byte_end":291912,"line_start":889,"line_end":889,"column_start":19,"column_end":32},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":3319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":292295,"byte_end":292308,"line_start":900,"line_end":900,"column_start":28,"column_end":41},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":3319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":295353,"byte_end":295366,"line_start":983,"line_end":983,"column_start":66,"column_end":79},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":3319},"to":{"krate":0,"index":68}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":295981,"byte_end":295994,"line_start":1005,"line_end":1005,"column_start":35,"column_end":48},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":2255}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296100,"byte_end":296113,"line_start":1011,"line_end":1011,"column_start":35,"column_end":48},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296248,"byte_end":296261,"line_start":1017,"line_end":1017,"column_start":38,"column_end":51},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":2255}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296373,"byte_end":296386,"line_start":1023,"line_end":1023,"column_start":38,"column_end":51},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":3319},"to":{"krate":1,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296495,"byte_end":296508,"line_start":1029,"line_end":1029,"column_start":12,"column_end":25},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":3319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":296884,"byte_end":296896,"line_start":1051,"line_end":1051,"column_start":6,"column_end":18},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":3345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":298368,"byte_end":298380,"line_start":1116,"line_end":1116,"column_start":6,"column_end":18},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":3363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":300225,"byte_end":300238,"line_start":1203,"line_end":1203,"column_start":24,"column_end":37},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":300608,"byte_end":300621,"line_start":1220,"line_end":1220,"column_start":23,"column_end":36},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":300987,"byte_end":301000,"line_start":1236,"line_end":1236,"column_start":24,"column_end":37},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":3319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\vector.rs","byte_start":301436,"byte_end":301449,"line_start":1255,"line_end":1255,"column_start":23,"column_end":36},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":3319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":312695,"byte_end":312705,"line_start":42,"line_end":42,"column_start":27,"column_end":37},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":2585},"to":{"krate":1,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":312844,"byte_end":312854,"line_start":49,"line_end":49,"column_start":27,"column_end":37},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":2585},"to":{"krate":1,"index":1543}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":312892,"byte_end":312902,"line_start":51,"line_end":51,"column_start":28,"column_end":38},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":2585},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":313018,"byte_end":313028,"line_start":57,"line_end":57,"column_start":55,"column_end":65},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":2585},"to":{"krate":1,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":313168,"byte_end":313178,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":2585},"to":{"krate":1,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":313227,"byte_end":313237,"line_start":65,"line_end":65,"column_start":39,"column_end":49},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":2585},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":313420,"byte_end":313430,"line_start":71,"line_end":71,"column_start":43,"column_end":53},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":2585},"to":{"krate":1,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":313589,"byte_end":313599,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":313789,"byte_end":313799,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":314134,"byte_end":314144,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":315836,"byte_end":315846,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":316147,"byte_end":316157,"line_start":171,"line_end":171,"column_start":12,"column_end":22},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":316691,"byte_end":316701,"line_start":186,"line_end":186,"column_start":12,"column_end":22},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":317319,"byte_end":317329,"line_start":202,"line_end":202,"column_start":12,"column_end":22},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":317604,"byte_end":317614,"line_start":216,"line_end":216,"column_start":12,"column_end":22},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":318375,"byte_end":318385,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":320057,"byte_end":320067,"line_start":293,"line_end":293,"column_start":12,"column_end":22},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":320479,"byte_end":320489,"line_start":309,"line_end":309,"column_start":12,"column_end":22},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":320715,"byte_end":320725,"line_start":319,"line_end":319,"column_start":12,"column_end":22},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":321308,"byte_end":321318,"line_start":340,"line_end":340,"column_start":12,"column_end":22},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":321678,"byte_end":321688,"line_start":356,"line_end":356,"column_start":12,"column_end":22},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":322258,"byte_end":322268,"line_start":385,"line_end":385,"column_start":12,"column_end":22},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":322468,"byte_end":322478,"line_start":395,"line_end":395,"column_start":12,"column_end":22},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":322726,"byte_end":322736,"line_start":406,"line_end":406,"column_start":23,"column_end":33},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":2585},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":322952,"byte_end":322962,"line_start":417,"line_end":417,"column_start":23,"column_end":33},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":2585},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":323203,"byte_end":323213,"line_start":428,"line_end":428,"column_start":48,"column_end":58},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":2585},"to":{"krate":1,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":323501,"byte_end":323511,"line_start":439,"line_end":439,"column_start":48,"column_end":58},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":2585},"to":{"krate":1,"index":1611}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":323766,"byte_end":323776,"line_start":450,"line_end":450,"column_start":15,"column_end":25},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":324246,"byte_end":324256,"line_start":468,"line_end":468,"column_start":16,"column_end":26},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":325452,"byte_end":325462,"line_start":497,"line_end":497,"column_start":12,"column_end":22},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":326179,"byte_end":326189,"line_start":516,"line_end":516,"column_start":12,"column_end":22},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":326970,"byte_end":326980,"line_start":542,"line_end":542,"column_start":31,"column_end":41},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.19.9\\src\\box3d.rs","byte_start":328701,"byte_end":328711,"line_start":590,"line_end":590,"column_start":40,"column_end":50},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":2585},"to":{"krate":1,"index":2258}}]}