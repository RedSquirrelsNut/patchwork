{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","gfx","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=09d104ba6f33d71c","-C","extra-filename=-09d104ba6f33d71c","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--extern","draw_state=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libdraw_state-cfa08d13d0a22ebc.rmeta","--extern","gfx_core=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libgfx_core-2ae47c3b0ae5618d.rmeta","--extern","log=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\liblog-ae804962dc3d6abe.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libgfx-09d104ba6f33d71c.rmeta"},"prelude":{"crate_id":{"name":"gfx","disambiguator":[15978231482724751123,5992532738270921234]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":14,"id":{"name":"log","disambiguator":[17746278763066137263,8798032287631474102]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":15,"id":{"name":"cfg_if","disambiguator":[2442249708866091360,16714075183114805585]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":16,"id":{"name":"draw_state","disambiguator":[12611816491223585549,11225982447819350507]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":17,"id":{"name":"bitflags","disambiguator":[1258995681021104935,10120995213895226001]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","num":18,"id":{"name":"gfx_core","disambiguator":[15204018979452310899,48761589645094072]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":600,"byte_end":5278,"line_start":15,"line_end":142,"column_start":1,"column_end":16}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":1161},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3674,"byte_end":3680,"line_start":100,"line_end":100,"column_start":20,"column_end":26},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":18,"index":276},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3682,"byte_end":3689,"line_start":100,"line_end":100,"column_start":28,"column_end":35},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":18,"index":868},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3718,"byte_end":3721,"line_start":101,"line_end":101,"column_start":27,"column_end":30},"alias_span":null,"name":"Pod","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3744,"byte_end":3754,"line_start":102,"line_end":102,"column_start":22,"column_end":32},"alias_span":null,"name":"FactoryExt","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":16,"index":4},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3805,"byte_end":3811,"line_start":106,"line_end":106,"column_start":22,"column_end":28},"alias_span":null,"name":"preset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":25},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3813,"byte_end":3818,"line_start":106,"line_end":106,"column_start":30,"column_end":35},"alias_span":null,"name":"state","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3849,"byte_end":3850,"line_start":107,"line_end":107,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1161},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3889,"byte_end":3895,"line_start":110,"line_end":110,"column_start":16,"column_end":22},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":5854},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3897,"byte_end":3906,"line_start":110,"line_end":110,"column_start":24,"column_end":33},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1140},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3908,"byte_end":3917,"line_start":110,"line_end":110,"column_start":35,"column_end":44},"alias_span":null,"name":"Resources","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":5914},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3919,"byte_end":3934,"line_start":110,"line_end":110,"column_start":46,"column_end":61},"alias_span":null,"name":"SubmissionError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1159},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3936,"byte_end":3952,"line_start":110,"line_end":110,"column_start":63,"column_end":79},"alias_span":null,"name":"SubmissionResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1126},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3970,"byte_end":3981,"line_start":111,"line_end":111,"column_start":16,"column_end":27},"alias_span":null,"name":"VertexCount","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1127},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3983,"byte_end":3996,"line_start":111,"line_end":111,"column_start":29,"column_end":42},"alias_span":null,"name":"InstanceCount","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":5783},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4014,"byte_end":4023,"line_start":112,"line_end":112,"column_start":16,"column_end":25},"alias_span":null,"name":"ShaderSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":5658},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4025,"byte_end":4037,"line_start":112,"line_end":112,"column_start":27,"column_end":39},"alias_span":null,"name":"VertexShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":5683},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4039,"byte_end":4049,"line_start":112,"line_end":112,"column_start":41,"column_end":51},"alias_span":null,"name":"HullShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":5708},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4051,"byte_end":4063,"line_start":112,"line_end":112,"column_start":53,"column_end":65},"alias_span":null,"name":"DomainShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":5733},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4065,"byte_end":4079,"line_start":112,"line_end":112,"column_start":67,"column_end":81},"alias_span":null,"name":"GeometryShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":5758},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4081,"byte_end":4092,"line_start":112,"line_end":112,"column_start":83,"column_end":94},"alias_span":null,"name":"PixelShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":16},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4110,"byte_end":4116,"line_start":113,"line_end":113,"column_start":16,"column_end":22},"alias_span":null,"name":"buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":344},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4118,"byte_end":4124,"line_start":113,"line_end":113,"column_start":24,"column_end":30},"alias_span":null,"name":"format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":415},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4126,"byte_end":4132,"line_start":113,"line_end":113,"column_start":32,"column_end":38},"alias_span":null,"name":"handle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":763},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4134,"byte_end":4141,"line_start":113,"line_end":113,"column_start":40,"column_end":47},"alias_span":null,"name":"mapping","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":860},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4143,"byte_end":4149,"line_start":113,"line_end":113,"column_start":49,"column_end":55},"alias_span":null,"name":"memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1017},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4151,"byte_end":4158,"line_start":113,"line_end":113,"column_start":57,"column_end":64},"alias_span":null,"name":"texture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":276},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4185,"byte_end":4192,"line_start":114,"line_end":114,"column_start":25,"column_end":32},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1431},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4194,"byte_end":4211,"line_start":114,"line_end":114,"column_start":34,"column_end":51},"alias_span":null,"name":"ResourceViewError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1450},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4213,"byte_end":4228,"line_start":114,"line_end":114,"column_start":53,"column_end":68},"alias_span":null,"name":"TargetViewError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":1474},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4230,"byte_end":4243,"line_start":114,"line_end":114,"column_start":70,"column_end":83},"alias_span":null,"name":"CombinedError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":70},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4270,"byte_end":4276,"line_start":115,"line_end":115,"column_start":25,"column_end":31},"alias_span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4280,"byte_end":4293,"line_start":115,"line_end":115,"column_start":35,"column_end":48},"name":"CommandBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":69},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4295,"byte_end":4309,"line_start":115,"line_end":115,"column_start":50,"column_end":64},"alias_span":null,"name":"InstanceParams","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":4780},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4334,"byte_end":4345,"line_start":116,"line_end":116,"column_start":23,"column_end":34},"alias_span":null,"name":"ProgramInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":4408},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4347,"byte_end":4359,"line_start":116,"line_end":116,"column_start":36,"column_end":48},"alias_span":null,"name":"UniformValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4381,"byte_end":4397,"line_start":118,"line_end":118,"column_start":19,"column_end":35},"alias_span":null,"name":"CopyBufferResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4399,"byte_end":4422,"line_start":118,"line_end":118,"column_start":37,"column_end":60},"alias_span":null,"name":"CopyBufferTextureResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4424,"byte_end":4433,"line_start":118,"line_end":118,"column_start":62,"column_end":71},"alias_span":null,"name":"CopyError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4453,"byte_end":4476,"line_start":119,"line_end":119,"column_start":19,"column_end":42},"alias_span":null,"name":"CopyTextureBufferResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4478,"byte_end":4485,"line_start":119,"line_end":119,"column_start":44,"column_end":51},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4487,"byte_end":4498,"line_start":119,"line_end":119,"column_start":53,"column_end":64},"alias_span":null,"name":"UpdateError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4518,"byte_end":4536,"line_start":120,"line_end":120,"column_start":18,"column_end":36},"alias_span":null,"name":"PipelineStateError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4554,"byte_end":4559,"line_start":121,"line_end":121,"column_start":17,"column_end":22},"alias_span":null,"name":"Slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4561,"byte_end":4576,"line_start":121,"line_end":121,"column_start":24,"column_end":39},"alias_span":null,"name":"IntoIndexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4578,"byte_end":4589,"line_start":121,"line_end":121,"column_start":41,"column_end":52},"alias_span":null,"name":"IndexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4606,"byte_end":4619,"line_start":122,"line_end":122,"column_start":15,"column_end":28},"alias_span":null,"name":"PipelineState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4644,"byte_end":4656,"line_start":123,"line_end":123,"column_start":23,"column_end":35},"alias_span":null,"name":"VertexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4658,"byte_end":4672,"line_start":123,"line_end":123,"column_start":37,"column_end":51},"alias_span":null,"name":"InstanceBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4674,"byte_end":4689,"line_start":123,"line_end":123,"column_start":53,"column_end":68},"alias_span":null,"name":"RawVertexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4713,"byte_end":4727,"line_start":124,"line_end":124,"column_start":23,"column_end":37},"alias_span":null,"name":"ConstantBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1149},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4729,"byte_end":4746,"line_start":124,"line_end":124,"column_start":39,"column_end":56},"alias_span":null,"name":"RawConstantBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4748,"byte_end":4754,"line_start":124,"line_end":124,"column_start":58,"column_end":64},"alias_span":null,"name":"Global","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1166},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4756,"byte_end":4765,"line_start":124,"line_end":124,"column_start":66,"column_end":75},"alias_span":null,"name":"RawGlobal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4792,"byte_end":4806,"line_start":125,"line_end":125,"column_start":25,"column_end":39},"alias_span":null,"name":"ShaderResource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1183},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4808,"byte_end":4825,"line_start":125,"line_end":125,"column_start":41,"column_end":58},"alias_span":null,"name":"RawShaderResource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4827,"byte_end":4842,"line_start":125,"line_end":125,"column_start":60,"column_end":75},"alias_span":null,"name":"UnorderedAccess","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4868,"byte_end":4875,"line_start":126,"line_end":126,"column_start":25,"column_end":32},"alias_span":null,"name":"Sampler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4877,"byte_end":4891,"line_start":126,"line_end":126,"column_start":34,"column_end":48},"alias_span":null,"name":"TextureSampler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4916,"byte_end":4934,"line_start":127,"line_end":127,"column_start":23,"column_end":41},"alias_span":null,"name":"DepthStencilTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4936,"byte_end":4947,"line_start":127,"line_end":127,"column_start":43,"column_end":54},"alias_span":null,"name":"DepthTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4949,"byte_end":4962,"line_start":127,"line_end":127,"column_start":56,"column_end":69},"alias_span":null,"name":"StencilTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":4986,"byte_end":4998,"line_start":128,"line_end":128,"column_start":23,"column_end":35},"alias_span":null,"name":"RenderTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1217},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5000,"byte_end":5015,"line_start":128,"line_end":128,"column_start":37,"column_end":52},"alias_span":null,"name":"RawRenderTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5017,"byte_end":5028,"line_start":128,"line_end":128,"column_start":54,"column_end":65},"alias_span":null,"name":"BlendTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1251},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5030,"byte_end":5038,"line_start":128,"line_end":128,"column_start":67,"column_end":75},"alias_span":null,"name":"BlendRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5040,"byte_end":5047,"line_start":128,"line_end":128,"column_start":77,"column_end":84},"alias_span":null,"name":"Scissor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5072,"byte_end":5078,"line_start":129,"line_end":129,"column_start":23,"column_end":29},"alias_span":null,"name":"Bundle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":916},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64740,"byte_end":64751,"line_start":25,"line_end":25,"column_start":21,"column_end":32},"alias_span":null,"name":"BufferIndex","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":18,"index":3918},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64753,"byte_end":64760,"line_start":25,"line_end":25,"column_start":34,"column_end":41},"alias_span":null,"name":"Element","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":18,"index":917},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64762,"byte_end":64772,"line_start":25,"line_end":25,"column_start":43,"column_end":53},"alias_span":null,"name":"ElemOffset","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":18,"index":918},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64774,"byte_end":64784,"line_start":25,"line_end":25,"column_start":55,"column_end":65},"alias_span":null,"name":"ElemStride","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":18,"index":919},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64786,"byte_end":64798,"line_start":25,"line_end":25,"column_start":67,"column_end":79},"alias_span":null,"name":"InstanceRate","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":18,"index":3963},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51259,"byte_end":51269,"line_start":51,"line_end":51,"column_start":20,"column_end":30},"alias_span":null,"name":"Descriptor","value":"","parent":{"krate":0,"index":305}},{"kind":"Use","ref_id":{"krate":18,"index":1340},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51294,"byte_end":51304,"line_start":52,"line_end":52,"column_start":24,"column_end":34},"alias_span":null,"name":"AccessInfo","value":"","parent":{"krate":0,"index":305}},{"kind":"Use","ref_id":{"krate":18,"index":950},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":101094,"byte_end":101098,"line_start":22,"line_end":22,"column_start":23,"column_end":27},"alias_span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":101102,"byte_end":101106,"line_start":22,"line_end":22,"column_start":31,"column_end":35},"name":"core","value":"","parent":{"krate":0,"index":933}},{"kind":"Use","ref_id":{"krate":18,"index":973},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":101108,"byte_end":101119,"line_start":22,"line_end":22,"column_start":37,"column_end":48},"alias_span":null,"name":"ConstFormat","value":"","parent":{"krate":0,"index":933}},{"kind":"Use","ref_id":{"krate":18,"index":976},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":101121,"byte_end":101130,"line_start":22,"line_end":22,"column_start":50,"column_end":59},"alias_span":null,"name":"Formatted","value":"","parent":{"krate":0,"index":933}},{"kind":"Use","ref_id":{"krate":18,"index":4539},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":101132,"byte_end":101137,"line_start":22,"line_end":22,"column_start":61,"column_end":66},"alias_span":null,"name":"Usage","value":"","parent":{"krate":0,"index":933}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":600,"byte_end":5278,"line_start":15,"line_end":142,"column_start":1,"column_end":16},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":32},{"krate":0,"index":39},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":72},{"krate":0,"index":78},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":188},{"krate":0,"index":268},{"krate":0,"index":305},{"krate":0,"index":933},{"krate":0,"index":949}],"decl_id":null,"docs":" # gfx\n\n An efficient, low-level, bindless graphics API for Rust.\n\n # Overview\n\n ## Command buffers and encoders\n\n A command buffer is a serialized list of drawing and compute commands.\n Unlike with vulkan, command buffers are not what you use to create commands, but only\n the result of creating these commands. Gfx, borrowing metal's terminology, uses\n encoders to build command buffers. This means that, in general, users of the gfx crate\n don't manipulate command buffers directly much and interact mostly with encoders.\n\n Manipulating an `Encoder` in gfx corresponds to interacting with:\n\n - a `VkCommandBuffer` in vulkan,\n - a `MTLCommandEncoder` in metal,\n - an `ID3D12GraphicsCommandList` in D3D12.\n\n OpenGL and earlier versions of D3D don't have an explicit notion of command buffers\n or encoders (with the exception of draw indirect commands in late versions of OpenGL,\n which can be seen as a GPU-side command buffer). They are managed implicitly by the driver.\n\n See:\n\n - The [`Encoder` struct documentation](struct.Encoder.html).\n - The [`Command buffer` trait documentation](trait.CommandBuffer.html).\n\n ## Factory\n\n The factory is what lets you allocate GPU resources such as buffers and textures.\n\n Each gfx backend provides its own factory type which implements both:\n\n - The [`Factory` trait](traits/trait.Factory.html#overview).\n - The [`FactoryExt` trait](traits/trait.FactoryExt.html).\n\n `gfx::Factory` is roughly equivalent to:\n\n - `VkDevice` in vulkan,\n - `ID3D11Device` in D3D11,\n - `MTLDevice` in metal.\n\n OpenGL does not have a notion of factory (resources are created directly off of the global\n context). D3D11 has a DXGI factory but it is only used to interface with other processes\n and the window manager, resources like textures are usually created using the device.\n\n ## Device\n\n See [the `gfx::Device` trait](trait.Device.html).\n\n ## Pipeline state (PSO)\n\n See [the documentation of the gfx::pso module](pso/index.html).\n\n ## Memory management\n\n Handles internally use atomically reference counted pointers to deal with memory management.\n GPU resources are not destroyed right away when all references to them are gone. Instead they\n are destroyed the next time [Device::cleanup](trait.Device.html#tymethod.cleanup) is called.\n\n # Examples\n\n See [the examples in the repository](https://github.com/gfx-rs/gfx/tree/master/examples).\n\n # Useful resources\n\n  - [Documentation for some of the technical terms](doc/terminology/index.html)\n used in the API.\n  - [Learning gfx](https://wiki.alopex.li/LearningGfx) tutorial.\n  - See [the blog](http://gfx-rs.github.io/) for more explanations and annotated examples.\n\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":600,"byte_end":622,"line_start":15,"line_end":15,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":3646,"byte_end":3652,"line_start":99,"line_end":99,"column_start":9,"column_end":15},"name":"traits","qualname":"::traits","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11}],"decl_id":null,"docs":" public re-exported traits\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":966},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6368,"byte_end":6382,"line_start":34,"line_end":34,"column_start":5,"column_end":19},"name":"OutOfSrcBounds","qualname":"::encoder::CopyError::OutOfSrcBounds","value":"CopyError::OutOfSrcBounds { size, copy_end }","parent":{"krate":0,"index":963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6434,"byte_end":6448,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"name":"OutOfDstBounds","qualname":"::encoder::CopyError::OutOfDstBounds","value":"CopyError::OutOfDstBounds { size, copy_end }","parent":{"krate":0,"index":963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":972},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6500,"byte_end":6507,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"Overlap","qualname":"::encoder::CopyError::Overlap","value":"CopyError::Overlap { src_offset, dst_offset, size }","parent":{"krate":0,"index":963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":976},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6596,"byte_end":6609,"line_start":47,"line_end":47,"column_start":5,"column_end":18},"name":"NoSrcBindFlag","qualname":"::encoder::CopyError::NoSrcBindFlag","value":"CopyError::NoSrcBindFlag","parent":{"krate":0,"index":963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6615,"byte_end":6628,"line_start":48,"line_end":48,"column_start":5,"column_end":18},"name":"NoDstBindFlag","qualname":"::encoder::CopyError::NoDstBindFlag","value":"CopyError::NoDstBindFlag","parent":{"krate":0,"index":963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6346,"byte_end":6355,"line_start":33,"line_end":33,"column_start":10,"column_end":19},"name":"CopyError","qualname":"::encoder::CopyError","value":"CopyError::{OutOfSrcBounds, OutOfDstBounds, Overlap, NoSrcBindFlag, NoDstBindFlag}","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":976},{"krate":0,"index":978}],"decl_id":null,"docs":" An error occuring in memory copies.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6279,"byte_end":6301,"line_start":31,"line_end":31,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6710,"byte_end":6726,"line_start":52,"line_end":52,"column_start":10,"column_end":26},"name":"CopyBufferResult","qualname":"::encoder::CopyBufferResult","value":"Result<(), CopyError<usize, usize>>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned when copying a buffer into another buffer.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6842,"byte_end":6865,"line_start":55,"line_end":55,"column_start":10,"column_end":33},"name":"CopyBufferTextureResult","qualname":"::encoder::CopyBufferTextureResult","value":"Result<(), CopyError<usize, [texture::Size; 3]>>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned when copying buffer data into a texture.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":6994,"byte_end":7017,"line_start":58,"line_end":58,"column_start":10,"column_end":33},"name":"CopyTextureBufferResult","qualname":"::encoder::CopyTextureBufferResult","value":"Result<(), CopyError<[texture::Size; 3], usize>>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned when copying texture data into a buffer.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":8765,"byte_end":8776,"line_start":102,"line_end":102,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::encoder::UpdateError::OutOfBounds","value":"UpdateError::OutOfBounds { target, source }","parent":{"krate":0,"index":996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":8828,"byte_end":8845,"line_start":106,"line_end":106,"column_start":5,"column_end":22},"name":"UnitCountMismatch","qualname":"::encoder::UpdateError::UnitCountMismatch","value":"UpdateError::UnitCountMismatch { target, slice }","parent":{"krate":0,"index":996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1004},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":8904,"byte_end":8916,"line_start":110,"line_end":110,"column_start":5,"column_end":17},"name":"InvalidUsage","qualname":"::encoder::UpdateError::InvalidUsage","value":"UpdateError::InvalidUsage(Usage)","parent":{"krate":0,"index":996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":8744,"byte_end":8755,"line_start":101,"line_end":101,"column_start":10,"column_end":21},"name":"UpdateError","qualname":"::encoder::UpdateError","value":"UpdateError::{OutOfBounds, UnitCountMismatch, InvalidUsage}","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1004}],"decl_id":null,"docs":" An error occuring in buffer/texture updates.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":8677,"byte_end":8699,"line_start":99,"line_end":99,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":10835,"byte_end":10842,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025}],"decl_id":null,"docs":" Graphics Command Encoder\n\n # Overview\n The `Encoder` is a wrapper structure around a `CommandBuffer`. It is responsible for sending\n commands to the `CommandBuffer`.\n\n # Construction & Handling\n The `Encoder` implements `From<CommandBuffer>`, which is how it is constructed. There is no\n cross-API way to create a `CommandBuffer`, however, an API back-end should expose a function to\n create one in its `Factory` type. See the specific back-end for details on how to construct a\n `CommandBuffer`.\n\n The encoder exposes multiple functions that add commands to its internal `CommandBuffer`. To\n submit these commands to the GPU so they can be rendered, call `flush`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":11887,"byte_end":11892,"line_start":185,"line_end":185,"column_start":12,"column_end":17},"name":"flush","qualname":"<Encoder<R, C>>::flush","value":"fn <D> (&mut self, device: &mut D) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Submits the commands in this `Encoder`'s internal `CommandBuffer` to the GPU, so they can\n be executed.\n\n Calling `flush` before swapping buffers is critical as without it the commands of the\n internal ´CommandBuffer´ will not be sent to the GPU, and as a result they will not be\n processed. Calling flush too often however will result in a performance hit. It is\n generally recommended to call flush once per frame, when all draw calls have been made.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":12122,"byte_end":12136,"line_start":193,"line_end":193,"column_start":12,"column_end":26},"name":"flush_no_reset","qualname":"<Encoder<R, C>>::flush_no_reset","value":"fn <D> (&mut self, device: &mut D) -> SubmissionResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Like `flush` but keeps the encoded commands.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":12441,"byte_end":12462,"line_start":201,"line_end":201,"column_start":12,"column_end":33},"name":"fenced_flush_no_reset","qualname":"<Encoder<R, C>>::fenced_flush_no_reset","value":"fn <D> (&mut self, device: &mut D, after: Option<handle::Fence<R>>) -> SubmissionResult<handle::Fence<R>>","parent":null,"children":[],"decl_id":null,"docs":" Like `flush_no_reset` but places a fence.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":12923,"byte_end":12928,"line_start":212,"line_end":212,"column_start":12,"column_end":17},"name":"reset","qualname":"<Encoder<R, C>>::reset","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoded commands.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":13102,"byte_end":13113,"line_start":219,"line_end":219,"column_start":12,"column_end":23},"name":"copy_buffer","qualname":"<Encoder<R, C>>::copy_buffer","value":"fn <T> (&mut self, src: &handle::Buffer<R, T>, dst: &handle::Buffer<R, T>, src_offset: usize, dst_offset: usize, size: usize) -> CopyBufferResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a buffer to another\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":14965,"byte_end":14991,"line_start":266,"line_end":266,"column_start":12,"column_end":38},"name":"copy_buffer_to_texture_raw","qualname":"<Encoder<R, C>>::copy_buffer_to_texture_raw","value":"fn (&mut self, src: &handle::RawBuffer<R>, src_offset_bytes: usize, dst: &handle::RawTexture<R>, cube_face: Option<texture::CubeFace>, info: texture::RawImageInfo) -> CopyBufferTextureResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a buffer to a texture\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":16628,"byte_end":16654,"line_start":313,"line_end":313,"column_start":12,"column_end":38},"name":"copy_texture_to_buffer_raw","qualname":"<Encoder<R, C>>::copy_texture_to_buffer_raw","value":"fn (&mut self, src: &handle::RawTexture<R>, cube_face: Option<texture::CubeFace>, info: texture::RawImageInfo, dst: &handle::RawBuffer<R>, dst_offset_bytes: usize) -> CopyTextureBufferResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a texture to a buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":18294,"byte_end":18321,"line_start":360,"line_end":360,"column_start":12,"column_end":39},"name":"copy_texture_to_texture_raw","qualname":"<Encoder<R, C>>::copy_texture_to_texture_raw","value":"fn (&mut self, src: &handle::RawTexture<R>, src_face: Option<texture::CubeFace>, src_info: texture::RawImageInfo, dst: &handle::RawTexture<R>, dst_face: Option<texture::CubeFace>, dst_info: texture::RawImageInfo) -> CopyTextureResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a texture to another texture\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":20286,"byte_end":20299,"line_start":410,"line_end":410,"column_start":12,"column_end":25},"name":"update_buffer","qualname":"<Encoder<R, C>>::update_buffer","value":"fn <T> (&mut self, buf: &handle::Buffer<R, T>, data: &[T], offset_elements: usize) -> Result<(), UpdateError<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Update a buffer with a slice of data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":21199,"byte_end":21221,"line_start":434,"line_end":434,"column_start":12,"column_end":34},"name":"update_constant_buffer","qualname":"<Encoder<R, C>>::update_constant_buffer","value":"fn <T> (&mut self, buf: &handle::Buffer<R, T>, data: &T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Update a buffer with a single structure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":21678,"byte_end":21692,"line_start":447,"line_end":447,"column_start":12,"column_end":26},"name":"update_texture","qualname":"<Encoder<R, C>>::update_texture","value":"fn <S, T> (&mut self, tex: &handle::Texture<R, T::Surface>, cube_face: Option<texture::CubeFace>, img: texture::NewImageInfo, data: &[S::DataType]) -> Result<(), UpdateError<[texture::Size; 3]>>","parent":null,"children":[],"decl_id":null,"docs":" Update the contents of a texture.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":24308,"byte_end":24313,"line_start":510,"line_end":510,"column_start":12,"column_end":17},"name":"clear","qualname":"<Encoder<R, C>>::clear","value":"fn <T> (&mut self, view: &handle::RenderTargetView<R, T>, value: T::View) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the supplied `RenderTargetView` to the supplied `ClearColor`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":24587,"byte_end":24598,"line_start":516,"line_end":516,"column_start":12,"column_end":23},"name":"clear_depth","qualname":"<Encoder<R, C>>::clear_depth","value":"fn <T> (&mut self, view: &handle::DepthStencilView<R, T>, depth: Depth) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a depth view with a specified value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":24832,"byte_end":24845,"line_start":522,"line_end":522,"column_start":12,"column_end":25},"name":"clear_stencil","qualname":"<Encoder<R, C>>::clear_stencil","value":"fn <T> (&mut self, view: &handle::DepthStencilView<R, T>, stencil: Stencil) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a stencil view with a specified value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":25119,"byte_end":25128,"line_start":529,"line_end":529,"column_start":12,"column_end":21},"name":"clear_raw","qualname":"<Encoder<R, C>>::clear_raw","value":"fn (&mut self, view: &handle::RawRenderTargetView<R>, value: command::ClearColor) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the supplied `RawRenderTargetView` to the supplied `ClearColor`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":25437,"byte_end":25452,"line_start":538,"line_end":538,"column_start":12,"column_end":27},"name":"clear_depth_raw","qualname":"<Encoder<R, C>>::clear_depth_raw","value":"fn (&mut self, view: &handle::RawDepthStencilView<R>, depth: Depth) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a raw depth view with a specified value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":25780,"byte_end":25797,"line_start":546,"line_end":546,"column_start":12,"column_end":29},"name":"clear_stencil_raw","qualname":"<Encoder<R, C>>::clear_stencil_raw","value":"fn (&mut self, view: &handle::RawDepthStencilView<R>, stencil: Stencil) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a raw stencil view with a specified value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":26175,"byte_end":26179,"line_start":554,"line_end":554,"column_start":12,"column_end":16},"name":"draw","qualname":"<Encoder<R, C>>::draw","value":"fn <D> (&mut self, slice: &slice::Slice<R>, pipeline: &pso::PipelineState<R, D::Meta>, user_data: &D) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Draws a `slice::Slice` using a pipeline state object, and its matching `Data` structure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":27688,"byte_end":27703,"line_start":578,"line_end":578,"column_start":12,"column_end":27},"name":"generate_mipmap","qualname":"<Encoder<R, C>>::generate_mipmap","value":"fn <T> (&mut self, view: &handle::ShaderResourceView<R, T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate a mipmap chain for the given resource view.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":27891,"byte_end":27910,"line_start":583,"line_end":583,"column_start":12,"column_end":31},"name":"generate_mipmap_raw","qualname":"<Encoder<R, C>>::generate_mipmap_raw","value":"fn (&mut self, view: &handle::RawShaderResourceView<R>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Untyped version of mipmap generation.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":29429,"byte_end":29436,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"Program","qualname":"::factory::PipelineStateError::Program","value":"PipelineStateError::Program(ProgramError)","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" Shader program failed to link.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":29523,"byte_end":29537,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"name":"DescriptorInit","qualname":"::factory::PipelineStateError::DescriptorInit","value":"PipelineStateError::DescriptorInit(pso::InitError<S>)","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" Unable to create PSO descriptor due to mismatched formats.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":29626,"byte_end":29638,"line_start":40,"line_end":40,"column_start":5,"column_end":17},"name":"DeviceCreate","qualname":"::factory::PipelineStateError::DeviceCreate","value":"PipelineStateError::DeviceCreate(CreationError)","parent":{"krate":0,"index":1030},"children":[],"decl_id":null,"docs":" Device failed to create the handle give the descriptor.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":29362,"byte_end":29380,"line_start":34,"line_end":34,"column_start":10,"column_end":28},"name":"PipelineStateError","qualname":"::factory::PipelineStateError","value":"PipelineStateError::{Program, DescriptorInit, DeviceCreate}","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1038}],"decl_id":null,"docs":" Error creating a PipelineState\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":32035,"byte_end":32045,"line_start":102,"line_end":102,"column_start":11,"column_end":21},"name":"FactoryExt","qualname":"::factory::FactoryExt","value":"FactoryExt<R: Resources>: Factory<R>","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":264}],"decl_id":null,"docs":" This trait is responsible for creating and managing graphics resources, much like the `Factory`\n trait in the `gfx` crate. Every `Factory` automatically implements `FactoryExt`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":32208,"byte_end":32228,"line_start":105,"line_end":105,"column_start":8,"column_end":28},"name":"create_vertex_buffer","qualname":"::factory::FactoryExt::create_vertex_buffer","value":"fn <T> (&mut self, vertices: &[T]) -> handle::Buffer<R, T>","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Creates an immutable vertex buffer from the supplied vertices.\n A `Slice` will have to manually be constructed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":32724,"byte_end":32743,"line_start":117,"line_end":117,"column_start":8,"column_end":27},"name":"create_index_buffer","qualname":"::factory::FactoryExt::create_index_buffer","value":"fn <T> (&mut self, indices: T) -> IndexBuffer<R>","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Creates an immutable index buffer from the supplied vertices.\n\n The paramater `indices` is typically a &[u16] or &[u32] slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":33044,"byte_end":33075,"line_start":126,"line_end":126,"column_start":8,"column_end":39},"name":"create_vertex_buffer_with_slice","qualname":"::factory::FactoryExt::create_vertex_buffer_with_slice","value":"fn <B, V> (&mut self, vertices: &[V], indices: B) -> (handle::Buffer<R, V>, Slice<R>)","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Creates an immutable vertex buffer from the supplied vertices,\n together with a `Slice` from the supplied indices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":33941,"byte_end":33963,"line_start":149,"line_end":149,"column_start":8,"column_end":30},"name":"create_constant_buffer","qualname":"::factory::FactoryExt::create_constant_buffer","value":"fn <T> (&mut self, num: usize) -> handle::Buffer<R, T>","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Creates a constant buffer for `num` identical elements of type `T`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":34298,"byte_end":34318,"line_start":159,"line_end":159,"column_start":8,"column_end":28},"name":"create_upload_buffer","qualname":"::factory::FactoryExt::create_upload_buffer","value":"fn <T> (&mut self, num: usize) -> Result<handle::Buffer<R, T>, buffer::CreationError>","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Creates an upload buffer for `num` elements of type `T`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":34688,"byte_end":34710,"line_start":169,"line_end":169,"column_start":8,"column_end":30},"name":"create_download_buffer","qualname":"::factory::FactoryExt::create_download_buffer","value":"fn <T> (&mut self, num: usize) -> Result<handle::Buffer<R, T>, buffer::CreationError>","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Creates a download buffer for `num` elements of type `T`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":35103,"byte_end":35120,"line_start":179,"line_end":179,"column_start":8,"column_end":25},"name":"create_shader_set","qualname":"::factory::FactoryExt::create_shader_set","value":"fn (&mut self, vs_code: &[u8], ps_code: &[u8]) -> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex and pixel shader source code.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":35576,"byte_end":35602,"line_start":188,"line_end":188,"column_start":8,"column_end":34},"name":"create_shader_set_geometry","qualname":"::factory::FactoryExt::create_shader_set_geometry","value":"fn (&mut self, vs_code: &[u8], gs_code: &[u8], ps_code: &[u8]) -> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex, geometry, and pixel\n shader source code. Mainly used for testing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":36172,"byte_end":36202,"line_start":198,"line_end":198,"column_start":8,"column_end":38},"name":"create_shader_set_tessellation","qualname":"::factory::FactoryExt::create_shader_set_tessellation","value":"fn (&mut self, vs_code: &[u8], hs_code: &[u8], ds_code: &[u8], ps_code: &[u8]) -> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex, hull, domain, and pixel\n shader source code. Mainly used for testing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":36880,"byte_end":36924,"line_start":209,"line_end":209,"column_start":8,"column_end":52},"name":"create_shader_set_tessellation_with_geometry","qualname":"::factory::FactoryExt::create_shader_set_tessellation_with_geometry","value":"fn (&mut self, vs_code: &[u8], hs_code: &[u8], ds_code: &[u8], gs_code: &[u8], ps_code: &[u8]) -> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex, hull, domain, geometry and pixel\n shader source code. Mainly used for testing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":37672,"byte_end":37684,"line_start":220,"line_end":220,"column_start":8,"column_end":20},"name":"link_program","qualname":"::factory::FactoryExt::link_program","value":"fn (&mut self, vs_code: &[u8], ps_code: &[u8]) -> Result<handle::Program<R>, ProgramError>","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Creates a basic shader `Program` from the supplied vertex and pixel shader source code.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":38065,"byte_end":38086,"line_start":229,"line_end":229,"column_start":8,"column_end":29},"name":"create_pipeline_state","qualname":"::factory::FactoryExt::create_pipeline_state","value":"fn <I> (&mut self, shaders: &ShaderSet<R>, primitive: Primitive, rasterizer: state::Rasterizer, init: I) -> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<String>>","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Similar to `create_pipeline_from_program(..)`, but takes a `ShaderSet` as opposed to a\n shader `Program`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":38940,"byte_end":38968,"line_start":246,"line_end":246,"column_start":8,"column_end":36},"name":"create_pipeline_from_program","qualname":"::factory::FactoryExt::create_pipeline_from_program","value":"fn <'a, I> (&mut self, program: &'a handle::Program<R>, primitive: Primitive, rasterizer: state::Rasterizer, init: I) -> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<&'a str>>","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Creates a strongly typed `PipelineState` from its `Init` structure, a shader `Program`, a\n primitive type and a `Rasterizer`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":39797,"byte_end":39819,"line_start":260,"line_end":260,"column_start":8,"column_end":30},"name":"create_pipeline_simple","qualname":"::factory::FactoryExt::create_pipeline_simple","value":"fn <I> (&mut self, vs: &[u8], ps: &[u8], init: I) -> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<String>>","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Creates a strongly typed `PipelineState` from its `Init` structure. Automatically creates a\n shader `Program` from a vertex and pixel shader source, as well as a `Rasterizer` capable\n of rendering triangle faces without culling.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":40255,"byte_end":40276,"line_start":269,"line_end":269,"column_start":8,"column_end":29},"name":"create_sampler_linear","qualname":"::factory::FactoryExt::create_sampler_linear","value":"fn (&mut self) -> handle::Sampler<R>","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Create a linear sampler with clamping to border.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43453,"byte_end":43458,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"Slice","qualname":"::slice::Slice","value":"Slice { start, end, base_vertex, instances, buffer }","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060}],"decl_id":null,"docs":" A `Slice` dictates in which and in what order vertices get processed. It is required for\n processing a PSO.\n\n # Overview\n A `Slice` in gfx has a different meaning from the term slice as employed more broadly in rust (`&[T]`).\n\n A `Slice` object in essence dictates in what order the vertices in a `VertexBuffer` get\n processed. To do this, it contains an internal index-buffer. This `Buffer` is a list of\n indices into this `VertexBuffer` (vertex-index). A vertex-index of 0 represents the first\n vertex in the `VertexBuffer`, a vertex-index of 1 represents the second, 2 represents the\n third, and so on. The vertex-indices in the index-buffer are read in order; every vertex-index\n tells the pipeline which vertex to process next.\n\n Because the same index can re-appear multiple times, duplicate-vertices can be avoided. For\n instance, if you want to draw a square, you need two triangles, and thus six vertices. Because\n the same index can reappear multiple times, this means we can instead use 4 vertices, and 6\n vertex-indices.\n\n This index-buffer has a few variants. See the `IndexBuffer` documentation for a detailed\n description.\n\n The `start` and `end` fields say where in the index-buffer to start and stop reading.\n Setting `start` to 0, and `end` to the length of the index-buffer, will cause the entire\n index-buffer to be processed. The `base_vertex` dictates the index of the first vertex\n in the `VertexBuffer`. This essentially moves the the start of the `VertexBuffer`, to the\n vertex with this index.\n\n # Constuction & Handling\n The `Slice` structure can be constructed automatically when using a `Factory` to create a\n vertex buffer. If needed, it can also be created manually.\n\n A `Slice` is required to process a PSO, as it contains the needed information on in what order\n to draw which vertices. As such, every `draw` call on an `Encoder` requires a `Slice`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43596,"byte_end":43601,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"name":"start","qualname":"::slice::Slice::start","value":"u32","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" The start index of the index-buffer. Processing will start at this location in the\n index-buffer.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43746,"byte_end":43749,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"name":"end","qualname":"::slice::Slice::end","value":"u32","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" The end index in the index-buffer. Processing will stop at this location (exclusive) in\n the index buffer.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1058},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":43990,"byte_end":44001,"line_start":71,"line_end":71,"column_start":9,"column_end":20},"name":"base_vertex","qualname":"::slice::Slice::base_vertex","value":"u32","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" This is the index of the first vertex in the `VertexBuffer`. This value will be added to\n every index in the index-buffer, effectively moving the start of the `VertexBuffer` to this\n base-vertex.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":44058,"byte_end":44067,"line_start":73,"line_end":73,"column_start":9,"column_end":18},"name":"instances","qualname":"::slice::Slice::instances","value":"std::option::Option<(u32, u32)>","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Instancing configuration.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":44151,"byte_end":44157,"line_start":75,"line_end":75,"column_start":9,"column_end":15},"name":"buffer","qualname":"::slice::Slice::buffer","value":"slice::IndexBuffer<R>","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Represents the type of index-buffer used.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":44276,"byte_end":44293,"line_start":80,"line_end":80,"column_start":12,"column_end":29},"name":"from_vertex_count","qualname":"<Slice<R>>::from_vertex_count","value":"fn (count: VertexCount) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Slice` with a given vertex count.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":44605,"byte_end":44628,"line_start":90,"line_end":90,"column_start":12,"column_end":35},"name":"new_match_vertex_buffer","qualname":"<Slice<R>>::new_match_vertex_buffer","value":"fn <V> (vbuf: &handle::Buffer<R, V>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Slice` to match the supplied vertex buffer, from start to end, in order.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":45030,"byte_end":45044,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"get_prim_count","qualname":"<Slice<R>>::get_prim_count","value":"fn (&self, prim: Primitive) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Calculates the number of primitives of the specified type in this `Slice`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":45869,"byte_end":45877,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"split_at","qualname":"<Slice<R>>::split_at","value":"fn (&self, mid: VertexCount) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Divides one slice into two at an index.\n\n The first will contain the range in the index-buffer [self.start, mid) (excluding the index mid itself) and the\n second will contain the range [mid, self.end).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47346,"byte_end":47350,"line_start":155,"line_end":155,"column_start":5,"column_end":9},"name":"Auto","qualname":"::slice::IndexBuffer::Auto","value":"IndexBuffer::Auto","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" Represents a hypothetical index-buffer from 0 to infinity. In other words, all vertices\n get processed in order.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47410,"byte_end":47417,"line_start":157,"line_end":157,"column_start":5,"column_end":12},"name":"Index16","qualname":"::slice::IndexBuffer::Index16","value":"IndexBuffer::Index16(handle::Buffer<R, u16>)","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" An index-buffer with unsigned 16 bit indices.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47501,"byte_end":47508,"line_start":159,"line_end":159,"column_start":5,"column_end":12},"name":"Index32","qualname":"::slice::IndexBuffer::Index32","value":"IndexBuffer::Index32(handle::Buffer<R, u32>)","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" An index-buffer with unsigned 32 bit indices.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47186,"byte_end":47197,"line_start":152,"line_end":152,"column_start":10,"column_end":21},"name":"IndexBuffer","qualname":"::slice::IndexBuffer","value":"IndexBuffer::{Auto, Index16, Index32}","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1089}],"decl_id":null,"docs":" Type of index-buffer used in a Slice.\n\n The `Auto` variant represents a hypothetical index-buffer from 0 to infinity. In other words,\n all vertices get processed in order. Do note that the `Slice`'s `start` and `end` restrictions\n still apply for this variant. To render every vertex in the `VertexBuffer`, you would set\n `start` to 0, and `end` to the `VertexBuffer`'s length.\n\n The `Index*` variants represent an actual `Buffer` with a list of vertex-indices. The numeric\n suffix specifies the amount of bits to use per index. Each of these also contains a\n base-vertex. This is the index of the first vertex in the `VertexBuffer`. This value will be\n added to every index in the index-buffer, effectively moving the start of the `VertexBuffer` to\n this base-vertex.\n\n # Construction & Handling\n A `IndexBuffer` can be constructed using the `IntoIndexBuffer` trait, from either a slice or a\n `Buffer` of integers, using a factory.\n\n An `IndexBuffer` is exclusively used to create `Slice`s.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47730,"byte_end":47745,"line_start":168,"line_end":168,"column_start":11,"column_end":26},"name":"IntoIndexBuffer","qualname":"::slice::IntoIndexBuffer","value":"IntoIndexBuffer<R: Resources>","parent":null,"children":[{"krate":0,"index":294}],"decl_id":null,"docs":" A helper trait to create `IndexBuffers` from different kinds of data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47811,"byte_end":47828,"line_start":170,"line_end":170,"column_start":8,"column_end":25},"name":"into_index_buffer","qualname":"::slice::IntoIndexBuffer::into_index_buffer","value":"fn <F> (self, factory: &mut F) -> IndexBuffer<R>","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" Turns self into an `IndexBuffer`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pso","qualname":"::pso","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":504},{"krate":0,"index":639},{"krate":0,"index":845},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":1266},{"krate":0,"index":1286},{"krate":0,"index":1283},{"krate":0,"index":1277},{"krate":0,"index":1279},{"krate":0,"index":871},{"krate":0,"index":1289},{"krate":0,"index":1311},{"krate":0,"index":1308},{"krate":0,"index":1302},{"krate":0,"index":1304},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":1314},{"krate":0,"index":1353},{"krate":0,"index":1350},{"krate":0,"index":1344},{"krate":0,"index":1346},{"krate":0,"index":885},{"krate":0,"index":890},{"krate":0,"index":894},{"krate":0,"index":899},{"krate":0,"index":903},{"krate":0,"index":1356},{"krate":0,"index":1387},{"krate":0,"index":1383},{"krate":0,"index":1376},{"krate":0,"index":1379},{"krate":0,"index":1371},{"krate":0,"index":1363},{"krate":0,"index":1366},{"krate":0,"index":907},{"krate":0,"index":913},{"krate":0,"index":929}],"decl_id":null,"docs":" A typed high-level graphics pipeline interface.\n\n # Overview\n A `PipelineState` holds all information needed to manage a graphics pipeline. It contains\n information about the shaders used, and on how to bind variables to these shaders. A \n `PipelineState` manifests itself in the form of a Pipeline State Object, or PSO in short.\n\n A Pipeline State Object exists out of different components. Every component represents\n a resource handle: a shader input or output/target. The types of these components can be found\n in this module's submodules, grouped by category.\n\n Before all, a Pipeline State Object must be defined. This is done using the `gfx_pipeline`\n macro. This macro creates three different structures:\n\n - The `Init` structure contains the location of every PSO component. During shader linking,\n   this is used to construct the `Meta` structure. \n - The `Meta` structure contains the layout of every PSO. Using the `Meta` structure, the right\n   data is mapped to the right components.\n - The `Data` structure contains the data of all components, to be sent to the GPU. \n\n # Construction and Handling\n A Pipeline State Object is constructed by a factory, from its `Init` structure, a `Rasterizer`,\n a primitive type and a shader program.\n\n After construction an `Encoder` can use the PSO along with a `Data` structure matching that\n PSO to process the shader pipeline, for instance, using the `draw` method.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::pso::buffer","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":312},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":327},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":343},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":355},{"krate":0,"index":359},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":1131},{"krate":0,"index":1147},{"krate":0,"index":1145},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1139},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":381},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":1149},{"krate":0,"index":1164},{"krate":0,"index":1162},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1156},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":401},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":1166},{"krate":0,"index":1181},{"krate":0,"index":1179},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1173},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":421},{"krate":0,"index":426},{"krate":0,"index":437},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":454},{"krate":0,"index":458},{"krate":0,"index":466},{"krate":0,"index":471},{"krate":0,"index":478},{"krate":0,"index":482},{"krate":0,"index":489},{"krate":0,"index":494},{"krate":0,"index":500}],"decl_id":null,"docs":" Buffer components for a PSO.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64931,"byte_end":64940,"line_start":29,"line_end":29,"column_start":11,"column_end":20},"name":"Structure","qualname":"::pso::buffer::Structure","value":"Structure<F>","parent":null,"children":[{"krate":0,"index":335}],"decl_id":null,"docs":" A trait to be implemented by any struct having the layout described\n in the graphics API, like a vertex buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":64999,"byte_end":65004,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"query","qualname":"::pso::buffer::Structure::query","value":"fn (&str) -> Option<Element<F>>","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Get the layout of an element by name.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65171,"byte_end":65189,"line_start":37,"line_end":37,"column_start":12,"column_end":30},"name":"VertexBufferCommon","qualname":"::pso::buffer::VertexBufferCommon","value":"","parent":null,"children":[],"decl_id":null,"docs":" Service struct to simplify the implementations of `VertexBuffer` and `InstanceBuffer`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66001,"byte_end":66015,"line_start":66,"line_end":66,"column_start":11,"column_end":25},"name":"ToInstanceRate","qualname":"::pso::buffer::ToInstanceRate","value":"ToInstanceRate","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"decl_id":null,"docs":" Helper trait for `VertexBufferCommon` to support variable instance rate.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66079,"byte_end":66083,"line_start":68,"line_end":68,"column_start":10,"column_end":14},"name":"Init","qualname":"::pso::buffer::ToInstanceRate::Init","value":"type Init;","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" The associated init type for PSO component.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66149,"byte_end":66157,"line_start":70,"line_end":70,"column_start":8,"column_end":16},"name":"get_rate","qualname":"::pso::buffer::ToInstanceRate::get_rate","value":"fn (init: &Self::Init) -> InstanceRate","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" Get an actual instance rate value from the init.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66257,"byte_end":66269,"line_start":74,"line_end":74,"column_start":10,"column_end":22},"name":"NonInstanced","qualname":"::pso::buffer::NonInstanced","value":"NonInstanced::{}","parent":null,"children":[],"decl_id":null,"docs":" Helper phantom type for per-vertex attributes.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66335,"byte_end":66344,"line_start":76,"line_end":76,"column_start":10,"column_end":19},"name":"Instanced","qualname":"::pso::buffer::Instanced","value":"Instanced::{}","parent":null,"children":[],"decl_id":null,"docs":" Helper phantom type for per-instance attributes.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66813,"byte_end":66825,"line_start":95,"line_end":95,"column_start":10,"column_end":22},"name":"VertexBuffer","qualname":"::pso::buffer::VertexBuffer","value":"VertexBufferCommon<T, NonInstanced>","parent":null,"children":[],"decl_id":null,"docs":" Vertex buffer component. Advanced per vertex.\n\n - init: `()`\n - data: `Buffer<T>`\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66962,"byte_end":66976,"line_start":98,"line_end":98,"column_start":10,"column_end":24},"name":"InstanceBuffer","qualname":"::pso::buffer::InstanceBuffer","value":"VertexBufferCommon<T, Instanced>","parent":null,"children":[],"decl_id":null,"docs":" Instance buffer component. Same as the vertex buffer but advances per instance.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67280,"byte_end":67295,"line_start":106,"line_end":106,"column_start":12,"column_end":27},"name":"RawVertexBuffer","qualname":"::pso::buffer::RawVertexBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw vertex/instance buffer component. Can be used when the formats of vertex attributes\n are not known at compile time.\n\n - init: `(&[&str, element], stride, inst_rate)`\n - data: `RawBuffer`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67447,"byte_end":67461,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"ConstantBuffer","qualname":"::pso::buffer::ConstantBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant buffer component.\n\n - init: `&str` = name of the buffer\n - data: `Buffer<T>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1149},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68458,"byte_end":68475,"line_start":145,"line_end":145,"column_start":12,"column_end":29},"name":"RawConstantBuffer","qualname":"::pso::buffer::RawConstantBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw constant buffer component.\n\n - init: `&str` = name of the buffer\n - data: `RawBuffer`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68745,"byte_end":68751,"line_start":152,"line_end":152,"column_start":12,"column_end":18},"name":"Global","qualname":"::pso::buffer::Global","value":"","parent":null,"children":[],"decl_id":null,"docs":" Global (uniform) constant component. Describes a free-standing value passed\n into the shader, which is not enclosed into any constant buffer.\n\n - init: `&str` = name of the constant\n - data: `T` = value\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1166},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":69701,"byte_end":69710,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"RawGlobal","qualname":"::pso::buffer::RawGlobal","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw global (uniform) constant component. Describes a free-standing value\n passed into the shader, which is not enclosed in any constant buffer.\n\n - init: `&str` = name of the constant\n - data: `UniformValue` = value\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"resource","qualname":"::pso::resource","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":511},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":522},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":1183},{"krate":0,"index":1198},{"krate":0,"index":1196},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1190},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":542},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":1200},{"krate":0,"index":1215},{"krate":0,"index":1213},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1207},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":562},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":589},{"krate":0,"index":594},{"krate":0,"index":600},{"krate":0,"index":604},{"krate":0,"index":611},{"krate":0,"index":616},{"krate":0,"index":622},{"krate":0,"index":626},{"krate":0,"index":634}],"decl_id":null,"docs":" Resource components for a PSO.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79544,"byte_end":79558,"line_start":29,"line_end":29,"column_start":12,"column_end":26},"name":"ShaderResource","qualname":"::pso::resource::ShaderResource","value":"","parent":null,"children":[],"decl_id":null,"docs":" Shader resource component (SRV). Typically is a view into some texture,\n but can also be a buffer.\n\n - init: `&str` = name of the resource\n - data: `ShaderResourceView<T>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1183},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80421,"byte_end":80438,"line_start":62,"line_end":62,"column_start":12,"column_end":29},"name":"RawShaderResource","qualname":"::pso::resource::RawShaderResource","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw (untyped) shader resource (SRV).\n\n - init: `&str` = name of the resource. This may change in the future.\n - data: `RawShaderResourceView`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80760,"byte_end":80775,"line_start":70,"line_end":70,"column_start":12,"column_end":27},"name":"UnorderedAccess","qualname":"::pso::resource::UnorderedAccess","value":"","parent":null,"children":[],"decl_id":null,"docs":" Unordered access component (UAV). A writable resource (texture/buffer)\n with no defined access order across simultaneously executing shaders.\n Supported on DX10 and higher.\n\n - init: `&str` = name of the resource\n - data: `UnorderedAccessView<T>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81603,"byte_end":81610,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"Sampler","qualname":"::pso::resource::Sampler","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sampler component.\n\n - init: `&str` = name of the sampler\n - data: `Sampler`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82073,"byte_end":82087,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"TextureSampler","qualname":"::pso::resource::TextureSampler","value":"","parent":null,"children":[],"decl_id":null,"docs":" A convenience type for a texture paired with a sampler.\n It only makes sense for DX9 class hardware, where every texture by default\n is bundled with a sampler, hence they are represented by the same name.\n In DX10 and higher samplers are totally separated from the textures.\n\n - init: `&str` = name of the sampler/texture (assuming they match)\n - data: (`ShaderResourceView<T>`, `Sampler`)\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"target","qualname":"::pso::target","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":657},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":667},{"krate":0,"index":671},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":1217},{"krate":0,"index":1232},{"krate":0,"index":1230},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1224},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":697},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":1234},{"krate":0,"index":1249},{"krate":0,"index":1247},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1241},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1251},{"krate":0,"index":1264},{"krate":0,"index":1262},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1256},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":754},{"krate":0,"index":761},{"krate":0,"index":766},{"krate":0,"index":773},{"krate":0,"index":778},{"krate":0,"index":786},{"krate":0,"index":790},{"krate":0,"index":797},{"krate":0,"index":802},{"krate":0,"index":809},{"krate":0,"index":814},{"krate":0,"index":821},{"krate":0,"index":826},{"krate":0,"index":832},{"krate":0,"index":836},{"krate":0,"index":841}],"decl_id":null,"docs":" Render target components for a PSO.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88739,"byte_end":88751,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"RenderTarget","qualname":"::pso::target::RenderTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Render target component. Typically points to a color-formatted texture.\n\n - init: `&str` = name of the target\n - data: `RenderTargetView<T>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89555,"byte_end":89566,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"BlendTarget","qualname":"::pso::target::BlendTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Render target component with active blending mode.\n\n - init: (`&str`, `ColorMask`, `Blend` = blending state)\n - data: `RenderTargetView<T>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1217},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90419,"byte_end":90434,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"RawRenderTarget","qualname":"::pso::target::RawRenderTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw (untyped) render target component with optional blending.\n\n - init: (`&str`, `Format`, `ColorMask`, `Option<Blend>`)\n - data: `RawRenderTargetView`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90567,"byte_end":90578,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"DepthTarget","qualname":"::pso::target::DepthTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Depth target component.\n\n - init: `Depth` = depth state\n - data: `DepthStencilView<T>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91246,"byte_end":91259,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"StencilTarget","qualname":"::pso::target::StencilTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stencil target component.\n\n - init: `Stencil` = stencil state\n - data: (`DepthStencilView<T>`, `(front, back)` = stencil reference values)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91972,"byte_end":91990,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"name":"DepthStencilTarget","qualname":"::pso::target::DepthStencilTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Depth + stencil target component.\n\n - init: (`Depth` = depth state, `Stencil` = stencil state)\n - data: (`DepthStencilView<T>`, `(front, back)` = stencil reference values)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92710,"byte_end":92717,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"Scissor","qualname":"::pso::target::Scissor","value":"","parent":null,"children":[],"decl_id":null,"docs":" Scissor component. Sets up the scissor test for rendering.\n\n - init: `()`\n - data: `Rect` = target area\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1251},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92901,"byte_end":92909,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"BlendRef","qualname":"::pso::target::BlendRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Blend reference component. Sets up the reference color for blending.\n\n - init: `()`\n - data: `ColorValue`\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bundle","qualname":"::pso::bundle","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":859}],"decl_id":null,"docs":" Combine slice data with pipeline state.\n\n Suitable for use when PSO is always used with the same one slice.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99691,"byte_end":99697,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Bundle","qualname":"::pso::bundle::Bundle","value":"Bundle { slice, pso, data }","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858}],"decl_id":null,"docs":" Slice-PSO bundle.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99759,"byte_end":99764,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"slice","qualname":"::pso::bundle::Bundle::slice","value":"slice::Slice<R>","parent":{"krate":0,"index":853},"children":[],"decl_id":null,"docs":" Slice\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99807,"byte_end":99810,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"pso","qualname":"::pso::bundle::Bundle::pso","value":"pso::PipelineState<R, <Data as pso::PipelineData<R>>::Meta>","parent":{"krate":0,"index":853},"children":[],"decl_id":null,"docs":" Pipeline state\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99872,"byte_end":99876,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"data","qualname":"::pso::bundle::Bundle::data","value":"Data","parent":{"krate":0,"index":853},"children":[],"decl_id":null,"docs":" Pipeline data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99984,"byte_end":99987,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Bundle<R, Data>>::new","value":"fn (slice: Slice<R>, pso: PipelineState<R, Data::Meta>, data: Data) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new Bundle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":100218,"byte_end":100224,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"encode","qualname":"<Bundle<R, Data>>::encode","value":"fn <C> (&self, encoder: &mut Encoder<R, C>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Draw bundle using encoder.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51701,"byte_end":51711,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"RawDataSet","qualname":"::pso::RawDataSet","value":"RawDataSet { vertex_buffers, constant_buffers, global_constants, resource_views, unordered_views, samplers, pixel_targets, ref_values, scissor }","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276}],"decl_id":null,"docs":" A complete set of raw data that needs to be specified at run-time\n whenever we draw something with a PSO. This is what \"data\" struct\n gets transformed into when we call `encoder.draw(...)` with it.\n It doesn't have any typing information, since PSO knows what\n format and layout to expect from each resource.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51632,"byte_end":51654,"line_start":59,"line_end":59,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51738,"byte_end":51752,"line_start":62,"line_end":62,"column_start":9,"column_end":23},"name":"vertex_buffers","qualname":"::pso::RawDataSet::vertex_buffers","value":"core::pso::VertexBufferSet<R>","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51790,"byte_end":51806,"line_start":63,"line_end":63,"column_start":9,"column_end":25},"name":"constant_buffers","qualname":"::pso::RawDataSet::constant_buffers","value":"std::vec::Vec<core::pso::ConstantBufferParam<R>>","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1270},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51853,"byte_end":51869,"line_start":64,"line_end":64,"column_start":9,"column_end":25},"name":"global_constants","qualname":"::pso::RawDataSet::global_constants","value":"std::vec::Vec<(usize, core::shade::UniformValue)>","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51930,"byte_end":51944,"line_start":65,"line_end":65,"column_start":9,"column_end":23},"name":"resource_views","qualname":"::pso::RawDataSet::resource_views","value":"std::vec::Vec<core::pso::ResourceViewParam<R>>","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1272},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51989,"byte_end":52004,"line_start":66,"line_end":66,"column_start":9,"column_end":24},"name":"unordered_views","qualname":"::pso::RawDataSet::unordered_views","value":"std::vec::Vec<core::pso::UnorderedViewParam<R>>","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1273},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52050,"byte_end":52058,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"name":"samplers","qualname":"::pso::RawDataSet::samplers","value":"std::vec::Vec<core::pso::SamplerParam<R>>","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52098,"byte_end":52111,"line_start":68,"line_end":68,"column_start":9,"column_end":22},"name":"pixel_targets","qualname":"::pso::RawDataSet::pixel_targets","value":"core::pso::PixelTargetSet<R>","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52148,"byte_end":52158,"line_start":69,"line_end":69,"column_start":9,"column_end":19},"name":"ref_values","qualname":"::pso::RawDataSet::ref_values","value":"draw_state::state::RefValues","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52189,"byte_end":52196,"line_start":70,"line_end":70,"column_start":9,"column_end":16},"name":"scissor","qualname":"::pso::RawDataSet::scissor","value":"draw_state::target::Rect","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52301,"byte_end":52304,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<RawDataSet<R>>::new","value":"fn () -> RawDataSet<R>","parent":null,"children":[],"decl_id":null,"docs":" Create an empty data set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52827,"byte_end":52832,"line_start":89,"line_end":89,"column_start":12,"column_end":17},"name":"clear","qualname":"<RawDataSet<R>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear all contained data.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":53418,"byte_end":53426,"line_start":106,"line_end":106,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::pso::ElementError::NotFound","value":"ElementError::NotFound(S)","parent":{"krate":0,"index":1289},"children":[],"decl_id":null,"docs":" Element not found.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":53468,"byte_end":53474,"line_start":108,"line_end":108,"column_start":5,"column_end":11},"name":"Offset","qualname":"::pso::ElementError::Offset","value":"ElementError::Offset { name, shader_offset, code_offset }","parent":{"krate":0,"index":1289},"children":[],"decl_id":null,"docs":" Element offset mismatch.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":53781,"byte_end":53787,"line_start":117,"line_end":117,"column_start":5,"column_end":11},"name":"Format","qualname":"::pso::ElementError::Format","value":"ElementError::Format { name, shader_format, code_format }","parent":{"krate":0,"index":1289},"children":[],"decl_id":null,"docs":" Element format mismatch.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":53369,"byte_end":53381,"line_start":104,"line_end":104,"column_start":10,"column_end":22},"name":"ElementError","qualname":"::pso::ElementError","value":"ElementError::{NotFound, Offset, Format}","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1294},{"krate":0,"index":1298}],"decl_id":null,"docs":" Error matching an element inside the constant buffer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1316},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":55876,"byte_end":55888,"line_start":172,"line_end":172,"column_start":5,"column_end":17},"name":"VertexImport","qualname":"::pso::InitError::VertexImport","value":"InitError::VertexImport(S, Option<c::format::Format>)","parent":{"krate":0,"index":1314},"children":[],"decl_id":null,"docs":" Vertex attribute mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1320},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":55958,"byte_end":55972,"line_start":174,"line_end":174,"column_start":5,"column_end":19},"name":"ConstantBuffer","qualname":"::pso::InitError::ConstantBuffer","value":"InitError::ConstantBuffer(S, Option<ElementError<S>>)","parent":{"krate":0,"index":1314},"children":[],"decl_id":null,"docs":" Constant buffer mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56040,"byte_end":56054,"line_start":176,"line_end":176,"column_start":5,"column_end":19},"name":"GlobalConstant","qualname":"::pso::InitError::GlobalConstant","value":"InitError::GlobalConstant(S, Option<c::shade::CompatibilityError>)","parent":{"krate":0,"index":1314},"children":[],"decl_id":null,"docs":" Global constant mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56140,"byte_end":56152,"line_start":178,"line_end":178,"column_start":5,"column_end":17},"name":"ResourceView","qualname":"::pso::InitError::ResourceView","value":"InitError::ResourceView(S, Option<()>)","parent":{"krate":0,"index":1314},"children":[],"decl_id":null,"docs":" Shader resource view mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56213,"byte_end":56226,"line_start":180,"line_end":180,"column_start":5,"column_end":18},"name":"UnorderedView","qualname":"::pso::InitError::UnorderedView","value":"InitError::UnorderedView(S, Option<()>)","parent":{"krate":0,"index":1314},"children":[],"decl_id":null,"docs":" Unordered access view mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1336},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56273,"byte_end":56280,"line_start":182,"line_end":182,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::pso::InitError::Sampler","value":"InitError::Sampler(S, Option<()>)","parent":{"krate":0,"index":1314},"children":[],"decl_id":null,"docs":" Sampler mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1340},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56332,"byte_end":56343,"line_start":184,"line_end":184,"column_start":5,"column_end":16},"name":"PixelExport","qualname":"::pso::InitError::PixelExport","value":"InitError::PixelExport(S, Option<c::format::Format>)","parent":{"krate":0,"index":1314},"children":[],"decl_id":null,"docs":" Pixel target mismatch.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1314},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":55822,"byte_end":55831,"line_start":170,"line_end":170,"column_start":10,"column_end":19},"name":"InitError","qualname":"::pso::InitError","value":"InitError::{VertexImport, ConstantBuffer, GlobalConstant, ResourceView, UnorderedView, Sampler, PixelExport}","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1320},{"krate":0,"index":1324},{"krate":0,"index":1328},{"krate":0,"index":1332},{"krate":0,"index":1336},{"krate":0,"index":1340}],"decl_id":null,"docs":" Failure to initilize the link between the shader and the data.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59248,"byte_end":59260,"line_start":250,"line_end":250,"column_start":11,"column_end":23},"name":"PipelineInit","qualname":"::pso::PipelineInit","value":"PipelineInit","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901}],"decl_id":null,"docs":" A service trait implemented by the \"init\" structure of PSO.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59310,"byte_end":59314,"line_start":252,"line_end":252,"column_start":10,"column_end":14},"name":"Meta","qualname":"::pso::PipelineInit::Meta","value":"type Meta;","parent":{"krate":0,"index":899},"children":[],"decl_id":null,"docs":" The associated \"meta\" struct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59501,"byte_end":59508,"line_start":256,"line_end":256,"column_start":8,"column_end":15},"name":"link_to","qualname":"::pso::PipelineInit::link_to","value":"fn <'s> (&self, &mut Descriptor, &'s c::shade::ProgramInfo) -> Result<Self::Meta, InitError<&'s str>>","parent":{"krate":0,"index":899},"children":[],"decl_id":null,"docs":" Attempt to map a PSO descriptor to a give shader program,\n represented by `ProgramInfo`. Returns an instance of the\n \"meta\" struct upon successful mapping.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59696,"byte_end":59708,"line_start":261,"line_end":261,"column_start":11,"column_end":23},"name":"PipelineData","qualname":"::pso::PipelineData","value":"PipelineData<R: c::Resources>","parent":null,"children":[{"krate":0,"index":905},{"krate":0,"index":906}],"decl_id":null,"docs":" a service trait implemented the \"data\" structure of PSO.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59775,"byte_end":59779,"line_start":263,"line_end":263,"column_start":10,"column_end":14},"name":"Meta","qualname":"::pso::PipelineData::Meta","value":"type Meta;","parent":{"krate":0,"index":903},"children":[],"decl_id":null,"docs":" The associated \"meta\" struct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":59905,"byte_end":59912,"line_start":266,"line_end":266,"column_start":8,"column_end":15},"name":"bake_to","qualname":"::pso::PipelineData::bake_to","value":"fn (&self, &mut RawDataSet<R>, &Self::Meta, &mut c::handle::Manager<R>, &mut AccessInfo<R>) -> ()","parent":{"krate":0,"index":903},"children":[],"decl_id":null,"docs":" Dump all the contained data into the raw data set,\n given the mapping (\"meta\"), and a handle manager.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60217,"byte_end":60230,"line_start":275,"line_end":275,"column_start":12,"column_end":25},"name":"PipelineState","qualname":"::pso::PipelineState","value":"","parent":null,"children":[],"decl_id":null,"docs":" A strongly typed Pipleline State Object. See the module documentation for more information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60473,"byte_end":60476,"line_start":280,"line_end":280,"column_start":12,"column_end":15},"name":"new","qualname":"<PipelineState<R, M>>::new","value":"fn (raw: c::handle::RawPipelineState<R>, prim: c::Primitive, meta: M) -> PipelineState<R, M>","parent":null,"children":[],"decl_id":null,"docs":" Create a new PSO from a raw handle and the \"meta\" instance.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60675,"byte_end":60685,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"get_handle","qualname":"<PipelineState<R, M>>::get_handle","value":"fn (&self) -> &c::handle::RawPipelineState<R>","parent":null,"children":[],"decl_id":null,"docs":" Get a raw handle reference.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60890,"byte_end":60898,"line_start":290,"line_end":290,"column_start":12,"column_end":20},"name":"get_meta","qualname":"<PipelineState<R, M>>::get_meta","value":"fn (&self) -> &M","parent":null,"children":[],"decl_id":null,"docs":" Get a \"meta\" struct reference. Can be used by the user to check\n what resources are actually used and what not.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61044,"byte_end":61052,"line_start":297,"line_end":297,"column_start":11,"column_end":19},"name":"DataLink","qualname":"::pso::DataLink","value":"DataLink<'a>: Sized","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928}],"decl_id":null,"docs":" The \"link\" logic portion of a PSO component.\n Defines the input data for the component.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61147,"byte_end":61151,"line_start":299,"line_end":299,"column_start":10,"column_end":14},"name":"Init","qualname":"::pso::DataLink::Init","value":"type Init: 'a;","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" The assotiated \"init\" type - a member of the PSO \"init\" struct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61202,"byte_end":61205,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"new","qualname":"::pso::DataLink::new","value":"fn () -> Self","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Create a new empty data link.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61283,"byte_end":61292,"line_start":303,"line_end":303,"column_start":8,"column_end":17},"name":"is_active","qualname":"::pso::DataLink::is_active","value":"fn (&self) -> bool","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Check if this link is actually used by the shader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61393,"byte_end":61411,"line_start":305,"line_end":305,"column_start":8,"column_end":26},"name":"link_vertex_buffer","qualname":"::pso::DataLink::link_vertex_buffer","value":"fn (&mut self, _: c::pso::BufferIndex, _: &Self::Init) -> Option<c::pso::VertexBufferDesc>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Attempt to link with a vertex buffer containing multiple attributes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61590,"byte_end":61600,"line_start":308,"line_end":308,"column_start":8,"column_end":18},"name":"link_input","qualname":"::pso::DataLink::link_input","value":"fn (&mut self, _: &c::shade::AttributeVar, _: &Self::Init) -> Option<Result<c::pso::AttributeDesc, c::format::Format>>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Attempt to link with a vertex attribute.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61798,"byte_end":61818,"line_start":311,"line_end":311,"column_start":8,"column_end":28},"name":"link_constant_buffer","qualname":"::pso::DataLink::link_constant_buffer","value":"fn <'b> (&mut self, _: &'b c::shade::ConstantBufferVar, _: &Self::Init) -> Option<Result<c::pso::ConstantBufferDesc, ElementError<&'b str>>>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Attempt to link with a constant buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":62047,"byte_end":62067,"line_start":314,"line_end":314,"column_start":8,"column_end":28},"name":"link_global_constant","qualname":"::pso::DataLink::link_global_constant","value":"fn (&mut self, _: &c::shade::ConstVar, _: &Self::Init) -> Option<Result<(), c::shade::CompatibilityError>>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Attempt to link with a global constant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":62275,"byte_end":62286,"line_start":317,"line_end":317,"column_start":8,"column_end":19},"name":"link_output","qualname":"::pso::DataLink::link_output","value":"fn (&mut self, _: &c::shade::OutputVar, _: &Self::Init) -> Option<Result<c::pso::ColorTargetDesc, c::format::Format>>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Attempt to link with an output render target (RTV).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":62495,"byte_end":62513,"line_start":320,"line_end":320,"column_start":8,"column_end":26},"name":"link_depth_stencil","qualname":"::pso::DataLink::link_depth_stencil","value":"fn (&mut self, _: &Self::Init) -> Option<c::pso::DepthStencilDesc>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Attempt to link with a depth-stencil target (DSV).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":62673,"byte_end":62691,"line_start":323,"line_end":323,"column_start":8,"column_end":26},"name":"link_resource_view","qualname":"::pso::DataLink::link_resource_view","value":"fn (&mut self, _: &c::shade::TextureVar, _: &Self::Init) -> Option<Result<c::pso::ResourceViewDesc, c::format::Format>>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Attempt to link with a shader resource (SRV).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":62906,"byte_end":62925,"line_start":326,"line_end":326,"column_start":8,"column_end":27},"name":"link_unordered_view","qualname":"::pso::DataLink::link_unordered_view","value":"fn (&mut self, _: &c::shade::UnorderedVar, _: &Self::Init) -> Option<Result<c::pso::UnorderedViewDesc, c::format::Format>>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Attempt to link with an unordered access (UAV).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":63128,"byte_end":63140,"line_start":329,"line_end":329,"column_start":8,"column_end":20},"name":"link_sampler","qualname":"::pso::DataLink::link_sampler","value":"fn (&mut self, _: &c::shade::SamplerVar, _: &Self::Init) -> Option<c::pso::SamplerDesc>","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Attempt to link with a sampler.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":63301,"byte_end":63313,"line_start":332,"line_end":332,"column_start":8,"column_end":20},"name":"link_scissor","qualname":"::pso::DataLink::link_scissor","value":"fn (&mut self) -> bool","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":" Attempt to enable scissor test.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":63471,"byte_end":63479,"line_start":337,"line_end":337,"column_start":11,"column_end":19},"name":"DataBind","qualname":"::pso::DataBind","value":"DataBind<R: c::Resources>","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932}],"decl_id":null,"docs":" The \"bind\" logic portion of the PSO component.\n Defines how the user data translates into the raw data set.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":63580,"byte_end":63584,"line_start":339,"line_end":339,"column_start":10,"column_end":14},"name":"Data","qualname":"::pso::DataBind::Data","value":"type Data;","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":" The associated \"data\" type - a member of the PSO \"data\" struct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":63644,"byte_end":63651,"line_start":341,"line_end":341,"column_start":8,"column_end":15},"name":"bind_to","qualname":"::pso::DataBind::bind_to","value":"fn (&self, &mut RawDataSet<R>, &Self::Data, &mut c::handle::Manager<R>, &mut AccessInfo<R>) -> ()","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":" Dump the given data into the raw data set.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"shade","qualname":"::shade","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1415},{"krate":0,"index":1418},{"krate":0,"index":1421},{"krate":0,"index":1424},{"krate":0,"index":1428},{"krate":0,"index":1432},{"krate":0,"index":1436},{"krate":0,"index":1461},{"krate":0,"index":1459},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":944},{"krate":0,"index":946}],"decl_id":null,"docs":" Shaders\n Shader parameter handling.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":101174,"byte_end":101183,"line_start":25,"line_end":25,"column_start":11,"column_end":20},"name":"ToUniform","qualname":"::shade::ToUniform","value":"ToUniform: Copy","parent":null,"children":[{"krate":0,"index":942}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":101141,"byte_end":101163,"line_start":24,"line_end":24,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":101199,"byte_end":101206,"line_start":26,"line_end":26,"column_start":8,"column_end":15},"name":"convert","qualname":"::shade::ToUniform::convert","value":"fn (self) -> core::UniformValue","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1437},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102431,"byte_end":102437,"line_start":75,"line_end":75,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::shade::ProgramError::Vertex","value":"ProgramError::Vertex(core::CreateShaderError)","parent":{"krate":0,"index":1436},"children":[],"decl_id":null,"docs":" Unable to compile the vertex shader\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102510,"byte_end":102514,"line_start":77,"line_end":77,"column_start":5,"column_end":9},"name":"Hull","qualname":"::shade::ProgramError::Hull","value":"ProgramError::Hull(core::CreateShaderError)","parent":{"krate":0,"index":1436},"children":[],"decl_id":null,"docs":" Unable to compile the hull shader\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1443},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102589,"byte_end":102595,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"Domain","qualname":"::shade::ProgramError::Domain","value":"ProgramError::Domain(core::CreateShaderError)","parent":{"krate":0,"index":1436},"children":[],"decl_id":null,"docs":" Unable to compile the domain shader\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102672,"byte_end":102680,"line_start":81,"line_end":81,"column_start":5,"column_end":13},"name":"Geometry","qualname":"::shade::ProgramError::Geometry","value":"ProgramError::Geometry(core::CreateShaderError)","parent":{"krate":0,"index":1436},"children":[],"decl_id":null,"docs":" Unable to compile the geometry shader\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1449},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102754,"byte_end":102759,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Pixel","qualname":"::shade::ProgramError::Pixel","value":"ProgramError::Pixel(core::CreateShaderError)","parent":{"krate":0,"index":1436},"children":[],"decl_id":null,"docs":" Unable to compile the pixel shader\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102813,"byte_end":102817,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"name":"Link","qualname":"::shade::ProgramError::Link","value":"ProgramError::Link(core::CreateProgramError)","parent":{"krate":0,"index":1436},"children":[],"decl_id":null,"docs":" Unable to link\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1436},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102368,"byte_end":102380,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"ProgramError","qualname":"::shade::ProgramError","value":"ProgramError::{Vertex, Hull, Domain, Geometry, Pixel, Link}","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1440},{"krate":0,"index":1443},{"krate":0,"index":1446},{"krate":0,"index":1449},{"krate":0,"index":1452}],"decl_id":null,"docs":" Program linking error\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":949},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":954},{"krate":0,"index":961},{"krate":0,"index":962}],"decl_id":null,"docs":" Convenience macros\n Various helper macros.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":7234,"byte_end":7243,"line_start":63,"line_end":63,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":8073,"byte_end":8082,"line_start":83,"line_end":83,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":9173,"byte_end":9184,"line_start":121,"line_end":121,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":9764,"byte_end":9775,"line_start":134,"line_end":134,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":11034,"byte_end":11041,"line_start":166,"line_end":166,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":11355,"byte_end":11362,"line_start":177,"line_end":177,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":29705,"byte_end":29723,"line_start":43,"line_end":43,"column_start":48,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":30168,"byte_end":30186,"line_start":53,"line_end":53,"column_start":53,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":30631,"byte_end":30649,"line_start":63,"line_end":63,"column_start":46,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":31421,"byte_end":31439,"line_start":82,"line_end":82,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":31568,"byte_end":31586,"line_start":88,"line_end":88,"column_start":37,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":31723,"byte_end":31741,"line_start":94,"line_end":94,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":40523,"byte_end":40524,"line_start":277,"line_end":277,"column_start":53,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":44197,"byte_end":44202,"line_start":78,"line_end":78,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47568,"byte_end":47579,"line_start":162,"line_end":162,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47940,"byte_end":47951,"line_start":173,"line_end":173,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65274,"byte_end":65292,"line_start":39,"line_end":39,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65395,"byte_end":65413,"line_start":45,"line_end":45,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65455,"byte_end":65473,"line_start":47,"line_end":47,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65598,"byte_end":65616,"line_start":53,"line_end":53,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65737,"byte_end":65755,"line_start":59,"line_end":59,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66373,"byte_end":66385,"line_start":78,"line_end":78,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66505,"byte_end":66514,"line_start":82,"line_end":82,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66617,"byte_end":66629,"line_start":86,"line_end":86,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67586,"byte_end":67600,"line_start":114,"line_end":114,"column_start":54,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67728,"byte_end":67742,"line_start":120,"line_end":120,"column_start":47,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67809,"byte_end":67823,"line_start":122,"line_end":122,"column_start":60,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67973,"byte_end":67987,"line_start":128,"line_end":128,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68133,"byte_end":68147,"line_start":134,"line_end":134,"column_start":60,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68828,"byte_end":68834,"line_start":154,"line_end":154,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68942,"byte_end":68948,"line_start":160,"line_end":160,"column_start":27,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68995,"byte_end":69001,"line_start":162,"line_end":162,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":69131,"byte_end":69137,"line_start":168,"line_end":168,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":69263,"byte_end":69269,"line_start":174,"line_end":174,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":71158,"byte_end":71176,"line_start":225,"line_end":225,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":72011,"byte_end":72029,"line_start":251,"line_end":251,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":72329,"byte_end":72344,"line_start":262,"line_end":262,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":72694,"byte_end":72709,"line_start":274,"line_end":274,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":73465,"byte_end":73480,"line_start":297,"line_end":297,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":74050,"byte_end":74064,"line_start":316,"line_end":316,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":75321,"byte_end":75335,"line_start":348,"line_end":348,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":75653,"byte_end":75670,"line_start":359,"line_end":359,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":76222,"byte_end":76239,"line_start":378,"line_end":378,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":76753,"byte_end":76759,"line_start":393,"line_end":393,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":77286,"byte_end":77292,"line_start":408,"line_end":408,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":77620,"byte_end":77629,"line_start":420,"line_end":420,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":78129,"byte_end":78138,"line_start":439,"line_end":439,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79621,"byte_end":79635,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79732,"byte_end":79746,"line_start":37,"line_end":37,"column_start":16,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79782,"byte_end":79796,"line_start":39,"line_end":39,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79915,"byte_end":79929,"line_start":45,"line_end":45,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80044,"byte_end":80058,"line_start":51,"line_end":51,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80862,"byte_end":80877,"line_start":72,"line_end":72,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80974,"byte_end":80989,"line_start":78,"line_end":78,"column_start":16,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81025,"byte_end":81040,"line_start":80,"line_end":80,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81159,"byte_end":81174,"line_start":86,"line_end":86,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81289,"byte_end":81304,"line_start":92,"line_end":92,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82143,"byte_end":82157,"line_start":114,"line_end":114,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82275,"byte_end":82289,"line_start":120,"line_end":120,"column_start":16,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82325,"byte_end":82339,"line_start":122,"line_end":122,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82486,"byte_end":82500,"line_start":129,"line_end":129,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82618,"byte_end":82632,"line_start":135,"line_end":135,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82828,"byte_end":82842,"line_start":141,"line_end":141,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":83280,"byte_end":83294,"line_start":155,"line_end":155,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":83624,"byte_end":83641,"line_start":166,"line_end":166,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":84174,"byte_end":84191,"line_start":185,"line_end":185,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":84701,"byte_end":84716,"line_start":200,"line_end":200,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":85271,"byte_end":85286,"line_start":219,"line_end":219,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":85806,"byte_end":85813,"line_start":234,"line_end":234,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":86278,"byte_end":86285,"line_start":253,"line_end":253,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":86718,"byte_end":86732,"line_start":267,"line_end":267,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":87321,"byte_end":87335,"line_start":284,"line_end":284,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88814,"byte_end":88826,"line_start":30,"line_end":30,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88923,"byte_end":88935,"line_start":36,"line_end":36,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88971,"byte_end":88983,"line_start":38,"line_end":38,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89102,"byte_end":89114,"line_start":44,"line_end":44,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89229,"byte_end":89241,"line_start":50,"line_end":50,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89627,"byte_end":89638,"line_start":62,"line_end":62,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89735,"byte_end":89746,"line_start":68,"line_end":68,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89782,"byte_end":89793,"line_start":70,"line_end":70,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89912,"byte_end":89923,"line_start":76,"line_end":76,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90038,"byte_end":90049,"line_start":82,"line_end":82,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90622,"byte_end":90633,"line_start":101,"line_end":101,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90701,"byte_end":90712,"line_start":105,"line_end":105,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90748,"byte_end":90759,"line_start":107,"line_end":107,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90841,"byte_end":90852,"line_start":111,"line_end":111,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90951,"byte_end":90962,"line_start":117,"line_end":117,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91303,"byte_end":91316,"line_start":129,"line_end":129,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91384,"byte_end":91397,"line_start":133,"line_end":133,"column_start":16,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91433,"byte_end":91446,"line_start":135,"line_end":135,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91528,"byte_end":91541,"line_start":139,"line_end":139,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91640,"byte_end":91653,"line_start":145,"line_end":145,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92034,"byte_end":92052,"line_start":157,"line_end":157,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92120,"byte_end":92138,"line_start":161,"line_end":161,"column_start":16,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92174,"byte_end":92192,"line_start":163,"line_end":163,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92274,"byte_end":92292,"line_start":167,"line_end":167,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92391,"byte_end":92409,"line_start":173,"line_end":173,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92963,"byte_end":92975,"line_start":193,"line_end":193,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":93566,"byte_end":93578,"line_start":213,"line_end":213,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":94021,"byte_end":94032,"line_start":227,"line_end":227,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":94521,"byte_end":94532,"line_start":241,"line_end":241,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":94860,"byte_end":94875,"line_start":252,"line_end":252,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":95626,"byte_end":95641,"line_start":276,"line_end":276,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":96069,"byte_end":96080,"line_start":290,"line_end":290,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":96393,"byte_end":96404,"line_start":299,"line_end":299,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":96828,"byte_end":96841,"line_start":311,"line_end":311,"column_start":53,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":97158,"byte_end":97171,"line_start":320,"line_end":320,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":97681,"byte_end":97699,"line_start":333,"line_end":333,"column_start":58,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":98037,"byte_end":98055,"line_start":342,"line_end":342,"column_start":39,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":98534,"byte_end":98541,"line_start":356,"line_end":356,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":98748,"byte_end":98755,"line_start":363,"line_end":363,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":99031,"byte_end":99039,"line_start":374,"line_end":374,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":99175,"byte_end":99183,"line_start":380,"line_end":380,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99929,"byte_end":99935,"line_start":18,"line_end":18,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52240,"byte_end":52250,"line_start":73,"line_end":73,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":54109,"byte_end":54121,"line_start":127,"line_end":127,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":54745,"byte_end":54757,"line_start":139,"line_end":139,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":55077,"byte_end":55089,"line_start":149,"line_end":149,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56416,"byte_end":56425,"line_start":187,"line_end":187,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":57094,"byte_end":57103,"line_start":202,"line_end":202,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":57963,"byte_end":57972,"line_start":218,"line_end":218,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60372,"byte_end":60385,"line_start":278,"line_end":278,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102870,"byte_end":102882,"line_start":88,"line_end":88,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":103519,"byte_end":103531,"line_start":101,"line_end":101,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5208,"byte_end":5211,"line_start":138,"line_end":138,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":305}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51102,"byte_end":51108,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":306}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51118,"byte_end":51126,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":504}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51136,"byte_end":51142,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":639}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":51152,"byte_end":51158,"line_start":45,"line_end":45,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":845}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5233,"byte_end":5238,"line_start":140,"line_end":140,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":933}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src/lib.rs","byte_start":5271,"byte_end":5277,"line_start":142,"line_end":142,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":949}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":7234,"byte_end":7243,"line_start":63,"line_end":63,"column_start":29,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":963},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":8073,"byte_end":8082,"line_start":83,"line_end":83,"column_start":22,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":963},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":9173,"byte_end":9184,"line_start":121,"line_end":121,"column_start":59,"column_end":70},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":996},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":9764,"byte_end":9775,"line_start":134,"line_end":134,"column_start":52,"column_end":63},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":996},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":11034,"byte_end":11041,"line_start":166,"line_end":166,"column_start":35,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1019},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\encoder.rs","byte_start":11355,"byte_end":11362,"line_start":177,"line_end":177,"column_start":43,"column_end":50},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":29705,"byte_end":29723,"line_start":43,"line_end":43,"column_start":48,"column_end":66},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1030},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":30168,"byte_end":30186,"line_start":53,"line_end":53,"column_start":53,"column_end":71},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1030},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":30631,"byte_end":30649,"line_start":63,"line_end":63,"column_start":46,"column_end":64},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1030},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":31421,"byte_end":31439,"line_start":82,"line_end":82,"column_start":32,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1030},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":31568,"byte_end":31586,"line_start":88,"line_end":88,"column_start":37,"column_end":55},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1030},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":31723,"byte_end":31741,"line_start":94,"line_end":94,"column_start":33,"column_end":51},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1030},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":32061,"byte_end":32068,"line_start":102,"line_end":102,"column_start":37,"column_end":44},"kind":"SuperTrait","from":{"krate":18,"index":276},"to":{"krate":0,"index":234}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\factory.rs","byte_start":40523,"byte_end":40524,"line_start":277,"line_end":277,"column_start":53,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":267},"to":{"krate":0,"index":234}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":44197,"byte_end":44202,"line_start":78,"line_end":78,"column_start":20,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47568,"byte_end":47579,"line_start":162,"line_end":162,"column_start":32,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1082},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\slice.rs","byte_start":47940,"byte_end":47951,"line_start":173,"line_end":173,"column_start":43,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1082},"to":{"krate":0,"index":292}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65274,"byte_end":65292,"line_start":39,"line_end":39,"column_start":26,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65395,"byte_end":65413,"line_start":45,"line_end":45,"column_start":19,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65455,"byte_end":65473,"line_start":47,"line_end":47,"column_start":32,"column_end":50},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65598,"byte_end":65616,"line_start":53,"line_end":53,"column_start":22,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":65737,"byte_end":65755,"line_start":59,"line_end":59,"column_start":32,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66373,"byte_end":66385,"line_start":78,"line_end":78,"column_start":25,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":18,"index":919},"to":{"krate":0,"index":363}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66505,"byte_end":66514,"line_start":82,"line_end":82,"column_start":25,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":367},"to":{"krate":0,"index":363}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":66617,"byte_end":66629,"line_start":86,"line_end":86,"column_start":25,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":366},"to":{"krate":0,"index":363}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67586,"byte_end":67600,"line_start":114,"line_end":114,"column_start":54,"column_end":68},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67728,"byte_end":67742,"line_start":120,"line_end":120,"column_start":47,"column_end":61},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67809,"byte_end":67823,"line_start":122,"line_end":122,"column_start":60,"column_end":74},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":67973,"byte_end":67987,"line_start":128,"line_end":128,"column_start":50,"column_end":64},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68133,"byte_end":68147,"line_start":134,"line_end":134,"column_start":60,"column_end":74},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68828,"byte_end":68834,"line_start":154,"line_end":154,"column_start":34,"column_end":40},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":401},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68942,"byte_end":68948,"line_start":160,"line_end":160,"column_start":27,"column_end":33},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":401},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":68995,"byte_end":69001,"line_start":162,"line_end":162,"column_start":40,"column_end":46},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":401},"to":{"krate":2,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":69131,"byte_end":69137,"line_start":168,"line_end":168,"column_start":30,"column_end":36},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":401},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":69263,"byte_end":69269,"line_start":174,"line_end":174,"column_start":40,"column_end":46},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":401},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":71158,"byte_end":71176,"line_start":225,"line_end":225,"column_start":20,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":337},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":72011,"byte_end":72029,"line_start":251,"line_end":251,"column_start":42,"column_end":60},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":337},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":72329,"byte_end":72344,"line_start":262,"line_end":262,"column_start":6,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":72694,"byte_end":72709,"line_start":274,"line_end":274,"column_start":27,"column_end":42},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1131},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":73465,"byte_end":73480,"line_start":297,"line_end":297,"column_start":36,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1131},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":74050,"byte_end":74064,"line_start":316,"line_end":316,"column_start":18,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":381},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":75321,"byte_end":75335,"line_start":348,"line_end":348,"column_start":17,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":381},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":75653,"byte_end":75670,"line_start":359,"line_end":359,"column_start":27,"column_end":44},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1149},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":76222,"byte_end":76239,"line_start":378,"line_end":378,"column_start":36,"column_end":53},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1149},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":76753,"byte_end":76759,"line_start":393,"line_end":393,"column_start":51,"column_end":57},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":401},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":77286,"byte_end":77292,"line_start":408,"line_end":408,"column_start":50,"column_end":56},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":401},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":77620,"byte_end":77629,"line_start":420,"line_end":420,"column_start":27,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1166},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\buffer.rs","byte_start":78129,"byte_end":78138,"line_start":439,"line_end":439,"column_start":36,"column_end":45},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1166},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79621,"byte_end":79635,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79732,"byte_end":79746,"line_start":37,"line_end":37,"column_start":16,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79782,"byte_end":79796,"line_start":39,"line_end":39,"column_start":29,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":79915,"byte_end":79929,"line_start":45,"line_end":45,"column_start":19,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80044,"byte_end":80058,"line_start":51,"line_end":51,"column_start":29,"column_end":43},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80862,"byte_end":80877,"line_start":72,"line_end":72,"column_start":23,"column_end":38},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":542},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":80974,"byte_end":80989,"line_start":78,"line_end":78,"column_start":16,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":542},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81025,"byte_end":81040,"line_start":80,"line_end":80,"column_start":29,"column_end":44},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":542},"to":{"krate":2,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81159,"byte_end":81174,"line_start":86,"line_end":86,"column_start":19,"column_end":34},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":542},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":81289,"byte_end":81304,"line_start":92,"line_end":92,"column_start":29,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":542},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82143,"byte_end":82157,"line_start":114,"line_end":114,"column_start":23,"column_end":37},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82275,"byte_end":82289,"line_start":120,"line_end":120,"column_start":16,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82325,"byte_end":82339,"line_start":122,"line_end":122,"column_start":29,"column_end":43},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82486,"byte_end":82500,"line_start":129,"line_end":129,"column_start":19,"column_end":33},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82618,"byte_end":82632,"line_start":135,"line_end":135,"column_start":29,"column_end":43},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":82828,"byte_end":82842,"line_start":141,"line_end":141,"column_start":30,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":522},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":83280,"byte_end":83294,"line_start":155,"line_end":155,"column_start":39,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":522},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":83624,"byte_end":83641,"line_start":166,"line_end":166,"column_start":27,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1183},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":84174,"byte_end":84191,"line_start":185,"line_end":185,"column_start":36,"column_end":53},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1183},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":84701,"byte_end":84716,"line_start":200,"line_end":200,"column_start":30,"column_end":45},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":542},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":85271,"byte_end":85286,"line_start":219,"line_end":219,"column_start":39,"column_end":54},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":542},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":85806,"byte_end":85813,"line_start":234,"line_end":234,"column_start":27,"column_end":34},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1200},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":86278,"byte_end":86285,"line_start":253,"line_end":253,"column_start":36,"column_end":43},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1200},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":86718,"byte_end":86732,"line_start":267,"line_end":267,"column_start":30,"column_end":44},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":562},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\resource.rs","byte_start":87321,"byte_end":87335,"line_start":284,"line_end":284,"column_start":39,"column_end":53},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":562},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88814,"byte_end":88826,"line_start":30,"line_end":30,"column_start":23,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88923,"byte_end":88935,"line_start":36,"line_end":36,"column_start":16,"column_end":28},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":88971,"byte_end":88983,"line_start":38,"line_end":38,"column_start":29,"column_end":41},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89102,"byte_end":89114,"line_start":44,"line_end":44,"column_start":19,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89229,"byte_end":89241,"line_start":50,"line_end":50,"column_start":29,"column_end":41},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89627,"byte_end":89638,"line_start":62,"line_end":62,"column_start":23,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":677},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89735,"byte_end":89746,"line_start":68,"line_end":68,"column_start":16,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":677},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89782,"byte_end":89793,"line_start":70,"line_end":70,"column_start":29,"column_end":40},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":677},"to":{"krate":2,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":89912,"byte_end":89923,"line_start":76,"line_end":76,"column_start":19,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":677},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90038,"byte_end":90049,"line_start":82,"line_end":82,"column_start":29,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":677},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90622,"byte_end":90633,"line_start":101,"line_end":101,"column_start":23,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":697},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90701,"byte_end":90712,"line_start":105,"line_end":105,"column_start":16,"column_end":27},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":697},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90748,"byte_end":90759,"line_start":107,"line_end":107,"column_start":29,"column_end":40},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":697},"to":{"krate":2,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90841,"byte_end":90852,"line_start":111,"line_end":111,"column_start":19,"column_end":30},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":697},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":90951,"byte_end":90962,"line_start":117,"line_end":117,"column_start":29,"column_end":40},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":697},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91303,"byte_end":91316,"line_start":129,"line_end":129,"column_start":23,"column_end":36},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91384,"byte_end":91397,"line_start":133,"line_end":133,"column_start":16,"column_end":29},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91433,"byte_end":91446,"line_start":135,"line_end":135,"column_start":29,"column_end":42},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91528,"byte_end":91541,"line_start":139,"line_end":139,"column_start":19,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":91640,"byte_end":91653,"line_start":145,"line_end":145,"column_start":29,"column_end":42},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92034,"byte_end":92052,"line_start":157,"line_end":157,"column_start":23,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":735},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92120,"byte_end":92138,"line_start":161,"line_end":161,"column_start":16,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":735},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92174,"byte_end":92192,"line_start":163,"line_end":163,"column_start":29,"column_end":47},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":735},"to":{"krate":2,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92274,"byte_end":92292,"line_start":167,"line_end":167,"column_start":19,"column_end":37},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":735},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92391,"byte_end":92409,"line_start":173,"line_end":173,"column_start":29,"column_end":47},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":735},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":92963,"byte_end":92975,"line_start":193,"line_end":193,"column_start":52,"column_end":64},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":657},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":93566,"byte_end":93578,"line_start":213,"line_end":213,"column_start":39,"column_end":51},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":657},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":94021,"byte_end":94032,"line_start":227,"line_end":227,"column_start":51,"column_end":62},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":677},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":94521,"byte_end":94532,"line_start":241,"line_end":241,"column_start":39,"column_end":50},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":677},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":94860,"byte_end":94875,"line_start":252,"line_end":252,"column_start":27,"column_end":42},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1217},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":95626,"byte_end":95641,"line_start":276,"line_end":276,"column_start":36,"column_end":51},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1217},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":96069,"byte_end":96080,"line_start":290,"line_end":290,"column_start":51,"column_end":62},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":697},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":96393,"byte_end":96404,"line_start":299,"line_end":299,"column_start":39,"column_end":50},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":697},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":96828,"byte_end":96841,"line_start":311,"line_end":311,"column_start":53,"column_end":66},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":716},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":97158,"byte_end":97171,"line_start":320,"line_end":320,"column_start":39,"column_end":52},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":716},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":97681,"byte_end":97699,"line_start":333,"line_end":333,"column_start":58,"column_end":76},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":735},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":98037,"byte_end":98055,"line_start":342,"line_end":342,"column_start":39,"column_end":57},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":735},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":98534,"byte_end":98541,"line_start":356,"line_end":356,"column_start":27,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1234},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":98748,"byte_end":98755,"line_start":363,"line_end":363,"column_start":36,"column_end":43},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1234},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":99031,"byte_end":99039,"line_start":374,"line_end":374,"column_start":27,"column_end":35},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\target.rs","byte_start":99175,"byte_end":99183,"line_start":380,"line_end":380,"column_start":36,"column_end":44},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":929}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\bundle.rs","byte_start":99929,"byte_end":99935,"line_start":18,"line_end":18,"column_start":43,"column_end":49},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":52240,"byte_end":52250,"line_start":73,"line_end":73,"column_start":23,"column_end":33},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":54109,"byte_end":54121,"line_start":127,"line_end":127,"column_start":53,"column_end":65},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":54745,"byte_end":54757,"line_start":139,"line_end":139,"column_start":46,"column_end":58},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1289},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":55077,"byte_end":55089,"line_start":149,"line_end":149,"column_start":42,"column_end":54},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":56416,"byte_end":56425,"line_start":187,"line_end":187,"column_start":39,"column_end":48},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1314},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":57094,"byte_end":57103,"line_start":202,"line_end":202,"column_start":53,"column_end":62},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1314},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":57963,"byte_end":57972,"line_start":218,"line_end":218,"column_start":46,"column_end":55},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1314},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":60372,"byte_end":60385,"line_start":278,"line_end":278,"column_start":26,"column_end":39},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\pso\\mod.rs","byte_start":61058,"byte_end":61063,"line_start":297,"line_end":297,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":913}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":101185,"byte_end":101189,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":941}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":102870,"byte_end":102882,"line_start":88,"line_end":88,"column_start":23,"column_end":35},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.18.2\\src\\shade.rs","byte_start":103519,"byte_end":103531,"line_start":101,"line_end":101,"column_start":16,"column_end":28},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1436},"to":{"krate":1,"index":1616}}]}