{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","gfx_window_glutin","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=7e551f3400d682b7","-C","extra-filename=-7e551f3400d682b7","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--extern","gfx_core=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libgfx_core-2ae47c3b0ae5618d.rmeta","--extern","gfx_device_gl=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libgfx_device_gl-3aeab6ff94ab4371.rmeta","--extern","glutin=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libglutin-cecbe40bcb6b12ee.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libgfx_window_glutin-7e551f3400d682b7.rmeta"},"prelude":{"crate_id":{"name":"gfx_window_glutin","disambiguator":[9773141110409542099,1633972258120851285]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":14,"id":{"name":"gfx_core","disambiguator":[15204018979452310899,48761589645094072]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":15,"id":{"name":"bitflags","disambiguator":[1258995681021104935,10120995213895226001]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":16,"id":{"name":"draw_state","disambiguator":[12611816491223585549,11225982447819350507]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":17,"id":{"name":"log","disambiguator":[17746278763066137263,8798032287631474102]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[2442249708866091360,16714075183114805585]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":19,"id":{"name":"gfx_device_gl","disambiguator":[3197733932852900551,15541608323568495808]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":20,"id":{"name":"gfx_gl","disambiguator":[525883982337911540,18174135216407666170]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":21,"id":{"name":"glutin","disambiguator":[1541424996000396632,16940201546653823175]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":22,"id":{"name":"lazy_static","disambiguator":[17281579441627161632,7326486140096487162]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":23,"id":{"name":"glutin_egl_sys","disambiguator":[18397310343467227039,13617695647334814589]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":24,"id":{"name":"winapi","disambiguator":[5636639422687459420,15773350436437932257]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":25,"id":{"name":"winit","disambiguator":[17607148282854385253,13281783489147253982]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":26,"id":{"name":"libc","disambiguator":[5464519403103214804,849774347526692301]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":27,"id":{"name":"backtrace","disambiguator":[14229589711063545857,10752716662390047417]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":28,"id":{"name":"rustc_demangle","disambiguator":[5781955066056873813,12173681276320539157]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":29,"id":{"name":"raw_window_handle","disambiguator":[5058222338435994168,14980528843496773760]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":30,"id":{"name":"libloading","disambiguator":[17117126105838105686,12375204538384088343]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","num":31,"id":{"name":"glutin_wgl_sys","disambiguator":[8867325252485109722,534801017597924318]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","byte_start":600,"byte_end":8083,"line_start":15,"line_end":212,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","byte_start":600,"byte_end":8083,"line_start":15,"line_end":212,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","byte_start":1890,"byte_end":1894,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"init","qualname":"::init","value":"fn <Cf, Df> (window: glutin::WindowBuilder, context: glutin::ContextBuilder, events_loop: &glutin::EventsLoop) -> Result<(glutin::WindowedContext, device_gl::Device, device_gl::Factory,\n        handle::RenderTargetView<R, Cf>, handle::DepthStencilView<R, Df>),\n       CreationError>","parent":null,"children":[],"decl_id":null,"docs":" Initialize with a window builder.\n Generically parametrized version over the main framebuffer format.\n\n # Example\n\n ```no_run\n extern crate gfx_core;\n extern crate gfx_device_gl;\n extern crate gfx_window_glutin;\n extern crate glutin;\n\n use gfx_core::format::{DepthStencil, Rgba8};\n\n fn main() {\n     let events_loop = glutin::EventsLoop::new();\n     let window_builder = glutin::WindowBuilder::new().with_title(\"Example\".to_string());\n     let context = glutin::ContextBuilder::new();\n     let (window, device, factory, rtv, stv) =\n         gfx_window_glutin::init::<Rgba8, DepthStencil>(window_builder, context, &events_loop)\n             .expect(\"Failed to create window\");\n\n     // your code\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","byte_start":3313,"byte_end":3326,"line_start":98,"line_end":98,"column_start":8,"column_end":21},"name":"init_existing","qualname":"::init_existing","value":"fn <Cf, Df> (window: &glutin::WindowedContext) -> (device_gl::Device, device_gl::Factory, handle::RenderTargetView<R, Cf>,\n handle::DepthStencilView<R, Df>)","parent":null,"children":[],"decl_id":null,"docs":" Initialize with an existing Glutin window.\n Generically parametrized version over the main framebuffer format.\n\n # Example (using Piston to create the window)\n\n ```rust,ignore\n extern crate piston;\n extern crate glutin_window;\n extern crate gfx_window_glutin;\n\n // Create window with Piston\n let settings = piston::window::WindowSettings::new(\"Example\", [800, 600]);\n let mut glutin_window = glutin_window::GlutinWindow::new(&settings).unwrap();\n\n // Initialise gfx\n let (mut device, mut factory, main_color, main_depth) =\n     gfx_window_glutin::init_existing::<ColorFormat, DepthFormat>(&glutin_window.window);\n\n let mut encoder: gfx::Encoder<_, _> = factory.create_command_buffer().into();\n ```\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","byte_start":4394,"byte_end":4402,"line_start":126,"line_end":126,"column_start":8,"column_end":16},"name":"init_raw","qualname":"::init_raw","value":"fn (window: glutin::WindowBuilder, mut context: glutin::ContextBuilder, events_loop: &glutin::EventsLoop, color_format: format::Format, ds_format: format::Format) -> Result<(glutin::WindowedContext, device_gl::Device, device_gl::Factory,\n        handle::RawRenderTargetView<R>, handle::RawDepthStencilView<R>),\n       CreationError>","parent":null,"children":[],"decl_id":null,"docs":" Initialize with a window builder. Raw version.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","byte_start":5686,"byte_end":5703,"line_start":155,"line_end":155,"column_start":8,"column_end":25},"name":"init_existing_raw","qualname":"::init_existing_raw","value":"fn (window: &glutin::WindowedContext, color_format: format::Format, ds_format: format::Format) -> (device_gl::Device, device_gl::Factory, handle::RawRenderTargetView<R>,\n handle::RawDepthStencilView<R>)","parent":null,"children":[],"decl_id":null,"docs":" Initialize with an existing Glutin window. Raw version.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","byte_start":6444,"byte_end":6456,"line_start":174,"line_end":174,"column_start":8,"column_end":20},"name":"update_views","qualname":"::update_views","value":"fn <Cf, Df> (window: &glutin::WindowedContext, color_view: &mut handle::RenderTargetView<R, Cf>, ds_view: &mut handle::DepthStencilView<R, Df>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Update the internal dimensions of the main framebuffer targets. Generic version over the format.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","byte_start":7053,"byte_end":7069,"line_start":189,"line_end":189,"column_start":8,"column_end":24},"name":"update_views_raw","qualname":"::update_views_raw","value":"fn (window: &glutin::WindowedContext, old_dimensions: texture::Dimensions, color_format: format::Format, ds_format: format::Format) -> Option<(handle::RawRenderTargetView<R>, handle::RawDepthStencilView<R>)>","parent":null,"children":[],"decl_id":null,"docs":" Return new main target views if the window resolution has changed from the old dimensions.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx_window_glutin-0.30.0\\src\\lib.rs","byte_start":7647,"byte_end":7656,"line_start":203,"line_end":203,"column_start":8,"column_end":17},"name":"new_views","qualname":"::new_views","value":"fn <Cf, Df> (window: &glutin::WindowedContext) -> (handle::RenderTargetView<R, Cf>, handle::DepthStencilView<R, Df>)","parent":null,"children":[],"decl_id":null,"docs":" Create new main target views based on the current size of the window.\n Best called just after a WindowResize event.\n","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}