{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","gif","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"raii_no_panic\"","-C","metadata=1b29e8aed6ac1b80","-C","extra-filename=-1b29e8aed6ac1b80","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--extern","color_quant=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libcolor_quant-1ca40dda5f787380.rmeta","--extern","lzw=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\liblzw-3270ebd75a115553.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libgif-1b29e8aed6ac1b80.rmeta"},"prelude":{"crate_id":{"name":"gif","disambiguator":[18371189255484967979,1430782751927475450]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","num":14,"id":{"name":"lzw","disambiguator":[15099569162670075523,3508576874480256305]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","num":15,"id":{"name":"color_quant","disambiguator":[8792847916174623078,12727662811981802366]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":0,"byte_end":4800,"line_start":1,"line_end":159,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":3849,"byte_end":3861,"line_start":133,"line_end":133,"column_start":18,"column_end":30},"alias_span":null,"name":"SetParameter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":3863,"byte_end":3872,"line_start":133,"line_end":133,"column_start":32,"column_end":41},"alias_span":null,"name":"Parameter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":3892,"byte_end":3897,"line_start":134,"line_end":134,"column_start":18,"column_end":23},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":3899,"byte_end":3908,"line_start":134,"line_end":134,"column_start":25,"column_end":34},"alias_span":null,"name":"Extension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":3910,"byte_end":3924,"line_start":134,"line_end":134,"column_start":36,"column_end":50},"alias_span":null,"name":"DisposalMethod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":3926,"byte_end":3931,"line_start":134,"line_end":134,"column_start":52,"column_end":57},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":3952,"byte_end":3968,"line_start":136,"line_end":136,"column_start":18,"column_end":34},"alias_span":null,"name":"StreamingDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":3970,"byte_end":3977,"line_start":136,"line_end":136,"column_start":36,"column_end":43},"alias_span":null,"name":"Decoded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":3979,"byte_end":3992,"line_start":136,"line_end":136,"column_start":45,"column_end":58},"alias_span":null,"name":"DecodingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":4058,"byte_end":4069,"line_start":138,"line_end":138,"column_start":18,"column_end":29},"alias_span":null,"name":"ColorOutput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":4071,"byte_end":4082,"line_start":138,"line_end":138,"column_start":31,"column_end":42},"alias_span":null,"name":"MemoryLimit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":4084,"byte_end":4094,"line_start":138,"line_end":138,"column_start":44,"column_end":54},"alias_span":null,"name":"Extensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":4114,"byte_end":4120,"line_start":139,"line_end":139,"column_start":18,"column_end":24},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":4122,"byte_end":4129,"line_start":139,"line_end":139,"column_start":26,"column_end":33},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":4151,"byte_end":4158,"line_start":141,"line_end":141,"column_start":19,"column_end":26},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":4160,"byte_end":4173,"line_start":141,"line_end":141,"column_start":28,"column_end":41},"alias_span":null,"name":"ExtensionData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":4175,"byte_end":4181,"line_start":141,"line_end":141,"column_start":43,"column_end":49},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":0,"byte_end":4800,"line_start":1,"line_end":159,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":30},{"krate":0,"index":50},{"krate":0,"index":185},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":268},{"krate":0,"index":272},{"krate":0,"index":276},{"krate":0,"index":279}],"decl_id":null,"docs":" # GIF en- and decoding library [![Build Status](https://travis-ci.org/image-rs/image-gif.svg?branch=master)](https://travis-ci.org/image-rs/image-gif)\n \n GIF en- and decoder written in Rust ([API Documentation](https://docs.rs/gif)).\n \n # GIF encoding and decoding library\n \n This library provides all functions necessary to de- and encode GIF files.\n \n ## High level interface\n \n The high level interface consists of the two types\n [`Encoder`](struct.Encoder.html) and [`Decoder`](struct.Decoder.html).\n They as builders for the actual en- and decoders and can be used to set various\n options beforehand.\n \n ### Decoding GIF files\n \n ```rust\n // Open the file\n use std::fs::File;\n use gif::SetParameter;\n let mut decoder = gif::Decoder::new(File::open(\"tests/samples/sample_1.gif\").unwrap());\n // Configure the decoder such that it will expand the image to RGBA.\n decoder.set(gif::ColorOutput::RGBA);\n // Read the file header\n let mut decoder = decoder.read_info().unwrap();\n while let Some(frame) = decoder.read_next_frame().unwrap() {\n     // Process every frame\n }\n ```\n \n \n \n ### Encoding GIF files\n\n The encoder can be used so save simple computer generated images:\n \n ```rust\n use gif::{Frame, Encoder, Repeat, SetParameter};\n use std::fs::File;\n use std::borrow::Cow;\n \n let color_map = &[0xFF, 0xFF, 0xFF, 0, 0, 0];\n let (width, height) = (6, 6);\n let mut beacon_states = [[\n     0, 0, 0, 0, 0, 0,\n     0, 1, 1, 0, 0, 0,\n     0, 1, 1, 0, 0, 0,\n     0, 0, 0, 1, 1, 0,\n     0, 0, 0, 1, 1, 0,\n     0, 0, 0, 0, 0, 0,\n ], [\n     0, 0, 0, 0, 0, 0,\n     0, 1, 1, 0, 0, 0,\n     0, 1, 0, 0, 0, 0,\n     0, 0, 0, 0, 1, 0,\n     0, 0, 0, 1, 1, 0,\n     0, 0, 0, 0, 0, 0,\n ]];\n let mut image = File::create(\"tests/samples/beacon.gif\").unwrap();;\n let mut encoder = Encoder::new(&mut image, width, height, color_map).unwrap();\n encoder.set(Repeat::Infinite).unwrap();\n for state in &beacon_states {\n     let mut frame = Frame::default();\n     frame.width = width;\n     frame.height = height;\n     frame.buffer = Cow::Borrowed(&*state);\n     encoder.write_frame(&frame).unwrap();\n }\n ```\n\n [`Frame::from_*`](struct.Frame.html) can be used to convert a true color image to a paletted\n image with a maximum of 256 colors:\n\n ```rust\n use std::fs::File;\n \n // Get pixel data from some source\n let mut pixels: Vec<u8> = vec![0; 30_000];\n // Create frame from data\n let frame = gif::Frame::from_rgb(100, 100, &mut *pixels);\n // Create encoder\n let mut image = File::create(\"target/indexed_color.gif\").unwrap();\n let mut encoder = gif::Encoder::new(&mut image, frame.width, frame.height, &[]).unwrap();\n // Write frame to file\n encoder.write_frame(&frame).unwrap();\n ```\n \n ## C API\n\n The C API is unstable and widely untested. It can be activated using the feature flag `c_api`.\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\lib.rs","byte_start":3609,"byte_end":3631,"line_start":117,"line_end":117,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\traits.rs","byte_start":4986,"byte_end":4995,"line_start":7,"line_end":7,"column_start":11,"column_end":20},"name":"Parameter","qualname":"::traits::Parameter","value":"Parameter<Object>","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9}],"decl_id":null,"docs":" Configuration parameter trait.\n\n Use the list of implementors to see which parameters are available for which struct.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\traits.rs","byte_start":5126,"byte_end":5132,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Result","qualname":"::traits::Parameter::Result","value":"type Result;","parent":{"krate":0,"index":6},"children":[],"decl_id":null,"docs":" Result type of `set_param`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\traits.rs","byte_start":5189,"byte_end":5198,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"set_param","qualname":"::traits::Parameter::set_param","value":"fn (self, &mut Object) -> Self::Result","parent":{"krate":0,"index":6},"children":[],"decl_id":null,"docs":" Sets `self` as a parameter of `Object`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\traits.rs","byte_start":5369,"byte_end":5381,"line_start":18,"line_end":18,"column_start":11,"column_end":23},"name":"SetParameter","qualname":"::traits::SetParameter","value":"SetParameter: Sized","parent":null,"children":[{"krate":0,"index":11}],"decl_id":null,"docs":" Implemented for objects that have parameters.\n\n Provides a unified `set`-method to simplify the configuration.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\traits.rs","byte_start":5445,"byte_end":5448,"line_start":20,"line_end":20,"column_start":8,"column_end":11},"name":"set","qualname":"::traits::SetParameter::set","value":"fn <T> (&mut self, value: T) -> <T as Parameter<Self>>::Result","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Sets `value` as a parameter of `self`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":6995,"byte_end":6998,"line_start":11,"line_end":11,"column_start":5,"column_end":8},"name":"Any","qualname":"::common::DisposalMethod::Any","value":"DisposalMethod::Any","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":" StreamingDecoder is not required to take any action.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":7032,"byte_end":7036,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Keep","qualname":"::common::DisposalMethod::Keep","value":"DisposalMethod::Keep","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":" Do not dispose.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":7083,"byte_end":7093,"line_start":15,"line_end":15,"column_start":5,"column_end":15},"name":"Background","qualname":"::common::DisposalMethod::Background","value":"DisposalMethod::Background","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":" Restore to background color.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":7132,"byte_end":7140,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"name":"Previous","qualname":"::common::DisposalMethod::Previous","value":"DisposalMethod::Previous","parent":{"krate":0,"index":283},"children":[],"decl_id":null,"docs":" Restore to previous.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":6913,"byte_end":6927,"line_start":9,"line_end":9,"column_start":10,"column_end":24},"name":"DisposalMethod","qualname":"::common::DisposalMethod","value":"DisposalMethod::{Any, Keep, Background, Previous}","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":293}],"decl_id":null,"docs":" Disposal method\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":6892,"byte_end":6903,"line_start":8,"line_end":8,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":7222,"byte_end":7229,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<DisposalMethod>::from_u8","value":"fn (n: u8) -> Option<DisposalMethod>","parent":null,"children":[],"decl_id":null,"docs":" Converts `u8` to `Option<Self>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":7638,"byte_end":7643,"line_start":38,"line_end":38,"column_start":5,"column_end":10},"name":"Image","qualname":"::common::Block::Image","value":"Block::Image","parent":{"krate":0,"index":307},"children":[],"decl_id":null,"docs":" Image block.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":7681,"byte_end":7690,"line_start":40,"line_end":40,"column_start":5,"column_end":14},"name":"Extension","qualname":"::common::Block::Extension","value":"Block::Extension","parent":{"krate":0,"index":307},"children":[],"decl_id":null,"docs":" Extension block.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":7726,"byte_end":7733,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"Trailer","qualname":"::common::Block::Trailer","value":"Block::Trailer","parent":{"krate":0,"index":307},"children":[],"decl_id":null,"docs":" Image trailer.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":7605,"byte_end":7610,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"name":"Block","qualname":"::common::Block","value":"Block::{Image, Extension, Trailer}","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":314}],"decl_id":null,"docs":" Known GIF block types\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":7584,"byte_end":7595,"line_start":35,"line_end":35,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":7808,"byte_end":7815,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Block>::from_u8","value":"fn (n: u8) -> Option<Block>","parent":null,"children":[],"decl_id":null,"docs":" Converts `u8` to `Option<Self>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":8159,"byte_end":8163,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"name":"Text","qualname":"::common::Extension::Text","value":"Extension::Text","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" Text extension.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":8203,"byte_end":8210,"line_start":65,"line_end":65,"column_start":5,"column_end":12},"name":"Control","qualname":"::common::Extension::Control","value":"Extension::Control","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" Control extension.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":8250,"byte_end":8257,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Comment","qualname":"::common::Extension::Comment","value":"Extension::Comment","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" Comment extension.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":8301,"byte_end":8312,"line_start":69,"line_end":69,"column_start":5,"column_end":16},"name":"Application","qualname":"::common::Extension::Application","value":"Extension::Application","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" Application extension.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":8119,"byte_end":8128,"line_start":61,"line_end":61,"column_start":10,"column_end":19},"name":"Extension","qualname":"::common::Extension","value":"Extension::{Text, Control, Comment, Application}","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338}],"decl_id":null,"docs":" Known GIF extensions\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":8098,"byte_end":8109,"line_start":60,"line_end":60,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":8391,"byte_end":8398,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Extension>::from_u8","value":"fn (n: u8) -> Option<Extension>","parent":null,"children":[],"decl_id":null,"docs":" Converts `u8` to `Option<Self>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":8724,"byte_end":8729,"line_start":87,"line_end":87,"column_start":12,"column_end":17},"name":"Frame","qualname":"::common::Frame","value":"Frame { delay, dispose, transparent, needs_user_input, top, left, width, height, interlaced, palette, buffer }","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364}],"decl_id":null,"docs":" A GIF frame\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":8784,"byte_end":8789,"line_start":89,"line_end":89,"column_start":9,"column_end":14},"name":"delay","qualname":"::common::Frame::delay","value":"u16","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Frame delay in units of 10 ms.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":8829,"byte_end":8836,"line_start":91,"line_end":91,"column_start":9,"column_end":16},"name":"dispose","qualname":"::common::Frame::dispose","value":"common::DisposalMethod","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Disposal method.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":8904,"byte_end":8915,"line_start":93,"line_end":93,"column_start":9,"column_end":20},"name":"transparent","qualname":"::common::Frame::transparent","value":"std::option::Option<u8>","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Transparent index (if available).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":8997,"byte_end":9013,"line_start":95,"line_end":95,"column_start":9,"column_end":25},"name":"needs_user_input","qualname":"::common::Frame::needs_user_input","value":"bool","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" True if the frame needs user input to be displayed.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":9079,"byte_end":9082,"line_start":97,"line_end":97,"column_start":9,"column_end":12},"name":"top","qualname":"::common::Frame::top","value":"u16","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Offset from the top border of the canvas.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":9148,"byte_end":9152,"line_start":99,"line_end":99,"column_start":9,"column_end":13},"name":"left","qualname":"::common::Frame::left","value":"u16","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Offset from the left border of the canvas.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":9195,"byte_end":9200,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"name":"width","qualname":"::common::Frame::width","value":"u16","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Width of the frame.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":9244,"byte_end":9250,"line_start":103,"line_end":103,"column_start":9,"column_end":15},"name":"height","qualname":"::common::Frame::height","value":"u16","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Height of the frame.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":9306,"byte_end":9316,"line_start":105,"line_end":105,"column_start":9,"column_end":19},"name":"interlaced","qualname":"::common::Frame::interlaced","value":"bool","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" True if the image is interlaced.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":9380,"byte_end":9387,"line_start":107,"line_end":107,"column_start":9,"column_end":16},"name":"palette","qualname":"::common::Frame::palette","value":"std::option::Option<std::vec::Vec<u8>>","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Frame local color palette if available.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":9508,"byte_end":9514,"line_start":110,"line_end":110,"column_start":9,"column_end":15},"name":"buffer","qualname":"::common::Frame::buffer","value":"std::borrow::Cow<'a, [u8]>","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Buffer containing the image data.\n Only indices unless configured differently.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":10189,"byte_end":10198,"line_start":137,"line_end":137,"column_start":12,"column_end":21},"name":"from_rgba","qualname":"<Frame>::from_rgba","value":"fn (width: u16, height: u16, pixels: &mut [u8]) -> Frame<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGBA format.\n *Note: This method is not optimized for speed.*\n\n # Panics:\n *   If the length of pixels does not equal `width * height * 4`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":10731,"byte_end":10746,"line_start":149,"line_end":149,"column_start":12,"column_end":27},"name":"from_rgba_speed","qualname":"<Frame>::from_rgba_speed","value":"fn (width: u16, height: u16, pixels: &mut [u8], speed: i32) -> Frame<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGBA format.\n `speed` is a value in the range [1, 30].\n The higher the value the faster it runs at the cost of image quality.\n A `speed` of 10 is a good compromise between speed and quality.\n\n # Panics:\n *   If the length of pixels does not equal `width * height * 4`.\n *   If `speed < 1` or `speed > 30`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":12018,"byte_end":12037,"line_start":180,"line_end":180,"column_start":12,"column_end":31},"name":"from_palette_pixels","qualname":"<Frame>::from_palette_pixels","value":"fn (width: u16, height: u16, pixels: &[u8], palette: &[u8], transparent: Option<u8>) -> Frame<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from a palette and indexed pixels.\n\n # Panics:\n *   If the length of pixels does not equal `width * height`.\n *   If the length of palette > `256 * 3`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":12824,"byte_end":12843,"line_start":200,"line_end":200,"column_start":12,"column_end":31},"name":"from_indexed_pixels","qualname":"<Frame>::from_indexed_pixels","value":"fn (width: u16, height: u16, pixels: &[u8], transparent: Option<u8>) -> Frame<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from indexed pixels in the global palette.\n\n # Panics:\n *   If the length of pixels does not equal `width * height`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":13550,"byte_end":13558,"line_start":220,"line_end":220,"column_start":12,"column_end":20},"name":"from_rgb","qualname":"<Frame>::from_rgb","value":"fn (width: u16, height: u16, pixels: &[u8]) -> Frame<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGB format.\n *Note: This method is not optimized for speed.*\n\n # Panics:\n *   If the length of pixels does not equal `width * height * 3`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":14085,"byte_end":14099,"line_start":232,"line_end":232,"column_start":12,"column_end":26},"name":"from_rgb_speed","qualname":"<Frame>::from_rgb_speed","value":"fn (width: u16, height: u16, pixels: &[u8], speed: i32) -> Frame<'static>","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGB format.\n `speed` is a value in the range [1, 30].\n The higher the value the faster it runs at the cost of image quality.\n A `speed` of 10 is a good compromise between speed and quality.\n\n # Panics:\n *   If the length of pixels does not equal `width * height * 3`.\n *   If `speed < 1` or `speed > 30`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":34492,"byte_end":34498,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"Format","qualname":"::reader::decoder::DecodingError::Format","value":"DecodingError::Format(&'static str)","parent":{"krate":0,"index":371},"children":[],"decl_id":null,"docs":" Returned if the image is found to be malformed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":34550,"byte_end":34558,"line_start":24,"line_end":24,"column_start":5,"column_end":13},"name":"Internal","qualname":"::reader::decoder::DecodingError::Internal","value":"DecodingError::Internal(&'static str)","parent":{"krate":0,"index":371},"children":[],"decl_id":null,"docs":" Internal (logic) error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":34610,"byte_end":34612,"line_start":26,"line_end":26,"column_start":5,"column_end":7},"name":"Io","qualname":"::reader::decoder::DecodingError::Io","value":"DecodingError::Io(io::Error)","parent":{"krate":0,"index":371},"children":[],"decl_id":null,"docs":" Wraps `std::io::Error`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":34416,"byte_end":34429,"line_start":20,"line_end":20,"column_start":10,"column_end":23},"name":"DecodingError","qualname":"::reader::decoder::DecodingError","value":"DecodingError::{Format, Internal, Io}","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378}],"decl_id":null,"docs":" Decoding error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":35626,"byte_end":35630,"line_start":66,"line_end":66,"column_start":5,"column_end":9},"name":"Save","qualname":"::reader::decoder::Extensions::Save","value":"Extensions::Save","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Saves all extention data\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":35727,"byte_end":35731,"line_start":69,"line_end":69,"column_start":5,"column_end":9},"name":"Skip","qualname":"::reader::decoder::Extensions::Skip","value":"Extensions::Skip","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Skips the data of unknown extensions\n and extracts the data from known ones\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":35576,"byte_end":35586,"line_start":64,"line_end":64,"column_start":10,"column_end":20},"name":"Extensions","qualname":"::reader::decoder::Extensions","value":"Extensions::{Save, Skip}","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":386}],"decl_id":null,"docs":" Configures how extensions should be handled\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":36127,"byte_end":36134,"line_start":87,"line_end":87,"column_start":5,"column_end":12},"name":"Nothing","qualname":"::reader::decoder::Decoded::Nothing","value":"Decoded::Nothing","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Decoded nothing.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":36164,"byte_end":36177,"line_start":89,"line_end":89,"column_start":5,"column_end":18},"name":"GlobalPalette","qualname":"::reader::decoder::Decoded::GlobalPalette","value":"Decoded::GlobalPalette(Vec<u8>)","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Global palette.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":36253,"byte_end":36268,"line_start":91,"line_end":91,"column_start":5,"column_end":20},"name":"BackgroundColor","qualname":"::reader::decoder::Decoded::BackgroundColor","value":"Decoded::BackgroundColor(u8)","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Index of the background color in the global palette.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":36313,"byte_end":36320,"line_start":93,"line_end":93,"column_start":5,"column_end":12},"name":"Trailer","qualname":"::reader::decoder::Decoded::Trailer","value":"Decoded::Trailer","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Decoded the image trailer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":36356,"byte_end":36366,"line_start":95,"line_end":95,"column_start":5,"column_end":15},"name":"BlockStart","qualname":"::reader::decoder::Decoded::BlockStart","value":"Decoded::BlockStart(Block)","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" The start of a block.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":36438,"byte_end":36454,"line_start":97,"line_end":97,"column_start":5,"column_end":21},"name":"SubBlockFinished","qualname":"::reader::decoder::Decoded::SubBlockFinished","value":"Decoded::SubBlockFinished(u8, &'a [u8])","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Decoded a sub-block. More sub-block are available.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":36531,"byte_end":36544,"line_start":99,"line_end":99,"column_start":5,"column_end":18},"name":"BlockFinished","qualname":"::reader::decoder::Decoded::BlockFinished","value":"Decoded::BlockFinished(u8, &'a [u8])","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Decoded the last (or only) sub-block of a block.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":36671,"byte_end":36676,"line_start":102,"line_end":102,"column_start":5,"column_end":10},"name":"Frame","qualname":"::reader::decoder::Decoded::Frame","value":"Decoded::Frame(&'a Frame<'static>)","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Decoded all information of the next frame.\n The returned frame does **not** any image data.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":36750,"byte_end":36754,"line_start":104,"line_end":104,"column_start":5,"column_end":9},"name":"Data","qualname":"::reader::decoder::Decoded::Data","value":"Decoded::Data(&'a [u8])","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Decoded some data of the current frame.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":36820,"byte_end":36827,"line_start":106,"line_end":106,"column_start":5,"column_end":12},"name":"DataEnd","qualname":"::reader::decoder::Decoded::DataEnd","value":"Decoded::DataEnd","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" No more data available the current frame.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":36084,"byte_end":36091,"line_start":85,"line_end":85,"column_start":10,"column_end":17},"name":"Decoded","qualname":"::reader::decoder::Decoded","value":"Decoded::{Nothing, GlobalPalette, BackgroundColor, Trailer, BlockStart, SubBlockFinished, BlockFinished, Frame, Data, DataEnd}","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":412},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":422}],"decl_id":null,"docs":" Indicates whether a certain object has been decoded\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":37929,"byte_end":37945,"line_start":163,"line_end":163,"column_start":12,"column_end":28},"name":"StreamingDecoder","qualname":"::reader::decoder::StreamingDecoder","value":"StreamingDecoder {  }","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":518}],"decl_id":null,"docs":" GIF decoder which supports streaming\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":38362,"byte_end":38365,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamingDecoder>::new","value":"fn () -> StreamingDecoder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new streaming decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":38987,"byte_end":38993,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"update","qualname":"<StreamingDecoder>::update","value":"fn <'a> (&'a mut self, mut buf: &[u8]) -> Result<(usize, Decoded<'a>), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Updates the internal state of the decoder. \n\n Returns the number of bytes consumed from the input buffer \n and the last decoding result.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":40779,"byte_end":40787,"line_start":239,"line_end":239,"column_start":12,"column_end":20},"name":"last_ext","qualname":"<StreamingDecoder>::last_ext","value":"fn (&self) -> (u8, &[u8], bool)","parent":null,"children":[],"decl_id":null,"docs":" Returns the data of the last extension that has been decoded.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":40954,"byte_end":40971,"line_start":245,"line_end":245,"column_start":12,"column_end":29},"name":"current_frame_mut","qualname":"<StreamingDecoder>::current_frame_mut","value":"fn <'a> (&'a mut self) -> &'a mut Frame<'static>","parent":null,"children":[],"decl_id":null,"docs":" Current frame info as a mutable ref.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":40880,"byte_end":40897,"line_start":243,"line_end":243,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":41138,"byte_end":41151,"line_start":251,"line_end":251,"column_start":12,"column_end":25},"name":"current_frame","qualname":"<StreamingDecoder>::current_frame","value":"fn <'a> (&'a self) -> &'a Frame<'static>","parent":null,"children":[],"decl_id":null,"docs":" Current frame info as a ref.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":41072,"byte_end":41089,"line_start":249,"line_end":249,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":41274,"byte_end":41279,"line_start":256,"line_end":256,"column_start":12,"column_end":17},"name":"width","qualname":"<StreamingDecoder>::width","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Width of the image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":41361,"byte_end":41367,"line_start":261,"line_end":261,"column_start":12,"column_end":18},"name":"height","qualname":"<StreamingDecoder>::height","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Height of the image\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":15479,"byte_end":15483,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"RGBA","qualname":"::reader::ColorOutput::RGBA","value":"ColorOutput::RGBA","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" The decoder expands the image data to 32bit RGBA.\n This affects:\n\n  - The buffer buffer of the `Frame` returned by `Reader::read_next_frame`.\n  - `Reader::fill_buffer`, `Reader::buffer_size` and `Reader::line_length`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":15543,"byte_end":15550,"line_start":38,"line_end":38,"column_start":5,"column_end":12},"name":"Indexed","qualname":"::reader::ColorOutput::Indexed","value":"ColorOutput::Indexed","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" The decoder returns the raw indexed data.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":15207,"byte_end":15218,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"name":"ColorOutput","qualname":"::reader::ColorOutput","value":"ColorOutput::{RGBA, Indexed}","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":525}],"decl_id":null,"docs":" Output mode for the image data\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":15186,"byte_end":15197,"line_start":29,"line_end":29,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":15848,"byte_end":15859,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"MemoryLimit","qualname":"::reader::MemoryLimit","value":"","parent":null,"children":[],"decl_id":null,"docs":" Memory limit in bytes. `MemoryLimit::Some(0)` means\n that there is no memory limit set.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":16104,"byte_end":16111,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::reader::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":16297,"byte_end":16300,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"fn (r: R) -> Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder builder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":16699,"byte_end":16708,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"read_info","qualname":"<Decoder<R>>::read_info","value":"fn (self) -> Result<Reader<R>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the logical screen descriptor including the global color palette\n\n Returns a `Reader`. All decoder configuration has to be done beforehand.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":17914,"byte_end":17920,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"Reader","qualname":"::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":17867,"byte_end":17886,"line_start":122,"line_end":122,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":20046,"byte_end":20061,"line_start":191,"line_end":191,"column_start":12,"column_end":27},"name":"next_frame_info","qualname":"<Reader<R>>::next_frame_info","value":"fn (&mut self) -> Result<Option<&Frame<'static>>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next frame info\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":21264,"byte_end":21279,"line_start":223,"line_end":223,"column_start":12,"column_end":27},"name":"read_next_frame","qualname":"<Reader<R>>::read_next_frame","value":"fn (&mut self) -> Result<Option<&Frame<'static>>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next frame from the image.\n\n Do not call `Self::next_frame_info` beforehand.\n Deinterlaces the result.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":21950,"byte_end":21966,"line_start":240,"line_end":240,"column_start":12,"column_end":28},"name":"read_into_buffer","qualname":"<Reader<R>>::read_into_buffer","value":"fn (&mut self, buf: &mut [u8]) -> Result<(), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the data of the current frame into a pre-allocated buffer.\n\n `Self::next_frame_info` needs to be called beforehand.\n The length of `buf` must be at least `Self::buffer_size`.\n Deinterlaces the result.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":22988,"byte_end":22999,"line_start":263,"line_end":263,"column_start":12,"column_end":23},"name":"fill_buffer","qualname":"<Reader<R>>::fill_buffer","value":"fn (&mut self, mut buf: &mut [u8]) -> Result<bool, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads data of the current frame into a pre-allocated buffer until the buffer has been\n filled completely.\n\n `Self::next_frame_info` needs to be called beforehand. Returns `true` if the supplied\n buffer could be filled completely. Should not be called after `false` had been returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":25945,"byte_end":25956,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"name":"buffer_size","qualname":"<Reader<R>>::buffer_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Output buffer size\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":26102,"byte_end":26113,"line_start":335,"line_end":335,"column_start":12,"column_end":23},"name":"line_length","qualname":"<Reader<R>>::line_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Line length of the current frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":26429,"byte_end":26436,"line_start":344,"line_end":344,"column_start":12,"column_end":19},"name":"palette","qualname":"<Reader<R>>::palette","value":"fn (&self) -> Result<&[u8], DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the color palette relevant for the current (next) frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":26820,"byte_end":26834,"line_start":355,"line_end":355,"column_start":12,"column_end":26},"name":"global_palette","qualname":"<Reader<R>>::global_palette","value":"fn (&self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" The global color palette\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":26957,"byte_end":26962,"line_start":360,"line_end":360,"column_start":12,"column_end":17},"name":"width","qualname":"<Reader<R>>::width","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Width of the image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":27062,"byte_end":27068,"line_start":365,"line_end":365,"column_start":12,"column_end":18},"name":"height","qualname":"<Reader<R>>::height","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Height of the image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":27201,"byte_end":27209,"line_start":370,"line_end":370,"column_start":12,"column_end":20},"name":"bg_color","qualname":"<Reader<R>>::bg_color","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Index of the background color in the global palette\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":54263,"byte_end":54269,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"name":"Finite","qualname":"::encoder::Repeat::Finite","value":"Repeat::Finite(u16)","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Finite number of repetitions\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":54319,"byte_end":54327,"line_start":20,"line_end":20,"column_start":5,"column_end":13},"name":"Infinite","qualname":"::encoder::Repeat::Infinite","value":"Repeat::Infinite","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Infinite number of repetitions\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":54213,"byte_end":54219,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Repeat","qualname":"::encoder::Repeat","value":"Repeat::{Finite, Infinite}","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":202}],"decl_id":null,"docs":" Number of repetitions\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":54685,"byte_end":54692,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"name":"Control","qualname":"::encoder::ExtensionData::Control","value":"ExtensionData::Control { flags, delay, trns }","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":" Control extension. Use `ExtensionData::new_control_ext` to construct.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":54877,"byte_end":54888,"line_start":42,"line_end":42,"column_start":5,"column_end":16},"name":"Repetitions","qualname":"::encoder::ExtensionData::Repetitions","value":"ExtensionData::Repetitions(Repeat)","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":" Sets the number of repetitions\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":54587,"byte_end":54600,"line_start":31,"line_end":31,"column_start":10,"column_end":23},"name":"ExtensionData","qualname":"::encoder::ExtensionData","value":"ExtensionData::{Control, Repetitions}","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":213}],"decl_id":null,"docs":" Extension data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":55033,"byte_end":55048,"line_start":49,"line_end":49,"column_start":12,"column_end":27},"name":"new_control_ext","qualname":"<ExtensionData>::new_control_ext","value":"fn (delay: u16, dispose: DisposalMethod, needs_user_input: bool, trns: Option<u8>) -> ExtensionData","parent":null,"children":[],"decl_id":null,"docs":" Constructor for control extension data.\n\n `delay` is given in units of 10 ms.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":57193,"byte_end":57200,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":57525,"byte_end":57528,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W>>::new","value":"fn (w: W, width: u16, height: u16, global_palette: &[u8]) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder.\n\n `global_palette` gives the global color palette in the format `[r, g, b, ...]`,\n if no global palette shall be used an empty slice may be supplied.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":57835,"byte_end":57855,"line_start":152,"line_end":152,"column_start":12,"column_end":32},"name":"write_global_palette","qualname":"<Encoder<W>>::write_global_palette","value":"fn (mut self, palette: &[u8]) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Writes the global color palette.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":58502,"byte_end":58513,"line_start":170,"line_end":170,"column_start":12,"column_end":23},"name":"write_frame","qualname":"<Encoder<W>>::write_frame","value":"fn (&mut self, frame: &Frame) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes a frame to the image.\n\n Note: This function also writes a control extension if necessary.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":61249,"byte_end":61264,"line_start":244,"line_end":244,"column_start":12,"column_end":27},"name":"write_extension","qualname":"<Encoder<W>>::write_extension","value":"fn (&mut self, extension: ExtensionData) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes an extension to the image.\n\n It is normally not necessary to call this method manually.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":62789,"byte_end":62808,"line_start":280,"line_end":280,"column_start":12,"column_end":31},"name":"write_raw_extension","qualname":"<Encoder<W>>::write_raw_extension","value":"fn (&mut self, func: u8, data: &[&[u8]]) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes a raw extension to the image.\n\n This method can be used to write an unsupported extesion to the file. `func` is the extension \n identifier (e.g. `Extension::Application as u8`). `data` are the extension payload blocks. If any\n contained slice has a lenght > 255 it is automatically divided into sub-blocks.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\traits.rs","byte_start":5590,"byte_end":5591,"line_start":25,"line_end":25,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\traits.rs","byte_start":5985,"byte_end":5986,"line_start":40,"line_end":40,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\traits.rs","byte_start":6155,"byte_end":6156,"line_start":48,"line_end":48,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\traits.rs","byte_start":6346,"byte_end":6347,"line_start":56,"line_end":56,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\traits.rs","byte_start":6562,"byte_end":6563,"line_start":65,"line_end":65,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":7154,"byte_end":7168,"line_start":20,"line_end":20,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":7749,"byte_end":7754,"line_start":45,"line_end":45,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":8328,"byte_end":8337,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":9554,"byte_end":9559,"line_start":113,"line_end":113,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":9954,"byte_end":9959,"line_start":131,"line_end":131,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":34650,"byte_end":34663,"line_start":29,"line_end":29,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":34960,"byte_end":34973,"line_start":39,"line_end":39,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":35397,"byte_end":35410,"line_start":56,"line_end":56,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":35772,"byte_end":35782,"line_start":72,"line_end":72,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":38292,"byte_end":38308,"line_start":178,"line_end":178,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":14961,"byte_end":14962,"line_start":18,"line_end":18,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":15599,"byte_end":15610,"line_start":41,"line_end":41,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":15911,"byte_end":15922,"line_start":53,"line_end":53,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":16235,"byte_end":16242,"line_start":69,"line_end":69,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":16974,"byte_end":16985,"line_start":94,"line_end":94,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":18195,"byte_end":18201,"line_start":137,"line_end":137,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":27390,"byte_end":27407,"line_start":381,"line_end":381,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":54372,"byte_end":54378,"line_start":23,"line_end":23,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":54905,"byte_end":54918,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":55703,"byte_end":55714,"line_start":76,"line_end":76,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":55915,"byte_end":55926,"line_start":86,"line_end":86,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":56674,"byte_end":56685,"line_start":110,"line_end":110,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":57299,"byte_end":57306,"line_start":137,"line_end":137,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":63579,"byte_end":63586,"line_start":303,"line_end":303,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\traits.rs","byte_start":5383,"byte_end":5388,"line_start":18,"line_end":18,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":10}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\traits.rs","byte_start":5590,"byte_end":5591,"line_start":25,"line_end":25,"column_start":26,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":14},"to":{"krate":0,"index":10}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\traits.rs","byte_start":5985,"byte_end":5986,"line_start":40,"line_end":40,"column_start":51,"column_end":52},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":19},"to":{"krate":0,"index":15}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\traits.rs","byte_start":6155,"byte_end":6156,"line_start":48,"line_end":48,"column_start":52,"column_end":53},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":22},"to":{"krate":0,"index":15}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\traits.rs","byte_start":6346,"byte_end":6347,"line_start":56,"line_end":56,"column_start":52,"column_end":53},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":25},"to":{"krate":0,"index":15}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\traits.rs","byte_start":6562,"byte_end":6563,"line_start":65,"line_end":65,"column_start":52,"column_end":53},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":28},"to":{"krate":0,"index":15}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":7154,"byte_end":7168,"line_start":20,"line_end":20,"column_start":6,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":7749,"byte_end":7754,"line_start":45,"line_end":45,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":8328,"byte_end":8337,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":9554,"byte_end":9559,"line_start":113,"line_end":113,"column_start":22,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\common.rs","byte_start":9954,"byte_end":9959,"line_start":131,"line_end":131,"column_start":6,"column_end":11},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":34650,"byte_end":34663,"line_start":29,"line_end":29,"column_start":23,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":34960,"byte_end":34973,"line_start":39,"line_end":39,"column_start":23,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":371},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":35397,"byte_end":35410,"line_start":56,"line_end":56,"column_start":26,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":35772,"byte_end":35782,"line_start":72,"line_end":72,"column_start":38,"column_end":48},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":383},"to":{"krate":0,"index":6}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\decoder.rs","byte_start":38292,"byte_end":38308,"line_start":178,"line_end":178,"column_start":6,"column_end":22},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":14961,"byte_end":14962,"line_start":18,"line_end":18,"column_start":38,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":116},"to":{"krate":0,"index":6}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":15599,"byte_end":15610,"line_start":41,"line_end":41,"column_start":41,"column_end":52},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":521},"to":{"krate":0,"index":6}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":15911,"byte_end":15922,"line_start":53,"line_end":53,"column_start":41,"column_end":52},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":533},"to":{"krate":0,"index":6}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":16235,"byte_end":16242,"line_start":69,"line_end":69,"column_start":15,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":16974,"byte_end":16985,"line_start":94,"line_end":94,"column_start":15,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":18195,"byte_end":18201,"line_start":137,"line_end":137,"column_start":9,"column_end":15},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\reader\\mod.rs","byte_start":27390,"byte_end":27407,"line_start":381,"line_end":381,"column_start":25,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":178},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":54372,"byte_end":54378,"line_start":23,"line_end":23,"column_start":42,"column_end":48},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":198},"to":{"krate":0,"index":6}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":54905,"byte_end":54918,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":55703,"byte_end":55714,"line_start":76,"line_end":76,"column_start":25,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":55915,"byte_end":55926,"line_start":86,"line_end":86,"column_start":35,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":218},"to":{"krate":1,"index":2903}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":56674,"byte_end":56685,"line_start":110,"line_end":110,"column_start":34,"column_end":45},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":218},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":57299,"byte_end":57306,"line_start":137,"line_end":137,"column_start":16,"column_end":23},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.10.3\\src\\encoder.rs","byte_start":63579,"byte_end":63586,"line_start":303,"line_end":303,"column_start":25,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":239},"to":{"krate":2,"index":1726}}]}