{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","gilrs","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=62fc81b0fd9bb2de","-C","extra-filename=-62fc81b0fd9bb2de","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--extern","fnv=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libfnv-912e422576481bb2.rmeta","--extern","gilrs_core=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libgilrs_core-7006a7849fe7c83f.rmeta","--extern","log=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\liblog-ae804962dc3d6abe.rmeta","--extern","uuid=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libuuid-389f0f992c723d8b.rmeta","--extern","vec_map=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libvec_map-c6e04b37dc85575d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libgilrs-62fc81b0fd9bb2de.rmeta"},"prelude":{"crate_id":{"name":"gilrs","disambiguator":[6691274809453651597,7865673774385703596]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":14,"id":{"name":"fnv","disambiguator":[6503568578125493575,8094176432171322834]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":15,"id":{"name":"gilrs_core","disambiguator":[7325175716998243509,15848340599641423268]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":16,"id":{"name":"rusty_xinput","disambiguator":[14360325480196705739,9677747728254808568]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":17,"id":{"name":"log","disambiguator":[17746278763066137263,8798032287631474102]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[2442249708866091360,16714075183114805585]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":19,"id":{"name":"lazy_static","disambiguator":[17281579441627161632,7326486140096487162]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":20,"id":{"name":"winapi","disambiguator":[5636639422687459420,15773350436437932257]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":21,"id":{"name":"uuid","disambiguator":[5742253617729644857,6682826665848002942]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","num":22,"id":{"name":"vec_map","disambiguator":[9737891791575597377,13352783072783072288]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":364,"byte_end":4546,"line_start":8,"line_end":130,"column_start":1,"column_end":57}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":110205,"byte_end":110215,"line_start":60,"line_end":60,"column_start":29,"column_end":39},"alias_span":null,"name":"BaseEffect","value":"","parent":{"krate":0,"index":484}},{"kind":"Use","ref_id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":110217,"byte_end":110231,"line_start":60,"line_end":60,"column_start":41,"column_end":55},"alias_span":null,"name":"BaseEffectType","value":"","parent":{"krate":0,"index":484}},{"kind":"Use","ref_id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":110233,"byte_end":110241,"line_start":60,"line_end":60,"column_start":57,"column_end":65},"alias_span":null,"name":"Envelope","value":"","parent":{"krate":0,"index":484}},{"kind":"Use","ref_id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":110243,"byte_end":110249,"line_start":60,"line_end":60,"column_start":67,"column_end":73},"alias_span":null,"name":"Replay","value":"","parent":{"krate":0,"index":484}},{"kind":"Use","ref_id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":110282,"byte_end":110295,"line_start":61,"line_end":61,"column_start":31,"column_end":44},"alias_span":null,"name":"DistanceModel","value":"","parent":{"krate":0,"index":484}},{"kind":"Use","ref_id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":110297,"byte_end":110315,"line_start":61,"line_end":61,"column_start":46,"column_end":64},"alias_span":null,"name":"DistanceModelError","value":"","parent":{"krate":0,"index":484}},{"kind":"Use","ref_id":{"krate":0,"index":1398},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":110406,"byte_end":110412,"line_start":64,"line_end":64,"column_start":22,"column_end":28},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":484}},{"kind":"Use","ref_id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":110414,"byte_end":110419,"line_start":64,"line_end":64,"column_start":30,"column_end":35},"alias_span":null,"name":"Ticks","value":"","parent":{"krate":0,"index":484}},{"kind":"Use","ref_id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4305,"byte_end":4311,"line_start":124,"line_end":124,"column_start":21,"column_end":27},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1110},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4326,"byte_end":4330,"line_start":125,"line_end":125,"column_start":14,"column_end":18},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4332,"byte_end":4338,"line_start":125,"line_end":125,"column_start":20,"column_end":26},"alias_span":null,"name":"Button","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":984},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4340,"byte_end":4345,"line_start":125,"line_end":125,"column_start":28,"column_end":33},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4347,"byte_end":4356,"line_start":125,"line_end":125,"column_start":35,"column_end":44},"alias_span":null,"name":"EventType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4382,"byte_end":4407,"line_start":127,"line_end":127,"column_start":5,"column_end":30},"alias_span":null,"name":"ConnectedGamepadsIterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4409,"byte_end":4414,"line_start":127,"line_end":127,"column_start":32,"column_end":37},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4416,"byte_end":4423,"line_start":127,"line_end":127,"column_start":39,"column_end":46},"alias_span":null,"name":"Gamepad","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4425,"byte_end":4434,"line_start":127,"line_end":127,"column_start":48,"column_end":57},"alias_span":null,"name":"GamepadId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4436,"byte_end":4441,"line_start":127,"line_end":127,"column_start":59,"column_end":64},"alias_span":null,"name":"Gilrs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4443,"byte_end":4455,"line_start":127,"line_end":127,"column_start":66,"column_end":78},"alias_span":null,"name":"GilrsBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4457,"byte_end":4470,"line_start":127,"line_end":127,"column_start":80,"column_end":93},"alias_span":null,"name":"MappingSource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":340},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4476,"byte_end":4485,"line_start":128,"line_end":128,"column_start":5,"column_end":14},"alias_span":null,"name":"PowerInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4508,"byte_end":4519,"line_start":130,"line_end":130,"column_start":19,"column_end":30},"alias_span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4523,"byte_end":4530,"line_start":130,"line_end":130,"column_start":34,"column_end":41},"name":"Mapping","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4532,"byte_end":4544,"line_start":130,"line_end":130,"column_start":43,"column_end":55},"alias_span":null,"name":"MappingError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":364,"byte_end":4546,"line_start":8,"line_end":130,"column_start":1,"column_end":57},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":38},{"krate":0,"index":186},{"krate":0,"index":343},{"krate":0,"index":348},{"krate":0,"index":484},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":710},{"krate":0,"index":719}],"decl_id":null,"docs":" GilRs - Game Input Library for Rust\n ===================================\n\n GilRs abstract platform specific APIs to provide unified interfaces for working with gamepads.\n\n Main features:\n\n - Unified gamepad layout—buttons and axes are represented by familiar names\n - Support for SDL2 mappings including `SDL_GAMECONTROLLERCONFIG` environment\n   variable which Steam uses\n - Hotplugging—GilRs will try to assign new IDs for new gamepads and reuse same\n   ID for gamepads which reconnected\n - Force feedback (rumble)\n - Power information (is gamepad wired, current battery status)\n\n Example\n -------\n\n ```\n use gilrs::{Gilrs, Button, Event};\n\n let mut gilrs = Gilrs::new().unwrap();\n\n // Iterate over all connected gamepads\n for (_id, gamepad) in gilrs.gamepads() {\n     println!(\"{} is {:?}\", gamepad.name(), gamepad.power_info());\n }\n\n let mut active_gamepad = None;\n\n loop {\n     // Examine new events\n     while let Some(Event { id, event, time }) = gilrs.next_event() {\n         println!(\"{:?} New event from {}: {:?}\", time, id, event);\n         active_gamepad = Some(id);\n     }\n\n     // You can also use cached gamepad state\n     if let Some(gamepad) = active_gamepad.map(|id| gilrs.gamepad(id)) {\n         if gamepad.is_pressed(Button::South) {\n             println!(\"Button South is pressed (XBox - A, PS - X)\");\n         }\n     }\n     # break;\n }\n ```\n\n Supported features\n ------------------\n\n |                  | Input | Hotplugging | Force feedback |\n |------------------|:-----:|:-----------:|:--------------:|\n | Linux            |   ✓   |      ✓      |        ✓       |\n | Windows (XInput) |   ✓   |      ✓      |        ✓       |\n | OS X             |   ✓   |      ✓      |        ✕       |\n | Wasm             |   ✓   |      ✓      |       n/a      |\n | Android          |   ✕   |      ✕      |        ✕       |\n\n Controller layout\n -----------------\n\n ![Controller layout](https://gilrs-project.gitlab.io/gilrs/img/controller.svg)\n [original image by nicefrog](http://opengameart.org/content/generic-gamepad-template)\n\n Mappings\n --------\n\n GilRs use SDL-compatible controller mappings to fix on Linux legacy drivers that doesn't follow\n [Linux Gamepad API](https://www.kernel.org/doc/Documentation/input/gamepad.txt) and to provide\n unified button layout for platforms that doesn't make any guarantees about it. The main source\n is [SDL_GameControllerDB](https://github.com/gabomdq/SDL_GameControllerDB), but library also\n support loading mappings from environment variable `SDL_GAMECONTROLLERCONFIG` (which Steam\n use).\n\n Platform specific notes\n ======================\n\n Linux\n -----\n\n On Linux, GilRs read (and write, in case of force feedback) directly from appropriate\n `/dev/input/event*` file. This mean that user have to have read and write access to this file.\n On most distros it shouldn't be a problem, but if it is, you will have to create udev rule.\n\n To build GilRs, you will need pkg-config and libudev .pc file. On some\n distributions this file is packaged in separate archive (for example `libudev-dev` in Debian).\n\n Wasm\n ----\n\n Wasm implementation uses stdweb, so you will need\n [cargo-web](https://github.com/koute/cargo-web) to build gilrs for\n wasm32-unknown-unknown. Unlike other platforms, events are only generated\n when you call `Gilrs::next_event()`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":10024,"byte_end":10029,"line_start":122,"line_end":122,"column_start":12,"column_end":17},"name":"Gilrs","qualname":"::gamepad::Gilrs","value":"Gilrs {  }","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733}],"decl_id":null,"docs":" Main object responsible of managing gamepads.\n\n In order to get gamepad handle, use `gamepad()`, or `connected_gamepad()`. The main difference\n between these two is that `gamepad()` will also return handle to gamepad that is currently\n disconnected. However, both functions will return `None` if gamepad with given id has never\n existed.\n\n # Event loop\n\n All interesting actions like button was pressed or new controller was connected are represented\n by struct [`Event`](struct.Event.html). Use `next_event()` function to retrieve event from\n queue.\n\n ```\n use gilrs::{Gilrs, Event, EventType, Button};\n\n let mut gilrs = Gilrs::new().unwrap();\n\n // Event loop\n loop {\n     while let Some(event) = gilrs.next_event() {\n         match event {\n             Event { id, event: EventType::ButtonPressed(Button::South, _), .. } => {\n                 println!(\"Player {}: jump!\", id)\n             }\n             Event { id, event: EventType::Disconnected, .. } => {\n                 println!(\"We lost player {}\", id)\n             }\n             _ => (),\n         };\n     }\n     # break;\n }\n ```\n\n # Cached gamepad state\n\n `Gilrs` also menage cached gamepad state. Updating state is done automatically, unless it's\n  disabled by `GilrsBuilder::set_update_state(false)`. However, if you are using custom filters,\n you still have to update state manually – to do this call `update()` method.\n\n To access state you can use `Gamepad::state()` function. Gamepad also implement some state\n related functions directly, see [`Gamepad`](struct.Gamepad.html) for more.\n\n ## Counter\n\n `Gilrs` has additional functionality, referred here as *counter*. The idea behind it is simple,\n each time you end iteration of update loop, you call `Gilrs::inc()` which will increase\n internal counter by one. When state of one if elements changes, value of counter is saved. When\n checking state of one of elements you can tell exactly when this event happened. Timestamps are\n not good solution here because they can tell you when *system* observed event, not when you\n processed it. On the other hand, they are good when you want to implement key repeat or software\n debouncing.\n\n ```\n use gilrs::{Gilrs, Button};\n\n let mut gilrs = Gilrs::new().unwrap();\n let mut player_one = None;\n\n loop {\n     while let Some(ev) = gilrs.next_event() {\n         if player_one.is_none() {\n             player_one = Some(ev.id);\n         }\n\n         // Do other things with event\n     }\n\n     if let Some(id) = player_one {\n         let gamepad = gilrs.gamepad(id);\n\n         if gamepad.is_pressed(Button::DPadLeft) {\n             // go left\n         }\n\n         match gamepad.button_data(Button::South) {\n             Some(d) if d.is_pressed() && d.counter() == gilrs.counter() => {\n                 // jump only if button was observed to be pressed in this iteration\n             }\n             _ => ()\n         }\n     }\n\n     // Increase counter\n     gilrs.inc();\n #   break;\n }\n\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":10479,"byte_end":10482,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<Gilrs>::new","value":"fn () -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Gilrs` with default settings. See [`GilrsBuilder`](struct.GilrsBuilder.html)\n for more details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":10600,"byte_end":10610,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"next_event","qualname":"<Gilrs>::next_event","value":"fn (&mut self) -> Option<Event>","parent":null,"children":[],"decl_id":null,"docs":" Returns next pending event.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":18746,"byte_end":18752,"line_start":321,"line_end":321,"column_start":12,"column_end":18},"name":"update","qualname":"<Gilrs>::update","value":"fn (&mut self, event: &Event) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates internal state according to `event`.\n\n Please note, that it's not necessary to call this function unless you modify events by using\n additional filters and disabled automatic updates when creating `Gilrs`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":20007,"byte_end":20010,"line_start":355,"line_end":355,"column_start":12,"column_end":15},"name":"inc","qualname":"<Gilrs>::inc","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Increases internal counter by one. Counter data is stored with state and can be used to\n determine when last event happened. You probably want to use this function in your update\n loop after processing events.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":20350,"byte_end":20357,"line_start":366,"line_end":366,"column_start":12,"column_end":19},"name":"counter","qualname":"<Gilrs>::counter","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns counter. Counter data is stored with state and can be used to determine when last\n event happened.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":20440,"byte_end":20453,"line_start":371,"line_end":371,"column_start":12,"column_end":25},"name":"reset_counter","qualname":"<Gilrs>::reset_counter","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets counter to 0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":21722,"byte_end":21729,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"gamepad","qualname":"<Gilrs>::gamepad","value":"fn <'a> (&'a self, id: GamepadId) -> Gamepad<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns handle to gamepad with given ID. Unlike `connected_gamepad()`, this function will\n also return handle to gamepad that is currently disconnected.\n\n ```\n # let mut gilrs = gilrs::Gilrs::new().unwrap();\n use gilrs::{Button, EventType};\n\n loop {\n     while let Some(ev) = gilrs.next_event() {\n         // unwrap() should never panic because we use id from event\n         let is_up_pressed = gilrs.gamepad(ev.id).is_pressed(Button::DPadUp);\n\n         match ev.event {\n             EventType::ButtonPressed(Button::South, _) if is_up_pressed => {\n                 // do something…\n             }\n             _ => (),\n         }\n     }\n     # break;\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":21981,"byte_end":21998,"line_start":418,"line_end":418,"column_start":12,"column_end":29},"name":"connected_gamepad","qualname":"<Gilrs>::connected_gamepad","value":"fn (&self, id: GamepadId) -> Option<Gamepad>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to connected gamepad or `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":22858,"byte_end":22866,"line_start":444,"line_end":444,"column_start":12,"column_end":20},"name":"gamepads","qualname":"<Gilrs>::gamepads","value":"fn (&self) -> ConnectedGamepadsIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns iterator over all connected gamepads and their ids.\n\n ```\n # let gilrs = gilrs::Gilrs::new().unwrap();\n for (id, gamepad) in gilrs.gamepads() {\n     assert!(gamepad.is_connected());\n     println!(\"Gamepad with id {} and name {} is connected\",\n              id, gamepad.name());\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":23067,"byte_end":23079,"line_start":449,"line_end":449,"column_start":12,"column_end":24},"name":"insert_event","qualname":"<Gilrs>::insert_event","value":"fn (&mut self, ev: Event) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds `ev` at the end of internal event queue. It can later be retrieved with `next_event()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":24683,"byte_end":24694,"line_start":491,"line_end":491,"column_start":12,"column_end":23},"name":"set_mapping","qualname":"<Gilrs>::set_mapping","value":"fn <'b, O> (&mut self, gamepad_id: usize, mapping: &MappingData, name: O) -> Result<String, MappingError>","parent":null,"children":[],"decl_id":null,"docs":" Sets gamepad's mapping and returns SDL2 representation of them. Returned mappings may not be\n compatible with SDL2 - if it is important, use\n [`set_mapping_strict()`](#method.set_mapping_strict).\n\n The `name` argument can be a string slice with custom gamepad name or `None`. If `None`,\n gamepad name reported by driver will be used.\n\n # Errors\n\n This function return error if `name` contains comma, `mapping` have axis and button entry\n for same element (for example `Axis::LetfTrigger` and `Button::LeftTrigger`) or gamepad does\n not have any element with `EvCode` used in mapping. `Button::Unknown` and\n `Axis::Unknown` are not allowd as keys to `mapping` – in this case,\n `MappingError::UnknownElement` is returned.\n\n Error is also returned if this function is not implemented or gamepad is not connected.\n\n # Example\n\n ```\n use gilrs::{Mapping, Button};\n\n # let mut gilrs = gilrs::Gilrs::new().unwrap();\n let mut data = Mapping::new();\n // …\n\n // or `match gilrs.set_mapping(0, &data, None) {`\n match gilrs.set_mapping(0, &data, \"Custom name\") {\n     Ok(sdl) => println!(\"SDL2 mapping: {}\", sdl),\n     Err(e) => println!(\"Failed to set mapping: {}\", e),\n };\n ```\n\n See also `examples/mapping.rs`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":25961,"byte_end":25979,"line_start":532,"line_end":532,"column_start":12,"column_end":30},"name":"set_mapping_strict","qualname":"<Gilrs>::set_mapping_strict","value":"fn <'b, O> (&mut self, gamepad_id: usize, mapping: &MappingData, name: O) -> Result<String, MappingError>","parent":null,"children":[],"decl_id":null,"docs":" Similar to [`set_mapping()`](#method.set_mapping) but returned string should be compatible\n with SDL2.\n\n # Errors\n\n Returns `MappingError::NotSdl2Compatible` if `mapping` have an entry for `Button::{C, Z}`\n or `Axis::{LeftZ, RightZ}`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":26857,"byte_end":26869,"line_start":561,"line_end":561,"column_start":12,"column_end":24},"name":"GilrsBuilder","qualname":"::gamepad::GilrsBuilder","value":"GilrsBuilder {  }","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"decl_id":null,"docs":" Allow to create `Gilrs ` with customized behaviour.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":27175,"byte_end":27178,"line_start":573,"line_end":573,"column_start":12,"column_end":15},"name":"new","qualname":"<GilrsBuilder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create builder with default settings. Use `build()` to create `Gilrs`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":27739,"byte_end":27759,"line_start":588,"line_end":588,"column_start":12,"column_end":32},"name":"with_default_filters","qualname":"<GilrsBuilder>::with_default_filters","value":"fn (mut self, default_filters: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If `true`, use [`axis_dpad_to_button`](ev/filter/fn.axis_dpad_to_button.html),\n [`Jitter`](ev/filter/struct.Jitter.html) and [`deadzone`](ev/filter/fn.deadzone.html)\n filters with default parameters. Defaults to `true`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":27910,"byte_end":27922,"line_start":595,"line_end":595,"column_start":12,"column_end":24},"name":"add_mappings","qualname":"<GilrsBuilder>::add_mappings","value":"fn (mut self, mappings: &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds SDL mappings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":28150,"byte_end":28166,"line_start":603,"line_end":603,"column_start":12,"column_end":28},"name":"add_env_mappings","qualname":"<GilrsBuilder>::add_env_mappings","value":"fn (mut self, env_mappings: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If true, will add SDL mappings from `SDL_GAMECONTROLLERCONFIG` environment variable.\n Defaults to true.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":28409,"byte_end":28430,"line_start":611,"line_end":611,"column_start":12,"column_end":33},"name":"add_included_mappings","qualname":"<GilrsBuilder>::add_included_mappings","value":"fn (mut self, included_mappings: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If true, will add SDL mappings included from\n https://github.com/gabomdq/SDL_GameControllerDB. Defaults to true.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":28827,"byte_end":28842,"line_start":621,"line_end":621,"column_start":12,"column_end":27},"name":"set_axis_to_btn","qualname":"<GilrsBuilder>::set_axis_to_btn","value":"fn (mut self, pressed: f32, released: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets values on which `ButtonPressed` and `ButtonReleased` events will be emitted. `build()`\n will return error if `pressed ≤ released` or if one of values is outside [0.0, 1.0].\n\n Defaults to 0.75 for `pressed` and 0.65 for `released`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":29175,"byte_end":29191,"line_start":630,"line_end":630,"column_start":12,"column_end":28},"name":"set_update_state","qualname":"<GilrsBuilder>::set_update_state","value":"fn (mut self, enabled: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disable or enable automatic state updates. You should use this if you use custom filters;\n in this case you have to update state manually anyway.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":29321,"byte_end":29326,"line_start":637,"line_end":637,"column_start":12,"column_end":17},"name":"build","qualname":"<GilrsBuilder>::build","value":"fn (mut self) -> Result<Gilrs, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates `Gilrs`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":30941,"byte_end":30966,"line_start":692,"line_end":692,"column_start":12,"column_end":37},"name":"ConnectedGamepadsIterator","qualname":"::gamepad::ConnectedGamepadsIterator","value":"","parent":null,"children":[],"decl_id":null,"docs":" Iterator over all connected gamepads.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":31749,"byte_end":31756,"line_start":719,"line_end":719,"column_start":12,"column_end":19},"name":"Gamepad","qualname":"::gamepad::Gamepad","value":"Gamepad {  }","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739}],"decl_id":null,"docs":" Represents handle to game controller.\n\n Using this struct you can access cached gamepad state, information about gamepad such as name\n or UUID and manage force feedback effects.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":31949,"byte_end":31953,"line_start":726,"line_end":726,"column_start":12,"column_end":16},"name":"name","qualname":"<Gamepad>::name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the mapping name if it exists otherwise returns the os provided name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":32248,"byte_end":32256,"line_start":736,"line_end":736,"column_start":12,"column_end":20},"name":"map_name","qualname":"<Gamepad>::map_name","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" if `mapping_source()` is `SdlMappings` returns the name of the mapping used by the gamepad.\n Otherwise returns `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":32389,"byte_end":32396,"line_start":741,"line_end":741,"column_start":12,"column_end":19},"name":"os_name","qualname":"<Gamepad>::os_name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the gamepad supplied by the OS.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":32671,"byte_end":32675,"line_start":749,"line_end":749,"column_start":12,"column_end":16},"name":"uuid","qualname":"<Gamepad>::uuid","value":"fn (&self) -> [u8; 16]","parent":null,"children":[],"decl_id":null,"docs":" Returns gamepad's UUID.\n\n It is recommended to process with the [UUID crate](https://crates.io/crates/uuid).\n Use `Uuid::from_bytes` method to create a `Uuid` from the returned bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":32779,"byte_end":32784,"line_start":754,"line_end":754,"column_start":12,"column_end":17},"name":"state","qualname":"<Gamepad>::state","value":"fn (&self) -> &GamepadState","parent":null,"children":[],"decl_id":null,"docs":" Returns cached gamepad state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":32900,"byte_end":32912,"line_start":759,"line_end":759,"column_start":12,"column_end":24},"name":"is_connected","qualname":"<Gamepad>::is_connected","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if gamepad is connected.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":33321,"byte_end":33331,"line_start":769,"line_end":769,"column_start":12,"column_end":22},"name":"is_pressed","qualname":"<Gamepad>::is_pressed","value":"fn (&self, btn: Button) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Examines cached gamepad state to check if given button is pressed. Panics if `btn` is\n `Unknown`.\n\n If you know `Code` of the element that you want to examine, it's recommended to use methods\n directly on `State`, because this version have to check which `Code` is mapped to element of\n gamepad.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":33732,"byte_end":33737,"line_start":778,"line_end":778,"column_start":12,"column_end":17},"name":"value","qualname":"<Gamepad>::value","value":"fn (&self, axis: Axis) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Examines cached gamepad state to check axis's value. Panics if `axis` is `Unknown`.\n\n If you know `Code` of the element that you want to examine, it's recommended to use methods\n directly on `State`, because this version have to check which `Code` is mapped to element of\n gamepad.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":34090,"byte_end":34101,"line_start":787,"line_end":787,"column_start":12,"column_end":23},"name":"button_data","qualname":"<Gamepad>::button_data","value":"fn (&self, btn: Button) -> Option<&ButtonData>","parent":null,"children":[],"decl_id":null,"docs":" Returns button state and when it changed.\n\n If you know `Code` of the element that you want to examine, it's recommended to use methods\n directly on `State`, because this version have to check which `Code` is mapped to element of\n gamepad.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":34474,"byte_end":34483,"line_start":796,"line_end":796,"column_start":12,"column_end":21},"name":"axis_data","qualname":"<Gamepad>::axis_data","value":"fn (&self, axis: Axis) -> Option<&AxisData>","parent":null,"children":[],"decl_id":null,"docs":" Returns axis state and when it changed.\n\n If you know `Code` of the element that you want to examine, it's recommended to use methods\n directly on `State`, because this version have to check which `Code` is mapped to element of\n gamepad.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":34675,"byte_end":34685,"line_start":801,"line_end":801,"column_start":12,"column_end":22},"name":"power_info","qualname":"<Gamepad>::power_info","value":"fn (&self) -> PowerInfo","parent":null,"children":[],"decl_id":null,"docs":" Returns device's power supply state. See [`PowerInfo`](enum.PowerInfo.html) for details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":35215,"byte_end":35229,"line_start":818,"line_end":818,"column_start":12,"column_end":26},"name":"mapping_source","qualname":"<Gamepad>::mapping_source","value":"fn (&self) -> MappingSource","parent":null,"children":[],"decl_id":null,"docs":" Returns source of gamepad mapping. Can be used to filter gamepads which do not provide\n unified controller layout.\n\n ```\n use gilrs::MappingSource;\n # let mut gilrs = gilrs::Gilrs::new().unwrap();\n\n for (_, gamepad) in gilrs.gamepads().filter(\n     |gp| gp.1.mapping_source() != MappingSource::None)\n {\n     println!(\"{} is ready to use!\", gamepad.name());\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":35531,"byte_end":35546,"line_start":828,"line_end":828,"column_start":12,"column_end":27},"name":"is_ff_supported","qualname":"<Gamepad>::is_ff_supported","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if force feedback is supported by device.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":35683,"byte_end":35704,"line_start":833,"line_end":833,"column_start":12,"column_end":33},"name":"set_listener_position","qualname":"<Gamepad>::set_listener_position","value":"fn <Vec3> (&self, position: Vec3) -> Result<(), FfError>","parent":null,"children":[],"decl_id":null,"docs":" Change gamepad position used by force feedback effects.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":36245,"byte_end":36261,"line_start":851,"line_end":851,"column_start":12,"column_end":28},"name":"axis_or_btn_name","qualname":"<Gamepad>::axis_or_btn_name","value":"fn (&self, ec: Code) -> Option<AxisOrBtn>","parent":null,"children":[],"decl_id":null,"docs":" Returns `AxisOrBtn` mapped to `Code`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":36405,"byte_end":36416,"line_start":856,"line_end":856,"column_start":12,"column_end":23},"name":"button_code","qualname":"<Gamepad>::button_code","value":"fn (&self, btn: Button) -> Option<Code>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Code` associated with `btn`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":36555,"byte_end":36564,"line_start":861,"line_end":861,"column_start":12,"column_end":21},"name":"axis_code","qualname":"<Gamepad>::axis_code","value":"fn (&self, axis: Axis) -> Option<Code>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Code` associated with `axis`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":36715,"byte_end":36723,"line_start":866,"line_end":866,"column_start":12,"column_end":20},"name":"deadzone","qualname":"<Gamepad>::deadzone","value":"fn (&self, axis: Code) -> Option<f32>","parent":null,"children":[],"decl_id":null,"docs":" Returns area in which axis events should be ignored.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":37135,"byte_end":37137,"line_start":881,"line_end":881,"column_start":12,"column_end":14},"name":"id","qualname":"<Gamepad>::id","value":"fn (&self) -> GamepadId","parent":null,"children":[],"decl_id":null,"docs":" Returns ID of gamepad.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":41322,"byte_end":41333,"line_start":1009,"line_end":1009,"column_start":5,"column_end":16},"name":"SdlMappings","qualname":"::gamepad::MappingSource::SdlMappings","value":"MappingSource::SdlMappings","parent":{"krate":0,"index":755},"children":[],"decl_id":null,"docs":" Gamepad uses SDL mappings.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":41434,"byte_end":41440,"line_start":1011,"line_end":1011,"column_start":5,"column_end":11},"name":"Driver","qualname":"::gamepad::MappingSource::Driver","value":"MappingSource::Driver","parent":{"krate":0,"index":755},"children":[],"decl_id":null,"docs":" Gamepad does not use any mappings but driver should provide unified controller layout.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":41574,"byte_end":41578,"line_start":1014,"line_end":1014,"column_start":5,"column_end":9},"name":"None","qualname":"::gamepad::MappingSource::None","value":"MappingSource::None","parent":{"krate":0,"index":755},"children":[],"decl_id":null,"docs":" Gamepad does not use any mappings and most gamepad events will probably be `Button::Unknown`\n or `Axis::Unknown`\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":41267,"byte_end":41280,"line_start":1007,"line_end":1007,"column_start":10,"column_end":23},"name":"MappingSource","qualname":"::gamepad::MappingSource","value":"MappingSource::{SdlMappings, Driver, None}","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":760}],"decl_id":null,"docs":" Source of gamepad mappings.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":41842,"byte_end":41851,"line_start":1022,"line_end":1022,"column_start":12,"column_end":21},"name":"GamepadId","qualname":"::gamepad::GamepadId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Gamepad ID.\n\n It's not possible to create instance of this type directly, but you can obtain one from Gamepad\n handle or any event. ID is valid for entire lifetime of `Gilrs` context.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":42926,"byte_end":42940,"line_start":1064,"line_end":1064,"column_start":5,"column_end":19},"name":"NotImplemented","qualname":"::gamepad::Error::NotImplemented","value":"Error::NotImplemented(Gilrs)","parent":{"krate":0,"index":788},"children":[],"decl_id":null,"docs":" Gilrs does not support current platform, but you can use dummy context from this error if\n gamepad input is not essential.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":43037,"byte_end":43053,"line_start":1066,"line_end":1066,"column_start":5,"column_end":21},"name":"InvalidAxisToBtn","qualname":"::gamepad::Error::InvalidAxisToBtn","value":"Error::InvalidAxisToBtn","parent":{"krate":0,"index":788},"children":[],"decl_id":null,"docs":" Either `pressed ≤ released` or one of values is outside [0.0, 1.0] range.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":43092,"byte_end":43097,"line_start":1068,"line_end":1068,"column_start":5,"column_end":10},"name":"Other","qualname":"::gamepad::Error::Other","value":"Error::Other(Box<dyn error::Error + Send + Sync>)","parent":{"krate":0,"index":788},"children":[],"decl_id":null,"docs":" Platform specific error.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":42776,"byte_end":42781,"line_start":1061,"line_end":1061,"column_start":10,"column_end":15},"name":"Error","qualname":"::gamepad::Error","value":"Error::{NotImplemented, InvalidAxisToBtn, Other}","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":794}],"decl_id":null,"docs":" Error type which can be returned when creating `Gilrs`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":61613,"byte_end":61624,"line_start":511,"line_end":511,"column_start":12,"column_end":23},"name":"MappingData","qualname":"::mapping::MappingData","value":"MappingData {  }","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":883}],"decl_id":null,"docs":" Stores data used to map gamepad buttons and axes.\n\n After you add all mappings, use\n [`Gamepad::set_mapping(…)`](struct.Gamepad.html#method.set_mapping) to change mapping of\n existing gamepad.\n\n See `examples/mapping.rs` for more detailed example.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":61746,"byte_end":61749,"line_start":518,"line_end":518,"column_start":12,"column_end":15},"name":"new","qualname":"<MappingData>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Mapping`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":61960,"byte_end":61966,"line_start":526,"line_end":526,"column_start":12,"column_end":18},"name":"button","qualname":"<MappingData>::button","value":"fn (&self, idx: Button) -> Option<ev::Code>","parent":null,"children":[],"decl_id":null,"docs":" Returns `EvCode` associated with button index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":62192,"byte_end":62196,"line_start":534,"line_end":534,"column_start":12,"column_end":16},"name":"axis","qualname":"<MappingData>::axis","value":"fn (&self, idx: Axis) -> Option<ev::Code>","parent":null,"children":[],"decl_id":null,"docs":" Returns `EvCode` associated with axis index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":62400,"byte_end":62410,"line_start":542,"line_end":542,"column_start":12,"column_end":22},"name":"insert_btn","qualname":"<MappingData>::insert_btn","value":"fn (&mut self, from: ev::Code, to: Button) -> Option<ev::Code>","parent":null,"children":[],"decl_id":null,"docs":" Inserts new button mapping.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":62624,"byte_end":62635,"line_start":549,"line_end":549,"column_start":12,"column_end":23},"name":"insert_axis","qualname":"<MappingData>::insert_axis","value":"fn (&mut self, from: ev::Code, to: Axis) -> Option<ev::Code>","parent":null,"children":[],"decl_id":null,"docs":" Inserts new axis mapping.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":62871,"byte_end":62884,"line_start":556,"line_end":556,"column_start":12,"column_end":25},"name":"remove_button","qualname":"<MappingData>::remove_button","value":"fn (&mut self, idx: Button) -> Option<ev::Code>","parent":null,"children":[],"decl_id":null,"docs":" Removes button and returns associated `NativEvCode`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":63075,"byte_end":63086,"line_start":561,"line_end":561,"column_start":12,"column_end":23},"name":"remove_axis","qualname":"<MappingData>::remove_axis","value":"fn (&mut self, idx: Axis) -> Option<ev::Code>","parent":null,"children":[],"decl_id":null,"docs":" Removes axis and returns associated `NativEvCode`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":63396,"byte_end":63407,"line_start":570,"line_end":570,"column_start":5,"column_end":16},"name":"InvalidCode","qualname":"::mapping::MappingError::InvalidCode","value":"MappingError::InvalidCode(ev::Code)","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Gamepad does not have element referenced by `EvCode`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":63458,"byte_end":63469,"line_start":572,"line_end":572,"column_start":5,"column_end":16},"name":"InvalidName","qualname":"::mapping::MappingError::InvalidName","value":"MappingError::InvalidName","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Name contains comma (',').\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":63538,"byte_end":63552,"line_start":574,"line_end":574,"column_start":5,"column_end":19},"name":"NotImplemented","qualname":"::mapping::MappingError::NotImplemented","value":"MappingError::NotImplemented","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" This function is not implemented for current platform.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":63592,"byte_end":63604,"line_start":576,"line_end":576,"column_start":5,"column_end":17},"name":"NotConnected","qualname":"::mapping::MappingError::NotConnected","value":"MappingError::NotConnected","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Gamepad is not connected.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":63673,"byte_end":63688,"line_start":578,"line_end":578,"column_start":5,"column_end":20},"name":"DuplicatedEntry","qualname":"::mapping::MappingError::DuplicatedEntry","value":"MappingError::DuplicatedEntry","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Same gamepad element is referenced by axis and button.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":63755,"byte_end":63769,"line_start":580,"line_end":580,"column_start":5,"column_end":19},"name":"UnknownElement","qualname":"::mapping::MappingError::UnknownElement","value":"MappingError::UnknownElement","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" `Mapping` with `Button::Unknown` or `Axis::Unknown`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":902},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":63843,"byte_end":63860,"line_start":582,"line_end":582,"column_start":5,"column_end":22},"name":"NotSdl2Compatible","qualname":"::mapping::MappingError::NotSdl2Compatible","value":"MappingError::NotSdl2Compatible","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" `Mapping` have button or axis that are not present in SDL2.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":63315,"byte_end":63327,"line_start":568,"line_end":568,"column_start":10,"column_end":22},"name":"MappingError","qualname":"::mapping::MappingError","value":"MappingError::{InvalidCode, InvalidName, NotImplemented, NotConnected, DuplicatedEntry, UnknownElement, NotSdl2Compatible}","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":902}],"decl_id":null,"docs":" The error type for functions related to gamepad mapping.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ev","qualname":"::ev","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":391},{"krate":0,"index":446},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":966},{"krate":0,"index":983},{"krate":0,"index":981},{"krate":0,"index":979},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":969},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":984},{"krate":0,"index":996},{"krate":0,"index":994},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":988},{"krate":0,"index":459},{"krate":0,"index":997},{"krate":0,"index":1033},{"krate":0,"index":1031},{"krate":0,"index":1030},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1035},{"krate":0,"index":1108},{"krate":0,"index":1106},{"krate":0,"index":1105},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1096},{"krate":0,"index":463},{"krate":0,"index":477},{"krate":0,"index":1110},{"krate":0,"index":1150},{"krate":0,"index":1148},{"krate":0,"index":1147},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1138},{"krate":0,"index":479},{"krate":0,"index":1152},{"krate":0,"index":1173},{"krate":0,"index":1171},{"krate":0,"index":1169},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1159}],"decl_id":null,"docs":" Gamepad state and other event related functionality.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"filter","qualname":"::ev::filter","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":913},{"krate":0,"index":923},{"krate":0,"index":921},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":915},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":924},{"krate":0,"index":938},{"krate":0,"index":936},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":927},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":388}],"decl_id":null,"docs":" Alter events in various ways.\n\n This modules contains \"event filters\" that can change, drop or create new events. To use them,\n import `Filter` trait and call `filter()` function on `Option<Event>`. Because `filter` also\n returns `Option<Event>` you can combine multiple filters by using `filter()` function on\n returned event.\n\n Filters in this modules have public fields that can be used to configure their behaviour. You\n can also create them with default values using `new()` method. If filter is not configurable,\n it is implemented as function (for example `deadzone()`).\n\n # Example\n\n ```\n use gilrs::{GilrsBuilder, Filter};\n use gilrs::ev::filter::{Jitter, Repeat, deadzone};\n\n let mut gilrs = GilrsBuilder::new().with_default_filters(false).build().unwrap();\n let jitter = Jitter { threshold: 0.02 };\n let repeat = Repeat::new();\n\n // Event loop\n loop {\n     while let Some(event) = gilrs\n         .next_event()\n         .filter_ev(&jitter, &mut gilrs)\n         .filter_ev(&deadzone, &mut gilrs)\n         .filter_ev(&repeat, &mut gilrs)\n     {\n         gilrs.update(&event);\n         println!(\"{:?}\", event);\n     }\n     # break;\n }\n ```\n # Implementing custom filters\n\n If you want to implement your own filters, you will have to implement `FilterFn` trait.\n **Do not return `None` if you got `Some(event)`**. If you want to discard an event, uses\n `EventType::Dropped`. Returning `None` means that there are no more events to process and\n will end `while let` loop.\n\n ## Example\n\n Example implementations of filter that will drop all events with `Unknown` axis or button.\n\n ```\n use gilrs::ev::filter::FilterFn;\n use gilrs::{Gilrs, Event, EventType, Button, Axis, Filter};\n\n struct UnknownSlayer;\n\n impl FilterFn for UnknownSlayer {\n     fn filter(&self, ev: Option<Event>, _gilrs: &mut Gilrs) -> Option<Event> {\n         match ev {\n             Some(Event { event: EventType::ButtonPressed(Button::Unknown, ..), id, .. })\n             | Some(Event { event: EventType::ButtonReleased(Button::Unknown, ..), id, .. })\n             | Some(Event { event: EventType::AxisChanged(Axis::Unknown, ..), id, .. })\n             => Some(Event::new(id, EventType::Dropped)),\n             _ => ev,\n         }\n     }\n }\n ```\n\n `FilterFn` is also implemented for all `Fn(Option<Event>, &Gilrs) -> Option<Event>`, so above\n example could be simplified to passing closure to `filter()` function.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":91404,"byte_end":91410,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"Jitter","qualname":"::ev::filter::Jitter","value":"Jitter { threshold }","parent":null,"children":[{"krate":0,"index":914}],"decl_id":null,"docs":" Discard axis events that changed less than `threshold`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":91421,"byte_end":91430,"line_start":85,"line_end":85,"column_start":9,"column_end":18},"name":"threshold","qualname":"::ev::filter::Jitter::threshold","value":"f32","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":91529,"byte_end":91532,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"new","qualname":"<Jitter>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Repeat` filter with threshold set to 0.01.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":92556,"byte_end":92564,"line_start":124,"line_end":124,"column_start":8,"column_end":16},"name":"deadzone","qualname":"::ev::filter::deadzone","value":"fn (ev: Option<Event>, gilrs: &mut Gilrs) -> Option<Event>","parent":null,"children":[],"decl_id":null,"docs":" Drops events in dead zone and remaps value to keep it in standard range.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":95085,"byte_end":95104,"line_start":197,"line_end":197,"column_start":8,"column_end":27},"name":"axis_dpad_to_button","qualname":"::ev::filter::axis_dpad_to_button","value":"fn (ev: Option<Event>, gilrs: &mut Gilrs) -> Option<Event>","parent":null,"children":[],"decl_id":null,"docs":" Maps axis dpad events to button dpad events.\n\n This filter will do nothing if gamepad have dpad buttons (to prevent double events for same\n element) and if standard `NativeEvCode` for dpads is used by some other buttons. It will always\n try to map if SDL mappings contains mappings for all four hats.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":98109,"byte_end":98115,"line_start":289,"line_end":289,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::ev::filter::Repeat","value":"Repeat { after, every }","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926}],"decl_id":null,"docs":" Repeats pressed keys.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":98126,"byte_end":98131,"line_start":290,"line_end":290,"column_start":9,"column_end":14},"name":"after","qualname":"::ev::filter::Repeat::after","value":"std::time::Duration","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":98151,"byte_end":98156,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"name":"every","qualname":"::ev::filter::Repeat::every","value":"std::time::Duration","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":98283,"byte_end":98286,"line_start":296,"line_end":296,"column_start":12,"column_end":15},"name":"new","qualname":"<Repeat>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Repeat` filter with `after` set to 500ms and `every` set to 30ms.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":100546,"byte_end":100552,"line_start":354,"line_end":354,"column_start":11,"column_end":17},"name":"Filter","qualname":"::ev::filter::Filter","value":"Filter","parent":null,"children":[{"krate":0,"index":378}],"decl_id":null,"docs":" Allow filtering events.\n\n See module level documentation for more info.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":100562,"byte_end":100571,"line_start":355,"line_end":355,"column_start":8,"column_end":17},"name":"filter_ev","qualname":"::ev::filter::Filter::filter_ev","value":"fn <F> (&self, filter: &F, gilrs: &mut Gilrs) -> Option<Event>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":100742,"byte_end":100750,"line_start":361,"line_end":361,"column_start":11,"column_end":19},"name":"FilterFn","qualname":"::ev::filter::FilterFn","value":"FilterFn","parent":null,"children":[{"krate":0,"index":381}],"decl_id":null,"docs":" Actual filter implementation.\n\n See module level documentation for more info.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":100760,"byte_end":100766,"line_start":362,"line_end":362,"column_start":8,"column_end":14},"name":"filter","qualname":"::ev::filter::FilterFn::filter","value":"fn (&self, ev: Option<Event>, gilrs: &mut Gilrs) -> Option<Event>","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"state","qualname":"::ev::state","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":939},{"krate":0,"index":944},{"krate":0,"index":942},{"krate":0,"index":397},{"krate":0,"index":416},{"krate":0,"index":420},{"krate":0,"index":424},{"krate":0,"index":429},{"krate":0,"index":946},{"krate":0,"index":955},{"krate":0,"index":954},{"krate":0,"index":952},{"krate":0,"index":434},{"krate":0,"index":957},{"krate":0,"index":964},{"krate":0,"index":963},{"krate":0,"index":961},{"krate":0,"index":441}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":102275,"byte_end":102287,"line_start":18,"line_end":18,"column_start":12,"column_end":24},"name":"GamepadState","qualname":"::ev::state::GamepadState","value":"GamepadState {  }","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941}],"decl_id":null,"docs":" Cached gamepad state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":102762,"byte_end":102772,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"is_pressed","qualname":"<GamepadState>::is_pressed","value":"fn (&self, btn: Code) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if given button is pressed. Returns `false` if there is no information about\n `btn` or it is not pressed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":103049,"byte_end":103054,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"value","qualname":"<GamepadState>::value","value":"fn (&self, el: Code) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns value of `el` or 0.0 when there is no information about it. `el` can be either axis\n or button.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":103300,"byte_end":103307,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"buttons","qualname":"<GamepadState>::buttons","value":"fn (&self) -> ButtonDataIter","parent":null,"children":[],"decl_id":null,"docs":" Iterate over buttons data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":103429,"byte_end":103433,"line_start":58,"line_end":58,"column_start":12,"column_end":16},"name":"axes","qualname":"<GamepadState>::axes","value":"fn (&self) -> AxisDataIter","parent":null,"children":[],"decl_id":null,"docs":" Iterate over axes data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":103566,"byte_end":103577,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"button_data","qualname":"<GamepadState>::button_data","value":"fn (&self, btn: Code) -> Option<&ButtonData>","parent":null,"children":[],"decl_id":null,"docs":" Returns button state and when it changed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":103718,"byte_end":103727,"line_start":68,"line_end":68,"column_start":12,"column_end":21},"name":"axis_data","qualname":"<GamepadState>::axis_data","value":"fn (&self, axis: Code) -> Option<&AxisData>","parent":null,"children":[],"decl_id":null,"docs":" Returns axis state and when it changed.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":105323,"byte_end":105337,"line_start":126,"line_end":126,"column_start":12,"column_end":26},"name":"ButtonDataIter","qualname":"::ev::state::ButtonDataIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Iterator over `ButtonData`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":105423,"byte_end":105435,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"AxisDataIter","qualname":"::ev::state::AxisDataIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Iterator over `AxisData`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":946},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":105931,"byte_end":105941,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"ButtonData","qualname":"::ev::state::ButtonData","value":"ButtonData {  }","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951}],"decl_id":null,"docs":" Information about button stored in `State`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":106468,"byte_end":106478,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"is_pressed","qualname":"<ButtonData>::is_pressed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if button is pressed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":106571,"byte_end":106576,"line_start":180,"line_end":180,"column_start":12,"column_end":17},"name":"value","qualname":"<ButtonData>::value","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns value of button.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":106677,"byte_end":106689,"line_start":185,"line_end":185,"column_start":12,"column_end":24},"name":"is_repeating","qualname":"<ButtonData>::is_repeating","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if button is repeating.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":106816,"byte_end":106823,"line_start":190,"line_end":190,"column_start":12,"column_end":19},"name":"counter","qualname":"<ButtonData>::counter","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns value of counter when button state last changed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":106927,"byte_end":106936,"line_start":195,"line_end":195,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<ButtonData>::timestamp","value":"fn (&self) -> SystemTime","parent":null,"children":[],"decl_id":null,"docs":" Returns when button state last changed.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":957},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":107083,"byte_end":107091,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"AxisData","qualname":"::ev::state::AxisData","value":"AxisData {  }","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960}],"decl_id":null,"docs":" Information about axis stored in `State`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":107423,"byte_end":107428,"line_start":217,"line_end":217,"column_start":12,"column_end":17},"name":"value","qualname":"<AxisData>::value","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns value of axis.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":107545,"byte_end":107552,"line_start":222,"line_end":222,"column_start":12,"column_end":19},"name":"counter","qualname":"<AxisData>::counter","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns value of counter when axis value last changed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":107659,"byte_end":107668,"line_start":227,"line_end":227,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<AxisData>::timestamp","value":"fn (&self) -> SystemTime","parent":null,"children":[],"decl_id":null,"docs":" Returns when axis value last changed.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":966},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":81362,"byte_end":81366,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"Code","qualname":"::ev::Code","value":"","parent":null,"children":[],"decl_id":null,"docs":" Platform specific event code.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":81530,"byte_end":81538,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"into_u32","qualname":"<Code>::into_u32","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":984},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":81685,"byte_end":81690,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Event","qualname":"::ev::Event","value":"Event { id, event, time }","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987}],"decl_id":null,"docs":" Holds information about gamepad event.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":985},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":81724,"byte_end":81726,"line_start":41,"line_end":41,"column_start":9,"column_end":11},"name":"id","qualname":"::ev::Event::id","value":"gamepad::GamepadId","parent":{"krate":0,"index":984},"children":[],"decl_id":null,"docs":" Id of gamepad.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":986},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":81769,"byte_end":81774,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"name":"event","qualname":"::ev::Event::event","value":"ev::EventType","parent":{"krate":0,"index":984},"children":[],"decl_id":null,"docs":" Event's data.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":987},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":81832,"byte_end":81836,"line_start":45,"line_end":45,"column_start":9,"column_end":13},"name":"time","qualname":"::ev::Event::time","value":"std::time::SystemTime","parent":{"krate":0,"index":984},"children":[],"decl_id":null,"docs":" Time when event was emitted.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":81922,"byte_end":81925,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Event>::new","value":"fn (id: GamepadId, event: EventType) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new event with current time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":82136,"byte_end":82140,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"drop","qualname":"<Event>::drop","value":"fn (mut self) -> Event","parent":null,"children":[],"decl_id":null,"docs":" Returns `Event` with `EventType::Dropped`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":82301,"byte_end":82311,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_dropped","qualname":"<Event>::is_dropped","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if event is `Dropped` and should be ignored.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":82513,"byte_end":82526,"line_start":75,"line_end":75,"column_start":5,"column_end":18},"name":"ButtonPressed","qualname":"::ev::EventType::ButtonPressed","value":"EventType::ButtonPressed(Button, Code)","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":" Some button on gamepad has been pressed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":82641,"byte_end":82655,"line_start":77,"line_end":77,"column_start":5,"column_end":19},"name":"ButtonRepeated","qualname":"::ev::EventType::ButtonRepeated","value":"EventType::ButtonRepeated(Button, Code)","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":" This event can be generated by [`ev::Repeat`](filter/struct.Repeat.html) event filter.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":82728,"byte_end":82742,"line_start":79,"line_end":79,"column_start":5,"column_end":19},"name":"ButtonReleased","qualname":"::ev::EventType::ButtonReleased","value":"EventType::ButtonReleased(Button, Code)","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":" Previously pressed button has been released.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":82833,"byte_end":82846,"line_start":81,"line_end":81,"column_start":5,"column_end":18},"name":"ButtonChanged","qualname":"::ev::EventType::ButtonChanged","value":"EventType::ButtonChanged(Button, f32, Code)","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":" Value of button has changed. Value can be in range [0.0, 1.0].\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":82941,"byte_end":82952,"line_start":83,"line_end":83,"column_start":5,"column_end":16},"name":"AxisChanged","qualname":"::ev::EventType::AxisChanged","value":"EventType::AxisChanged(Axis, f32, Code)","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":" Value of axis has changed. Value can be in range [-1.0, 1.0].\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83122,"byte_end":83131,"line_start":86,"line_end":86,"column_start":5,"column_end":14},"name":"Connected","qualname":"::ev::EventType::Connected","value":"EventType::Connected","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":" Gamepad has been connected. If gamepad's UUID doesn't match one of disconnected gamepads,\n newly connected gamepad will get new ID.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83231,"byte_end":83243,"line_start":88,"line_end":88,"column_start":5,"column_end":17},"name":"Disconnected","qualname":"::ev::EventType::Disconnected","value":"EventType::Disconnected","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":" Gamepad has been disconnected. Disconnected gamepad will not generate any new events.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83339,"byte_end":83346,"line_start":90,"line_end":90,"column_start":5,"column_end":12},"name":"Dropped","qualname":"::ev::EventType::Dropped","value":"EventType::Dropped","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":" There was an `Event`, but it was dropped by one of filters. You should ignore it.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":82448,"byte_end":82457,"line_start":73,"line_end":73,"column_start":10,"column_end":19},"name":"EventType","qualname":"::ev::EventType","value":"EventType::{ButtonPressed, ButtonRepeated, ButtonReleased, ButtonChanged, AxisChanged, Connected, Disconnected, Dropped}","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":1002},{"krate":0,"index":1006},{"krate":0,"index":1010},{"krate":0,"index":1015},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024}],"decl_id":null,"docs":" Gamepad event.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83685,"byte_end":83690,"line_start":101,"line_end":101,"column_start":5,"column_end":10},"name":"South","qualname":"::ev::Button::South","value":"Button::South","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83708,"byte_end":83712,"line_start":102,"line_end":102,"column_start":5,"column_end":9},"name":"East","qualname":"::ev::Button::East","value":"Button::East","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83729,"byte_end":83734,"line_start":103,"line_end":103,"column_start":5,"column_end":10},"name":"North","qualname":"::ev::Button::North","value":"Button::North","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83752,"byte_end":83756,"line_start":104,"line_end":104,"column_start":5,"column_end":9},"name":"West","qualname":"::ev::Button::West","value":"Button::West","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1048},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83773,"byte_end":83774,"line_start":105,"line_end":105,"column_start":5,"column_end":6},"name":"C","qualname":"::ev::Button::C","value":"Button::C","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1051},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83788,"byte_end":83789,"line_start":106,"line_end":106,"column_start":5,"column_end":6},"name":"Z","qualname":"::ev::Button::Z","value":"Button::Z","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83819,"byte_end":83830,"line_start":108,"line_end":108,"column_start":5,"column_end":16},"name":"LeftTrigger","qualname":"::ev::Button::LeftTrigger","value":"Button::LeftTrigger","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83845,"byte_end":83857,"line_start":109,"line_end":109,"column_start":5,"column_end":17},"name":"LeftTrigger2","qualname":"::ev::Button::LeftTrigger2","value":"Button::LeftTrigger2","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83873,"byte_end":83885,"line_start":110,"line_end":110,"column_start":5,"column_end":17},"name":"RightTrigger","qualname":"::ev::Button::RightTrigger","value":"Button::RightTrigger","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1063},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83900,"byte_end":83913,"line_start":111,"line_end":111,"column_start":5,"column_end":18},"name":"RightTrigger2","qualname":"::ev::Button::RightTrigger2","value":"Button::RightTrigger2","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83945,"byte_end":83951,"line_start":113,"line_end":113,"column_start":5,"column_end":11},"name":"Select","qualname":"::ev::Button::Select","value":"Button::Select","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1069},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83970,"byte_end":83975,"line_start":114,"line_end":114,"column_start":5,"column_end":10},"name":"Start","qualname":"::ev::Button::Start","value":"Button::Start","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83993,"byte_end":83997,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"name":"Mode","qualname":"::ev::Button::Mode","value":"Button::Mode","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":84028,"byte_end":84037,"line_start":117,"line_end":117,"column_start":5,"column_end":14},"name":"LeftThumb","qualname":"::ev::Button::LeftThumb","value":"Button::LeftThumb","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1078},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":84056,"byte_end":84066,"line_start":118,"line_end":118,"column_start":5,"column_end":15},"name":"RightThumb","qualname":"::ev::Button::RightThumb","value":"Button::RightThumb","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":84098,"byte_end":84104,"line_start":120,"line_end":120,"column_start":5,"column_end":11},"name":"DPadUp","qualname":"::ev::Button::DPadUp","value":"Button::DPadUp","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":84124,"byte_end":84132,"line_start":121,"line_end":121,"column_start":5,"column_end":13},"name":"DPadDown","qualname":"::ev::Button::DPadDown","value":"Button::DPadDown","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":84154,"byte_end":84162,"line_start":122,"line_end":122,"column_start":5,"column_end":13},"name":"DPadLeft","qualname":"::ev::Button::DPadLeft","value":"Button::DPadLeft","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":84184,"byte_end":84193,"line_start":123,"line_end":123,"column_start":5,"column_end":14},"name":"DPadRight","qualname":"::ev::Button::DPadRight","value":"Button::DPadRight","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":84217,"byte_end":84224,"line_start":125,"line_end":125,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::ev::Button::Unknown","value":"Button::Unknown","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83654,"byte_end":83660,"line_start":99,"line_end":99,"column_start":10,"column_end":16},"name":"Button","qualname":"::ev::Button","value":"Button::{South, East, North, West, C, Z, LeftTrigger, LeftTrigger2, RightTrigger, RightTrigger2, Select, Start, Mode, LeftThumb, RightThumb, DPadUp, DPadDown, DPadLeft, DPadRight, Unknown}","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1063},{"krate":0,"index":1066},{"krate":0,"index":1069},{"krate":0,"index":1072},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1090},{"krate":0,"index":1093}],"decl_id":null,"docs":" Gamepad's elements which state can be represented by value from 0.0 to 1.0.\n\n ![Controller layout](https://gilrs-project.gitlab.io/gilrs/img/controller.svg)\n","sig":null,"attributes":[{"value":"repr(u16)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":83351,"byte_end":83363,"line_start":93,"line_end":93,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":84268,"byte_end":84277,"line_start":129,"line_end":129,"column_start":12,"column_end":21},"name":"is_action","qualname":"<Button>::is_action","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":84447,"byte_end":84457,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"is_trigger","qualname":"<Button>::is_trigger","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":84649,"byte_end":84656,"line_start":145,"line_end":145,"column_start":12,"column_end":19},"name":"is_menu","qualname":"<Button>::is_menu","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":84812,"byte_end":84820,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"is_stick","qualname":"<Button>::is_stick","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":84977,"byte_end":84984,"line_start":161,"line_end":161,"column_start":12,"column_end":19},"name":"is_dpad","qualname":"<Button>::is_dpad","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":85159,"byte_end":85165,"line_start":169,"line_end":169,"column_start":12,"column_end":18},"name":"to_nec","qualname":"<Button>::to_nec","value":"fn (self) -> Option<Code>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1111},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":86757,"byte_end":86767,"line_start":211,"line_end":211,"column_start":5,"column_end":15},"name":"LeftStickX","qualname":"::ev::Axis::LeftStickX","value":"Axis::LeftStickX","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":86788,"byte_end":86798,"line_start":212,"line_end":212,"column_start":5,"column_end":15},"name":"LeftStickY","qualname":"::ev::Axis::LeftStickY","value":"Axis::LeftStickY","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":86819,"byte_end":86824,"line_start":213,"line_end":213,"column_start":5,"column_end":10},"name":"LeftZ","qualname":"::ev::Axis::LeftZ","value":"Axis::LeftZ","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":86843,"byte_end":86854,"line_start":214,"line_end":214,"column_start":5,"column_end":16},"name":"RightStickX","qualname":"::ev::Axis::RightStickX","value":"Axis::RightStickX","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":86875,"byte_end":86886,"line_start":215,"line_end":215,"column_start":5,"column_end":16},"name":"RightStickY","qualname":"::ev::Axis::RightStickY","value":"Axis::RightStickY","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":86907,"byte_end":86913,"line_start":216,"line_end":216,"column_start":5,"column_end":11},"name":"RightZ","qualname":"::ev::Axis::RightZ","value":"Axis::RightZ","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":86933,"byte_end":86938,"line_start":217,"line_end":217,"column_start":5,"column_end":10},"name":"DPadX","qualname":"::ev::Axis::DPadX","value":"Axis::DPadX","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":86957,"byte_end":86962,"line_start":218,"line_end":218,"column_start":5,"column_end":10},"name":"DPadY","qualname":"::ev::Axis::DPadY","value":"Axis::DPadY","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1135},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":86981,"byte_end":86988,"line_start":219,"line_end":219,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::ev::Axis::Unknown","value":"Axis::Unknown","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1110},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":86746,"byte_end":86750,"line_start":210,"line_end":210,"column_start":10,"column_end":14},"name":"Axis","qualname":"::ev::Axis","value":"Axis::{LeftStickX, LeftStickY, LeftZ, RightStickX, RightStickY, RightZ, DPadX, DPadY, Unknown}","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1123},{"krate":0,"index":1126},{"krate":0,"index":1129},{"krate":0,"index":1132},{"krate":0,"index":1135}],"decl_id":null,"docs":" Gamepad's elements which state can be represented by value from -1.0 to 1.0.\n\n ![Controller layout](https://gilrs-project.gitlab.io/gilrs/img/controller.svg)\n","sig":null,"attributes":[{"value":"repr(u16)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":86442,"byte_end":86454,"line_start":204,"line_end":204,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":87123,"byte_end":87131,"line_start":224,"line_end":224,"column_start":12,"column_end":20},"name":"is_stick","qualname":"<Axis>::is_stick","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if axis is `LeftStickX`, `LeftStickY`, `RightStickX` or `RightStickY`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":87702,"byte_end":87713,"line_start":241,"line_end":241,"column_start":12,"column_end":23},"name":"second_axis","qualname":"<Axis>::second_axis","value":"fn (self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the other axis from same element of gamepad, if any.\n\n | input       | output            |\n |-------------|-------------------|\n |`LeftStickX` |`Some(LeftStickY`) |\n |`LeftStickY` |`Some(LeftStickX`) |\n |`RightStickX`|`Some(RightStickY`)|\n |`RightStickY`|`Some(RightStickX`)|\n | …           |`None`             |\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":88176,"byte_end":88180,"line_start":257,"line_end":257,"column_start":5,"column_end":9},"name":"Axis","qualname":"::ev::AxisOrBtn::Axis","value":"AxisOrBtn::Axis(Axis)","parent":{"krate":0,"index":1152},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":88192,"byte_end":88195,"line_start":258,"line_end":258,"column_start":5,"column_end":8},"name":"Btn","qualname":"::ev::AxisOrBtn::Btn","value":"AxisOrBtn::Btn(Button)","parent":{"krate":0,"index":1152},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1152},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":88160,"byte_end":88169,"line_start":256,"line_end":256,"column_start":10,"column_end":19},"name":"AxisOrBtn","qualname":"::ev::AxisOrBtn","value":"AxisOrBtn::{Axis, Btn}","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1156}],"decl_id":null,"docs":" Represents `Axis` or `Button`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ff","qualname":"::ff","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":506},{"krate":0,"index":549},{"krate":0,"index":591},{"krate":0,"index":630},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":1416},{"krate":0,"index":1430},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1424},{"krate":0,"index":683},{"krate":0,"index":1432},{"krate":0,"index":1456},{"krate":0,"index":1454},{"krate":0,"index":1452},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":699},{"krate":0,"index":702}],"decl_id":null,"docs":" Force feedback module.\n\n To use force feedback, you have to create one or more [`Effect`s](struct.Effect.html). Each\n `Effect` contains one or more [`BasicEffect`s](struct.BasicEffect.html) and parameters that\n describe effect's source, like it's position, gain or used\n [`DistanceModel`](enum.DistanceModel.html). Final strength of effect is based on saturating sum\n (to `u16::MAX`) of all base effects and time from the start of playback, attenuation from\n distance between effect source and listener (represented by gamepad) and effect's gain.\n\n See also [`Gilrs::set_listener_position()`](../struct.Gilrs.html#method.set_listener_position)\n and [`Gamepad::is_ff_supported()`](../struct.Gamepad.html#method.is_ff_supported).\n\n # Example\n\n ```rust\n use gilrs::Gilrs;\n use gilrs::ff::{EffectBuilder, Replay, BaseEffect, BaseEffectType, Ticks};\n\n let mut gilrs = Gilrs::new().unwrap();\n let support_ff = gilrs\n     .gamepads()\n     .filter_map(|(id, gp)| if gp.is_ff_supported() { Some(id) } else { None })\n     .collect::<Vec<_>>();\n\n let duration = Ticks::from_ms(150);\n let effect = EffectBuilder::new()\n     .add_effect(BaseEffect {\n         kind: BaseEffectType::Strong { magnitude: 60_000 },\n         scheduling: Replay { play_for: duration, with_delay: duration * 3, ..Default::default() },\n         envelope: Default::default(),\n     })\n     .add_effect(BaseEffect {\n         kind: BaseEffectType::Weak { magnitude: 60_000 },\n         scheduling: Replay { after: duration * 2, play_for: duration, with_delay: duration * 3 },\n         ..Default::default()\n     })\n     .gamepads(&support_ff)\n     .finish(&mut gilrs).unwrap();\n\n effect.play().unwrap();\n ```\n\n See [`examples/ff_pos.rs`](https://gitlab.com/gilrs-project/gilrs/blob/v0.7.3/examples/ff_pos.rs) for\n more advanced example.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1175},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":122448,"byte_end":122452,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Weak","qualname":"::ff::base_effect::BaseEffectType::Weak","value":"BaseEffectType::Weak { magnitude }","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":122490,"byte_end":122496,"line_start":21,"line_end":21,"column_start":5,"column_end":11},"name":"Strong","qualname":"::ff::base_effect::BaseEffectType::Strong","value":"BaseEffectType::Strong { magnitude }","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1179},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":122553,"byte_end":122568,"line_start":25,"line_end":25,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::ff::base_effect::BaseEffectType::__Nonexhaustive","value":"BaseEffectType::__Nonexhaustive","parent":{"krate":0,"index":1174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":122427,"byte_end":122441,"line_start":17,"line_end":17,"column_start":10,"column_end":24},"name":"BaseEffectType","qualname":"::ff::base_effect::BaseEffectType","value":"BaseEffectType::{Weak, Strong, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1177},{"krate":0,"index":1179}],"decl_id":null,"docs":" Kind of [`BaseEffect`](struct.BaseEffect.html).\n\n Currently base effect support only xinput model of force feedback, which means that  gamepad\n have weak and strong motor.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":123683,"byte_end":123693,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"BaseEffect","qualname":"::ff::base_effect::BaseEffect","value":"BaseEffect { kind, scheduling, envelope }","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193}],"decl_id":null,"docs":" Basic building block used to create more complex force feedback effects.\n\n For each base effect you can specify it's type, for how long should it be played and it's\n strength during playback.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":123733,"byte_end":123737,"line_start":64,"line_end":64,"column_start":9,"column_end":13},"name":"kind","qualname":"::ff::base_effect::BaseEffect::kind","value":"ff::base_effect::BaseEffectType","parent":{"krate":0,"index":1190},"children":[],"decl_id":null,"docs":" Type of base effect.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":123833,"byte_end":123843,"line_start":66,"line_end":66,"column_start":9,"column_end":19},"name":"scheduling","qualname":"::ff::base_effect::BaseEffect::scheduling","value":"ff::base_effect::Replay","parent":{"krate":0,"index":1190},"children":[],"decl_id":null,"docs":" Defines playback duration and delays between each repetition.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":123934,"byte_end":123942,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"name":"envelope","qualname":"::ff::base_effect::BaseEffect::envelope","value":"ff::base_effect::Envelope","parent":{"krate":0,"index":1190},"children":[],"decl_id":null,"docs":" Basic attenuation function.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":124521,"byte_end":124529,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"Envelope","qualname":"::ff::base_effect::Envelope","value":"Envelope { attack_length, attack_level, fade_length, fade_level }","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209}],"decl_id":null,"docs":" Envelope shaped attenuation(time) function.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":124540,"byte_end":124553,"line_start":89,"line_end":89,"column_start":9,"column_end":22},"name":"attack_length","qualname":"::ff::base_effect::Envelope::attack_length","value":"ff::time::Ticks","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":124570,"byte_end":124582,"line_start":90,"line_end":90,"column_start":9,"column_end":21},"name":"attack_level","qualname":"::ff::base_effect::Envelope::attack_level","value":"f32","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":124597,"byte_end":124608,"line_start":91,"line_end":91,"column_start":9,"column_end":20},"name":"fade_length","qualname":"::ff::base_effect::Envelope::fade_length","value":"ff::time::Ticks","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":124625,"byte_end":124635,"line_start":92,"line_end":92,"column_start":9,"column_end":19},"name":"fade_level","qualname":"::ff::base_effect::Envelope::fade_level","value":"f32","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":125633,"byte_end":125639,"line_start":121,"line_end":121,"column_start":12,"column_end":18},"name":"Replay","qualname":"::ff::base_effect::Replay","value":"Replay { after, play_for, with_delay }","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224}],"decl_id":null,"docs":" Defines scheduling of the basic force feedback effect.\n\n ```text\n        ____________            ____________            ____________\n        |          |            |          |            |\n _______|          |____________|          |____________|\n  after   play_for   with_delay   play_for   with_delay   play_for\n ```\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1222},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":125721,"byte_end":125726,"line_start":123,"line_end":123,"column_start":9,"column_end":14},"name":"after","qualname":"::ff::base_effect::Replay::after","value":"ff::time::Ticks","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" Start playback `after` ticks after `Effect::play()` is called.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":125770,"byte_end":125778,"line_start":125,"line_end":125,"column_start":9,"column_end":17},"name":"play_for","qualname":"::ff::base_effect::Replay::play_for","value":"ff::time::Ticks","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" Playback duration.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1224},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":125867,"byte_end":125877,"line_start":127,"line_end":127,"column_start":9,"column_end":19},"name":"with_delay","qualname":"::ff::base_effect::Replay::with_delay","value":"ff::time::Ticks","parent":{"krate":0,"index":1221},"children":[],"decl_id":null,"docs":" If playback should be repeated delay it for `with_delay` ticks.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":126141,"byte_end":126144,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"dur","qualname":"<Replay>::dur","value":"fn (&self) -> Ticks","parent":null,"children":[],"decl_id":null,"docs":" Returns duration of effect calculated as `play_for + with_delay`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":127727,"byte_end":127731,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"None","qualname":"::ff::effect_source::DistanceModel::None","value":"DistanceModel::None","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" Effect is not attenuated by distance.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":127768,"byte_end":127774,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Linear","qualname":"::ff::effect_source::DistanceModel::Linear","value":"DistanceModel::Linear { ref_distance, rolloff_factor, max_distance }","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" Linear distance model.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":127910,"byte_end":127923,"line_start":36,"line_end":36,"column_start":5,"column_end":18},"name":"LinearClamped","qualname":"::ff::effect_source::DistanceModel::LinearClamped","value":"DistanceModel::LinearClamped { ref_distance, rolloff_factor, max_distance }","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" Linear distance clamped model.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":128052,"byte_end":128059,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"Inverse","qualname":"::ff::effect_source::DistanceModel::Inverse","value":"DistanceModel::Inverse { ref_distance, rolloff_factor }","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" Inverse distance model.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":128169,"byte_end":128183,"line_start":47,"line_end":47,"column_start":5,"column_end":19},"name":"InverseClamped","qualname":"::ff::effect_source::DistanceModel::InverseClamped","value":"DistanceModel::InverseClamped { ref_distance, rolloff_factor, max_distance }","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" Inverse distance clamped model.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1252},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":128316,"byte_end":128327,"line_start":53,"line_end":53,"column_start":5,"column_end":16},"name":"Exponential","qualname":"::ff::effect_source::DistanceModel::Exponential","value":"DistanceModel::Exponential { ref_distance, rolloff_factor }","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" Exponential distance model.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":128441,"byte_end":128459,"line_start":58,"line_end":58,"column_start":5,"column_end":23},"name":"ExponentialClamped","qualname":"::ff::effect_source::DistanceModel::ExponentialClamped","value":"DistanceModel::ExponentialClamped { ref_distance, rolloff_factor, max_distance }","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" Exponential distance clamped model.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":127661,"byte_end":127674,"line_start":26,"line_end":26,"column_start":10,"column_end":23},"name":"DistanceModel","qualname":"::ff::effect_source::DistanceModel","value":"DistanceModel::{None, Linear, LinearClamped, Inverse, InverseClamped, Exponential, ExponentialClamped}","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1237},{"krate":0,"index":1241},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1252},{"krate":0,"index":1255}],"decl_id":null,"docs":" Specifies how distance between effect source and listener attenuates effect.\n\n They are based on\n [OpenAL Specification](http://openal.org/documentation/openal-1.1-specification.pdf) (chapter\n 3.4), but the best way to see how they differ is to run `ff_pos` example.\n\n Make sure that all parameters are ≥ 0. Additionally `Linear` and `LinearClamped` models don't\n like if `ref_distance == max_distance` while others would prefer `ref_distance > 0`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":133676,"byte_end":133700,"line_start":215,"line_end":215,"column_start":5,"column_end":29},"name":"InvalidReferenceDistance","qualname":"::ff::effect_source::DistanceModelError::InvalidReferenceDistance","value":"DistanceModelError::InvalidReferenceDistance","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Reference distance is < 0.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":133737,"byte_end":133757,"line_start":217,"line_end":217,"column_start":5,"column_end":25},"name":"InvalidRolloffFactor","qualname":"::ff::effect_source::DistanceModelError::InvalidRolloffFactor","value":"DistanceModelError::InvalidRolloffFactor","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Rolloff factor is < 0.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1273},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":133792,"byte_end":133810,"line_start":219,"line_end":219,"column_start":5,"column_end":23},"name":"InvalidMaxDistance","qualname":"::ff::effect_source::DistanceModelError::InvalidMaxDistance","value":"DistanceModelError::InvalidMaxDistance","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Max distance is < 0.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":133848,"byte_end":133869,"line_start":221,"line_end":221,"column_start":5,"column_end":26},"name":"InvalidModelParameter","qualname":"::ff::effect_source::DistanceModelError::InvalidModelParameter","value":"DistanceModelError::InvalidModelParameter","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Possible divide by zero\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":133894,"byte_end":133909,"line_start":223,"line_end":223,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::ff::effect_source::DistanceModelError::__Nonexhaustive","value":"DistanceModelError::__Nonexhaustive","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":133616,"byte_end":133634,"line_start":213,"line_end":213,"column_start":10,"column_end":28},"name":"DistanceModelError","qualname":"::ff::effect_source::DistanceModelError","value":"DistanceModelError::{InvalidReferenceDistance, InvalidRolloffFactor, InvalidMaxDistance, InvalidModelParameter, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1271},{"krate":0,"index":1273},{"krate":0,"index":1275},{"krate":0,"index":1277}],"decl_id":null,"docs":" Error that can be returned when passing [`DistanceModel`](struct.DistanceModel.html) with\n invalid value.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":137982,"byte_end":137986,"line_start":369,"line_end":369,"column_start":10,"column_end":14},"name":"Base","qualname":"::ff::effect_source::SliceVecExt::Base","value":"type Base;","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":147626,"byte_end":147631,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"Ticks","qualname":"::ff::time::Ticks","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents duration.\n\n This type is only useful as input parameter for other functions in force feedback module. To\n create it, use `from_ms()` method. Keep in mind that `Ticks` **is not precise** representation\n of time.\n\n # Example\n\n ```rust\n use gilrs::ff::Ticks;\n use std::time::Duration;\n\n let t1 = Ticks::from_ms(110);\n let t2 = Ticks::from(Duration::from_millis(130));\n\n /// `Ticks` is not precise.\n assert_eq!(t1, t2);\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":147674,"byte_end":147681,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"from_ms","qualname":"<Ticks>::from_ms","value":"fn (dur: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1399},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":149116,"byte_end":149126,"line_start":110,"line_end":110,"column_start":5,"column_end":15},"name":"Infinitely","qualname":"::ff::time::Repeat::Infinitely","value":"Repeat::Infinitely","parent":{"krate":0,"index":1398},"children":[],"decl_id":null,"docs":" Play effect until stop() is called.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":149172,"byte_end":149175,"line_start":112,"line_end":112,"column_start":5,"column_end":8},"name":"For","qualname":"::ff::time::Repeat::For","value":"Repeat::For(Ticks)","parent":{"krate":0,"index":1398},"children":[],"decl_id":null,"docs":" Play effect for specified time.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1398},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":149059,"byte_end":149065,"line_start":108,"line_end":108,"column_start":10,"column_end":16},"name":"Repeat","qualname":"::ff::time::Repeat","value":"Repeat::{Infinitely, For}","parent":null,"children":[{"krate":0,"index":1399},{"krate":0,"index":1401}],"decl_id":null,"docs":" Describes how long effect should be played.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":111076,"byte_end":111082,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"Effect","qualname":"::ff::Effect","value":"Effect {  }","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662}],"decl_id":null,"docs":" Handle to force feedback effect.\n\n `Effect` represents force feedback effect that can be played on one or more gamepads. It uses a\n form of reference counting, so it can be cheaply cloned. To create new `Effect` use\n [`EffectBuilder`](struct.EffectBuilder.html).\n\n All methods on can return `Error::SendFailed` although it shouldn't normally happen.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":111785,"byte_end":111789,"line_start":122,"line_end":122,"column_start":12,"column_end":16},"name":"play","qualname":"<Effect>::play","value":"fn (&self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Plays effect on all associated gamepads.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":112242,"byte_end":112254,"line_start":135,"line_end":135,"column_start":12,"column_end":24},"name":"set_gamepads","qualname":"<Effect>::set_gamepads","value":"fn (&self, ids: &[GamepadId], gilrs: &Gilrs) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Changes gamepads that are associated with effect. Effect will be only played on gamepads\n from last call to this function.\n\n # Errors\n\n Returns `Error::Disconnected(id)` or `Error::FfNotSupported(id)` on first gamepad in `ids`\n that is disconnected or doesn't support force feedback.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":113095,"byte_end":113106,"line_start":164,"line_end":164,"column_start":12,"column_end":23},"name":"add_gamepad","qualname":"<Effect>::add_gamepad","value":"fn (&self, gamepad: &Gamepad) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds gamepad to the list of gamepads associated with effect.\n\n # Errors\n\n Returns `Error::Disconnected(id)` or `Error::FfNotSupported(id)` if gamepad is not connected\n or does not support force feedback.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":113603,"byte_end":113613,"line_start":180,"line_end":180,"column_start":12,"column_end":22},"name":"set_repeat","qualname":"<Effect>::set_repeat","value":"fn (&self, repeat: Repeat) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Changes what should happen to effect when it ends.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":114026,"byte_end":114044,"line_start":195,"line_end":195,"column_start":12,"column_end":30},"name":"set_distance_model","qualname":"<Effect>::set_distance_model","value":"fn (&self, model: DistanceModel) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Changes distance model associated with effect.\n\n # Errors\n\n Returns `Error::InvalidDistanceModel` if `model` is not valid. See\n [`DistanceModel`](enum.DistanceModelError.html) for details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":114294,"byte_end":114306,"line_start":204,"line_end":204,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Effect>::set_position","value":"fn <Vec3f> (&self, position: Vec3f) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Changes position of the source of effect.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":114636,"byte_end":114644,"line_start":215,"line_end":215,"column_start":12,"column_end":20},"name":"set_gain","qualname":"<Effect>::set_gain","value":"fn (&self, gain: f32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Changes gain of the effect. `gain` will be clamped to \\[0.0, f32::MAX\\].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":114922,"byte_end":114935,"line_start":225,"line_end":225,"column_start":12,"column_end":25},"name":"EffectBuilder","qualname":"::ff::EffectBuilder","value":"EffectBuilder {  }","parent":null,"children":[{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1423}],"decl_id":null,"docs":" Creates new [`Effect`](struct.Effect.html).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":115346,"byte_end":115349,"line_start":238,"line_end":238,"column_start":12,"column_end":15},"name":"new","qualname":"<EffectBuilder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new builder with following defaults: no gamepads, no base effects, repeat set to\n infinitely, no distance model, position in (0.0, 0.0, 0.0) and gain 1.0. Use `finish()` to\n create new effect.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":115692,"byte_end":115702,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"add_effect","qualname":"<EffectBuilder>::add_effect","value":"fn (&mut self, effect: BaseEffect) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds new [`BaseEffect`](struct.BaseEffect.html).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":115958,"byte_end":115966,"line_start":257,"line_end":257,"column_start":12,"column_end":20},"name":"gamepads","qualname":"<EffectBuilder>::gamepads","value":"fn (&mut self, ids: &[GamepadId]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes gamepads that are associated with effect. Effect will be only played on gamepads\n from last call to this function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":116191,"byte_end":116202,"line_start":265,"line_end":265,"column_start":12,"column_end":23},"name":"add_gamepad","qualname":"<EffectBuilder>::add_gamepad","value":"fn (&mut self, gamepad: &Gamepad) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds gamepad to the list of gamepads associated with effect.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":116388,"byte_end":116394,"line_start":272,"line_end":272,"column_start":12,"column_end":18},"name":"repeat","qualname":"<EffectBuilder>::repeat","value":"fn (&mut self, repeat: Repeat) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes what should happen to effect when it ends.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":116553,"byte_end":116567,"line_start":278,"line_end":278,"column_start":12,"column_end":26},"name":"distance_model","qualname":"<EffectBuilder>::distance_model","value":"fn (&mut self, model: DistanceModel) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes distance model associated with effect.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":116730,"byte_end":116738,"line_start":284,"line_end":284,"column_start":12,"column_end":20},"name":"position","qualname":"<EffectBuilder>::position","value":"fn <Vec3f> (&mut self, position: Vec3f) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes position of the source of effect.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":116958,"byte_end":116962,"line_start":290,"line_end":290,"column_start":12,"column_end":16},"name":"gain","qualname":"<EffectBuilder>::gain","value":"fn (&mut self, gain: f32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes gain of the effect. `gain` will be clamped to \\[0.0, f32::MAX\\].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":117491,"byte_end":117497,"line_start":304,"line_end":304,"column_start":12,"column_end":18},"name":"finish","qualname":"<EffectBuilder>::finish","value":"fn (&mut self, gilrs: &mut Gilrs) -> Result<Effect, Error>","parent":null,"children":[],"decl_id":null,"docs":" Validates all parameters and creates new effect.\n\n # Errors\n\n Returns `Error::Disconnected(id)` or `Error::FfNotSupported(id)` on first gamepad in `ids`\n that is disconnected or doesn't support force feedback.\n\n Returns `Error::InvalidDistanceModel` if `model` is not valid. See\n [`DistanceModel`](enum.DistanceModelError.html) for details.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1433},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":118538,"byte_end":118552,"line_start":340,"line_end":340,"column_start":5,"column_end":19},"name":"FfNotSupported","qualname":"::ff::Error::FfNotSupported","value":"Error::FfNotSupported(GamepadId)","parent":{"krate":0,"index":1432},"children":[],"decl_id":null,"docs":" Force feedback is not supported by device with this ID\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1436},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":118601,"byte_end":118613,"line_start":342,"line_end":342,"column_start":5,"column_end":17},"name":"Disconnected","qualname":"::ff::Error::Disconnected","value":"Error::Disconnected(GamepadId)","parent":{"krate":0,"index":1432},"children":[],"decl_id":null,"docs":" Device is not connected\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1439},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":118665,"byte_end":118685,"line_start":344,"line_end":344,"column_start":5,"column_end":25},"name":"InvalidDistanceModel","qualname":"::ff::Error::InvalidDistanceModel","value":"Error::InvalidDistanceModel(DistanceModelError)","parent":{"krate":0,"index":1432},"children":[],"decl_id":null,"docs":" Distance model is invalid.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":118757,"byte_end":118767,"line_start":346,"line_end":346,"column_start":5,"column_end":15},"name":"SendFailed","qualname":"::ff::Error::SendFailed","value":"Error::SendFailed","parent":{"krate":0,"index":1432},"children":[],"decl_id":null,"docs":" The other end of channel was dropped.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1444},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":118811,"byte_end":118816,"line_start":348,"line_end":348,"column_start":5,"column_end":10},"name":"Other","qualname":"::ff::Error::Other","value":"Error::Other","parent":{"krate":0,"index":1432},"children":[],"decl_id":null,"docs":" Unexpected error has occurred\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":118841,"byte_end":118856,"line_start":350,"line_end":350,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::ff::Error::__Nonexhaustive","value":"Error::__Nonexhaustive","parent":{"krate":0,"index":1432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":118463,"byte_end":118468,"line_start":338,"line_end":338,"column_start":10,"column_end":15},"name":"Error","qualname":"::ff::Error","value":"Error::{FfNotSupported, Disconnected, InvalidDistanceModel, SendFailed, Other, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":1433},{"krate":0,"index":1436},{"krate":0,"index":1439},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1446}],"decl_id":null,"docs":" Basic error type in force feedback module.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":10336,"byte_end":10341,"line_start":136,"line_end":136,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":27070,"byte_end":27082,"line_start":571,"line_end":571,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":31013,"byte_end":31038,"line_start":694,"line_end":694,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":31838,"byte_end":31845,"line_start":724,"line_end":724,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":37408,"byte_end":37419,"line_start":898,"line_end":898,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":41893,"byte_end":41902,"line_start":1024,"line_end":1024,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":41975,"byte_end":41984,"line_start":1030,"line_end":1030,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":43156,"byte_end":43161,"line_start":1071,"line_end":1071,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":43592,"byte_end":43597,"line_start":1083,"line_end":1083,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\parser.rs","byte_start":71660,"byte_end":71666,"line_start":120,"line_end":120,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\parser.rs","byte_start":78232,"byte_end":78237,"line_start":358,"line_end":358,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\parser.rs","byte_start":78636,"byte_end":78641,"line_start":380,"line_end":380,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\parser.rs","byte_start":79284,"byte_end":79289,"line_start":395,"line_end":395,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":45703,"byte_end":45710,"line_start":52,"line_end":52,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":58679,"byte_end":58699,"line_start":410,"line_end":410,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":58808,"byte_end":58828,"line_start":416,"line_end":416,"column_start":16,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":59454,"byte_end":59474,"line_start":435,"line_end":435,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":60031,"byte_end":60040,"line_start":454,"line_end":454,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":61690,"byte_end":61701,"line_start":516,"line_end":516,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":63870,"byte_end":63882,"line_start":585,"line_end":585,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":64724,"byte_end":64736,"line_start":605,"line_end":605,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":64825,"byte_end":64837,"line_start":611,"line_end":611,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":91445,"byte_end":91451,"line_start":88,"line_end":88,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":91607,"byte_end":91613,"line_start":95,"line_end":95,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":98176,"byte_end":98182,"line_start":294,"line_end":294,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":98446,"byte_end":98452,"line_start":304,"line_end":304,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":100854,"byte_end":100855,"line_start":365,"line_end":365,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":101046,"byte_end":101052,"line_start":374,"line_end":374,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":101406,"byte_end":101411,"line_start":386,"line_end":386,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":102441,"byte_end":102453,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":105500,"byte_end":105514,"line_start":131,"line_end":131,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":105684,"byte_end":105696,"line_start":139,"line_end":139,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":106063,"byte_end":106073,"line_start":157,"line_end":157,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":107172,"byte_end":107180,"line_start":208,"line_end":208,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":81417,"byte_end":81421,"line_start":25,"line_end":25,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":81512,"byte_end":81516,"line_start":31,"line_end":31,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":81858,"byte_end":81863,"line_start":48,"line_end":48,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":84248,"byte_end":84254,"line_start":128,"line_end":128,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":86373,"byte_end":86379,"line_start":198,"line_end":198,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":87013,"byte_end":87017,"line_start":222,"line_end":222,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":122578,"byte_end":122592,"line_start":28,"line_end":28,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":122874,"byte_end":122888,"line_start":38,"line_end":38,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":123318,"byte_end":123332,"line_start":51,"line_end":51,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":123962,"byte_end":123972,"line_start":72,"line_end":72,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":124650,"byte_end":124658,"line_start":95,"line_end":95,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":125894,"byte_end":125900,"line_start":130,"line_end":130,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":126416,"byte_end":126422,"line_start":150,"line_end":150,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":128560,"byte_end":128573,"line_start":65,"line_end":65,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":133373,"byte_end":133386,"line_start":204,"line_end":204,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":133929,"byte_end":133947,"line_start":226,"line_end":226,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":134447,"byte_end":134465,"line_start":238,"line_end":238,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":135037,"byte_end":135049,"line_start":262,"line_end":262,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":137091,"byte_end":137100,"line_start":331,"line_end":331,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":137199,"byte_end":137208,"line_start":337,"line_end":337,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":137767,"byte_end":137776,"line_start":361,"line_end":361,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\server.rs","byte_start":139813,"byte_end":139820,"line_start":73,"line_end":73,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\server.rs","byte_start":140313,"byte_end":140319,"line_start":98,"line_end":98,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\server.rs","byte_start":140520,"byte_end":140526,"line_start":110,"line_end":110,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\server.rs","byte_start":140633,"byte_end":140639,"line_start":116,"line_end":116,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\server.rs","byte_start":140768,"byte_end":140774,"line_start":124,"line_end":124,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":147655,"byte_end":147660,"line_start":36,"line_end":36,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":147974,"byte_end":147979,"line_start":50,"line_end":50,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":148126,"byte_end":148131,"line_start":56,"line_end":56,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":148265,"byte_end":148270,"line_start":64,"line_end":64,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":148362,"byte_end":148367,"line_start":70,"line_end":70,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":148501,"byte_end":148506,"line_start":78,"line_end":78,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":148603,"byte_end":148608,"line_start":84,"line_end":84,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":148743,"byte_end":148748,"line_start":92,"line_end":92,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":148837,"byte_end":148842,"line_start":98,"line_end":98,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":149204,"byte_end":149210,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":111147,"byte_end":111153,"line_start":90,"line_end":90,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":111248,"byte_end":111254,"line_start":96,"line_end":96,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":111273,"byte_end":111279,"line_start":98,"line_end":98,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":111382,"byte_end":111388,"line_start":104,"line_end":104,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":111598,"byte_end":111604,"line_start":114,"line_end":114,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":111716,"byte_end":111722,"line_start":120,"line_end":120,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":115096,"byte_end":115109,"line_start":234,"line_end":234,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":118879,"byte_end":118884,"line_start":353,"line_end":353,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":119395,"byte_end":119400,"line_start":366,"line_end":366,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":120163,"byte_end":120168,"line_start":384,"line_end":384,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":120279,"byte_end":120284,"line_start":390,"line_end":390,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4268,"byte_end":4270,"line_start":121,"line_end":121,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":348}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":81087,"byte_end":81093,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":349}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":81103,"byte_end":81108,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":391}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\lib.rs","byte_start":4280,"byte_end":4282,"line_start":122,"line_end":122,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":484}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":10336,"byte_end":10341,"line_start":136,"line_end":136,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":27070,"byte_end":27082,"line_start":571,"line_end":571,"column_start":6,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":31013,"byte_end":31038,"line_start":694,"line_end":694,"column_start":23,"column_end":48},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":120},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":31838,"byte_end":31845,"line_start":724,"line_end":724,"column_start":10,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":37408,"byte_end":37419,"line_start":898,"line_end":898,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":41893,"byte_end":41902,"line_start":1024,"line_end":1024,"column_start":22,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":41975,"byte_end":41984,"line_start":1030,"line_end":1030,"column_start":18,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":43156,"byte_end":43161,"line_start":1071,"line_end":1071,"column_start":18,"column_end":23},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":788},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\gamepad.rs","byte_start":43592,"byte_end":43597,"line_start":1083,"line_end":1083,"column_start":23,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":788},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\parser.rs","byte_start":71660,"byte_end":71666,"line_start":120,"line_end":120,"column_start":10,"column_end":16},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\parser.rs","byte_start":78232,"byte_end":78237,"line_start":358,"line_end":358,"column_start":6,"column_end":11},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\parser.rs","byte_start":78636,"byte_end":78641,"line_start":380,"line_end":380,"column_start":19,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":817},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\parser.rs","byte_start":79284,"byte_end":79289,"line_start":395,"line_end":395,"column_start":18,"column_end":23},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":817},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":45703,"byte_end":45710,"line_start":52,"line_end":52,"column_start":6,"column_end":13},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":58679,"byte_end":58699,"line_start":410,"line_end":410,"column_start":28,"column_end":48},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":58808,"byte_end":58828,"line_start":416,"line_end":416,"column_start":16,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":859},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":59454,"byte_end":59474,"line_start":435,"line_end":435,"column_start":18,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":60031,"byte_end":60040,"line_start":454,"line_end":454,"column_start":6,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":877},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":61690,"byte_end":61701,"line_start":516,"line_end":516,"column_start":6,"column_end":17},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":63870,"byte_end":63882,"line_start":585,"line_end":585,"column_start":6,"column_end":18},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":64724,"byte_end":64736,"line_start":605,"line_end":605,"column_start":16,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":888},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\mapping\\mod.rs","byte_start":64825,"byte_end":64837,"line_start":611,"line_end":611,"column_start":18,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":888},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":91445,"byte_end":91451,"line_start":88,"line_end":88,"column_start":6,"column_end":12},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":91607,"byte_end":91613,"line_start":95,"line_end":95,"column_start":19,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":913},"to":{"krate":0,"index":380}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":98176,"byte_end":98182,"line_start":294,"line_end":294,"column_start":6,"column_end":12},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":98446,"byte_end":98452,"line_start":304,"line_end":304,"column_start":19,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":924},"to":{"krate":0,"index":380}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":100854,"byte_end":100855,"line_start":365,"line_end":365,"column_start":22,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":383},"to":{"krate":0,"index":380}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":101046,"byte_end":101052,"line_start":374,"line_end":374,"column_start":17,"column_end":23},"kind":{"Impl":{"id":27}},"from":{"krate":2,"index":29426},"to":{"krate":0,"index":377}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\filter.rs","byte_start":101406,"byte_end":101411,"line_start":386,"line_end":386,"column_start":17,"column_end":22},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":984},"to":{"krate":0,"index":377}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":102441,"byte_end":102453,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":105500,"byte_end":105514,"line_start":131,"line_end":131,"column_start":23,"column_end":37},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":105684,"byte_end":105696,"line_start":139,"line_end":139,"column_start":23,"column_end":35},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":106063,"byte_end":106073,"line_start":157,"line_end":157,"column_start":6,"column_end":16},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":946},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\state.rs","byte_start":107172,"byte_end":107180,"line_start":208,"line_end":208,"column_start":6,"column_end":14},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":81417,"byte_end":81421,"line_start":25,"line_end":25,"column_start":18,"column_end":22},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":966},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":81512,"byte_end":81516,"line_start":31,"line_end":31,"column_start":6,"column_end":10},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":81858,"byte_end":81863,"line_start":48,"line_end":48,"column_start":6,"column_end":11},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":84248,"byte_end":84254,"line_start":128,"line_end":128,"column_start":6,"column_end":12},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":86373,"byte_end":86379,"line_start":198,"line_end":198,"column_start":18,"column_end":24},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1035},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ev\\mod.rs","byte_start":87013,"byte_end":87017,"line_start":222,"line_end":222,"column_start":6,"column_end":10},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":122578,"byte_end":122592,"line_start":28,"line_end":28,"column_start":6,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":122874,"byte_end":122888,"line_start":38,"line_end":38,"column_start":19,"column_end":33},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1174},"to":{"krate":2,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":123318,"byte_end":123332,"line_start":51,"line_end":51,"column_start":18,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1174},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":123962,"byte_end":123972,"line_start":72,"line_end":72,"column_start":6,"column_end":16},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":124650,"byte_end":124658,"line_start":95,"line_end":95,"column_start":6,"column_end":14},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":125894,"byte_end":125900,"line_start":130,"line_end":130,"column_start":6,"column_end":12},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\base_effect.rs","byte_start":126416,"byte_end":126422,"line_start":150,"line_end":150,"column_start":18,"column_end":24},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1221},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":128560,"byte_end":128573,"line_start":65,"line_end":65,"column_start":6,"column_end":19},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":133373,"byte_end":133386,"line_start":204,"line_end":204,"column_start":18,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1234},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":133929,"byte_end":133947,"line_start":226,"line_end":226,"column_start":16,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1268},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":134447,"byte_end":134465,"line_start":238,"line_end":238,"column_start":23,"column_end":41},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":135037,"byte_end":135049,"line_start":262,"line_end":262,"column_start":6,"column_end":18},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":137091,"byte_end":137100,"line_start":331,"line_end":331,"column_start":6,"column_end":15},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":137199,"byte_end":137208,"line_start":337,"line_end":337,"column_start":19,"column_end":28},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1318},"to":{"krate":2,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\effect_source.rs","byte_start":137767,"byte_end":137776,"line_start":361,"line_end":361,"column_start":20,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1318},"to":{"krate":2,"index":1629}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\server.rs","byte_start":139813,"byte_end":139820,"line_start":73,"line_end":73,"column_start":6,"column_end":13},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\server.rs","byte_start":140313,"byte_end":140319,"line_start":98,"line_end":98,"column_start":6,"column_end":12},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\server.rs","byte_start":140520,"byte_end":140526,"line_start":110,"line_end":110,"column_start":29,"column_end":35},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":574},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\server.rs","byte_start":140633,"byte_end":140639,"line_start":116,"line_end":116,"column_start":16,"column_end":22},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":574},"to":{"krate":2,"index":1704}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\server.rs","byte_start":140768,"byte_end":140774,"line_start":124,"line_end":124,"column_start":25,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1366},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":147655,"byte_end":147660,"line_start":36,"line_end":36,"column_start":6,"column_end":11},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":147974,"byte_end":147979,"line_start":50,"line_end":50,"column_start":25,"column_end":30},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":148126,"byte_end":148131,"line_start":56,"line_end":56,"column_start":14,"column_end":19},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":1596}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":148265,"byte_end":148270,"line_start":64,"line_end":64,"column_start":20,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":1629}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":148362,"byte_end":148367,"line_start":70,"line_end":70,"column_start":14,"column_end":19},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":1601}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":148501,"byte_end":148506,"line_start":78,"line_end":78,"column_start":20,"column_end":25},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":1633}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":148603,"byte_end":148608,"line_start":84,"line_end":84,"column_start":19,"column_end":24},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":1606}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":148743,"byte_end":148748,"line_start":92,"line_end":92,"column_start":25,"column_end":30},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":1637}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":148837,"byte_end":148842,"line_start":98,"line_end":98,"column_start":14,"column_end":19},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":1617}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\time.rs","byte_start":149204,"byte_end":149210,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":111147,"byte_end":111153,"line_start":90,"line_end":90,"column_start":20,"column_end":26},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":111248,"byte_end":111254,"line_start":96,"line_end":96,"column_start":13,"column_end":19},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":111273,"byte_end":111279,"line_start":98,"line_end":98,"column_start":15,"column_end":21},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":111382,"byte_end":111388,"line_start":104,"line_end":104,"column_start":16,"column_end":22},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":111598,"byte_end":111604,"line_start":114,"line_end":114,"column_start":15,"column_end":21},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":111716,"byte_end":111722,"line_start":120,"line_end":120,"column_start":6,"column_end":12},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":115096,"byte_end":115109,"line_start":234,"line_end":234,"column_start":6,"column_end":19},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":118879,"byte_end":118884,"line_start":353,"line_end":353,"column_start":19,"column_end":24},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1432},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":119395,"byte_end":119400,"line_start":366,"line_end":366,"column_start":23,"column_end":28},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":120163,"byte_end":120168,"line_start":384,"line_end":384,"column_start":32,"column_end":37},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gilrs-0.7.3\\src\\ff\\mod.rs","byte_start":120279,"byte_end":120284,"line_start":390,"line_end":390,"column_start":35,"column_end":40},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":2258}}]}