{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","glutin","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=cecbe40bcb6b12ee","-C","extra-filename=-cecbe40bcb6b12ee","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--extern","glutin_egl_sys=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libglutin_egl_sys-15081db12fd00194.rmeta","--extern","glutin_wgl_sys=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libglutin_wgl_sys-77cab3c24e7df212.rmeta","--extern","lazy_static=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\liblazy_static-79de1231268f023b.rmeta","--extern","libc=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\liblibc-bdc370f3966ce084.rmeta","--extern","libloading=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\liblibloading-84ddfc66c170a0be.rmeta","--extern","winapi=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libwinapi-978bfab176c482d4.rmeta","--extern","winit=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libwinit-756ad381c8882156.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libglutin-cecbe40bcb6b12ee.rmeta"},"prelude":{"crate_id":{"name":"glutin","disambiguator":[1541424996000396632,16940201546653823175]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","num":14,"id":{"name":"lazy_static","disambiguator":[17281579441627161632,7326486140096487162]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","num":15,"id":{"name":"glutin_egl_sys","disambiguator":[18397310343467227039,13617695647334814589]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","num":16,"id":{"name":"winapi","disambiguator":[5636639422687459420,15773350436437932257]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","num":17,"id":{"name":"winit","disambiguator":[17607148282854385253,13281783489147253982]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","num":18,"id":{"name":"libc","disambiguator":[5464519403103214804,849774347526692301]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","num":19,"id":{"name":"log","disambiguator":[17746278763066137263,8798032287631474102]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","num":20,"id":{"name":"cfg_if","disambiguator":[2442249708866091360,16714075183114805585]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","num":21,"id":{"name":"backtrace","disambiguator":[14229589711063545857,10752716662390047417]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","num":22,"id":{"name":"rustc_demangle","disambiguator":[5781955066056873813,12173681276320539157]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","num":23,"id":{"name":"bitflags","disambiguator":[1258995681021104935,10120995213895226001]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","num":24,"id":{"name":"raw_window_handle","disambiguator":[5058222338435994168,14980528843496773760]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\dlloader\\mod.rs","num":25,"id":{"name":"libloading","disambiguator":[17117126105838105686,12375204538384088343]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\wgl\\mod.rs","num":26,"id":{"name":"glutin_wgl_sys","disambiguator":[8867325252485109722,534801017597924318]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":0,"byte_end":20836,"line_start":1,"line_end":671,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","byte_start":23792,"byte_end":23801,"line_start":4,"line_end":4,"column_start":27,"column_end":36},"alias_span":null,"name":"RawHandle","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","byte_start":23803,"byte_end":23816,"line_start":4,"line_end":4,"column_start":38,"column_end":51},"alias_span":null,"name":"RawContextExt","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":15,"index":45},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","byte_start":23863,"byte_end":23873,"line_start":6,"line_end":6,"column_start":25,"column_end":35},"alias_span":null,"name":"EGLContext","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":16,"index":29907},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","byte_start":23908,"byte_end":23913,"line_start":8,"line_end":8,"column_start":33,"column_end":38},"alias_span":null,"name":"HGLRC","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":17,"index":1043},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","byte_start":23949,"byte_end":23960,"line_start":10,"line_end":10,"column_start":5,"column_end":16},"alias_span":null,"name":"DeviceIdExt","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":17,"index":1037},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","byte_start":23962,"byte_end":23974,"line_start":10,"line_end":10,"column_start":18,"column_end":30},"alias_span":null,"name":"MonitorIdExt","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":17,"index":1029},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","byte_start":23976,"byte_end":23992,"line_start":10,"line_end":10,"column_start":32,"column_end":48},"alias_span":null,"name":"WindowBuilderExt","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":17,"index":1023},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","byte_start":23994,"byte_end":24003,"line_start":10,"line_end":10,"column_start":50,"column_end":59},"alias_span":null,"name":"WindowExt","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1625,"byte_end":1632,"line_start":60,"line_end":60,"column_start":25,"column_end":32},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1662,"byte_end":1672,"line_start":61,"line_end":61,"column_start":29,"column_end":39},"alias_span":null,"name":"RawContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1699,"byte_end":1714,"line_start":62,"line_end":62,"column_start":26,"column_end":41},"alias_span":null,"name":"WindowedContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":16},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1738,"byte_end":1741,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"alias_span":null,"name":"dpi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2283},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1743,"byte_end":1764,"line_start":65,"line_end":65,"column_start":10,"column_end":31},"alias_span":null,"name":"AvailableMonitorsIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":78},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1766,"byte_end":1772,"line_start":65,"line_end":65,"column_start":33,"column_end":39},"alias_span":null,"name":"AxisId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":79},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1774,"byte_end":1782,"line_start":65,"line_end":65,"column_start":41,"column_end":49},"alias_span":null,"name":"ButtonId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2345},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1784,"byte_end":1795,"line_start":65,"line_end":65,"column_start":51,"column_end":62},"alias_span":null,"name":"ControlFlow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2389},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1801,"byte_end":1814,"line_start":66,"line_end":66,"column_start":5,"column_end":18},"alias_span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1818,"byte_end":1837,"line_start":66,"line_end":66,"column_start":22,"column_end":41},"name":"WindowCreationError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1227},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1839,"byte_end":1850,"line_start":66,"line_end":66,"column_start":43,"column_end":54},"alias_span":null,"name":"DeviceEvent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2319},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1852,"byte_end":1860,"line_start":66,"line_end":66,"column_start":56,"column_end":64},"alias_span":null,"name":"DeviceId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1312},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1862,"byte_end":1874,"line_start":66,"line_end":66,"column_start":66,"column_end":78},"alias_span":null,"name":"ElementState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1137},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1880,"byte_end":1885,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1055},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1887,"byte_end":1897,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"alias_span":null,"name":"EventsLoop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2368},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1899,"byte_end":1915,"line_start":67,"line_end":67,"column_start":24,"column_end":40},"alias_span":null,"name":"EventsLoopClosed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2364},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1917,"byte_end":1932,"line_start":67,"line_end":67,"column_start":42,"column_end":57},"alias_span":null,"name":"EventsLoopProxy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1763},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1934,"byte_end":1938,"line_start":67,"line_end":67,"column_start":59,"column_end":63},"alias_span":null,"name":"Icon","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1255},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1940,"byte_end":1953,"line_start":67,"line_end":67,"column_start":65,"column_end":78},"alias_span":null,"name":"KeyboardInput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1714},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1959,"byte_end":1973,"line_start":68,"line_end":68,"column_start":5,"column_end":19},"alias_span":null,"name":"ModifiersState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2287},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1975,"byte_end":1984,"line_start":68,"line_end":68,"column_start":21,"column_end":30},"alias_span":null,"name":"MonitorId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1331},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1986,"byte_end":1997,"line_start":68,"line_end":68,"column_start":32,"column_end":43},"alias_span":null,"name":"MouseButton","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2399},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1999,"byte_end":2010,"line_start":68,"line_end":68,"column_start":45,"column_end":56},"alias_span":null,"name":"MouseCursor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1356},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2012,"byte_end":2028,"line_start":68,"line_end":68,"column_start":58,"column_end":74},"alias_span":null,"name":"MouseScrollDelta","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":77},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2034,"byte_end":2042,"line_start":69,"line_end":69,"column_start":5,"column_end":13},"alias_span":null,"name":"ScanCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1298},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2044,"byte_end":2049,"line_start":69,"line_end":69,"column_start":15,"column_end":20},"alias_span":null,"name":"Touch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1275},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2051,"byte_end":2061,"line_start":69,"line_end":69,"column_start":22,"column_end":32},"alias_span":null,"name":"TouchPhase","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1373},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2063,"byte_end":2077,"line_start":69,"line_end":69,"column_start":34,"column_end":48},"alias_span":null,"name":"VirtualKeyCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1047},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2079,"byte_end":2085,"line_start":69,"line_end":69,"column_start":50,"column_end":56},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2484},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2087,"byte_end":2103,"line_start":69,"line_end":69,"column_start":58,"column_end":74},"alias_span":null,"name":"WindowAttributes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2384},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2109,"byte_end":2122,"line_start":70,"line_end":70,"column_start":5,"column_end":18},"alias_span":null,"name":"WindowBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1157},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2124,"byte_end":2135,"line_start":70,"line_end":70,"column_start":20,"column_end":31},"alias_span":null,"name":"WindowEvent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":2293},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2137,"byte_end":2145,"line_start":70,"line_end":70,"column_start":33,"column_end":41},"alias_span":null,"name":"WindowId","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":0,"byte_end":20836,"line_start":1,"line_end":671,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":28},{"krate":0,"index":269},{"krate":0,"index":282},{"krate":0,"index":358},{"krate":0,"index":374},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":435},{"krate":0,"index":439},{"krate":0,"index":521},{"krate":0,"index":547},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":549},{"krate":0,"index":558},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":560},{"krate":0,"index":576},{"krate":0,"index":574},{"krate":0,"index":573},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":578},{"krate":0,"index":592},{"krate":0,"index":590},{"krate":0,"index":589},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":594},{"krate":0,"index":607},{"krate":0,"index":606},{"krate":0,"index":604},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":609},{"krate":0,"index":631},{"krate":0,"index":630},{"krate":0,"index":628},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":633},{"krate":0,"index":647},{"krate":0,"index":646},{"krate":0,"index":644},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":649},{"krate":0,"index":661},{"krate":0,"index":659},{"krate":0,"index":663},{"krate":0,"index":678},{"krate":0,"index":676},{"krate":0,"index":477},{"krate":0,"index":680},{"krate":0,"index":688},{"krate":0,"index":479},{"krate":0,"index":484}],"decl_id":null,"docs":" The purpose of this library is to provide an OpenGL context on as many\n platforms as possible.\n\n # Building a WindowedContext\n\n A `WindowedContext` is composed of a `Window` and an OpenGL `Context`.\n\n Due to some operating-system-specific quirks, glutin prefers control over\n the order of creation of the `Context` and `Window`. Here is an example of\n building a WindowedContext the prefered way:\n\n ```no_run\n # fn main() {\n let el = glutin::EventsLoop::new();\n let wb = glutin::WindowBuilder::new()\n     .with_title(\"Hello world!\")\n     .with_dimensions(glutin::dpi::LogicalSize::new(1024.0, 768.0));\n let windowed_context = glutin::ContextBuilder::new()\n     .build_windowed(wb, &el)\n     .unwrap();\n # }\n ```\n\n You can, of course, create an OpenGL `Context` separately from an existing\n window, however that may result in an suboptimal configuration of the window\n on some platforms. In that case use \"SeparatedContext\".\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::os","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\mod.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":23},{"krate":0,"index":24}],"decl_id":null,"docs":" Contains traits with platform-specific methods in them.\n\n Contains the following modules:\n\n  - `android`\n  - `ios`\n  - `macos`\n  - `unix`\n  - `windows`\n\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"windows","qualname":"::os::windows","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":18},{"krate":0,"index":19}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"windows\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","byte_start":23702,"byte_end":23732,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\mod.rs","byte_start":21183,"byte_end":21198,"line_start":21,"line_end":21,"column_start":11,"column_end":26},"name":"ContextTraitExt","qualname":"::os::ContextTraitExt","value":"ContextTraitExt","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":" Platform-specific extensions for OpenGL contexts.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\mod.rs","byte_start":21238,"byte_end":21244,"line_start":23,"line_end":23,"column_start":10,"column_end":16},"name":"Handle","qualname":"::os::ContextTraitExt::Handle","value":"type Handle;","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Raw context handle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\mod.rs","byte_start":21301,"byte_end":21311,"line_start":26,"line_end":26,"column_start":15,"column_end":25},"name":"raw_handle","qualname":"::os::ContextTraitExt::raw_handle","value":"fn (&self) -> Self::Handle","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Returns the raw context handle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\mod.rs","byte_start":21581,"byte_end":21596,"line_start":33,"line_end":33,"column_start":15,"column_end":30},"name":"get_egl_display","qualname":"::os::ContextTraitExt::get_egl_display","value":"fn (&self) -> Option<*const raw::c_void>","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Returns a pointer to the `EGLDisplay` object of EGL that is used by this\n context.\n\n Return `None` if the context doesn't use EGL.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\context.rs","byte_start":156347,"byte_end":156354,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":272}],"decl_id":null,"docs":" Represents an OpenGL context.\n\n A `Context` is normally associated with a single Window, however `Context`s\n can be *shared* between multiple windows or be headless.\n\n # Example\n\n ```no_run\n # use glutin::ContextTrait;\n # fn main() {\n # let el = glutin::EventsLoop::new();\n # let wb = glutin::WindowBuilder::new();\n # let some_context = glutin::ContextBuilder::new()\n #    .build_windowed(wb, &el)\n #    .unwrap();\n let cb = glutin::ContextBuilder::new()\n     .with_vsync(true)\n     .with_multisampling(8)\n     .with_shared_lists(some_context.context());\n # }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\context.rs","byte_start":157372,"byte_end":157384,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"new_headless","qualname":"<Context>::new_headless","value":"fn (el: &winit::EventsLoop, cb: ContextBuilder, dims: dpi::PhysicalSize) -> Result<Self, CreationError>","parent":null,"children":[],"decl_id":null,"docs":" Builds the given GL context.\n\n One notable limitation of the Wayland backend when it comes to shared\n contexts is that both contexts must use the same events loop.\n\n Errors can occur in two scenarios:\n  - If the window could not be created (via permission denied,\n  incompatible system, out of memory, etc.). This should be very rare.\n  - If the OpenGL context could not be created. This generally happens\n  because the underlying platform doesn't support a requested feature.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\platform\\windows\\mod.rs","byte_start":159202,"byte_end":159205,"line_start":22,"line_end":22,"column_start":5,"column_end":8},"name":"Egl","qualname":"::platform::platform::RawHandle::Egl","value":"RawHandle::Egl(ffi::EGLContext)","parent":{"krate":0,"index":510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\platform\\windows\\mod.rs","byte_start":159228,"byte_end":159231,"line_start":23,"line_end":23,"column_start":5,"column_end":8},"name":"Wgl","qualname":"::platform::platform::RawHandle::Wgl","value":"RawHandle::Wgl(HGLRC)","parent":{"krate":0,"index":510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\platform\\windows\\mod.rs","byte_start":159186,"byte_end":159195,"line_start":21,"line_end":21,"column_start":10,"column_end":19},"name":"RawHandle","qualname":"::platform::platform::RawHandle","value":"RawHandle::{Egl, Wgl}","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":514}],"decl_id":null,"docs":" Context handles available on Windows.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\platform\\windows\\mod.rs","byte_start":168123,"byte_end":168136,"line_start":278,"line_end":278,"column_start":11,"column_end":24},"name":"RawContextExt","qualname":"::platform::platform::RawContextExt","value":"RawContextExt","parent":null,"children":[{"krate":0,"index":352}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\platform\\windows\\mod.rs","byte_start":168364,"byte_end":168379,"line_start":284,"line_end":284,"column_start":15,"column_end":30},"name":"new_raw_context","qualname":"::platform::platform::RawContextExt::new_raw_context","value":"fn (hwnd: *mut raw::c_void, cb: crate::ContextBuilder) -> Result<crate::RawContext, CreationError>","parent":{"krate":0,"index":351},"children":[],"decl_id":null,"docs":" Creates a raw context on the provided window.\n\n Unsafe behaviour might happen if you:\n   - Provide us with invalid parameters.\n   - The window is destroyed before the context\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\raw_context.rs","byte_start":169149,"byte_end":169159,"line_start":4,"line_end":4,"column_start":12,"column_end":22},"name":"RawContext","qualname":"::raw_context::RawContext","value":"RawContext {  }","parent":null,"children":[{"krate":0,"index":361}],"decl_id":null,"docs":" Represents a raw OpenGL context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\raw_context.rs","byte_start":170123,"byte_end":170135,"line_start":36,"line_end":36,"column_start":12,"column_end":24},"name":"swap_buffers","qualname":"<RawContext>::swap_buffers","value":"fn (&self) -> Result<(), ContextError>","parent":null,"children":[],"decl_id":null,"docs":" Swaps the buffers in case of double or triple buffering.\n\n You should call this function every time you have finished rendering, or\n the image may not be displayed on the screen.\n\n **Warning**: if you enabled vsync, this function will block until the\n next time the screen is refreshed. However drivers can choose to\n override your vsync settings, which means that you can't know in\n advance whether `swap_buffers` will block or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\raw_context.rs","byte_start":170308,"byte_end":170324,"line_start":41,"line_end":41,"column_start":12,"column_end":28},"name":"get_pixel_format","qualname":"<RawContext>::get_pixel_format","value":"fn (&self) -> PixelFormat","parent":null,"children":[],"decl_id":null,"docs":" Returns the pixel format of the main framebuffer of the context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\raw_context.rs","byte_start":170778,"byte_end":170784,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"resize","qualname":"<RawContext>::resize","value":"fn (&self, size: dpi::PhysicalSize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resize the context.\n\n Some platforms (macOS, Wayland) require being manually updated when\n their window or surface is resized.\n\n The easiest way of doing this is to take every `Resized` window event\n that is received with a `LogicalSize` and convert it to a\n `PhysicalSize` and pass it into this function.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\windowed.rs","byte_start":171839,"byte_end":171854,"line_start":33,"line_end":33,"column_start":12,"column_end":27},"name":"WindowedContext","qualname":"::windowed::WindowedContext","value":"WindowedContext {  }","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378}],"decl_id":null,"docs":" Represents an OpenGL context and the `Window` with which it is associated.\n\n # Example\n\n ```no_run\n # use glutin::ContextTrait;\n # fn main() {\n let mut el = glutin::EventsLoop::new();\n let wb = glutin::WindowBuilder::new();\n let windowed_context = glutin::ContextBuilder::new()\n     .build_windowed(wb, &el)\n     .unwrap();\n\n unsafe { windowed_context.make_current().unwrap() };\n\n loop {\n     el.poll_events(|event| {\n         match event {\n             // process events here\n             _ => (),\n         }\n     });\n\n     // draw everything here\n\n     windowed_context.swap_buffers();\n     std::thread::sleep(std::time::Duration::from_millis(17));\n }\n # }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\windowed.rs","byte_start":172568,"byte_end":172580,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"new_windowed","qualname":"<WindowedContext>::new_windowed","value":"fn (wb: WindowBuilder, cb: ContextBuilder, el: &EventsLoop) -> Result<Self, CreationError>","parent":null,"children":[],"decl_id":null,"docs":" Builds the given window along with the associated GL context, returning\n the pair as a `WindowedContext`.\n\n One notable limitation of the Wayland backend when it comes to shared\n contexts is that both contexts must use the same events loop.\n\n Errors can occur in two scenarios:\n  - If the window could not be created (via permission denied,\n  incompatible system, out of memory, etc.). This should be very rare.\n  - If the OpenGL context could not be created. This generally happens\n  because the underlying platform doesn't support a requested feature.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\windowed.rs","byte_start":173089,"byte_end":173095,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"window","qualname":"<WindowedContext>::window","value":"fn (&self) -> &Window","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner `Window`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\windowed.rs","byte_start":173194,"byte_end":173201,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"context","qualname":"<WindowedContext>::context","value":"fn (&self) -> &Context","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner GL `Context`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\windowed.rs","byte_start":173761,"byte_end":173773,"line_start":84,"line_end":84,"column_start":12,"column_end":24},"name":"swap_buffers","qualname":"<WindowedContext>::swap_buffers","value":"fn (&self) -> Result<(), ContextError>","parent":null,"children":[],"decl_id":null,"docs":" Swaps the buffers in case of double or triple buffering.\n\n You should call this function every time you have finished rendering, or\n the image may not be displayed on the screen.\n\n **Warning**: if you enabled vsync, this function will block until the\n next time the screen is refreshed. However drivers can choose to\n override your vsync settings, which means that you can't know in\n advance whether `swap_buffers` will block or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\windowed.rs","byte_start":173946,"byte_end":173962,"line_start":89,"line_end":89,"column_start":12,"column_end":28},"name":"get_pixel_format","qualname":"<WindowedContext>::get_pixel_format","value":"fn (&self) -> PixelFormat","parent":null,"children":[],"decl_id":null,"docs":" Returns the pixel format of the main framebuffer of the context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\windowed.rs","byte_start":174416,"byte_end":174422,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"resize","qualname":"<WindowedContext>::resize","value":"fn (&self, size: dpi::PhysicalSize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resize the context.\n\n Some platforms (macOS, Wayland) require being manually updated when\n their window or surface is resized.\n\n The easiest way of doing this is to take every `Resized` window event\n that is received with a `LogicalSize` and convert it to a\n `PhysicalSize` and pass it into this function.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2227,"byte_end":2239,"line_start":76,"line_end":76,"column_start":11,"column_end":23},"name":"ContextTrait","qualname":"::ContextTrait","value":"ContextTrait","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"decl_id":null,"docs":" A trait for types associated with a GL context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2328,"byte_end":2340,"line_start":81,"line_end":81,"column_start":15,"column_end":27},"name":"make_current","qualname":"::ContextTrait::make_current","value":"fn (&self) -> Result<(), ContextError>","parent":{"krate":0,"index":430},"children":[],"decl_id":null,"docs":" Sets the context as the current context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2457,"byte_end":2467,"line_start":84,"line_end":84,"column_start":8,"column_end":18},"name":"is_current","qualname":"::ContextTrait::is_current","value":"fn (&self) -> bool","parent":{"krate":0,"index":430},"children":[],"decl_id":null,"docs":" Returns true if this context is the current one in this thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2543,"byte_end":2559,"line_start":87,"line_end":87,"column_start":8,"column_end":24},"name":"get_proc_address","qualname":"::ContextTrait::get_proc_address","value":"fn (&self, addr: &str) -> *const ()","parent":{"krate":0,"index":430},"children":[],"decl_id":null,"docs":" Returns the address of an OpenGL function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2644,"byte_end":2651,"line_start":90,"line_end":90,"column_start":8,"column_end":15},"name":"get_api","qualname":"::ContextTrait::get_api","value":"fn (&self) -> Api","parent":{"krate":0,"index":430},"children":[],"decl_id":null,"docs":" Returns the OpenGL API being used.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2729,"byte_end":2743,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"name":"ContextBuilder","qualname":"::ContextBuilder","value":"ContextBuilder { gl_attr, pf_reqs }","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"decl_id":null,"docs":" Object that allows you to build `Context`s.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2811,"byte_end":2818,"line_start":96,"line_end":96,"column_start":9,"column_end":16},"name":"gl_attr","qualname":"::ContextBuilder::gl_attr","value":"GlAttributes<&'a context::Context>","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" The attributes to use to create the context.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2893,"byte_end":2900,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"name":"pf_reqs","qualname":"::ContextBuilder::pf_reqs","value":"PixelFormatRequirements","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" The pixel format requirements\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":3035,"byte_end":3038,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"new","qualname":"<ContextBuilder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes a new `ContextBuilder` with default values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":3299,"byte_end":3306,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"with_gl","qualname":"<ContextBuilder>::with_gl","value":"fn (mut self, request: GlRequest) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets how the backend should choose the OpenGL API and version.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":3278,"byte_end":3287,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":3481,"byte_end":3496,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"with_gl_profile","qualname":"<ContextBuilder>::with_gl_profile","value":"fn (mut self, profile: GlProfile) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the desired OpenGL context profile.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":3460,"byte_end":3469,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":3883,"byte_end":3901,"line_start":130,"line_end":130,"column_start":12,"column_end":30},"name":"with_gl_debug_flag","qualname":"<ContextBuilder>::with_gl_debug_flag","value":"fn (mut self, flag: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the *debug* flag for the OpenGL context.\n\n The default value for this flag is `cfg!(debug_assertions)`, which means\n that it's enabled when you run `cargo build` and disabled when you run\n `cargo build --release`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":3862,"byte_end":3871,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":4095,"byte_end":4113,"line_start":137,"line_end":137,"column_start":12,"column_end":30},"name":"with_gl_robustness","qualname":"<ContextBuilder>::with_gl_robustness","value":"fn (mut self, robustness: Robustness) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the robustness of the OpenGL context. See the docs of `Robustness`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":4074,"byte_end":4083,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":4351,"byte_end":4361,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"with_vsync","qualname":"<ContextBuilder>::with_vsync","value":"fn (mut self, vsync: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Requests that the window has vsync enabled.\n\n By default, vsync is not enabled.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":4330,"byte_end":4339,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":4534,"byte_end":4551,"line_start":153,"line_end":153,"column_start":12,"column_end":29},"name":"with_shared_lists","qualname":"<ContextBuilder>::with_shared_lists","value":"fn (mut self, other: &'a Context) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Share the display lists with the given `Context`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":4513,"byte_end":4522,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":4890,"byte_end":4908,"line_start":165,"line_end":165,"column_start":12,"column_end":30},"name":"with_multisampling","qualname":"<ContextBuilder>::with_multisampling","value":"fn (mut self, samples: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the multisampling level to request. A value of `0` indicates that\n multisampling must not be enabled.\n\n # Panic\n\n Will panic if `samples` is not a power of two.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":4869,"byte_end":4878,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":5243,"byte_end":5260,"line_start":178,"line_end":178,"column_start":12,"column_end":29},"name":"with_depth_buffer","qualname":"<ContextBuilder>::with_depth_buffer","value":"fn (mut self, bits: u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bits in the depth buffer.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":5222,"byte_end":5231,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":5437,"byte_end":5456,"line_start":185,"line_end":185,"column_start":12,"column_end":31},"name":"with_stencil_buffer","qualname":"<ContextBuilder>::with_stencil_buffer","value":"fn (mut self, bits: u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bits in the stencil buffer.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":5416,"byte_end":5425,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":5633,"byte_end":5650,"line_start":192,"line_end":192,"column_start":12,"column_end":29},"name":"with_pixel_format","qualname":"<ContextBuilder>::with_pixel_format","value":"fn (mut self, color_bits: u8, alpha_bits: u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bits in the color buffer.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":5612,"byte_end":5621,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":5900,"byte_end":5916,"line_start":200,"line_end":200,"column_start":12,"column_end":28},"name":"with_stereoscopy","qualname":"<ContextBuilder>::with_stereoscopy","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Request the backend to be stereoscopic.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":5879,"byte_end":5888,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":6128,"byte_end":6137,"line_start":209,"line_end":209,"column_start":12,"column_end":21},"name":"with_srgb","qualname":"<ContextBuilder>::with_srgb","value":"fn (mut self, srgb_enabled: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether sRGB should be enabled on the window.\n\n The default value is `false`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":6107,"byte_end":6116,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":6578,"byte_end":6596,"line_start":226,"line_end":226,"column_start":12,"column_end":30},"name":"with_double_buffer","qualname":"<ContextBuilder>::with_double_buffer","value":"fn (mut self, double_buffer: Option<bool>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether double buffering should be enabled.\n\n The default value is `None`.\n\n ## Platform-specific\n\n This option will be taken into account on the following platforms:\n\n   * MacOS\n   * Linux using GLX with X\n   * Windows using WGL\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":6557,"byte_end":6566,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":7115,"byte_end":7141,"line_start":244,"line_end":244,"column_start":12,"column_end":38},"name":"with_hardware_acceleration","qualname":"<ContextBuilder>::with_hardware_acceleration","value":"fn (mut self, acceleration: Option<bool>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether hardware acceleration is required.\n\n The default value is `Some(true)`\n\n ## Platform-specific\n\n This option will be taken into account on the following platforms:\n\n   * MacOS\n   * Linux using EGL with either X or Wayland\n   * Windows using EGL or WGL\n   * Android using EGL\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":7094,"byte_end":7103,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":7337,"byte_end":7351,"line_start":253,"line_end":253,"column_start":12,"column_end":26},"name":"build_headless","qualname":"<ContextBuilder>::build_headless","value":"fn (self, el: &EventsLoop, dims: dpi::PhysicalSize) -> Result<Context, CreationError>","parent":null,"children":[],"decl_id":null,"docs":" Builds a headless context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":7584,"byte_end":7598,"line_start":262,"line_end":262,"column_start":12,"column_end":26},"name":"build_windowed","qualname":"<ContextBuilder>::build_windowed","value":"fn (self, wb: WindowBuilder, el: &EventsLoop) -> Result<WindowedContext, CreationError>","parent":null,"children":[],"decl_id":null,"docs":" Builds a context and it's associated window.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":7897,"byte_end":7904,"line_start":274,"line_end":274,"column_start":5,"column_end":12},"name":"OsError","qualname":"::CreationError::OsError","value":"CreationError::OsError(String)","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":7950,"byte_end":7962,"line_start":276,"line_end":276,"column_start":5,"column_end":17},"name":"NotSupported","qualname":"::CreationError::NotSupported","value":"CreationError::NotSupported(&'static str)","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" TODO: remove this error\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":7982,"byte_end":8000,"line_start":277,"line_end":277,"column_start":5,"column_end":23},"name":"NoBackendAvailable","qualname":"::CreationError::NoBackendAvailable","value":"CreationError::NoBackendAvailable(Box<std::error::Error + Send + Sync>)","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":8044,"byte_end":8066,"line_start":278,"line_end":278,"column_start":5,"column_end":27},"name":"RobustnessNotSupported","qualname":"::CreationError::RobustnessNotSupported","value":"CreationError::RobustnessNotSupported","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":8072,"byte_end":8097,"line_start":279,"line_end":279,"column_start":5,"column_end":30},"name":"OpenGlVersionNotSupported","qualname":"::CreationError::OpenGlVersionNotSupported","value":"CreationError::OpenGlVersionNotSupported","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":8103,"byte_end":8125,"line_start":280,"line_end":280,"column_start":5,"column_end":27},"name":"NoAvailablePixelFormat","qualname":"::CreationError::NoAvailablePixelFormat","value":"CreationError::NoAvailablePixelFormat","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":8131,"byte_end":8147,"line_start":281,"line_end":281,"column_start":5,"column_end":21},"name":"PlatformSpecific","qualname":"::CreationError::PlatformSpecific","value":"CreationError::PlatformSpecific(String)","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":8161,"byte_end":8167,"line_start":282,"line_end":282,"column_start":5,"column_end":11},"name":"Window","qualname":"::CreationError::Window","value":"CreationError::Window(WindowCreationError)","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":8242,"byte_end":8259,"line_start":284,"line_end":284,"column_start":5,"column_end":22},"name":"CreationErrorPair","qualname":"::CreationError::CreationErrorPair","value":"CreationError::CreationErrorPair(Box<CreationError>, Box<CreationError>)","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" We received two errors, instead of one.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":7877,"byte_end":7890,"line_start":273,"line_end":273,"column_start":10,"column_end":23},"name":"CreationError","qualname":"::CreationError","value":"CreationError::{OsError, NotSupported, NoBackendAvailable, RobustnessNotSupported, OpenGlVersionNotSupported, NoAvailablePixelFormat, PlatformSpecific, Window, CreationErrorPair}","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543}],"decl_id":null,"docs":" Error that can happen while creating a window or a headless renderer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":10729,"byte_end":10736,"line_start":363,"line_end":363,"column_start":5,"column_end":12},"name":"OsError","qualname":"::ContextError::OsError","value":"ContextError::OsError(String)","parent":{"krate":0,"index":549},"children":[],"decl_id":null,"docs":" General platform error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":10750,"byte_end":10757,"line_start":364,"line_end":364,"column_start":5,"column_end":12},"name":"IoError","qualname":"::ContextError::IoError","value":"ContextError::IoError(io::Error)","parent":{"krate":0,"index":549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":10774,"byte_end":10785,"line_start":365,"line_end":365,"column_start":5,"column_end":16},"name":"ContextLost","qualname":"::ContextError::ContextLost","value":"ContextError::ContextLost","parent":{"krate":0,"index":549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":10678,"byte_end":10690,"line_start":361,"line_end":361,"column_start":10,"column_end":22},"name":"ContextError","qualname":"::ContextError","value":"ContextError::{OsError, IoError, ContextLost}","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":556}],"decl_id":null,"docs":" Error that can happen when manipulating an OpenGL context.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":11621,"byte_end":11627,"line_start":398,"line_end":398,"column_start":5,"column_end":11},"name":"OpenGl","qualname":"::Api::OpenGl","value":"Api::OpenGl","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" The classical OpenGL. Available on Windows, Linux, OS/X.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":11694,"byte_end":11702,"line_start":400,"line_end":400,"column_start":5,"column_end":13},"name":"OpenGlEs","qualname":"::Api::OpenGlEs","value":"Api::OpenGlEs","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" OpenGL embedded system. Available on Linux, Android.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":11763,"byte_end":11768,"line_start":402,"line_end":402,"column_start":5,"column_end":10},"name":"WebGl","qualname":"::Api::WebGl","value":"Api::WebGl","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" OpenGL for the web. Very similar to OpenGL ES.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":11546,"byte_end":11549,"line_start":396,"line_end":396,"column_start":10,"column_end":13},"name":"Api","qualname":"::Api","value":"Api::{OpenGl, OpenGlEs, WebGl}","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":565}],"decl_id":null,"docs":" All APIs related to OpenGL that you can possibly get while using glutin.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":11962,"byte_end":11975,"line_start":409,"line_end":409,"column_start":5,"column_end":18},"name":"Compatibility","qualname":"::GlProfile::Compatibility","value":"GlProfile::Compatibility","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Include all the immediate more functions and definitions.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":12050,"byte_end":12054,"line_start":411,"line_end":411,"column_start":5,"column_end":9},"name":"Core","qualname":"::GlProfile::Core","value":"GlProfile::Core","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Include all the future-compatible functions and definitions.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":11880,"byte_end":11889,"line_start":407,"line_end":407,"column_start":10,"column_end":19},"name":"GlProfile","qualname":"::GlProfile","value":"GlProfile::{Compatibility, Core}","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":581}],"decl_id":null,"docs":" Describes the requested OpenGL context profiles.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":12327,"byte_end":12333,"line_start":421,"line_end":421,"column_start":5,"column_end":11},"name":"Latest","qualname":"::GlRequest::Latest","value":"GlRequest::Latest","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" Request the latest version of the \"best\" API of this platform.\n\n On desktop, will try OpenGL.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":12463,"byte_end":12471,"line_start":426,"line_end":426,"column_start":5,"column_end":13},"name":"Specific","qualname":"::GlRequest::Specific","value":"GlRequest::Specific(Api, (u8, u8))","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" Request a specific version of a specific API.\n\n Example: `GlRequest::Specific(Api::OpenGl, (3, 3))`.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":12700,"byte_end":12710,"line_start":431,"line_end":431,"column_start":5,"column_end":15},"name":"GlThenGles","qualname":"::GlRequest::GlThenGles","value":"GlRequest::GlThenGles { opengl_version, opengles_version }","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":" If OpenGL is available, create an OpenGL context with the specified\n `opengl_version`. Else if OpenGL ES or WebGL is available, create a\n context with the specified `opengles_version`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":12195,"byte_end":12204,"line_start":417,"line_end":417,"column_start":10,"column_end":19},"name":"GlRequest","qualname":"::GlRequest","value":"GlRequest::{Latest, Specific, GlThenGles}","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":601}],"decl_id":null,"docs":" Describes the OpenGL API and version that are being requested when a context\n is created.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":12958,"byte_end":12971,"line_start":441,"line_end":441,"column_start":12,"column_end":25},"name":"to_gl_version","qualname":"<GlRequest>::to_gl_version","value":"fn (&self) -> Option<(u8, u8)>","parent":null,"children":[],"decl_id":null,"docs":" Extract the desktop GL version, if any.\n","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":13491,"byte_end":13498,"line_start":457,"line_end":457,"column_start":12,"column_end":19},"name":"GL_CORE","qualname":"::GL_CORE","value":"GlRequest","parent":null,"children":[],"decl_id":null,"docs":" The minimum core profile GL context. Useful for getting the minimum\n required GL version while still running on OSX, which often forbids\n the compatibility profile features.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":13932,"byte_end":13941,"line_start":466,"line_end":466,"column_start":5,"column_end":14},"name":"NotRobust","qualname":"::Robustness::NotRobust","value":"Robustness::NotRobust","parent":{"krate":0,"index":609},"children":[],"decl_id":null,"docs":" Not everything is checked. Your application can crash if you do\n something wrong with your shaders.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":14316,"byte_end":14323,"line_start":475,"line_end":475,"column_start":5,"column_end":12},"name":"NoError","qualname":"::Robustness::NoError","value":"Robustness::NoError","parent":{"krate":0,"index":609},"children":[],"decl_id":null,"docs":" The driver doesn't check anything. This option is very dangerous.\n Please know what you're doing before using it. See the\n `GL_KHR_no_error` extension.\n\n Since this option is purely an optimization, no error will be returned\n if the backend doesn't support it. Instead it will automatically\n fall back to `NotRobust`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":14550,"byte_end":14575,"line_start":480,"line_end":480,"column_start":5,"column_end":30},"name":"RobustNoResetNotification","qualname":"::Robustness::RobustNoResetNotification","value":"Robustness::RobustNoResetNotification","parent":{"krate":0,"index":609},"children":[],"decl_id":null,"docs":" Everything is checked to avoid any crash. The driver will attempt to\n avoid any problem, but if a problem occurs the behavior is\n implementation-defined. You are just guaranteed not to get a crash.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":14695,"byte_end":14723,"line_start":484,"line_end":484,"column_start":5,"column_end":33},"name":"TryRobustNoResetNotification","qualname":"::Robustness::TryRobustNoResetNotification","value":"Robustness::TryRobustNoResetNotification","parent":{"krate":0,"index":609},"children":[],"decl_id":null,"docs":" Same as `RobustNoResetNotification` but the context creation doesn't\n fail if it's not supported.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":14991,"byte_end":15015,"line_start":490,"line_end":490,"column_start":5,"column_end":29},"name":"RobustLoseContextOnReset","qualname":"::Robustness::RobustLoseContextOnReset","value":"Robustness::RobustLoseContextOnReset","parent":{"krate":0,"index":609},"children":[],"decl_id":null,"docs":" Everything is checked to avoid any crash. If a problem occurs, the\n context will enter a \"context lost\" state. It must then be\n recreated. For the moment, glutin doesn't provide a way to recreate\n a context with the same window :-/\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":15134,"byte_end":15161,"line_start":494,"line_end":494,"column_start":5,"column_end":32},"name":"TryRobustLoseContextOnReset","qualname":"::Robustness::TryRobustLoseContextOnReset","value":"Robustness::TryRobustLoseContextOnReset","parent":{"krate":0,"index":609},"children":[],"decl_id":null,"docs":" Same as `RobustLoseContextOnReset` but the context creation doesn't\n fail if it's not supported.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":13800,"byte_end":13810,"line_start":463,"line_end":463,"column_start":10,"column_end":20},"name":"Robustness","qualname":"::Robustness","value":"Robustness::{NotRobust, NoError, RobustNoResetNotification, TryRobustNoResetNotification, RobustLoseContextOnReset, TryRobustLoseContextOnReset}","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620}],"decl_id":null,"docs":" Specifies the tolerance of the OpenGL context to faults. If you accept raw\n OpenGL commands and/or raw shader code from an untrusted source, you should\n definitely care about this.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":15367,"byte_end":15371,"line_start":501,"line_end":501,"column_start":5,"column_end":9},"name":"None","qualname":"::ReleaseBehavior::None","value":"ReleaseBehavior::None","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":" Doesn't do anything. Most notably doesn't flush.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":15470,"byte_end":15475,"line_start":505,"line_end":505,"column_start":5,"column_end":10},"name":"Flush","qualname":"::ReleaseBehavior::Flush","value":"ReleaseBehavior::Flush","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":" Flushes the context that was previously current as if `glFlush` was\n called.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":15288,"byte_end":15303,"line_start":499,"line_end":499,"column_start":10,"column_end":25},"name":"ReleaseBehavior","qualname":"::ReleaseBehavior","value":"ReleaseBehavior::{None, Flush}","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":636}],"decl_id":null,"docs":" The behavior of the driver when you change the current context.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":15579,"byte_end":15590,"line_start":511,"line_end":511,"column_start":12,"column_end":23},"name":"PixelFormat","qualname":"::PixelFormat","value":"PixelFormat { hardware_accelerated, color_bits, alpha_bits, depth_bits, stencil_bits, stereoscopy, double_buffer, multisampling, srgb }","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658}],"decl_id":null,"docs":" Describes a possible format. Unused.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":15521,"byte_end":15543,"line_start":509,"line_end":509,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":15601,"byte_end":15621,"line_start":512,"line_end":512,"column_start":9,"column_end":29},"name":"hardware_accelerated","qualname":"::PixelFormat::hardware_accelerated","value":"bool","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":15637,"byte_end":15647,"line_start":513,"line_end":513,"column_start":9,"column_end":19},"name":"color_bits","qualname":"::PixelFormat::color_bits","value":"u8","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":15661,"byte_end":15671,"line_start":514,"line_end":514,"column_start":9,"column_end":19},"name":"alpha_bits","qualname":"::PixelFormat::alpha_bits","value":"u8","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":15685,"byte_end":15695,"line_start":515,"line_end":515,"column_start":9,"column_end":19},"name":"depth_bits","qualname":"::PixelFormat::depth_bits","value":"u8","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":15709,"byte_end":15721,"line_start":516,"line_end":516,"column_start":9,"column_end":21},"name":"stencil_bits","qualname":"::PixelFormat::stencil_bits","value":"u8","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":15735,"byte_end":15746,"line_start":517,"line_end":517,"column_start":9,"column_end":20},"name":"stereoscopy","qualname":"::PixelFormat::stereoscopy","value":"bool","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":15762,"byte_end":15775,"line_start":518,"line_end":518,"column_start":9,"column_end":22},"name":"double_buffer","qualname":"::PixelFormat::double_buffer","value":"bool","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":15791,"byte_end":15804,"line_start":519,"line_end":519,"column_start":9,"column_end":22},"name":"multisampling","qualname":"::PixelFormat::multisampling","value":"std::option::Option<u16>","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":15827,"byte_end":15831,"line_start":520,"line_end":520,"column_start":9,"column_end":13},"name":"srgb","qualname":"::PixelFormat::srgb","value":"bool","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":15972,"byte_end":15995,"line_start":526,"line_end":526,"column_start":12,"column_end":35},"name":"PixelFormatRequirements","qualname":"::PixelFormatRequirements","value":"PixelFormatRequirements { hardware_accelerated, color_bits, float_color_buffer, alpha_bits, depth_bits, stencil_bits, double_buffer, multisampling, stereoscopy, srgb, release_behavior }","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675}],"decl_id":null,"docs":" Describes how the backend should choose a pixel format.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":16180,"byte_end":16200,"line_start":530,"line_end":530,"column_start":9,"column_end":29},"name":"hardware_accelerated","qualname":"::PixelFormatRequirements::hardware_accelerated","value":"std::option::Option<bool>","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" If true, only hardware-accelerated formats will be considered. If\n false, only software renderers. `None` means \"don't care\". Default\n is `Some(true)`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":16357,"byte_end":16367,"line_start":534,"line_end":534,"column_start":9,"column_end":19},"name":"color_bits","qualname":"::PixelFormatRequirements::color_bits","value":"std::option::Option<u8>","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Minimum number of bits for the color buffer, excluding alpha. `None`\n means \"don't care\". The default is `Some(24)`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":16596,"byte_end":16614,"line_start":541,"line_end":541,"column_start":9,"column_end":27},"name":"float_color_buffer","qualname":"::PixelFormatRequirements::float_color_buffer","value":"bool","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" If true, the color buffer must be in a floating point format. Default\n is `false`.\n\n Using floating points allows you to write values outside of the `[0.0,\n 1.0]` range.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":16758,"byte_end":16768,"line_start":545,"line_end":545,"column_start":9,"column_end":19},"name":"alpha_bits","qualname":"::PixelFormatRequirements::alpha_bits","value":"std::option::Option<u8>","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Minimum number of bits for the alpha in the color buffer. `None` means\n \"don't care\". The default is `Some(8)`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":16912,"byte_end":16922,"line_start":549,"line_end":549,"column_start":9,"column_end":19},"name":"depth_bits","qualname":"::PixelFormatRequirements::depth_bits","value":"std::option::Option<u8>","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Minimum number of bits for the depth buffer. `None` means \"don't care\".\n The default value is `Some(24)`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":17065,"byte_end":17077,"line_start":553,"line_end":553,"column_start":9,"column_end":21},"name":"stencil_bits","qualname":"::PixelFormatRequirements::stencil_bits","value":"std::option::Option<u8>","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Minimum number of bits for the depth buffer. `None` means \"don't care\".\n The default value is `Some(8)`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":17276,"byte_end":17289,"line_start":558,"line_end":558,"column_start":9,"column_end":22},"name":"double_buffer","qualname":"::PixelFormatRequirements::double_buffer","value":"std::option::Option<bool>","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" If true, only double-buffered formats will be considered. If false,\n only single-buffer formats. `None` means \"don't care\". The default\n is `Some(true)`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":17545,"byte_end":17558,"line_start":563,"line_end":563,"column_start":9,"column_end":22},"name":"multisampling","qualname":"::PixelFormatRequirements::multisampling","value":"std::option::Option<u16>","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Contains the minimum number of samples per pixel in the color, depth\n and stencil buffers. `None` means \"don't care\". Default is `None`.\n A value of `Some(0)` indicates that multisampling must not be enabled.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":17718,"byte_end":17729,"line_start":567,"line_end":567,"column_start":9,"column_end":20},"name":"stereoscopy","qualname":"::PixelFormatRequirements::stereoscopy","value":"bool","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" If true, only stereoscopic formats will be considered. If false, only\n non-stereoscopic formats. The default is `false`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":17863,"byte_end":17867,"line_start":571,"line_end":571,"column_start":9,"column_end":13},"name":"srgb","qualname":"::PixelFormatRequirements::srgb","value":"bool","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" If true, only sRGB-capable formats will be considered. If false, don't\n care. The default is `false`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":17960,"byte_end":17976,"line_start":574,"line_end":574,"column_start":9,"column_end":25},"name":"release_behavior","qualname":"::PixelFormatRequirements::release_behavior","value":"ReleaseBehavior","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" The behavior when changing the current context. Default is `Flush`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":18840,"byte_end":18852,"line_start":603,"line_end":603,"column_start":12,"column_end":24},"name":"GlAttributes","qualname":"::GlAttributes","value":"GlAttributes { sharing, version, profile, debug, robustness, vsync }","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687}],"decl_id":null,"docs":" Attributes to use when creating an OpenGL context.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":18976,"byte_end":18983,"line_start":607,"line_end":607,"column_start":9,"column_end":16},"name":"sharing","qualname":"::GlAttributes::sharing","value":"std::option::Option<S>","parent":{"krate":0,"index":680},"children":[],"decl_id":null,"docs":" An existing context with which some OpenGL objects get shared.\n\n The default is `None`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":19109,"byte_end":19116,"line_start":612,"line_end":612,"column_start":9,"column_end":16},"name":"version","qualname":"::GlAttributes::version","value":"GlRequest","parent":{"krate":0,"index":680},"children":[],"decl_id":null,"docs":" Version to try create. See `GlRequest` for more infos.\n\n The default is `Latest`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":19208,"byte_end":19215,"line_start":617,"line_end":617,"column_start":9,"column_end":16},"name":"profile","qualname":"::GlAttributes::profile","value":"std::option::Option<GlProfile>","parent":{"krate":0,"index":680},"children":[],"decl_id":null,"docs":" OpenGL profile to use.\n\n The default is `None`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":19468,"byte_end":19473,"line_start":624,"line_end":624,"column_start":9,"column_end":14},"name":"debug","qualname":"::GlAttributes::debug","value":"bool","parent":{"krate":0,"index":680},"children":[],"decl_id":null,"docs":" Whether to enable the `debug` flag of the context.\n\n Debug contexts are usually slower but give better error reporting.\n\n The default is `true` in debug mode and `false` in release mode.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":19750,"byte_end":19760,"line_start":631,"line_end":631,"column_start":9,"column_end":19},"name":"robustness","qualname":"::GlAttributes::robustness","value":"Robustness","parent":{"krate":0,"index":680},"children":[],"decl_id":null,"docs":" How the OpenGL context should detect errors.\n\n The default is `NotRobust` because this is what is typically expected\n when you create an OpenGL context. However for safety you should\n consider `TryRobustLoseContextOnReset`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":20002,"byte_end":20007,"line_start":638,"line_end":638,"column_start":9,"column_end":14},"name":"vsync","qualname":"::GlAttributes::vsync","value":"bool","parent":{"krate":0,"index":680},"children":[],"decl_id":null,"docs":" Whether to use vsync. If vsync is enabled, calling `swap_buffers` will\n block until the screen refreshes. This is typically used to prevent\n screen tearing.\n\n The default is `false`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":20147,"byte_end":20158,"line_start":644,"line_end":644,"column_start":12,"column_end":23},"name":"map_sharing","qualname":"<GlAttributes<S>>::map_sharing","value":"fn <F, T> (self, f: F) -> GlAttributes<T>","parent":null,"children":[],"decl_id":null,"docs":" Turns the `sharing` parameter into another type by calling a closure.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":20126,"byte_end":20135,"line_start":643,"line_end":643,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","byte_start":24053,"byte_end":24060,"line_start":15,"line_end":15,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\dlloader\\mod.rs","byte_start":35545,"byte_end":35555,"line_start":28,"line_end":28,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\dlloader\\mod.rs","byte_start":36389,"byte_end":36399,"line_start":54,"line_end":54,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\dlloader\\mod.rs","byte_start":36505,"byte_end":36515,"line_start":62,"line_end":62,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":37108,"byte_end":37111,"line_start":21,"line_end":21,"column_start":26,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":37148,"byte_end":37151,"line_start":23,"line_end":23,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":37350,"byte_end":37353,"line_start":32,"line_end":32,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":38308,"byte_end":38311,"line_start":74,"line_end":74,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":38431,"byte_end":38434,"line_start":82,"line_end":82,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":45309,"byte_end":45316,"line_start":285,"line_end":285,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":54425,"byte_end":54432,"line_start":557,"line_end":557,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":54457,"byte_end":54464,"line_start":558,"line_end":558,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":54483,"byte_end":54490,"line_start":560,"line_end":560,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":56455,"byte_end":56471,"line_start":613,"line_end":613,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\wgl\\make_current_guard.rs","byte_start":154614,"byte_end":154633,"line_start":19,"line_end":19,"column_start":14,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\wgl\\make_current_guard.rs","byte_start":155436,"byte_end":155455,"line_start":44,"line_end":44,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\wgl\\mod.rs","byte_start":122464,"byte_end":122477,"line_start":46,"line_end":46,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\wgl\\mod.rs","byte_start":122702,"byte_end":122716,"line_start":58,"line_end":58,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\wgl\\mod.rs","byte_start":122855,"byte_end":122862,"line_start":67,"line_end":67,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\wgl\\mod.rs","byte_start":128099,"byte_end":128106,"line_start":241,"line_end":241,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\wgl\\mod.rs","byte_start":128131,"byte_end":128138,"line_start":242,"line_end":242,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\context.rs","byte_start":156425,"byte_end":156432,"line_start":28,"line_end":28,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\context.rs","byte_start":156803,"byte_end":156810,"line_start":46,"line_end":46,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\platform\\windows\\mod.rs","byte_start":159542,"byte_end":159549,"line_start":37,"line_end":37,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\platform\\windows\\mod.rs","byte_start":159574,"byte_end":159581,"line_start":38,"line_end":38,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\platform\\windows\\mod.rs","byte_start":159591,"byte_end":159598,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":337},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\platform\\windows\\mod.rs","byte_start":168562,"byte_end":168569,"line_start":292,"line_end":292,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\raw_context.rs","byte_start":169220,"byte_end":169230,"line_start":8,"line_end":8,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\raw_context.rs","byte_start":169601,"byte_end":169611,"line_start":26,"line_end":26,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\raw_context.rs","byte_start":170948,"byte_end":170958,"line_start":59,"line_end":59,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\windowed.rs","byte_start":171907,"byte_end":171922,"line_start":38,"line_end":38,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\windowed.rs","byte_start":174583,"byte_end":174598,"line_start":107,"line_end":107,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\windowed.rs","byte_start":174989,"byte_end":175004,"line_start":125,"line_end":125,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2939,"byte_end":2953,"line_start":101,"line_end":101,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":8309,"byte_end":8322,"line_start":287,"line_end":287,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":9340,"byte_end":9353,"line_start":313,"line_end":313,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":10117,"byte_end":10130,"line_start":339,"line_end":339,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":10481,"byte_end":10494,"line_start":353,"line_end":353,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":10795,"byte_end":10807,"line_start":368,"line_end":368,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":11122,"byte_end":11134,"line_start":379,"line_end":379,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":11330,"byte_end":11342,"line_start":388,"line_end":388,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":12887,"byte_end":12896,"line_start":439,"line_end":439,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":18186,"byte_end":18209,"line_start":581,"line_end":581,"column_start":18,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":20026,"byte_end":20038,"line_start":641,"line_end":641,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":20516,"byte_end":20528,"line_start":659,"line_end":659,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":1528,"byte_end":1530,"line_start":52,"line_end":52,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\mod.rs","byte_start":21090,"byte_end":21097,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":5}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\os\\windows.rs","byte_start":24053,"byte_end":24060,"line_start":15,"line_end":15,"column_start":26,"column_end":33},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":271},"to":{"krate":0,"index":24}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\dlloader\\mod.rs","byte_start":35545,"byte_end":35555,"line_start":28,"line_end":28,"column_start":19,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\dlloader\\mod.rs","byte_start":36389,"byte_end":36399,"line_start":54,"line_end":54,"column_start":19,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":1704}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\dlloader\\mod.rs","byte_start":36505,"byte_end":36515,"line_start":62,"line_end":62,"column_start":22,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":1715}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":37108,"byte_end":37111,"line_start":21,"line_end":21,"column_start":26,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":494},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":37148,"byte_end":37151,"line_start":23,"line_end":23,"column_start":33,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":15,"index":330},"to":{"krate":0,"index":36}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":37350,"byte_end":37353,"line_start":32,"line_end":32,"column_start":10,"column_end":13},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":38308,"byte_end":38311,"line_start":74,"line_end":74,"column_start":16,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":494},"to":{"krate":2,"index":1704}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":38431,"byte_end":38434,"line_start":82,"line_end":82,"column_start":19,"column_end":22},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":494},"to":{"krate":2,"index":1715}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":45309,"byte_end":45316,"line_start":285,"line_end":285,"column_start":6,"column_end":13},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":54425,"byte_end":54432,"line_start":557,"line_end":557,"column_start":22,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":108},"to":{"krate":2,"index":1533}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":54457,"byte_end":54464,"line_start":558,"line_end":558,"column_start":22,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":108},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":54483,"byte_end":54490,"line_start":560,"line_end":560,"column_start":15,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":108},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\egl\\mod.rs","byte_start":56455,"byte_end":56471,"line_start":613,"line_end":613,"column_start":10,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\wgl\\make_current_guard.rs","byte_start":154614,"byte_end":154633,"line_start":19,"line_end":19,"column_start":14,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\wgl\\make_current_guard.rs","byte_start":155436,"byte_end":155455,"line_start":44,"line_end":44,"column_start":23,"column_end":42},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":168},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\wgl\\mod.rs","byte_start":122464,"byte_end":122477,"line_start":46,"line_end":46,"column_start":15,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":217},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\wgl\\mod.rs","byte_start":122702,"byte_end":122716,"line_start":58,"line_end":58,"column_start":15,"column_end":29},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":223},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\wgl\\mod.rs","byte_start":122855,"byte_end":122862,"line_start":67,"line_end":67,"column_start":6,"column_end":13},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\wgl\\mod.rs","byte_start":128099,"byte_end":128106,"line_start":241,"line_end":241,"column_start":22,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":212},"to":{"krate":2,"index":1533}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\api\\wgl\\mod.rs","byte_start":128131,"byte_end":128138,"line_start":242,"line_end":242,"column_start":22,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":212},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\context.rs","byte_start":156425,"byte_end":156432,"line_start":28,"line_end":28,"column_start":23,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":271},"to":{"krate":0,"index":430}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\context.rs","byte_start":156803,"byte_end":156810,"line_start":46,"line_end":46,"column_start":6,"column_end":13},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\platform\\windows\\mod.rs","byte_start":159542,"byte_end":159549,"line_start":37,"line_end":37,"column_start":22,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":306},"to":{"krate":2,"index":1533}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\platform\\windows\\mod.rs","byte_start":159574,"byte_end":159581,"line_start":38,"line_end":38,"column_start":22,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":306},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\platform\\windows\\mod.rs","byte_start":159591,"byte_end":159598,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\platform\\windows\\mod.rs","byte_start":168562,"byte_end":168569,"line_start":292,"line_end":292,"column_start":31,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":271},"to":{"krate":0,"index":351}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\raw_context.rs","byte_start":169220,"byte_end":169230,"line_start":8,"line_end":8,"column_start":23,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":360},"to":{"krate":0,"index":430}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\raw_context.rs","byte_start":169601,"byte_end":169611,"line_start":26,"line_end":26,"column_start":6,"column_end":16},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\raw_context.rs","byte_start":170948,"byte_end":170958,"line_start":59,"line_end":59,"column_start":26,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":360},"to":{"krate":2,"index":1704}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\windowed.rs","byte_start":171907,"byte_end":171922,"line_start":38,"line_end":38,"column_start":6,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\windowed.rs","byte_start":174583,"byte_end":174598,"line_start":107,"line_end":107,"column_start":23,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":376},"to":{"krate":0,"index":430}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\windowed.rs","byte_start":174989,"byte_end":175004,"line_start":125,"line_end":125,"column_start":26,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":376},"to":{"krate":2,"index":1704}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":2939,"byte_end":2953,"line_start":101,"line_end":101,"column_start":10,"column_end":24},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":8309,"byte_end":8322,"line_start":287,"line_end":287,"column_start":6,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":9340,"byte_end":9353,"line_start":313,"line_end":313,"column_start":28,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":10117,"byte_end":10130,"line_start":339,"line_end":339,"column_start":28,"column_end":41},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":521},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":10481,"byte_end":10494,"line_start":353,"line_end":353,"column_start":36,"column_end":49},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":10795,"byte_end":10807,"line_start":368,"line_end":368,"column_start":6,"column_end":18},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":11122,"byte_end":11134,"line_start":379,"line_end":379,"column_start":28,"column_end":40},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":11330,"byte_end":11342,"line_start":388,"line_end":388,"column_start":28,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":549},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":12887,"byte_end":12896,"line_start":439,"line_end":439,"column_start":6,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":18186,"byte_end":18209,"line_start":581,"line_end":581,"column_start":18,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":20026,"byte_end":20038,"line_start":641,"line_end":641,"column_start":9,"column_end":21},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glutin-0.20.1\\src\\lib.rs","byte_start":20516,"byte_end":20528,"line_start":659,"line_end":659,"column_start":21,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":680},"to":{"krate":2,"index":2206}}]}