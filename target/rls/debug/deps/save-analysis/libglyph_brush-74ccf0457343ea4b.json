{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","glyph_brush","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=74ccf0457343ea4b","-C","extra-filename=-74ccf0457343ea4b","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--extern","glyph_brush_next=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libglyph_brush-a71e84079142d329.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libglyph_brush-74ccf0457343ea4b.rmeta"},"prelude":{"crate_id":{"name":"glyph_brush","disambiguator":[9604558516434874771,17429560751798626205]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":14,"id":{"name":"glyph_brush","disambiguator":[12880343881915492555,11506226834977181695]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":15,"id":{"name":"rusttype","disambiguator":[13263997752320669711,4920352708742172091]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":16,"id":{"name":"approx","disambiguator":[8203426696814416008,11700430433253579810]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":17,"id":{"name":"num_traits","disambiguator":[9658936450980938914,14161967064833628679]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":18,"id":{"name":"ordered_float","disambiguator":[5861230906993484489,6258720921812304733]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":19,"id":{"name":"arrayvec","disambiguator":[9090649725863519185,15793980851999346954]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":20,"id":{"name":"linked_hash_map","disambiguator":[14142994031446925191,1665975324801198051]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":21,"id":{"name":"rustc_hash","disambiguator":[14324777267488932790,14384939360982581900]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":22,"id":{"name":"byteorder","disambiguator":[373764108737062493,6998070977021925776]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":23,"id":{"name":"crossbeam_deque","disambiguator":[5018473264195450183,6382778854308847870]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":24,"id":{"name":"crossbeam_epoch","disambiguator":[17054536658623444655,6154134795048836908]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":25,"id":{"name":"cfg_if","disambiguator":[2442249708866091360,16714075183114805585]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":26,"id":{"name":"crossbeam_utils","disambiguator":[7709528671052336800,4286142518779901766]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":27,"id":{"name":"lazy_static","disambiguator":[17281579441627161632,7326486140096487162]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":28,"id":{"name":"memoffset","disambiguator":[16489986462602757596,1492316565336062603]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":29,"id":{"name":"scopeguard","disambiguator":[8293681837284562385,10699146686669501925]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":30,"id":{"name":"stb_truetype","disambiguator":[6738647066241828924,2833314474130793450]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":31,"id":{"name":"num_cpus","disambiguator":[15898470444742567229,11826811419716725877]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":32,"id":{"name":"log","disambiguator":[17746278763066137263,8798032287631474102]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":33,"id":{"name":"glyph_brush_layout","disambiguator":[9071278877814556143,11964635362261619549]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":34,"id":{"name":"xi_unicode","disambiguator":[232587236240704448,12212771976639670304]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":35,"id":{"name":"twox_hash","disambiguator":[5813353842766345122,326741528467278350]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":36,"id":{"name":"rand","disambiguator":[8438396397274912183,3892782495060900242]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":37,"id":{"name":"rand_core","disambiguator":[17016881835859474259,11394802712639798332]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":38,"id":{"name":"getrandom","disambiguator":[41322740403071273,6117145283354986736]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":39,"id":{"name":"rand_chacha","disambiguator":[9783816951699179602,17772320859214680796]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":40,"id":{"name":"c2_chacha","disambiguator":[13937665862365590726,1406290536078948306]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","num":41,"id":{"name":"ppv_lite86","disambiguator":[7143213747247628097,14013417676120819252]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":0,"byte_end":1714,"line_start":1,"line_end":44,"column_start":1,"column_end":3}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1202,"byte_end":1203,"line_start":36,"line_end":36,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":311},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1237,"byte_end":1245,"line_start":38,"line_end":38,"column_start":5,"column_end":13},"alias_span":null,"name":"rusttype","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":423},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1247,"byte_end":1258,"line_start":38,"line_end":38,"column_start":15,"column_end":26},"alias_span":null,"name":"BrushAction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":433},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1260,"byte_end":1270,"line_start":38,"line_end":38,"column_start":28,"column_end":38},"alias_span":null,"name":"BrushError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":461},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1272,"byte_end":1290,"line_start":38,"line_end":38,"column_start":40,"column_end":58},"alias_span":null,"name":"BuiltInLineBreaker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":235},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1292,"byte_end":1297,"line_start":38,"line_end":38,"column_start":60,"column_end":65},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":404},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1299,"byte_end":1319,"line_start":38,"line_end":38,"column_start":67,"column_end":87},"alias_span":null,"name":"DefaultSectionHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":411},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1321,"byte_end":1327,"line_start":38,"line_end":38,"column_start":89,"column_end":95},"alias_span":null,"name":"FontId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":131},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1333,"byte_end":1340,"line_start":39,"line_end":39,"column_start":5,"column_end":12},"alias_span":null,"name":"FontMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":76},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1342,"byte_end":1352,"line_start":39,"line_end":39,"column_start":14,"column_end":24},"alias_span":null,"name":"GlyphBrush","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":15},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1354,"byte_end":1371,"line_start":39,"line_end":39,"column_start":26,"column_end":43},"alias_span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1375,"byte_end":1396,"line_start":39,"line_end":39,"column_start":47,"column_end":68},"name":"GlyphBrushBuilderNext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":235},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1398,"byte_end":1413,"line_start":39,"line_end":39,"column_start":70,"column_end":85},"alias_span":null,"name":"GlyphCalculator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":466},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1419,"byte_end":1441,"line_start":40,"line_end":40,"column_start":5,"column_end":27},"alias_span":null,"name":"GlyphCalculatorBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":250},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1443,"byte_end":1463,"line_start":40,"line_end":40,"column_start":29,"column_end":49},"alias_span":null,"name":"GlyphCalculatorGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":512},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1465,"byte_end":1476,"line_start":40,"line_end":40,"column_start":51,"column_end":62},"alias_span":null,"name":"GlyphChange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":203},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1478,"byte_end":1491,"line_start":40,"line_end":40,"column_start":64,"column_end":77},"alias_span":null,"name":"GlyphCruncher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":328},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1493,"byte_end":1508,"line_start":40,"line_end":40,"column_start":79,"column_end":94},"alias_span":null,"name":"GlyphPositioner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":415},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1514,"byte_end":1525,"line_start":41,"line_end":41,"column_start":5,"column_end":16},"alias_span":null,"name":"GlyphVertex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":369},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1527,"byte_end":1542,"line_start":41,"line_end":41,"column_start":18,"column_end":33},"alias_span":null,"name":"HorizontalAlign","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":336},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1544,"byte_end":1550,"line_start":41,"line_end":41,"column_start":35,"column_end":41},"alias_span":null,"name":"Layout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":439},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1552,"byte_end":1561,"line_start":41,"line_end":41,"column_start":43,"column_end":52},"alias_span":null,"name":"LineBreak","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":149},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1563,"byte_end":1574,"line_start":41,"line_end":41,"column_start":54,"column_end":65},"alias_span":null,"name":"LineBreaker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":504},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1576,"byte_end":1592,"line_start":41,"line_end":41,"column_start":67,"column_end":83},"alias_span":null,"name":"OwnedSectionText","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":490},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1598,"byte_end":1616,"line_start":42,"line_end":42,"column_start":5,"column_end":23},"alias_span":null,"name":"OwnedVariedSection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":198},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1618,"byte_end":1637,"line_start":42,"line_end":42,"column_start":25,"column_end":44},"alias_span":null,"name":"PositionedGlyphIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":537},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1639,"byte_end":1646,"line_start":42,"line_end":42,"column_start":46,"column_end":53},"alias_span":null,"name":"Section","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":480},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1648,"byte_end":1663,"line_start":42,"line_end":42,"column_start":55,"column_end":70},"alias_span":null,"name":"SectionGeometry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":492},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1665,"byte_end":1676,"line_start":42,"line_end":42,"column_start":72,"column_end":83},"alias_span":null,"name":"SectionText","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":518},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1678,"byte_end":1691,"line_start":42,"line_end":42,"column_start":85,"column_end":98},"alias_span":null,"name":"VariedSection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":390},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":1697,"byte_end":1710,"line_start":43,"line_end":43,"column_start":5,"column_end":18},"alias_span":null,"name":"VerticalAlign","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","byte_start":0,"byte_end":1714,"line_start":1,"line_end":44,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":55},{"krate":0,"index":56}],"decl_id":null,"docs":" ```\n use glyph_brush::{BrushAction, BrushError, GlyphBrushBuilder, Section};\n\n # fn main() -> Result<(), glyph_brush::BrushError> {\n let dejavu: &[u8] = include_bytes!(\"../../fonts/DejaVuSans.ttf\");\n let mut glyph_brush = GlyphBrushBuilder::using_font_bytes(dejavu).build();\n # let some_other_section = Section { text: \"another\", ..Section::default() };\n\n glyph_brush.queue(Section {\n     text: \"Hello glyph_brush\",\n     ..Section::default()\n });\n glyph_brush.queue(some_other_section);\n\n # fn update_texture(_: glyph_brush::rusttype::Rect<u32>, _: &[u8]) {}\n # let into_vertex = |_| ();\n match glyph_brush.process_queued(\n     |rect, tex_data| update_texture(rect, tex_data),\n     |vertex_data| into_vertex(vertex_data),\n ) {\n     Ok(BrushAction::Draw(vertices)) => {\n         // Draw new vertices.\n     }\n     Ok(BrushAction::ReDraw) => {\n         // Re-draw last frame's vertices unmodified.\n     }\n     Err(BrushError::TextureTooSmall { suggested }) => {\n         // Enlarge texture + glyph_brush texture cache and retry.\n     }\n }\n # Ok(())\n # }\n ```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":2269,"byte_end":2286,"line_start":19,"line_end":19,"column_start":12,"column_end":29},"name":"GlyphBrushBuilder","qualname":"::glyph_brush::builder::GlyphBrushBuilder","value":"GlyphBrushBuilder { font_data, initial_cache_size, gpu_cache_scale_tolerance, gpu_cache_position_tolerance, gpu_cache_align_4x4, cache_glyph_positioning, cache_glyph_drawing, section_hasher }","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24}],"decl_id":null,"docs":" Builder for a [`GlyphBrush`](struct.GlyphBrush.html) (v0.5).\n\n # Example\n\n ```no_run\n use glyph_brush::{GlyphBrush, GlyphBrushBuilder};\n # type Vertex = ();\n\n let dejavu: &[u8] = include_bytes!(\"../../../fonts/DejaVuSans.ttf\");\n let mut glyph_brush: GlyphBrush<'_, Vertex> =\n     GlyphBrushBuilder::using_font_bytes(dejavu).build();\n ```\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":2327,"byte_end":2336,"line_start":20,"line_end":20,"column_start":9,"column_end":18},"name":"font_data","qualname":"::glyph_brush::builder::GlyphBrushBuilder::font_data","value":"std::vec::Vec<rusttype::Font<'a>>","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":2361,"byte_end":2379,"line_start":21,"line_end":21,"column_start":9,"column_end":27},"name":"initial_cache_size","qualname":"::glyph_brush::builder::GlyphBrushBuilder::initial_cache_size","value":"(u32, u32)","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":2401,"byte_end":2426,"line_start":22,"line_end":22,"column_start":9,"column_end":34},"name":"gpu_cache_scale_tolerance","qualname":"::glyph_brush::builder::GlyphBrushBuilder::gpu_cache_scale_tolerance","value":"f32","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":2441,"byte_end":2469,"line_start":23,"line_end":23,"column_start":9,"column_end":37},"name":"gpu_cache_position_tolerance","qualname":"::glyph_brush::builder::GlyphBrushBuilder::gpu_cache_position_tolerance","value":"f32","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":2484,"byte_end":2503,"line_start":24,"line_end":24,"column_start":9,"column_end":28},"name":"gpu_cache_align_4x4","qualname":"::glyph_brush::builder::GlyphBrushBuilder::gpu_cache_align_4x4","value":"bool","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":2519,"byte_end":2542,"line_start":25,"line_end":25,"column_start":9,"column_end":32},"name":"cache_glyph_positioning","qualname":"::glyph_brush::builder::GlyphBrushBuilder::cache_glyph_positioning","value":"bool","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":2558,"byte_end":2577,"line_start":26,"line_end":26,"column_start":9,"column_end":28},"name":"cache_glyph_drawing","qualname":"::glyph_brush::builder::GlyphBrushBuilder::cache_glyph_drawing","value":"bool","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":2593,"byte_end":2607,"line_start":27,"line_end":27,"column_start":9,"column_end":23},"name":"section_hasher","qualname":"::glyph_brush::builder::GlyphBrushBuilder::section_hasher","value":"H","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":2822,"byte_end":2838,"line_start":35,"line_end":35,"column_start":12,"column_end":28},"name":"using_font_bytes","qualname":"<GlyphBrushBuilder>::using_font_bytes","value":"fn <B> (font_0_data: B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the default font data used to render glyphs.\n Referenced with `FontId(0)`, which is default.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":2801,"byte_end":2810,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":2988,"byte_end":3005,"line_start":40,"line_end":40,"column_start":12,"column_end":29},"name":"using_fonts_bytes","qualname":"<GlyphBrushBuilder>::using_fonts_bytes","value":"fn <B, V> (font_data: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":2967,"byte_end":2976,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":3465,"byte_end":3475,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"using_font","qualname":"<GlyphBrushBuilder>::using_font","value":"fn (font_0: Font<'a>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the default font used to render glyphs.\n Referenced with `FontId(0)`, which is default.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":3444,"byte_end":3453,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":3562,"byte_end":3573,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"using_fonts","qualname":"<GlyphBrushBuilder>::using_fonts","value":"fn <V> (fonts: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":4338,"byte_end":4352,"line_start":80,"line_end":80,"column_start":12,"column_end":26},"name":"add_font_bytes","qualname":"<GlyphBrushBuilder>::add_font_bytes","value":"fn <B> (&mut self, font_data: B) -> FontId","parent":null,"children":[],"decl_id":null,"docs":" Adds additional fonts to the one added in [`using_font`](#method.using_font) /\n [`using_font_bytes`](#method.using_font_bytes).\n Returns a [`FontId`](struct.FontId.html) to reference this font.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":4778,"byte_end":4786,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"add_font","qualname":"<GlyphBrushBuilder>::add_font","value":"fn (&mut self, font_data: Font<'a>) -> FontId","parent":null,"children":[],"decl_id":null,"docs":" Adds additional fonts to the one added in [`using_font`](#method.using_font) /\n [`using_font_bytes`](#method.using_font_bytes).\n Returns a [`FontId`](struct.FontId.html) to reference this font.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":5159,"byte_end":5177,"line_start":99,"line_end":99,"column_start":12,"column_end":30},"name":"initial_cache_size","qualname":"<GlyphBrushBuilder>::initial_cache_size","value":"fn (mut self, size: (u32, u32)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initial size of 2D texture used as a gpu cache, pixels (width, height).\n The GPU cache will dynamically quadruple in size whenever the current size\n is insufficient.\n\n Defaults to `(256, 256)`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":5519,"byte_end":5544,"line_start":110,"line_end":110,"column_start":12,"column_end":37},"name":"gpu_cache_scale_tolerance","qualname":"<GlyphBrushBuilder>::gpu_cache_scale_tolerance","value":"fn (mut self, tolerance: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum allowed difference in scale used for judging whether to reuse an\n existing glyph in the GPU cache.\n\n Defaults to `0.5`\n\n See rusttype docs for `rusttype::gpu_cache::Cache`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":5974,"byte_end":6002,"line_start":122,"line_end":122,"column_start":12,"column_end":40},"name":"gpu_cache_position_tolerance","qualname":"<GlyphBrushBuilder>::gpu_cache_position_tolerance","value":"fn (mut self, tolerance: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum allowed difference in subpixel position used for judging whether\n to reuse an existing glyph in the GPU cache. Anything greater than or equal to\n 1.0 means \"don't care\".\n\n Defaults to `0.1`\n\n See rusttype docs for `rusttype::gpu_cache::Cache`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":6438,"byte_end":6457,"line_start":135,"line_end":135,"column_start":12,"column_end":31},"name":"gpu_cache_align_4x4","qualname":"<GlyphBrushBuilder>::gpu_cache_align_4x4","value":"fn (mut self, b: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align glyphs in texture cache to 4x4 texel boundaries.\n\n If your backend requires texture updates to be aligned to 4x4 texel\n boundaries (e.g. WebGL), this should be set to `true`.\n\n Defaults to `false`\n\n See rusttype docs for `rusttype::gpu_cache::Cache`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":7085,"byte_end":7108,"line_start":149,"line_end":149,"column_start":12,"column_end":35},"name":"cache_glyph_positioning","qualname":"<GlyphBrushBuilder>::cache_glyph_positioning","value":"fn (mut self, cache: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether perform the calculation of glyph positioning according to the layout\n every time, or use a cached result if the input `Section` and `GlyphPositioner` are the\n same hash as a previous call.\n\n Improves performance. Should only disable if using a custom GlyphPositioner that is\n impure according to it's inputs, so caching a previous call is not desired. Disabling\n also disables [`cache_glyph_drawing`](#method.cache_glyph_drawing).\n\n Defaults to `true`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":7482,"byte_end":7501,"line_start":160,"line_end":160,"column_start":12,"column_end":31},"name":"cache_glyph_drawing","qualname":"<GlyphBrushBuilder>::cache_glyph_drawing","value":"fn (mut self, cache: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets optimising drawing by reusing the last draw requesting an identical draw queue.\n\n Improves performance. Is disabled if\n [`cache_glyph_positioning`](#method.cache_glyph_positioning) is disabled.\n\n Defaults to `true`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":8341,"byte_end":8355,"line_start":184,"line_end":184,"column_start":12,"column_end":26},"name":"section_hasher","qualname":"<GlyphBrushBuilder>::section_hasher","value":"fn <T> (self, section_hasher: T) -> GlyphBrushBuilder<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the section hasher. `GlyphBrush` cannot handle absolute section hash collisions\n so use a good hash algorithm.\n\n This hasher is used to distinguish sections, rather than for hashmap internal use.\n\n Defaults to [xxHash](https://docs.rs/twox-hash).\n\n # Example\n ```no_run\n # use glyph_brush::GlyphBrushBuilder;\n # fn main() {\n # let some_font: &[u8] = include_bytes!(\"../../../fonts/DejaVuSans.ttf\");\n # type SomeOtherBuildHasher = glyph_brush::DefaultSectionHasher;\n GlyphBrushBuilder::using_font_bytes(some_font)\n     .section_hasher(SomeOtherBuildHasher::default())\n     // ...\n # ;\n # }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":9625,"byte_end":9630,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"name":"build","qualname":"<GlyphBrushBuilder>::build","value":"fn <V> (self) -> GlyphBrush<'a, V, H>","parent":null,"children":[],"decl_id":null,"docs":" Builds a `GlyphBrush` using the input gfx factory\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":2655,"byte_end":2672,"line_start":31,"line_end":31,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":4084,"byte_end":4101,"line_start":76,"line_end":76,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":2655,"byte_end":2672,"line_start":31,"line_end":31,"column_start":10,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":13},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glyph_brush-0.5.4\\src\\glyph_brush\\builder.rs","byte_start":4084,"byte_end":4101,"line_start":76,"line_end":76,"column_start":26,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":13},"to":{"krate":4294967295,"index":4294967295}}]}