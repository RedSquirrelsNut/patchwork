{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","lewton","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--crate-type","cdylib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"ogg\"","-C","metadata=2106c8864c7ce0cb","-C","extra-filename=-2106c8864c7ce0cb","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--extern","byteorder=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libbyteorder-64f7b87f82657a23.rmeta","--extern","ogg=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libogg-41811ebef7053d1e.rmeta","--extern","smallvec=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libsmallvec-a0d7f83df1e970dc.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\liblewton-2106c8864c7ce0cb.rmeta"},"prelude":{"crate_id":{"name":"lewton","disambiguator":[4807795593755978354,16082504140912831336]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","num":14,"id":{"name":"byteorder","disambiguator":[373764108737062493,6998070977021925776]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","num":15,"id":{"name":"smallvec","disambiguator":[7532348961559425697,17176165485341521969]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","num":16,"id":{"name":"maybe_uninit","disambiguator":[4286604793989925036,16418824572312769135]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","num":17,"id":{"name":"ogg","disambiguator":[8090993522682251113,15880347833297962562]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":282,"byte_end":6258,"line_start":9,"line_end":256,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":17,"index":201},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":2107,"byte_end":2119,"line_start":99,"line_end":99,"column_start":14,"column_end":26},"alias_span":null,"name":"OggReadError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":282,"byte_end":6258,"line_start":9,"line_end":256,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":151},{"krate":0,"index":168},{"krate":0,"index":210},{"krate":0,"index":253},{"krate":0,"index":354},{"krate":0,"index":382},{"krate":0,"index":424},{"krate":0,"index":450},{"krate":0,"index":569},{"krate":0,"index":579},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466}],"decl_id":null,"docs":"A `vorbis` decoder, written in Rust.\n\nIf you \"just\" want to decode `ogg/vorbis` files, take a look into\nthe `inside_ogg` module (make sure you haven't disabled the `ogg` feature).\n\nFor lower level, per-packet usage, you can have a look at the `audio` and `header`\nmodules.\n","sig":null,"attributes":[{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":282,"byte_end":305,"line_start":9,"line_end":9,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"header","qualname":"::header","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":467},{"krate":0,"index":489},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":57},{"krate":0,"index":491},{"krate":0,"index":506},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":496},{"krate":0,"index":494},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":64},{"krate":0,"index":72},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":89},{"krate":0,"index":99},{"krate":0,"index":108},{"krate":0,"index":112},{"krate":0,"index":117},{"krate":0,"index":123},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":135},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150}],"decl_id":null,"docs":"Header decoding\n\nThis module takes care of decoding of the three vorbis headers:\n\n1. Identification\n2. Comment\n3. Setup\n\nIt builds only on the internal bitpacking layer and the internal\nhuffman tree handling mod. Everything else about the headers is\ndecoded in this mod.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":7252,"byte_end":7263,"line_start":36,"line_end":36,"column_start":2,"column_end":13},"name":"EndOfPacket","qualname":"::header::HeaderReadError::EndOfPacket","value":"HeaderReadError::EndOfPacket","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":7366,"byte_end":7381,"line_start":39,"line_end":39,"column_start":2,"column_end":17},"name":"NotVorbisHeader","qualname":"::header::HeaderReadError::NotVorbisHeader","value":"HeaderReadError::NotVorbisHeader","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":" If the passed data don't start with the \"vorbis\"\n capture pattern, this error is returned.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":7384,"byte_end":7408,"line_start":40,"line_end":40,"column_start":2,"column_end":26},"name":"UnsupportedVorbisVersion","qualname":"::header::HeaderReadError::UnsupportedVorbisVersion","value":"HeaderReadError::UnsupportedVorbisVersion","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":7455,"byte_end":7470,"line_start":42,"line_end":42,"column_start":2,"column_end":17},"name":"HeaderBadFormat","qualname":"::header::HeaderReadError::HeaderBadFormat","value":"HeaderReadError::HeaderBadFormat","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":" If the header violates the vorbis spec\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":7694,"byte_end":7707,"line_start":48,"line_end":48,"column_start":2,"column_end":15},"name":"HeaderBadType","qualname":"::header::HeaderReadError::HeaderBadType","value":"HeaderReadError::HeaderBadType(u8)","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":" The given packet indeed seems to be a vorbis header,\n but it looks like it is a different header type than\n the function it was passed to.\n\n It is not guaranteed that the type is a valid header type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":7830,"byte_end":7843,"line_start":51,"line_end":51,"column_start":2,"column_end":15},"name":"HeaderIsAudio","qualname":"::header::HeaderReadError::HeaderIsAudio","value":"HeaderReadError::HeaderIsAudio","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":" The given packet does not seem to be a header as per vorbis spec,\n instead it seems to be an audio packet.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":7846,"byte_end":7861,"line_start":52,"line_end":52,"column_start":2,"column_end":17},"name":"Utf8DecodeError","qualname":"::header::HeaderReadError::Utf8DecodeError","value":"HeaderReadError::Utf8DecodeError","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":8325,"byte_end":8345,"line_start":62,"line_end":62,"column_start":2,"column_end":22},"name":"BufferNotAddressable","qualname":"::header::HeaderReadError::BufferNotAddressable","value":"HeaderReadError::BufferNotAddressable","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":" If the needed memory isn't addressable by us\n\n This error is returned if a calculation yielded a higher value for\n an internal buffer size that doesn't fit into the platform's address range.\n Note that if we \"simply\" encounter an allocation failure (OOM, etc),\n we do what libstd does in these cases: crash.\n\n This error is not automatically an error of the passed data,\n but rather is due to insufficient decoder hardware.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":7233,"byte_end":7248,"line_start":35,"line_end":35,"column_start":10,"column_end":25},"name":"HeaderReadError","qualname":"::header::HeaderReadError","value":"HeaderReadError::{EndOfPacket, NotVorbisHeader, UnsupportedVorbisVersion, HeaderBadFormat, HeaderBadType, HeaderIsAudio, Utf8DecodeError, BufferNotAddressable}","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483}],"decl_id":null,"docs":" Errors that can occur during Header decoding\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":12160,"byte_end":12169,"line_start":184,"line_end":184,"column_start":10,"column_end":19},"name":"HeaderSet","qualname":"::header::HeaderSet","value":"(IdentHeader, CommentHeader, SetupHeader)","parent":null,"children":[],"decl_id":null,"docs":" The set of the three Vorbis headers\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":12414,"byte_end":12425,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"IdentHeader","qualname":"::header::IdentHeader","value":"IdentHeader { audio_channels, audio_sample_rate, bitrate_maximum, bitrate_nominal, bitrate_minimum, blocksize_0, blocksize_1 }","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55}],"decl_id":null,"docs":"Representation for the identification header\n\nThe identification header is the first of the three\nheaders inside each vorbis stream.\n\nIt covers basic information about the stream.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":12481,"byte_end":12495,"line_start":196,"line_end":196,"column_start":6,"column_end":20},"name":"audio_channels","qualname":"::header::IdentHeader::audio_channels","value":"u8","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" The number of audio channels in the stream\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":12541,"byte_end":12558,"line_start":198,"line_end":198,"column_start":6,"column_end":23},"name":"audio_sample_rate","qualname":"::header::IdentHeader::audio_sample_rate","value":"u32","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" The sample rate of the stream\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":12695,"byte_end":12710,"line_start":203,"line_end":203,"column_start":6,"column_end":21},"name":"bitrate_maximum","qualname":"::header::IdentHeader::bitrate_maximum","value":"i32","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" The maximum bit rate of the stream\n\n Note that this value is only a hint\n and may be off by a large amount.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":12847,"byte_end":12862,"line_start":208,"line_end":208,"column_start":6,"column_end":21},"name":"bitrate_nominal","qualname":"::header::IdentHeader::bitrate_nominal","value":"i32","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" The nominal bit rate of the stream\n\n Note that this value is only a hint\n and may be off by a large amount.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":12999,"byte_end":13014,"line_start":213,"line_end":213,"column_start":6,"column_end":21},"name":"bitrate_minimum","qualname":"::header::IdentHeader::bitrate_minimum","value":"i32","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" The minimum bit rate of the stream\n\n Note that this value is only a hint\n and may be off by a large amount.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":13026,"byte_end":13037,"line_start":214,"line_end":214,"column_start":6,"column_end":17},"name":"blocksize_0","qualname":"::header::IdentHeader::blocksize_0","value":"u8","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":13048,"byte_end":13059,"line_start":215,"line_end":215,"column_start":6,"column_end":17},"name":"blocksize_1","qualname":"::header::IdentHeader::blocksize_1","value":"u8","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":13436,"byte_end":13453,"line_start":227,"line_end":227,"column_start":8,"column_end":25},"name":"read_header_ident","qualname":"::header::read_header_ident","value":"fn (packet: &[u8]) -> Result<IdentHeader, HeaderReadError>","parent":null,"children":[],"decl_id":null,"docs":"Reading the Identification header\n\nIf it returns Err(sth) when being called with the first packet in a stream,\nthe whole stream is to be considered undecodable as per the Vorbis spec.\nThe function returns Err(`HeaderReadError::HeaderBadType`) if the header type\ndoesn't match the ident header.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":15580,"byte_end":15593,"line_start":296,"line_end":296,"column_start":12,"column_end":25},"name":"CommentHeader","qualname":"::header::CommentHeader","value":"CommentHeader { vendor, comment_list }","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493}],"decl_id":null,"docs":"Representation of the comment header\n\nThe comment header is the second of the three\nheaders inside each vorbis stream.\n\nIt contains text comment metadata\nabout the stream, encoded as key-value pairs,\nand the vendor name.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":15690,"byte_end":15696,"line_start":300,"line_end":300,"column_start":6,"column_end":12},"name":"vendor","qualname":"::header::CommentHeader::vendor","value":"std::string::String","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" An identification string of the\n software/library that encoded\n the stream.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":15778,"byte_end":15790,"line_start":303,"line_end":303,"column_start":6,"column_end":18},"name":"comment_list","qualname":"::header::CommentHeader::comment_list","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" A key-value list of the comments\n attached to the stream.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":16081,"byte_end":16100,"line_start":315,"line_end":315,"column_start":8,"column_end":27},"name":"read_header_comment","qualname":"::header::read_header_comment","value":"fn (packet: &[u8]) -> Result<CommentHeader, HeaderReadError>","parent":null,"children":[],"decl_id":null,"docs":"Reading the Comment header\n\nYou should call this function with the second packet in the stream.\n\nThe function does not check whether the comment field names consist\nof characters `0x20` through `0x7D` (`0x3D` excluded), as the vorbis\nspec requires.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":20921,"byte_end":20932,"line_start":472,"line_end":472,"column_start":12,"column_end":23},"name":"SetupHeader","qualname":"::header::SetupHeader","value":"SetupHeader {  }","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":42281,"byte_end":42298,"line_start":1087,"line_end":1087,"column_start":8,"column_end":25},"name":"read_header_setup","qualname":"::header::read_header_setup","value":"fn (packet: &[u8], audio_channels: u8, blocksizes: (u8, u8)) -> Result<SetupHeader, HeaderReadError>","parent":null,"children":[],"decl_id":null,"docs":" Reading the setup header.\n\n The audio channel and blocksize info needed by the function\n can be obtained from the ident header.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\huffman_tree.rs","byte_start":52708,"byte_end":52721,"line_start":128,"line_end":128,"column_start":2,"column_end":15},"name":"Overspecified","qualname":"::huffman_tree::HuffmanError::Overspecified","value":"HuffmanError::Overspecified","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\huffman_tree.rs","byte_start":52724,"byte_end":52738,"line_start":129,"line_end":129,"column_start":2,"column_end":16},"name":"Underpopulated","qualname":"::huffman_tree::HuffmanError::Underpopulated","value":"HuffmanError::Underpopulated","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\huffman_tree.rs","byte_start":52741,"byte_end":52759,"line_start":130,"line_end":130,"column_start":2,"column_end":20},"name":"InvalidSingleEntry","qualname":"::huffman_tree::HuffmanError::InvalidSingleEntry","value":"HuffmanError::InvalidSingleEntry","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\huffman_tree.rs","byte_start":52692,"byte_end":52704,"line_start":127,"line_end":127,"column_start":10,"column_end":22},"name":"HuffmanError","qualname":"::huffman_tree::HuffmanError","value":"HuffmanError::{Overspecified, Underpopulated, InvalidSingleEntry}","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"audio","qualname":"::audio","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":272},{"krate":0,"index":530},{"krate":0,"index":545},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":353}],"decl_id":null,"docs":"Audio packet decoding\n\nThis module decodes the audio packets given to it.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":86991,"byte_end":87002,"line_start":30,"line_end":30,"column_start":2,"column_end":13},"name":"EndOfPacket","qualname":"::audio::AudioReadError::EndOfPacket","value":"AudioReadError::EndOfPacket","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":87005,"byte_end":87019,"line_start":31,"line_end":31,"column_start":2,"column_end":16},"name":"AudioBadFormat","qualname":"::audio::AudioReadError::AudioBadFormat","value":"AudioReadError::AudioBadFormat","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":87022,"byte_end":87035,"line_start":32,"line_end":32,"column_start":2,"column_end":15},"name":"AudioIsHeader","qualname":"::audio::AudioReadError::AudioIsHeader","value":"AudioReadError::AudioIsHeader","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":87494,"byte_end":87514,"line_start":42,"line_end":42,"column_start":2,"column_end":22},"name":"BufferNotAddressable","qualname":"::audio::AudioReadError::BufferNotAddressable","value":"AudioReadError::BufferNotAddressable","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":" If the needed memory isn't addressable by us\n\n This error is returned if a calculation yielded a higher value for\n an internal buffer size that doesn't fit into the platform's address range.\n Note that if we \"simply\" encounter an allocation failure (OOM, etc),\n we do what libstd does in these cases: crash.\n\n This error is not automatically an error of the format,\n but rather is due to insufficient decoder hardware.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":86973,"byte_end":86987,"line_start":29,"line_end":29,"column_start":10,"column_end":24},"name":"AudioReadError","qualname":"::audio::AudioReadError","value":"AudioReadError::{EndOfPacket, AudioBadFormat, AudioIsHeader, BufferNotAddressable}","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":537}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":113972,"byte_end":113991,"line_start":855,"line_end":855,"column_start":12,"column_end":31},"name":"PreviousWindowRight","qualname":"::audio::PreviousWindowRight","value":"PreviousWindowRight {  }","parent":null,"children":[{"krate":0,"index":341}],"decl_id":null,"docs":" The right part of the previous window\n\n This is the only state that needs to be changed\n once the headers are read.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":114097,"byte_end":114100,"line_start":861,"line_end":861,"column_start":9,"column_end":12},"name":"new","qualname":"<PreviousWindowRight>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":114328,"byte_end":114352,"line_start":871,"line_end":871,"column_start":8,"column_end":32},"name":"get_decoded_sample_count","qualname":"::audio::get_decoded_sample_count","value":"fn (ident: &IdentHeader, setup: &SetupHeader, packet: &[u8]) -> Result<usize, AudioReadError>","parent":null,"children":[],"decl_id":null,"docs":"Returns the per-channel sample count of a packet if it were decoded.\n\nThis operation is very cheap and doesn't involve actual decoding of the packet.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":115936,"byte_end":115961,"line_start":917,"line_end":917,"column_start":8,"column_end":33},"name":"read_audio_packet_generic","qualname":"::audio::read_audio_packet_generic","value":"fn <S> (ident: &IdentHeader, setup: &SetupHeader, packet: &[u8], pwr: &mut PreviousWindowRight) -> Result<S, AudioReadError>","parent":null,"children":[],"decl_id":null,"docs":"Main audio packet decoding function\n\nPass your info to this function to get your raw packet data decoded.\n\nPanics if the passed PreviousWindowRight struct doesn't match the info\nfrom the ident header.\n","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":115694,"byte_end":115720,"line_start":908,"line_end":908,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":124628,"byte_end":124645,"line_start":1169,"line_end":1169,"column_start":8,"column_end":25},"name":"read_audio_packet","qualname":"::audio::read_audio_packet","value":"fn (ident: &IdentHeader, setup: &SetupHeader, packet: &[u8], pwr: &mut PreviousWindowRight) -> Result<Vec<Vec<i16>>, AudioReadError>","parent":null,"children":[],"decl_id":null,"docs":"Main audio packet decoding function\n\nPass your info to this function to get your raw packet data decoded.\n\nPanics if the passed PreviousWindowRight struct doesn't match the info\nfrom the ident header.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":382},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"inside_ogg","qualname":"::inside_ogg","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":411}],"decl_id":null,"docs":"Higher-level utilities for Ogg streams and files\n\nThis module provides higher level access to the library functionality,\nand useful helper methods for the Ogg `PacketReader` struct.\n","sig":null,"attributes":[{"value":"cfg(feature = \"ogg\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":1990,"byte_end":2013,"line_start":93,"line_end":93,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","byte_start":146476,"byte_end":146488,"line_start":30,"line_end":30,"column_start":8,"column_end":20},"name":"read_headers","qualname":"::inside_ogg::read_headers","value":"fn <'a, T> (rdr: &mut PacketReader<T>) -> Result<(HeaderSet, u32), VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the three vorbis headers from an ogg stream as well as stream serial information\n\n Please note that this function doesn't work well with async\n I/O. In order to support this use case, enable the `async_ogg` feature,\n and use the `HeadersReader` struct instead.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","byte_start":147722,"byte_end":147737,"line_start":66,"line_end":66,"column_start":12,"column_end":27},"name":"OggStreamReader","qualname":"::inside_ogg::OggStreamReader","value":"OggStreamReader { ident_hdr, comment_hdr, setup_hdr }","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410}],"decl_id":null,"docs":"Reading ogg/vorbis files or streams\n\nThis is a small helper struct to help reading ogg/vorbis files\nor streams in that format.\n\nIt only supports the main use case of pure audio ogg files streams.\nReading a file where vorbis is only one of multiple streams, like\nin the case of ogv, is not supported.\n\nIf you need support for this, you need to use the lower level methods\ninstead.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","byte_start":147834,"byte_end":147843,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"name":"ident_hdr","qualname":"::inside_ogg::OggStreamReader::ident_hdr","value":"header::IdentHeader","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","byte_start":147863,"byte_end":147874,"line_start":73,"line_end":73,"column_start":6,"column_end":17},"name":"comment_hdr","qualname":"::inside_ogg::OggStreamReader::comment_hdr","value":"header::CommentHeader","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","byte_start":147896,"byte_end":147905,"line_start":74,"line_end":74,"column_start":6,"column_end":15},"name":"setup_hdr","qualname":"::inside_ogg::OggStreamReader::setup_hdr","value":"header::SetupHeader","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","byte_start":148279,"byte_end":148282,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"name":"new","qualname":"<OggStreamReader<T>>::new","value":"fn (rdr: T) -> Result<Self, VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new OggStreamReader from a given implementation of `Read + Seek`.\n\n Please note that this function doesn't work well with async\n I/O. In order to support this use case, enable the `async_ogg` feature,\n and use the `HeadersReader` struct instead.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","byte_start":148767,"byte_end":148782,"line_start":97,"line_end":97,"column_start":9,"column_end":24},"name":"from_ogg_reader","qualname":"<OggStreamReader<T>>::from_ogg_reader","value":"fn (mut rdr: PacketReader<T>) -> Result<Self, VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new OggStreamReader from a given Ogg PacketReader.\n\n The `new` function is a nice wrapper around this function that\n also creates the ogg reader.\n\n Please note that this function doesn't work well with async\n I/O. In order to support this use case, enable the `async_ogg` feature,\n and use the `HeadersReader` struct instead.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","byte_start":149112,"byte_end":149122,"line_start":111,"line_end":111,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<OggStreamReader<T>>::into_inner","value":"fn (self) -> PacketReader<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","byte_start":151007,"byte_end":151022,"line_start":167,"line_end":167,"column_start":9,"column_end":24},"name":"read_dec_packet","qualname":"<OggStreamReader<T>>::read_dec_packet","value":"fn (&mut self) -> Result<Option<Vec<Vec<i16>>>, VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Reads and decompresses an audio packet from the stream.\n\n On read errors, it returns Err(e) with the error.\n\n On success, it either returns None, when the end of the\n stream has been reached, or Some(packet_data),\n with the data of the decompressed packet.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","byte_start":151452,"byte_end":151475,"line_start":179,"line_end":179,"column_start":9,"column_end":32},"name":"read_dec_packet_generic","qualname":"<OggStreamReader<T>>::read_dec_packet_generic","value":"fn <S> (&mut self) -> Result<Option<S>, VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Reads and decompresses an audio packet from the stream (generic).\n\n On read errors, it returns Err(e) with the error.\n\n On success, it either returns None, when the end of the\n stream has been reached, or Some(packet_data),\n with the data of the decompressed packet.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","byte_start":152801,"byte_end":152820,"line_start":215,"line_end":215,"column_start":9,"column_end":28},"name":"read_dec_packet_itl","qualname":"<OggStreamReader<T>>::read_dec_packet_itl","value":"fn (&mut self) -> Result<Option<Vec<i16>>, VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Reads and decompresses an audio packet from the stream (interleaved).\n\n On read errors, it returns Err(e) with the error.\n\n On success, it either returns None, when the end of the\n stream has been reached, or Some(packet_data),\n with the data of the decompressed packet.\n\n Unlike `read_dec_packet`, this function returns the\n interleaved samples.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","byte_start":153182,"byte_end":153195,"line_start":227,"line_end":227,"column_start":9,"column_end":22},"name":"stream_serial","qualname":"<OggStreamReader<T>>::stream_serial","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream serial of the current stream\n\n The stream serial can change in chained ogg files.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","byte_start":153442,"byte_end":153456,"line_start":235,"line_end":235,"column_start":9,"column_end":23},"name":"get_last_absgp","qualname":"<OggStreamReader<T>>::get_last_absgp","value":"fn (&self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute granule position of the last read page.\n\n In the case of ogg/vorbis, the absolute granule position is given\n as number of PCM samples, on a per channel basis.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","byte_start":153820,"byte_end":153833,"line_start":246,"line_end":246,"column_start":9,"column_end":22},"name":"seek_absgp_pg","qualname":"<OggStreamReader<T>>::seek_absgp_pg","value":"fn (&mut self, absgp: u64) -> Result<(), VorbisError>","parent":null,"children":[],"decl_id":null,"docs":" Seeks to the specified absolute granule position, with a page granularity.\n\n The granularity is per-page, and the obtained position is\n then <= the seeked absgp.\n\n In the case of ogg/vorbis, the absolute granule position is given\n as number of PCM samples, on a per channel basis.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\samples.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"samples","qualname":"::samples","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\samples.rs","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":429},{"krate":0,"index":435},{"krate":0,"index":439},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448}],"decl_id":null,"docs":"Traits for sample formats\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\samples.rs","byte_start":158565,"byte_end":158572,"line_start":14,"line_end":14,"column_start":11,"column_end":18},"name":"Samples","qualname":"::samples::Samples","value":"Samples","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428}],"decl_id":null,"docs":" Trait for a packet of multiple samples\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\samples.rs","byte_start":158579,"byte_end":158590,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"name":"num_samples","qualname":"::samples::Samples::num_samples","value":"fn (&self) -> usize","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\samples.rs","byte_start":158612,"byte_end":158620,"line_start":16,"line_end":16,"column_start":5,"column_end":13},"name":"truncate","qualname":"::samples::Samples::truncate","value":"fn (&mut self, limit: usize) -> ()","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\samples.rs","byte_start":158651,"byte_end":158662,"line_start":17,"line_end":17,"column_start":5,"column_end":16},"name":"from_floats","qualname":"::samples::Samples::from_floats","value":"fn (floats: Vec<Vec<f32>>) -> Self","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\samples.rs","byte_start":159163,"byte_end":159181,"line_start":43,"line_end":43,"column_start":12,"column_end":30},"name":"InterleavedSamples","qualname":"::samples::InterleavedSamples","value":"InterleavedSamples { samples, channel_count }","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"decl_id":null,"docs":" A packet of multi-channel interleaved samples\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\samples.rs","byte_start":159200,"byte_end":159207,"line_start":44,"line_end":44,"column_start":6,"column_end":13},"name":"samples","qualname":"::samples::InterleavedSamples::samples","value":"std::vec::Vec<S>","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\samples.rs","byte_start":159222,"byte_end":159235,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"name":"channel_count","qualname":"::samples::InterleavedSamples::channel_count","value":"usize","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\samples.rs","byte_start":160239,"byte_end":160245,"line_start":82,"line_end":82,"column_start":11,"column_end":17},"name":"Sample","qualname":"::samples::Sample","value":"Sample","parent":null,"children":[{"krate":0,"index":445}],"decl_id":null,"docs":" Trait representing a single sample\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\samples.rs","byte_start":160252,"byte_end":160262,"line_start":83,"line_end":83,"column_start":5,"column_end":15},"name":"from_float","qualname":"::samples::Sample::from_float","value":"fn (fl: f32) -> Self","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":2205,"byte_end":2213,"line_start":104,"line_end":104,"column_start":2,"column_end":10},"name":"BadAudio","qualname":"::VorbisError::BadAudio","value":"VorbisError::BadAudio(audio::AudioReadError)","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":2239,"byte_end":2248,"line_start":105,"line_end":105,"column_start":2,"column_end":11},"name":"BadHeader","qualname":"::VorbisError::BadHeader","value":"VorbisError::BadHeader(header::HeaderReadError)","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":2301,"byte_end":2309,"line_start":107,"line_end":107,"column_start":2,"column_end":10},"name":"OggError","qualname":"::VorbisError::OggError","value":"VorbisError::OggError(OggReadError)","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ogg\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":2276,"byte_end":2299,"line_start":106,"line_end":106,"column_start":2,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":2190,"byte_end":2201,"line_start":103,"line_end":103,"column_start":10,"column_end":21},"name":"VorbisError","qualname":"::VorbisError","value":"VorbisError::{BadAudio, BadHeader, OggError}","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":576}],"decl_id":null,"docs":" Errors that can occur during decoding\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":8502,"byte_end":8517,"line_start":68,"line_end":68,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":8622,"byte_end":8637,"line_start":74,"line_end":74,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":8749,"byte_end":8764,"line_start":80,"line_end":80,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":9012,"byte_end":9027,"line_start":89,"line_end":89,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":9141,"byte_end":9156,"line_start":95,"line_end":95,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":9883,"byte_end":9898,"line_start":114,"line_end":114,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":19912,"byte_end":19923,"line_start":434,"line_end":434,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":23339,"byte_end":23352,"line_start":547,"line_end":547,"column_start":11,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header_cached.rs","byte_start":45287,"byte_end":45309,"line_start":31,"line_end":31,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\huffman_tree.rs","byte_start":50766,"byte_end":50774,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\huffman_tree.rs","byte_start":54247,"byte_end":54264,"line_start":176,"line_end":176,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":197},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\huffman_tree.rs","byte_start":60257,"byte_end":60274,"line_start":346,"line_end":346,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":87671,"byte_end":87685,"line_start":48,"line_end":48,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":87782,"byte_end":87796,"line_start":54,"line_end":54,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":88231,"byte_end":88245,"line_start":69,"line_end":69,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":88505,"byte_end":88517,"line_start":81,"line_end":81,"column_start":11,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":88703,"byte_end":88719,"line_start":95,"line_end":95,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":88909,"byte_end":88925,"line_start":103,"line_end":103,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":114032,"byte_end":114051,"line_start":859,"line_end":859,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\bitpacking.rs","byte_start":138166,"byte_end":138179,"line_start":361,"line_end":361,"column_start":11,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":377},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","byte_start":147970,"byte_end":147985,"line_start":79,"line_end":79,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\samples.rs","byte_start":158726,"byte_end":158729,"line_start":20,"line_end":20,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\samples.rs","byte_start":159275,"byte_end":159293,"line_start":48,"line_end":48,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":2355,"byte_end":2366,"line_start":110,"line_end":110,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":2742,"byte_end":2753,"line_start":125,"line_end":125,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":2936,"byte_end":2947,"line_start":131,"line_end":131,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":3078,"byte_end":3089,"line_start":137,"line_end":137,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":3236,"byte_end":3247,"line_start":144,"line_end":144,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":1874,"byte_end":1880,"line_start":85,"line_end":85,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":10}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":1967,"byte_end":1972,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":253}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":2022,"byte_end":2032,"line_start":94,"line_end":94,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":382}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":2042,"byte_end":2049,"line_start":95,"line_end":95,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":424}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":8502,"byte_end":8517,"line_start":68,"line_end":68,"column_start":19,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":467},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":8622,"byte_end":8637,"line_start":74,"line_end":74,"column_start":29,"column_end":44},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":467},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":8749,"byte_end":8764,"line_start":80,"line_end":80,"column_start":22,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":467},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":9012,"byte_end":9027,"line_start":89,"line_end":89,"column_start":30,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":467},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":9141,"byte_end":9156,"line_start":95,"line_end":95,"column_start":23,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":467},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":9883,"byte_end":9898,"line_start":114,"line_end":114,"column_start":23,"column_end":38},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":467},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":19912,"byte_end":19923,"line_start":434,"line_end":434,"column_start":6,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header.rs","byte_start":23339,"byte_end":23352,"line_start":547,"line_end":547,"column_start":11,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\header_cached.rs","byte_start":45287,"byte_end":45309,"line_start":31,"line_end":31,"column_start":6,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\huffman_tree.rs","byte_start":50766,"byte_end":50774,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\huffman_tree.rs","byte_start":54247,"byte_end":54264,"line_start":176,"line_end":176,"column_start":6,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\huffman_tree.rs","byte_start":60257,"byte_end":60274,"line_start":346,"line_end":346,"column_start":10,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":87671,"byte_end":87685,"line_start":48,"line_end":48,"column_start":19,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":530},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":87782,"byte_end":87796,"line_start":54,"line_end":54,"column_start":23,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":530},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":88231,"byte_end":88245,"line_start":69,"line_end":69,"column_start":23,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":530},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":88505,"byte_end":88517,"line_start":81,"line_end":81,"column_start":11,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":88703,"byte_end":88719,"line_start":95,"line_end":95,"column_start":19,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":296},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":88909,"byte_end":88925,"line_start":103,"line_end":103,"column_start":33,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":296},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\audio.rs","byte_start":114032,"byte_end":114051,"line_start":859,"line_end":859,"column_start":6,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\bitpacking.rs","byte_start":138166,"byte_end":138179,"line_start":361,"line_end":361,"column_start":11,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\inside_ogg.rs","byte_start":147970,"byte_end":147985,"line_start":79,"line_end":79,"column_start":22,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\samples.rs","byte_start":158726,"byte_end":158729,"line_start":20,"line_end":20,"column_start":29,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":3846},"to":{"krate":0,"index":425}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\samples.rs","byte_start":159275,"byte_end":159293,"line_start":48,"line_end":48,"column_start":29,"column_end":47},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":435},"to":{"krate":0,"index":425}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":2355,"byte_end":2366,"line_start":110,"line_end":110,"column_start":28,"column_end":39},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":569},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":2742,"byte_end":2753,"line_start":125,"line_end":125,"column_start":28,"column_end":39},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":2936,"byte_end":2947,"line_start":131,"line_end":131,"column_start":38,"column_end":49},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":3078,"byte_end":3089,"line_start":137,"line_end":137,"column_start":40,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lewton-0.9.4\\src\\lib.rs","byte_start":3236,"byte_end":3247,"line_start":144,"line_end":144,"column_start":29,"column_end":40},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":2258}}]}