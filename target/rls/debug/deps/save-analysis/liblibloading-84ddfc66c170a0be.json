{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","libloading","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=84ddfc66c170a0be","-C","extra-filename=-84ddfc66c170a0be","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--extern","winapi=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libwinapi-978bfab176c482d4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\liblibloading-84ddfc66c170a0be.rmeta"},"prelude":{"crate_id":{"name":"libloading","disambiguator":[17117126105838105686,12375204538384088343]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","num":14,"id":{"name":"winapi","disambiguator":[5636639422687459420,15773350436437932257]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":0,"byte_end":10704,"line_start":1,"line_end":310,"column_start":1,"column_end":55}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":0,"byte_end":10704,"line_start":1,"line_end":310,"column_start":1,"column_end":55},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":24},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":74},{"krate":0,"index":80},{"krate":0,"index":85},{"krate":0,"index":89},{"krate":0,"index":94},{"krate":0,"index":98},{"krate":0,"index":101}],"decl_id":null,"docs":" A memory-safer wrapper around system dynamic library loading primitives.\n\n Using this library allows loading [dynamic libraries](struct.Library.html) (also known as\n shared libraries) as well as use functions and static variables these libraries contain.\n\n While the library does expose a cross-platform interface to load a library and find stuff\n inside it, little is done to paper over the platform differences, especially where library\n loading is involved. The documentation for each function will attempt to document such\n differences on the best-effort basis.\n\n Less safe, platform specific bindings are also available. See the\n [`os::platform`](os/index.html) module for details.\n\n # Usage\n\n Add a dependency on this library to your `Cargo.toml`:\n\n ```toml\n [dependencies]\n libloading = \"0.5\"\n ```\n\n Then inside your project\n\n ```no_run\n extern crate libloading as lib;\n\n fn call_dynamic() -> lib::Result<u32> {\n     let lib = lib::Library::new(\"/path/to/liblibrary.so\")?;\n     unsafe {\n         let func: lib::Symbol<unsafe extern fn() -> u32> = lib.get(b\"my_func\")?;\n         Ok(func())\n     }\n }\n ```\n\n The compiler will ensure that the loaded `function` will not outlive the `Library` it comes\n from, preventing a common cause of undefined behaviour and memory safety problems.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::os","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\mod.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":104},{"krate":0,"index":201}],"decl_id":null,"docs":" Unsafe, platform specific bindings to dynamic library loading facilities.\n\n These modules expose more extensive, powerful, less principled bindings to the dynamic\n library loading facilities. Use of these bindings come at the cost of less (in most cases,\n none at all) safety guarantees, which are provided by the top-level bindings.\n\n # Examples\n\n Using these modules will likely involve conditional compilation:\n\n ```ignore\n # extern crate libloading;\n #[cfg(unix)]\n use libloading::os::unix::*;\n #[cfg(windows)]\n use libloading::os::windows::*;\n ```\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"windows","qualname":"::os::windows","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":197}],"decl_id":null,"docs":" Windows implementation of dynamic library loading.\n\n This module should be expanded with more Windows-specific functionality in the future.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8476190,"byte_end":8476197,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Library","qualname":"::os::windows::Library","value":"","parent":null,"children":[],"decl_id":null,"docs":" A platform-specific equivalent of the cross-platform `Library`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8477308,"byte_end":8477311,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Library>::new","value":"fn <P> (filename: P) -> ::Result<Library>","parent":null,"children":[],"decl_id":null,"docs":" Find and load a shared library (module).\n\n Corresponds to `LoadLibraryW(filename)`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8477287,"byte_end":8477296,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8478840,"byte_end":8478843,"line_start":73,"line_end":73,"column_start":19,"column_end":22},"name":"get","qualname":"<Library>::get","value":"fn <T> (&self, symbol: &[u8]) -> ::Result<Symbol<T>>","parent":null,"children":[],"decl_id":null,"docs":" Get a pointer to function or static variable by symbol name.\n\n The `symbol` may not contain any null bytes, with an exception of last byte. A null\n terminated `symbol` may avoid a string allocation in some cases.\n\n Symbol is interpreted as-is; no mangling is done. This means that symbols like `x::y` are\n most likely invalid.\n\n ## Unsafety\n\n Pointer to a value of arbitrary type is returned. Using a value with wrong type is\n undefined.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8479715,"byte_end":8479726,"line_start":97,"line_end":97,"column_start":19,"column_end":30},"name":"get_ordinal","qualname":"<Library>::get_ordinal","value":"fn <T> (&self, ordinal: WORD) -> ::Result<Symbol<T>>","parent":null,"children":[],"decl_id":null,"docs":" Get a pointer to function or static variable by ordinal number.\n\n ## Unsafety\n\n Pointer to a value of arbitrary type is returned. Using a value with wrong type is\n undefined.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8480410,"byte_end":8480418,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Library>::into_raw","value":"fn (self) -> HMODULE","parent":null,"children":[],"decl_id":null,"docs":" Convert the `Library` to a raw handle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8480764,"byte_end":8480772,"line_start":128,"line_end":128,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Library>::from_raw","value":"fn (handle: HMODULE) -> Library","parent":null,"children":[],"decl_id":null,"docs":" Convert a raw handle to a `Library`.\n\n ## Unsafety\n\n The handle shall be a result of a successful call of `LoadLibraryW` or a\n handle previously returned by the `Library::into_raw` call.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8481911,"byte_end":8481917,"line_start":165,"line_end":165,"column_start":12,"column_end":18},"name":"Symbol","qualname":"::os::windows::Symbol","value":"Symbol {  }","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" Symbol from a library.\n\n A major difference compared to the cross-platform `Symbol` is that this does not ensure the\n `Symbol` does not outlive `Library` it comes from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8482059,"byte_end":8482067,"line_start":172,"line_end":172,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Symbol<T>>::into_raw","value":"fn (self) -> FARPROC","parent":null,"children":[],"decl_id":null,"docs":" Convert the loaded Symbol into a handle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8482253,"byte_end":8482264,"line_start":181,"line_end":181,"column_start":12,"column_end":23},"name":"lift_option","qualname":"<Symbol<Option<T>>>::lift_option","value":"fn (self) -> Option<Symbol<T>>","parent":null,"children":[],"decl_id":null,"docs":" Lift Option out of the symbol.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\mod.rs","byte_start":11942,"byte_end":11946,"line_start":45,"line_end":45,"column_start":15,"column_end":19},"name":"unix","qualname":"::os::unix","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\mod.rs","parent":null,"children":[],"decl_id":null,"docs":" UNIX implementation of dynamic library loading.\n\n This module should be expanded with more UNIX-specific functionality in the future.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"changelog","qualname":"::changelog","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23}],"decl_id":null,"docs":" Project changelog\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","byte_start":12117,"byte_end":12123,"line_start":6,"line_end":6,"column_start":9,"column_end":15},"name":"r0_5_2","qualname":"::changelog::r0_5_2","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","parent":null,"children":[],"decl_id":null,"docs":" Release 0.5.2 (2019-07-07)\n\n * Added API to convert OS-specific `Library` and `Symbol` conversion to underlying resources.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","byte_start":12201,"byte_end":12207,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"r0_5_1","qualname":"::changelog::r0_5_1","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","parent":null,"children":[],"decl_id":null,"docs":" Release 0.5.1 (2019-06-01)\n\n * Build on Haiku targets.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","byte_start":12631,"byte_end":12637,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"name":"r0_5_0","qualname":"::changelog::r0_5_0","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","parent":null,"children":[],"decl_id":null,"docs":" Release 0.5.0 (2018-01-11)\n\n * Update to `winapi = ^0.3`;\n\n ## Breaking changes\n\n * libloading now requires a C compiler to build on UNIX;\n   * This is a temporary measure until the [`linkage`] attribute is stabilised;\n   * Necessary to resolve [#32].\n\n [`linkage`]: https://github.com/rust-lang/rust/issues/29603\n [#32]: https://github.com/nagisa/rust_libloading/issues/32\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","byte_start":12794,"byte_end":12800,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"r0_4_3","qualname":"::changelog::r0_4_3","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","parent":null,"children":[],"decl_id":null,"docs":" Release 0.4.3 (2017-12-07)\n\n * Bump lazy-static dependency to `^1.0`;\n * `cargo test --release` now works when testing libloading.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","byte_start":13060,"byte_end":13066,"line_start":39,"line_end":39,"column_start":9,"column_end":15},"name":"r0_4_2","qualname":"::changelog::r0_4_2","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","parent":null,"children":[],"decl_id":null,"docs":" Release 0.4.2 (2017-09-24)\n\n * Improved error and race-condition handling on Windows;\n * Improved documentation about thread-safety of Library;\n * Added `Symbol::<Option<T>::lift_option() -> Option<Symbol<T>>` convenience method.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","byte_start":13137,"byte_end":13143,"line_start":45,"line_end":45,"column_start":9,"column_end":15},"name":"r0_4_1","qualname":"::changelog::r0_4_1","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","parent":null,"children":[],"decl_id":null,"docs":" Release 0.4.1 (2017-08-29)\n\n * Solaris support\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","byte_start":13481,"byte_end":13487,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"name":"r0_4_0","qualname":"::changelog::r0_4_0","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","parent":null,"children":[],"decl_id":null,"docs":" Release 0.4.0 (2017-05-01)\n\n * Remove build-time dependency on target_build_utils (and by extension serde/phf);\n * Require at least version 1.14.0 of rustc to build;\n   * Actually, it is cargo which has to be more recent here. The one shipped with rustc 1.14.0\n     is what’s being required from now on.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","byte_start":13563,"byte_end":13569,"line_start":58,"line_end":58,"column_start":9,"column_end":15},"name":"r0_3_4","qualname":"::changelog::r0_3_4","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","parent":null,"children":[],"decl_id":null,"docs":" Release 0.3.4 (2017-03-25)\n\n * Remove rogue println!\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","byte_start":13747,"byte_end":13753,"line_start":64,"line_end":64,"column_start":9,"column_end":15},"name":"r0_3_3","qualname":"::changelog::r0_3_3","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","parent":null,"children":[],"decl_id":null,"docs":" Release 0.3.3 (2017-03-25)\n\n * Panics when `Library::get` is called for incompatibly sized type such as named function\n   types (which are zero-sized).\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","byte_start":13930,"byte_end":13936,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"name":"r0_3_2","qualname":"::changelog::r0_3_2","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","parent":null,"children":[],"decl_id":null,"docs":" Release 0.3.2 (2017-02-10)\n\n * Minimum version required is now rustc 1.12.0;\n * Updated dependency versions (most notably target_build_utils to 0.3.0)\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","byte_start":14237,"byte_end":14243,"line_start":77,"line_end":77,"column_start":9,"column_end":15},"name":"r0_3_1","qualname":"::changelog::r0_3_1","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","parent":null,"children":[],"decl_id":null,"docs":" Release 0.3.1 (2016-10-01)\n\n * `Symbol<T>` and `os::*::Symbol<T>` now implement `Send` where `T: Send`;\n * `Symbol<T>` and `os::*::Symbol<T>` now implement `Sync` where `T: Sync`;\n * `Library` and `os::*::Library` now implement `Sync` (they were `Send` in 0.3.0 already).\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","byte_start":15656,"byte_end":15662,"line_start":103,"line_end":103,"column_start":9,"column_end":15},"name":"r0_3_0","qualname":"::changelog::r0_3_0","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\changelog.rs","parent":null,"children":[],"decl_id":null,"docs":" Release 0.3.0 (2016-07-27)\n\n * Greatly improved documentation, especially around platform-specific behaviours;\n * Improved test suite by building our own library to test against;\n * All `Library`-ies now implement `Send`.\n * Added `impl From<os::platform::Library> for Library` and `impl From<Library> for\n os::platform::Library` allowing wrapping and extracting the platform-specific library handle;\n * Added methods to wrap (`Symbol::from_raw`) and unwrap (`Symbol::into_raw`) the safe `Symbol`\n wrapper into unsafe `os::platform::Symbol`.\n\n The last two additions focus on not restricting potential usecases of this library, allowing\n users of the library to circumvent safety checks if need be.\n\n ## Breaking Changes\n\n `Library::new` defaults to `RTLD_NOW` instead of `RTLD_LAZY` on UNIX for more consistent\n cross-platform behaviour. If a library loaded with `Library::new` had any linking errors, but\n unresolved references weren’t forced to be resolved, the library would’ve “just worked”,\n whereas now the call to `Library::new` will return an error signifying presence of such error.\n\n ## os::platform\n * Added `os::unix::Library::open` which allows specifying arbitrary flags (e.g. `RTLD_LAZY`);\n * Added `os::windows::Library::get_ordinal` which allows finding a function or variable by its\n ordinal number;\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\util.rs","byte_start":15800,"byte_end":15809,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"NullError","qualname":"::util::NullError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":1609,"byte_end":1615,"line_start":53,"line_end":53,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"::std::io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":1685,"byte_end":1692,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"Library","qualname":"::Library","value":"","parent":null,"children":[],"decl_id":null,"docs":" A loaded dynamic library.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":4478,"byte_end":4481,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"new","qualname":"<Library>::new","value":"fn <P> (filename: P) -> Result<Library>","parent":null,"children":[],"decl_id":null,"docs":" Find and load a dynamic library.\n\n The `filename` argument may be any of:\n\n * A library filename;\n * Absolute path to the library;\n * Relative (to the current working directory) path to the library.\n\n ## Thread-safety\n\n The implementation strives to be as MT-safe as sanely possible, however due to certain\n error-handling related resources not always being safe, this library is not MT-safe either.\n\n * On Windows Vista and earlier error handling falls back to [`SetErrorMode`], which is not\n   MT-safe. MT-scenarios involving this function may cause a traditional data race;\n * On some UNIX targets `dlerror` might not be MT-safe, resulting in garbage error messages\n   in certain MT-scenarios.\n\n [`SetErrorMode`]: https://msdn.microsoft.com/en-us/library/windows/desktop/ms680621(v=vs.85).aspx\n\n Calling this function from multiple threads is not safe if used in conjunction with\n path-less filename and library search path is modified (`SetDllDirectory` function on\n Windows, `{DY,}LD_LIBRARY_PATH` environment variable on UNIX).\n\n ## Platform-specific behaviour\n\n When a plain library filename is supplied, locations where library is searched for is\n platform specific and cannot be adjusted in a portable manner.\n\n ### Windows\n\n If the `filename` specifies a library filename without path and with extension omitted,\n `.dll` extension is implicitly added. This behaviour may be suppressed by appending a\n trailing `.` to the `filename`.\n\n If the library contains thread local variables (MSVC’s `_declspec(thread)`, Rust’s\n `#[thread_local]` attributes), loading the library will fail on versions prior to Windows\n Vista.\n\n ## Tips\n\n Distributing your dynamic libraries under a filename common to all platforms (e.g.\n `awesome.module`) allows to avoid code which has to account for platform’s conventional\n library filenames.\n\n Strive to specify absolute or relative path to your library, unless system-wide libraries\n are being loaded.  Platform-dependent library search locations combined with various quirks\n related to path-less filenames may cause flaky code.\n\n ## Examples\n\n ```no_run\n # use ::libloading::Library;\n // Any of the following are valid.\n let _ = Library::new(\"/path/to/awesome.module\").unwrap();\n let _ = Library::new(\"../awesome.module\").unwrap();\n let _ = Library::new(\"libsomelib.so.1\").unwrap();\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":6473,"byte_end":6476,"line_start":171,"line_end":171,"column_start":19,"column_end":22},"name":"get","qualname":"<Library>::get","value":"fn <'lib, T> (&'lib self, symbol: &[u8]) -> Result<Symbol<'lib, T>>","parent":null,"children":[],"decl_id":null,"docs":" Get a pointer to function or static variable by symbol name.\n\n The `symbol` may not contain any null bytes, with an exception of last byte. A null\n terminated `symbol` may avoid a string allocation in some cases.\n\n Symbol is interpreted as-is; no mangling is done. This means that symbols like `x::y` are\n most likely invalid.\n\n ## Unsafety\n\n Pointer to a value of arbitrary type is returned. Using a value with wrong type is\n undefined.\n\n ## Platform-specific behaviour\n\n On Linux and Windows, a TLS variable acts just like any regular static variable. OS X uses\n some sort of lazy initialization scheme, which makes loading TLS variables this way\n impossible. Using a TLS variable loaded this way on OS X is undefined behaviour.\n\n ## Examples\n\n Given a loaded library:\n\n ```no_run\n # use ::libloading::Library;\n let lib = Library::new(\"/path/to/awesome.module\").unwrap();\n ```\n\n Loading and using a function looks like this:\n\n ```no_run\n # use ::libloading::{Library, Symbol};\n # let lib = Library::new(\"/path/to/awesome.module\").unwrap();\n unsafe {\n     let awesome_function: Symbol<unsafe extern fn(f64) -> f64> =\n         lib.get(b\"awesome_function\\0\").unwrap();\n     awesome_function(0.42);\n }\n ```\n\n A static variable may also be loaded and inspected:\n\n ```no_run\n # use ::libloading::{Library, Symbol};\n # let lib = Library::new(\"/path/to/awesome.module\").unwrap();\n unsafe {\n     let awesome_variable: Symbol<*mut f64> = lib.get(b\"awesome_variable\\0\").unwrap();\n     **awesome_variable = 42.0;\n };\n ```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":7570,"byte_end":7576,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"Symbol","qualname":"::Symbol","value":"Symbol {  }","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"decl_id":null,"docs":" Symbol from a library.\n\n This type is a safeguard against using dynamically loaded symbols after a `Library` is\n unloaded. Primary method to create an instance of a `Symbol` is via `Library::get`.\n\n Due to implementation of the `Deref` trait, an instance of `Symbol` may be used as if it was a\n function or variable directly, without taking care to “extract” function or variable manually\n most of the time.\n\n See [`Library::get`] for details.\n\n [`Library::get`]: ./struct.Library.html#method.get\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":8335,"byte_end":8343,"line_start":232,"line_end":232,"column_start":19,"column_end":27},"name":"into_raw","qualname":"<Symbol>::into_raw","value":"fn (self) -> imp::Symbol<T>","parent":null,"children":[],"decl_id":null,"docs":" Extract the wrapped `os::platform::Symbol`.\n\n ## Unsafety\n Using this function relinquishes all the lifetime guarantees. It is up to programmer to\n ensure the resulting `Symbol` is not used past the lifetime of the `Library` this symbol\n was loaded from.\n\n ## Examples\n\n ```no_run\n # use ::libloading::{Library, Symbol};\n let lib = Library::new(\"/path/to/awesome.module\").unwrap();\n unsafe {\n     let symbol: Symbol<*mut u32> = lib.get(b\"symbol\\0\").unwrap();\n     let symbol = symbol.into_raw();\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":9247,"byte_end":9255,"line_start":257,"line_end":257,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Symbol>::from_raw","value":"fn <L> (sym: imp::Symbol<T>, _: &'lib L) -> Symbol<'lib, T>","parent":null,"children":[],"decl_id":null,"docs":" Wrap the `os::platform::Symbol` into this safe wrapper.\n\n Note that, in order to create association between the symbol and the library this symbol\n came from, this function requires reference to the library provided.\n\n ## Unsafety\n\n It is invalid to provide a reference to any other value other than the library the `sym`\n was loaded from. Doing so invalidates any lifetime guarantees.\n\n ## Examples\n\n ```no_run\n # use ::libloading::{Library, Symbol};\n let lib = Library::new(\"/path/to/awesome.module\").unwrap();\n unsafe {\n     let symbol: Symbol<*mut u32> = lib.get(b\"symbol\\0\").unwrap();\n     let symbol = symbol.into_raw();\n     let symbol = Symbol::from_raw(symbol, &lib);\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":9883,"byte_end":9894,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"lift_option","qualname":"<Symbol>::lift_option","value":"fn (self) -> Option<Symbol<'lib, T>>","parent":null,"children":[],"decl_id":null,"docs":" Lift Option out of the symbol.\n\n ## Examples\n\n ```no_run\n # use ::libloading::{Library, Symbol};\n let lib = Library::new(\"/path/to/awesome.module\").unwrap();\n unsafe {\n     let symbol: Symbol<Option<*mut u32>> = lib.get(b\"symbol\\0\").unwrap();\n     let symbol: Symbol<*mut u32> = symbol.lift_option().expect(\"static is not null\");\n }\n ```\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8476230,"byte_end":8476237,"line_start":18,"line_end":18,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8477150,"byte_end":8477157,"line_start":32,"line_end":32,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8477167,"byte_end":8477174,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":146},{"krate":0,"index":151},{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8480850,"byte_end":8480857,"line_start":133,"line_end":133,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8481115,"byte_end":8481122,"line_start":145,"line_end":145,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8481987,"byte_end":8481993,"line_start":170,"line_end":170,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8482183,"byte_end":8482189,"line_start":179,"line_end":179,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8482534,"byte_end":8482540,"line_start":193,"line_end":193,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8482577,"byte_end":8482583,"line_start":194,"line_end":194,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8482609,"byte_end":8482615,"line_start":196,"line_end":196,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8482722,"byte_end":8482728,"line_start":202,"line_end":202,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8482969,"byte_end":8482975,"line_start":212,"line_end":212,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8483198,"byte_end":8483212,"line_start":222,"line_end":222,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8485465,"byte_end":8485479,"line_start":267,"line_end":267,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\util.rs","byte_start":15836,"byte_end":15845,"line_start":8,"line_end":8,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\util.rs","byte_start":15952,"byte_end":15961,"line_start":14,"line_end":14,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\util.rs","byte_start":16080,"byte_end":16085,"line_start":20,"line_end":20,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\util.rs","byte_start":16251,"byte_end":16260,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\util.rs","byte_start":16361,"byte_end":16370,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":1714,"byte_end":1721,"line_start":58,"line_end":58,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":6639,"byte_end":6646,"line_start":176,"line_end":176,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":6767,"byte_end":6774,"line_start":182,"line_end":182,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":6879,"byte_end":6886,"line_start":188,"line_end":188,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":6977,"byte_end":6984,"line_start":194,"line_end":194,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":7009,"byte_end":7016,"line_start":195,"line_end":195,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":7675,"byte_end":7681,"line_start":214,"line_end":214,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":9423,"byte_end":9429,"line_start":265,"line_end":265,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":10085,"byte_end":10091,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":10339,"byte_end":10345,"line_start":296,"line_end":296,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":10483,"byte_end":10489,"line_start":303,"line_end":303,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":10631,"byte_end":10637,"line_start":309,"line_end":309,"column_start":37,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":10686,"byte_end":10692,"line_start":310,"line_end":310,"column_start":37,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":1566,"byte_end":1568,"line_start":49,"line_end":49,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\mod.rs","byte_start":11901,"byte_end":11908,"line_start":43,"line_end":43,"column_start":18,"column_end":25},"ref_id":{"krate":0,"index":104}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":1578,"byte_end":1587,"line_start":50,"line_end":50,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":11}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8476230,"byte_end":8476237,"line_start":18,"line_end":18,"column_start":22,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":135},"to":{"krate":2,"index":1533}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8477150,"byte_end":8477157,"line_start":32,"line_end":32,"column_start":22,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":135},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8477167,"byte_end":8477174,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8480850,"byte_end":8480857,"line_start":133,"line_end":133,"column_start":15,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":135},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8481115,"byte_end":8481122,"line_start":145,"line_end":145,"column_start":21,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":135},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8481987,"byte_end":8481993,"line_start":170,"line_end":170,"column_start":9,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8482183,"byte_end":8482189,"line_start":179,"line_end":179,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8482534,"byte_end":8482540,"line_start":193,"line_end":193,"column_start":31,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":1533}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8482577,"byte_end":8482583,"line_start":194,"line_end":194,"column_start":31,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8482609,"byte_end":8482615,"line_start":196,"line_end":196,"column_start":19,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8482722,"byte_end":8482728,"line_start":202,"line_end":202,"column_start":31,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":1704}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8482969,"byte_end":8482975,"line_start":212,"line_end":212,"column_start":24,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8483198,"byte_end":8483212,"line_start":222,"line_end":222,"column_start":6,"column_end":20},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\os\\windows\\mod.rs","byte_start":8485465,"byte_end":8485479,"line_start":267,"line_end":267,"column_start":15,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\util.rs","byte_start":15836,"byte_end":15845,"line_start":8,"line_end":8,"column_start":25,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\util.rs","byte_start":15952,"byte_end":15961,"line_start":14,"line_end":14,"column_start":38,"column_end":47},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\util.rs","byte_start":16080,"byte_end":16085,"line_start":20,"line_end":20,"column_start":37,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":2469},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\util.rs","byte_start":16251,"byte_end":16260,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":202},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\util.rs","byte_start":16361,"byte_end":16370,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":1714,"byte_end":1721,"line_start":58,"line_end":58,"column_start":6,"column_end":13},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":6639,"byte_end":6646,"line_start":176,"line_end":176,"column_start":21,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":6767,"byte_end":6774,"line_start":182,"line_end":182,"column_start":29,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":6879,"byte_end":6886,"line_start":188,"line_end":188,"column_start":29,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":135},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":6977,"byte_end":6984,"line_start":194,"line_end":194,"column_start":22,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":1533}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":7009,"byte_end":7016,"line_start":195,"line_end":195,"column_start":22,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":7675,"byte_end":7681,"line_start":214,"line_end":214,"column_start":15,"column_end":21},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":69},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":9423,"byte_end":9429,"line_start":265,"line_end":265,"column_start":15,"column_end":21},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":69},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":10085,"byte_end":10091,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":10339,"byte_end":10345,"line_start":296,"line_end":296,"column_start":30,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":1704}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":10483,"byte_end":10489,"line_start":303,"line_end":303,"column_start":30,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":10631,"byte_end":10637,"line_start":309,"line_end":309,"column_start":37,"column_end":43},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":1533}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\libloading-0.5.2\\src\\lib.rs","byte_start":10686,"byte_end":10692,"line_start":310,"line_end":310,"column_start":37,"column_end":43},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":1545}}]}