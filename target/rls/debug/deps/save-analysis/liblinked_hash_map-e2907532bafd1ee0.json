{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","linked_hash_map","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=e2907532bafd1ee0","-C","extra-filename=-e2907532bafd1ee0","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\liblinked_hash_map-e2907532bafd1ee0.rmeta"},"prelude":{"crate_id":{"name":"linked_hash_map","disambiguator":[14142994031446925191,1665975324801198051]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":467,"byte_end":39444,"line_start":11,"line_end":1343,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":467,"byte_end":39444,"line_start":11,"line_end":1343,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":30},{"krate":0,"index":37},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":478},{"krate":0,"index":493},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":53},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":65},{"krate":0,"index":74},{"krate":0,"index":116},{"krate":0,"index":124},{"krate":0,"index":131},{"krate":0,"index":137},{"krate":0,"index":142},{"krate":0,"index":148},{"krate":0,"index":155},{"krate":0,"index":161},{"krate":0,"index":166},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":184},{"krate":0,"index":189},{"krate":0,"index":195},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":208},{"krate":0,"index":216},{"krate":0,"index":224},{"krate":0,"index":231},{"krate":0,"index":240},{"krate":0,"index":244},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":256},{"krate":0,"index":260},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":272},{"krate":0,"index":277},{"krate":0,"index":284},{"krate":0,"index":291},{"krate":0,"index":298},{"krate":0,"index":304},{"krate":0,"index":312},{"krate":0,"index":317},{"krate":0,"index":322},{"krate":0,"index":326},{"krate":0,"index":331},{"krate":0,"index":336},{"krate":0,"index":340},{"krate":0,"index":344},{"krate":0,"index":349},{"krate":0,"index":354},{"krate":0,"index":362},{"krate":0,"index":368},{"krate":0,"index":373},{"krate":0,"index":378},{"krate":0,"index":383},{"krate":0,"index":391},{"krate":0,"index":397},{"krate":0,"index":402},{"krate":0,"index":410},{"krate":0,"index":418},{"krate":0,"index":425},{"krate":0,"index":436},{"krate":0,"index":444},{"krate":0,"index":451},{"krate":0,"index":460},{"krate":0,"index":471}],"decl_id":null,"docs":" A `HashMap` wrapper that holds key-value pairs in insertion order.\n\n # Examples\n\n ```\n use linked_hash_map::LinkedHashMap;\n\n let mut map = LinkedHashMap::new();\n map.insert(2, 20);\n map.insert(1, 10);\n map.insert(3, 30);\n assert_eq!(map[&1], 10);\n assert_eq!(map[&2], 20);\n assert_eq!(map[&3], 30);\n\n let items: Vec<(i32, i32)> = map.iter().map(|t| (*t.0, *t.1)).collect();\n assert_eq!(items, [(2, 20), (1, 10), (3, 30)]);\n ```\n","sig":null,"attributes":[{"value":"forbid(missing_docs)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":951,"byte_end":975,"line_start":30,"line_end":30,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":1755,"byte_end":1768,"line_start":65,"line_end":65,"column_start":12,"column_end":25},"name":"LinkedHashMap","qualname":"::LinkedHashMap","value":"LinkedHashMap {  }","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"decl_id":null,"docs":" A linked hash map.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":3345,"byte_end":3348,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"new","qualname":"<LinkedHashMap<K, V>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a linked hash map.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":3480,"byte_end":3493,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<LinkedHashMap<K, V>>::with_capacity","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty linked hash map with the given initial capacity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":5377,"byte_end":5388,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<LinkedHashMap<K, V, S>>::with_hasher","value":"fn (hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty linked hash map with the given initial hash builder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":5584,"byte_end":5608,"line_start":197,"line_end":197,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<LinkedHashMap<K, V, S>>::with_capacity_and_hasher","value":"fn (capacity: usize, hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty linked hash map with the given initial capacity and hash builder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":6012,"byte_end":6019,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"name":"reserve","qualname":"<LinkedHashMap<K, V, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted into the map. The\n map may reserve more space to avoid frequent allocations.\n\n # Panics\n\n Panics if the new allocation size overflows `usize.`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":6318,"byte_end":6331,"line_start":212,"line_end":212,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<LinkedHashMap<K, V, S>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map as much as possible. It will drop down as much as possible\n while maintaining the internal rules and possibly leaving some space in accordance with the\n resize policy.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":7001,"byte_end":7006,"line_start":236,"line_end":236,"column_start":12,"column_end":17},"name":"entry","qualname":"<LinkedHashMap<K, V, S>>::entry","value":"fn (&mut self, k: K) -> Entry<K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.\n\n # Examples\n\n ```\n use linked_hash_map::LinkedHashMap;\n\n let mut letters = LinkedHashMap::new();\n\n for ch in \"a short treatise on fungi\".chars() {\n     let counter = letters.entry(ch).or_insert(0);\n     *counter += 1;\n }\n\n assert_eq!(letters[&'s'], 2);\n assert_eq!(letters[&'t'], 3);\n assert_eq!(letters[&'u'], 1);\n assert_eq!(letters.get(&'y'), None);\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":8118,"byte_end":8125,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"entries","qualname":"<LinkedHashMap<K, V, S>>::entries","value":"fn (&mut self) -> Entries<K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all entries in insertion order.\n Iterator element type is `OccupiedEntry<K, V, S>`. Allows for removal\n as well as replacing the entry.\n\n # Examples\n ```\n use linked_hash_map::LinkedHashMap;\n\n let mut map = LinkedHashMap::new();\n map.insert(\"a\", 10);\n map.insert(\"c\", 30);\n map.insert(\"b\", 20);\n\n {\n     let mut iter = map.entries();\n     let mut entry = iter.next().unwrap();\n     assert_eq!(&\"a\", entry.key());\n     *entry.get_mut() = 17;\n }\n\n assert_eq!(&17, map.get(&\"a\").unwrap());\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":8860,"byte_end":8866,"line_start":303,"line_end":303,"column_start":12,"column_end":18},"name":"insert","qualname":"<LinkedHashMap<K, V, S>>::insert","value":"fn (&mut self, k: K, v: V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map. If the key already existed, the old value is\n returned.\n\n # Examples\n\n ```\n use linked_hash_map::LinkedHashMap;\n let mut map = LinkedHashMap::new();\n\n map.insert(1, \"a\");\n map.insert(2, \"b\");\n assert_eq!(map[&1], \"a\");\n assert_eq!(map[&2], \"b\");\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":10146,"byte_end":10158,"line_start":342,"line_end":342,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<LinkedHashMap<K, V, S>>::contains_key","value":"fn <Q> (&self, k: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the map contains the given key.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":10721,"byte_end":10724,"line_start":362,"line_end":362,"column_start":12,"column_end":15},"name":"get","qualname":"<LinkedHashMap<K, V, S>>::get","value":"fn <Q> (&self, k: &Q) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value corresponding to the key in the map.\n\n # Examples\n\n ```\n use linked_hash_map::LinkedHashMap;\n let mut map = LinkedHashMap::new();\n\n map.insert(1, \"a\");\n map.insert(2, \"b\");\n map.insert(2, \"c\");\n map.insert(3, \"d\");\n\n assert_eq!(map.get(&1), Some(&\"a\"));\n assert_eq!(map.get(&2), Some(&\"c\"));\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":11269,"byte_end":11276,"line_start":380,"line_end":380,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LinkedHashMap<K, V, S>>::get_mut","value":"fn <Q> (&mut self, k: &Q) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns the mutable reference corresponding to the key in the map.\n\n # Examples\n\n ```\n use linked_hash_map::LinkedHashMap;\n let mut map = LinkedHashMap::new();\n\n map.insert(1, \"a\");\n map.insert(2, \"b\");\n\n *map.get_mut(&1).unwrap() = \"c\";\n assert_eq!(map.get(&1), Some(&\"c\"));\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":12031,"byte_end":12042,"line_start":403,"line_end":403,"column_start":12,"column_end":23},"name":"get_refresh","qualname":"<LinkedHashMap<K, V, S>>::get_refresh","value":"fn <Q> (&mut self, k: &Q) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value corresponding to the key in the map.\n\n If value is found, it is moved to the end of the list.\n This operation can be used in implemenation of LRU cache.\n\n # Examples\n\n ```\n use linked_hash_map::LinkedHashMap;\n let mut map = LinkedHashMap::new();\n\n map.insert(1, \"a\");\n map.insert(2, \"b\");\n map.insert(3, \"d\");\n\n assert_eq!(map.get_refresh(&2), Some(&mut \"b\"));\n\n assert_eq!((&2, &\"b\"), map.iter().rev().next().unwrap());\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":12947,"byte_end":12953,"line_start":432,"line_end":432,"column_start":12,"column_end":18},"name":"remove","qualname":"<LinkedHashMap<K, V, S>>::remove","value":"fn <Q> (&mut self, k: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value corresponding to the key from the map.\n\n # Examples\n\n ```\n use linked_hash_map::LinkedHashMap;\n let mut map = LinkedHashMap::new();\n\n map.insert(2, \"a\");\n\n assert_eq!(map.remove(&1), None);\n assert_eq!(map.remove(&2), Some(\"a\"));\n assert_eq!(map.remove(&2), None);\n assert_eq!(map.len(), 0);\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":13771,"byte_end":13779,"line_start":456,"line_end":456,"column_start":12,"column_end":20},"name":"capacity","qualname":"<LinkedHashMap<K, V, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of key-value pairs the map can hold without reallocating.\n\n # Examples\n\n ```\n use linked_hash_map::LinkedHashMap;\n let mut map: LinkedHashMap<i32, &str> = LinkedHashMap::new();\n let capacity = map.capacity();\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":14260,"byte_end":14269,"line_start":476,"line_end":476,"column_start":12,"column_end":21},"name":"pop_front","qualname":"<LinkedHashMap<K, V, S>>::pop_front","value":"fn (&mut self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Removes the first entry.\n\n Can be used in implementation of LRU cache.\n\n # Examples\n\n ```\n use linked_hash_map::LinkedHashMap;\n let mut map = LinkedHashMap::new();\n map.insert(1, 10);\n map.insert(2, 20);\n map.pop_front();\n assert_eq!(map.get(&1), None);\n assert_eq!(map.get(&2), Some(&20));\n ```\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":14239,"byte_end":14248,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":14949,"byte_end":14954,"line_start":502,"line_end":502,"column_start":12,"column_end":17},"name":"front","qualname":"<LinkedHashMap<K, V, S>>::front","value":"fn (&self) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Gets the first entry.\n\n # Examples\n\n ```\n use linked_hash_map::LinkedHashMap;\n let mut map = LinkedHashMap::new();\n map.insert(1, 10);\n map.insert(2, 20);\n assert_eq!(map.front(), Some((&1, &10)));\n ```\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":14928,"byte_end":14937,"line_start":501,"line_end":501,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":15597,"byte_end":15605,"line_start":526,"line_end":526,"column_start":12,"column_end":20},"name":"pop_back","qualname":"<LinkedHashMap<K, V, S>>::pop_back","value":"fn (&mut self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last entry.\n\n # Examples\n\n ```\n use linked_hash_map::LinkedHashMap;\n let mut map = LinkedHashMap::new();\n map.insert(1, 10);\n map.insert(2, 20);\n map.pop_back();\n assert_eq!(map.get(&1), Some(&10));\n assert_eq!(map.get(&2), None);\n ```\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":15576,"byte_end":15585,"line_start":525,"line_end":525,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":16283,"byte_end":16287,"line_start":552,"line_end":552,"column_start":12,"column_end":16},"name":"back","qualname":"<LinkedHashMap<K, V, S>>::back","value":"fn (&mut self) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Gets the last entry.\n\n # Examples\n\n ```\n use linked_hash_map::LinkedHashMap;\n let mut map = LinkedHashMap::new();\n map.insert(1, 10);\n map.insert(2, 20);\n assert_eq!(map.back(), Some((&2, &20)));\n ```\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":16262,"byte_end":16271,"line_start":551,"line_end":551,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":16638,"byte_end":16641,"line_start":563,"line_end":563,"column_start":12,"column_end":15},"name":"len","qualname":"<LinkedHashMap<K, V, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of key-value pairs in the map.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":16741,"byte_end":16749,"line_start":566,"line_end":566,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LinkedHashMap<K, V, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the map is currently empty.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":16846,"byte_end":16852,"line_start":569,"line_end":569,"column_start":12,"column_end":18},"name":"hasher","qualname":"<LinkedHashMap<K, V, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the map's hasher.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":16959,"byte_end":16964,"line_start":574,"line_end":574,"column_start":12,"column_end":17},"name":"clear","qualname":"<LinkedHashMap<K, V, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the map of all key-value pairs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":17900,"byte_end":17904,"line_start":604,"line_end":604,"column_start":12,"column_end":16},"name":"iter","qualname":"<LinkedHashMap<K, V, S>>::iter","value":"fn (&self) -> Iter<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a double-ended iterator visiting all key-value pairs in order of insertion.\n Iterator element type is `(&'a K, &'a V)`\n\n # Examples\n ```\n use linked_hash_map::LinkedHashMap;\n\n let mut map = LinkedHashMap::new();\n map.insert(\"a\", 10);\n map.insert(\"c\", 30);\n map.insert(\"b\", 20);\n\n let mut iter = map.iter();\n assert_eq!((&\"a\", &10), iter.next().unwrap());\n assert_eq!((&\"c\", &30), iter.next().unwrap());\n assert_eq!((&\"b\", &20), iter.next().unwrap());\n assert_eq!(None, iter.next());\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":18857,"byte_end":18865,"line_start":638,"line_end":638,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<LinkedHashMap<K, V, S>>::iter_mut","value":"fn (&mut self) -> IterMut<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a double-ended iterator visiting all key-value pairs in order of insertion.\n Iterator element type is `(&'a K, &'a mut V)`\n # Examples\n ```\n use linked_hash_map::LinkedHashMap;\n\n let mut map = LinkedHashMap::new();\n map.insert(\"a\", 10);\n map.insert(\"c\", 30);\n map.insert(\"b\", 20);\n\n {\n     let mut iter = map.iter_mut();\n     let mut entry = iter.next().unwrap();\n     assert_eq!(&\"a\", entry.0);\n     *entry.1 = 17;\n }\n\n assert_eq!(&17, map.get(&\"a\").unwrap());\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":19752,"byte_end":19756,"line_start":669,"line_end":669,"column_start":12,"column_end":16},"name":"keys","qualname":"<LinkedHashMap<K, V, S>>::keys","value":"fn (&self) -> Keys<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a double-ended iterator visiting all key in order of insertion.\n\n # Examples\n ```\n use linked_hash_map::LinkedHashMap;\n\n let mut map = LinkedHashMap::new();\n map.insert('a', 10);\n map.insert('c', 30);\n map.insert('b', 20);\n\n let mut keys = map.keys();\n assert_eq!(&'a', keys.next().unwrap());\n assert_eq!(&'c', keys.next().unwrap());\n assert_eq!(&'b', keys.next().unwrap());\n assert_eq!(None, keys.next());\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":20386,"byte_end":20392,"line_start":690,"line_end":690,"column_start":12,"column_end":18},"name":"values","qualname":"<LinkedHashMap<K, V, S>>::values","value":"fn (&self) -> Values<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a double-ended iterator visiting all values in order of insertion.\n\n # Examples\n ```\n use linked_hash_map::LinkedHashMap;\n\n let mut map = LinkedHashMap::new();\n map.insert('a', 10);\n map.insert('c', 30);\n map.insert('b', 20);\n\n let mut values = map.values();\n assert_eq!(&10, values.next().unwrap());\n assert_eq!(&30, values.next().unwrap());\n assert_eq!(&20, values.next().unwrap());\n assert_eq!(None, values.next());\n ```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":24256,"byte_end":24260,"line_start":817,"line_end":817,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"decl_id":null,"docs":" An insertion-order iterator over a `LinkedHashMap`'s entries, with immutable references to the\n values.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":24533,"byte_end":24540,"line_start":826,"line_end":826,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223}],"decl_id":null,"docs":" An insertion-order iterator over a `LinkedHashMap`'s entries, with mutable references to the\n values.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":24779,"byte_end":24787,"line_start":834,"line_end":834,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"decl_id":null,"docs":" A consuming insertion-order iterator over a `LinkedHashMap`'s entries.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25031,"byte_end":25038,"line_start":843,"line_end":843,"column_start":12,"column_end":19},"name":"Entries","qualname":"::Entries","value":"Entries {  }","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239}],"decl_id":null,"docs":" An insertion-order iterator over a `LinkedHashMap`'s entries represented as\n an `OccupiedEntry`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":30986,"byte_end":30990,"line_start":1062,"line_end":1062,"column_start":12,"column_end":16},"name":"Keys","qualname":"::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":348}],"decl_id":null,"docs":" An insertion-order iterator over a `LinkedHashMap`'s keys.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":31732,"byte_end":31738,"line_start":1086,"line_end":1086,"column_start":12,"column_end":18},"name":"Values","qualname":"::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":377}],"decl_id":null,"docs":" An insertion-order iterator over a `LinkedHashMap`'s values.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":33861,"byte_end":33869,"line_start":1152,"line_end":1152,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry<'a, K, V, S>)","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" An occupied Entry.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":33927,"byte_end":33933,"line_start":1154,"line_end":1154,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::Entry::Vacant","value":"Entry::Vacant(VacantEntry<'a, K, V, S>)","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" A vacant Entry.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":33773,"byte_end":33778,"line_start":1150,"line_end":1150,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entry","value":"Entry::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":433}],"decl_id":null,"docs":" A view into a single location in a map, which may be vacant or occupied.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":34040,"byte_end":34053,"line_start":1158,"line_end":1158,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443}],"decl_id":null,"docs":" A view into a single occupied location in a `LinkedHashMap`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":34287,"byte_end":34298,"line_start":1165,"line_end":1165,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"decl_id":null,"docs":" A view into a single empty location in a `LinkedHashMap`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":34755,"byte_end":34758,"line_start":1182,"line_end":1182,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Returns the entry key\n\n # Examples\n\n ```\n use linked_hash_map::LinkedHashMap;\n\n let mut map = LinkedHashMap::<String, u32>::new();\n\n assert_eq!(\"hello\", map.entry(\"hello\".to_string()).key());\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":35058,"byte_end":35067,"line_start":1191,"line_end":1191,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn (self, default: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":35430,"byte_end":35444,"line_start":1200,"line_end":1200,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn <F> (self, default: F) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":36045,"byte_end":36048,"line_start":1221,"line_end":1221,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the entry key\n\n # Examples\n\n ```\n use linked_hash_map::LinkedHashMap;\n\n let mut map = LinkedHashMap::new();\n\n map.insert(\"foo\".to_string(), 1);\n assert_eq!(\"foo\", map.entry(\"foo\".to_string()).key());\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":36172,"byte_end":36175,"line_start":1226,"line_end":1226,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn (&self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":36309,"byte_end":36316,"line_start":1231,"line_end":1231,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn (&mut self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":36536,"byte_end":36544,"line_start":1237,"line_end":1237,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":36699,"byte_end":36705,"line_start":1242,"line_end":1242,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn (&mut self, value: V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":37172,"byte_end":37178,"line_start":1258,"line_end":1258,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":37640,"byte_end":37643,"line_start":1275,"line_end":1275,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the entry key\n\n # Examples\n\n ```\n use linked_hash_map::LinkedHashMap;\n\n let mut map = LinkedHashMap::<String, u32>::new();\n\n assert_eq!(\"foo\", map.entry(\"foo\".to_string()).key());\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":37805,"byte_end":37811,"line_start":1281,"line_end":1281,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn (self, value: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":1933,"byte_end":1939,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":2075,"byte_end":2081,"line_start":77,"line_end":77,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":2198,"byte_end":2204,"line_start":83,"line_end":83,"column_start":20,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":2551,"byte_end":2554,"line_start":91,"line_end":91,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":2666,"byte_end":2672,"line_start":95,"line_end":95,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":2804,"byte_end":2808,"line_start":101,"line_end":101,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":3277,"byte_end":3290,"line_start":119,"line_end":119,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":3601,"byte_end":3614,"line_start":129,"line_end":129,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":5059,"byte_end":5072,"line_start":182,"line_end":182,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":20511,"byte_end":20524,"line_start":695,"line_end":695,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":20780,"byte_end":20793,"line_start":705,"line_end":705,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":21065,"byte_end":21078,"line_start":713,"line_end":713,"column_start":72,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":21339,"byte_end":21352,"line_start":721,"line_end":721,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":21485,"byte_end":21498,"line_start":725,"line_end":725,"column_start":58,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":21700,"byte_end":21713,"line_start":733,"line_end":733,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":22027,"byte_end":22040,"line_start":743,"line_end":743,"column_start":80,"column_end":93},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":22368,"byte_end":22381,"line_start":752,"line_end":752,"column_start":79,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":22645,"byte_end":22658,"line_start":759,"line_end":759,"column_start":64,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":22828,"byte_end":22841,"line_start":765,"line_end":765,"column_start":50,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":22933,"byte_end":22946,"line_start":767,"line_end":767,"column_start":79,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":23437,"byte_end":23450,"line_start":789,"line_end":789,"column_start":58,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":23601,"byte_end":23614,"line_start":795,"line_end":795,"column_start":54,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":23758,"byte_end":23771,"line_start":799,"line_end":799,"column_start":49,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":23833,"byte_end":23846,"line_start":801,"line_end":801,"column_start":49,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":23883,"byte_end":23896,"line_start":803,"line_end":803,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25271,"byte_end":25275,"line_start":850,"line_end":850,"column_start":32,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25344,"byte_end":25351,"line_start":852,"line_end":852,"column_start":32,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25416,"byte_end":25424,"line_start":854,"line_end":854,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25492,"byte_end":25499,"line_start":856,"line_end":856,"column_start":35,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25580,"byte_end":25584,"line_start":858,"line_end":858,"column_start":32,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25653,"byte_end":25660,"line_start":860,"line_end":860,"column_start":32,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25725,"byte_end":25733,"line_start":862,"line_end":862,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25801,"byte_end":25808,"line_start":864,"line_end":864,"column_start":35,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25883,"byte_end":25887,"line_start":866,"line_end":866,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25973,"byte_end":25981,"line_start":870,"line_end":870,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":26940,"byte_end":26944,"line_start":905,"line_end":905,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":27469,"byte_end":27476,"line_start":926,"line_end":926,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":28009,"byte_end":28017,"line_start":947,"line_end":947,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":28530,"byte_end":28537,"line_start":968,"line_end":968,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":29213,"byte_end":29217,"line_start":994,"line_end":994,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":29592,"byte_end":29599,"line_start":1008,"line_end":1008,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":29978,"byte_end":29986,"line_start":1022,"line_end":1022,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":30366,"byte_end":30370,"line_start":1037,"line_end":1037,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":30469,"byte_end":30476,"line_start":1041,"line_end":1041,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":30571,"byte_end":30579,"line_start":1045,"line_end":1045,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":30657,"byte_end":30665,"line_start":1049,"line_end":1049,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":31066,"byte_end":31070,"line_start":1066,"line_end":1066,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":31181,"byte_end":31185,"line_start":1070,"line_end":1070,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":31436,"byte_end":31440,"line_start":1077,"line_end":1077,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":31588,"byte_end":31592,"line_start":1081,"line_end":1081,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":31814,"byte_end":31820,"line_start":1090,"line_end":1090,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":31933,"byte_end":31939,"line_start":1094,"line_end":1094,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":32190,"byte_end":32196,"line_start":1101,"line_end":1101,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":32344,"byte_end":32350,"line_start":1105,"line_end":1105,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":32919,"byte_end":32932,"line_start":1121,"line_end":1121,"column_start":56,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":34448,"byte_end":34453,"line_start":1170,"line_end":1170,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":35695,"byte_end":35708,"line_start":1208,"line_end":1208,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":37319,"byte_end":37330,"line_start":1263,"line_end":1263,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":1933,"byte_end":1939,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":20},"to":{"krate":2,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":2075,"byte_end":2081,"line_start":77,"line_end":77,"column_start":34,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":20},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":2198,"byte_end":2204,"line_start":83,"line_end":83,"column_start":20,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":20},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":2551,"byte_end":2554,"line_start":91,"line_end":91,"column_start":17,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":2666,"byte_end":2672,"line_start":95,"line_end":95,"column_start":39,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":20},"to":{"krate":2,"index":2325}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":2804,"byte_end":2808,"line_start":101,"line_end":101,"column_start":12,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":23},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":3277,"byte_end":3290,"line_start":119,"line_end":119,"column_start":23,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":30},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":3601,"byte_end":3614,"line_start":129,"line_end":129,"column_start":15,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":30},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":5059,"byte_end":5072,"line_start":182,"line_end":182,"column_start":39,"column_end":52},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":30},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":20511,"byte_end":20524,"line_start":695,"line_end":695,"column_start":47,"column_end":60},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":1780}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":20780,"byte_end":20793,"line_start":705,"line_end":705,"column_start":50,"column_end":63},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":1784}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":21065,"byte_end":21078,"line_start":713,"line_end":713,"column_start":72,"column_end":85},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":21339,"byte_end":21352,"line_start":721,"line_end":721,"column_start":61,"column_end":74},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":21485,"byte_end":21498,"line_start":725,"line_end":725,"column_start":58,"column_end":71},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":3960}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":21700,"byte_end":21713,"line_start":733,"line_end":733,"column_start":46,"column_end":59},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":3960}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":22027,"byte_end":22040,"line_start":743,"line_end":743,"column_start":80,"column_end":93},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":3947}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":22368,"byte_end":22381,"line_start":752,"line_end":752,"column_start":79,"column_end":92},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":22645,"byte_end":22658,"line_start":759,"line_end":759,"column_start":64,"column_end":77},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":22828,"byte_end":22841,"line_start":765,"line_end":765,"column_start":50,"column_end":63},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":22933,"byte_end":22946,"line_start":767,"line_end":767,"column_start":79,"column_end":92},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2077}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":23437,"byte_end":23450,"line_start":789,"line_end":789,"column_start":58,"column_end":71},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2066}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":23601,"byte_end":23614,"line_start":795,"line_end":795,"column_start":54,"column_end":67},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":23758,"byte_end":23771,"line_start":799,"line_end":799,"column_start":49,"column_end":62},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":1533}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":23833,"byte_end":23846,"line_start":801,"line_end":801,"column_start":49,"column_end":62},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":23883,"byte_end":23896,"line_start":803,"line_end":803,"column_start":24,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25271,"byte_end":25275,"line_start":850,"line_end":850,"column_start":32,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":208},"to":{"krate":2,"index":1533}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25344,"byte_end":25351,"line_start":852,"line_end":852,"column_start":32,"column_end":39},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":1533}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25416,"byte_end":25424,"line_start":854,"line_end":854,"column_start":28,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":224},"to":{"krate":2,"index":1533}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25492,"byte_end":25499,"line_start":856,"line_end":856,"column_start":35,"column_end":42},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":1533}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25580,"byte_end":25584,"line_start":858,"line_end":858,"column_start":32,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":208},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25653,"byte_end":25660,"line_start":860,"line_end":860,"column_start":32,"column_end":39},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25725,"byte_end":25733,"line_start":862,"line_end":862,"column_start":28,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":224},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25801,"byte_end":25808,"line_start":864,"line_end":864,"column_start":35,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25883,"byte_end":25887,"line_start":866,"line_end":866,"column_start":26,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":208},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":25973,"byte_end":25981,"line_start":870,"line_end":870,"column_start":22,"column_end":30},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":224},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":26940,"byte_end":26944,"line_start":905,"line_end":905,"column_start":29,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":208},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":27469,"byte_end":27476,"line_start":926,"line_end":926,"column_start":29,"column_end":36},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":28009,"byte_end":28017,"line_start":947,"line_end":947,"column_start":25,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":224},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":28530,"byte_end":28537,"line_start":968,"line_end":968,"column_start":45,"column_end":52},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":29213,"byte_end":29217,"line_start":994,"line_end":994,"column_start":40,"column_end":44},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":208},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":29592,"byte_end":29599,"line_start":1008,"line_end":1008,"column_start":40,"column_end":47},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":29978,"byte_end":29986,"line_start":1022,"line_end":1022,"column_start":36,"column_end":44},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":224},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":30366,"byte_end":30370,"line_start":1037,"line_end":1037,"column_start":38,"column_end":42},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":208},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":30469,"byte_end":30476,"line_start":1041,"line_end":1041,"column_start":38,"column_end":45},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":30571,"byte_end":30579,"line_start":1045,"line_end":1045,"column_start":34,"column_end":42},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":224},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":30657,"byte_end":30665,"line_start":1049,"line_end":1049,"column_start":21,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":224},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":31066,"byte_end":31070,"line_start":1066,"line_end":1066,"column_start":26,"column_end":30},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":344},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":31181,"byte_end":31185,"line_start":1070,"line_end":1070,"column_start":29,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":344},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":31436,"byte_end":31440,"line_start":1077,"line_end":1077,"column_start":40,"column_end":44},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":344},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":31588,"byte_end":31592,"line_start":1081,"line_end":1081,"column_start":38,"column_end":42},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":344},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":31814,"byte_end":31820,"line_start":1090,"line_end":1090,"column_start":26,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":31933,"byte_end":31939,"line_start":1094,"line_end":1094,"column_start":29,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":32190,"byte_end":32196,"line_start":1101,"line_end":1101,"column_start":40,"column_end":46},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":32344,"byte_end":32350,"line_start":1105,"line_end":1105,"column_start":38,"column_end":44},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":32919,"byte_end":32932,"line_start":1121,"line_end":1121,"column_start":56,"column_end":69},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":3951}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":34448,"byte_end":34453,"line_start":1170,"line_end":1170,"column_start":43,"column_end":48},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":35695,"byte_end":35708,"line_start":1208,"line_end":1208,"column_start":43,"column_end":56},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\linked-hash-map-0.5.2\\src\\lib.rs","byte_start":37319,"byte_end":37330,"line_start":1263,"line_end":1263,"column_start":52,"column_end":63},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":444},"to":{"krate":4294967295,"index":4294967295}}]}