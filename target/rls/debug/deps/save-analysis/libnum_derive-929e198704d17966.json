{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","num_derive","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","proc-macro","--emit=dep-info,link","-C","prefer-dynamic","-C","debuginfo=2","-C","metadata=929e198704d17966","-C","extra-filename=-929e198704d17966","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--extern","proc_macro2=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libproc_macro2-9c5c3b91993e7f46.rlib","--extern","quote=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libquote-ff49ed988580cdb8.rlib","--extern","syn=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libsyn-2b0730359f4f085b.rlib","--cap-lints","allow","--cfg","has_i128","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\num_derive-929e198704d17966.dll"},"prelude":{"crate_id":{"name":"num_derive","disambiguator":[7489501388021603328,18314253685790029]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":14,"id":{"name":"proc_macro","disambiguator":[10563531739546302590,971289991546242127]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":15,"id":{"name":"proc_macro2","disambiguator":[17520048794609830858,18155690968216592926]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":16,"id":{"name":"unicode_xid","disambiguator":[14445025557903462131,9097206819433286797]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":17,"id":{"name":"quote","disambiguator":[651987496676725507,17069668937103049513]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","num":18,"id":{"name":"syn","disambiguator":[15666796787743624003,5576019380429387652]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":472,"byte_end":28650,"line_start":11,"line_end":797,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":472,"byte_end":28650,"line_start":11,"line_end":797,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28}],"decl_id":null,"docs":" Procedural macros to derive numeric traits in Rust.\n\n ## Usage\n\n Add this to your `Cargo.toml`:\n\n ```toml\n [dependencies]\n num-traits = \"0.2\"\n num-derive = \"0.2\"\n ```\n\n Then you can derive traits on your own types:\n\n ```rust\n #[macro_use]\n extern crate num_derive;\n\n #[derive(FromPrimitive, ToPrimitive)]\n enum Color {\n     Red,\n     Blue,\n     Green,\n }\n # fn main() {}\n ```\n","sig":null,"attributes":[{"value":"crate_type = \"proc-macro\"","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":472,"byte_end":501,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"recursion_limit = \"512\"","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":560,"byte_end":587,"line_start":13,"line_end":13,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":5017,"byte_end":5031,"line_start":175,"line_end":175,"column_start":8,"column_end":22},"name":"from_primitive","qualname":"::from_primitive","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::FromPrimitive`][from] for simple enums and newtypes.\n\n [from]: https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html\n\n # Examples\n\n Simple enums can be derived:\n\n ```rust\n # #[macro_use]\n # extern crate num_derive;\n\n #[derive(FromPrimitive)]\n enum Color {\n     Red,\n     Blue,\n     Green = 42,\n }\n # fn main() {}\n ```\n\n Enums that contain data are not allowed:\n\n ```compile_fail\n # #[macro_use]\n # extern crate num_derive;\n\n #[derive(FromPrimitive)]\n enum Color {\n     Rgb(u8, u8, u8),\n     Hsv(u8, u8, u8),\n }\n # fn main() {}\n ```\n\n Structs are not allowed:\n\n ```compile_fail\n # #[macro_use]\n # extern crate num_derive;\n #[derive(FromPrimitive)]\n struct Color {\n     r: u8,\n     g: u8,\n     b: u8,\n }\n # fn main() {}\n ```\n","sig":null,"attributes":[{"value":"proc_macro_derive(FromPrimitive)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":4974,"byte_end":5009,"line_start":174,"line_end":174,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":10280,"byte_end":10292,"line_start":339,"line_end":339,"column_start":8,"column_end":20},"name":"to_primitive","qualname":"::to_primitive","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::ToPrimitive`][to] for simple enums and newtypes.\n\n [to]: https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html\n\n # Examples\n\n Simple enums can be derived:\n\n ```rust\n # #[macro_use]\n # extern crate num_derive;\n\n #[derive(ToPrimitive)]\n enum Color {\n     Red,\n     Blue,\n     Green = 42,\n }\n # fn main() {}\n ```\n\n Enums that contain data are not allowed:\n\n ```compile_fail\n # #[macro_use]\n # extern crate num_derive;\n\n #[derive(ToPrimitive)]\n enum Color {\n     Rgb(u8, u8, u8),\n     Hsv(u8, u8, u8),\n }\n # fn main() {}\n ```\n\n Structs are not allowed:\n\n ```compile_fail\n # #[macro_use]\n # extern crate num_derive;\n #[derive(ToPrimitive)]\n struct Color {\n     r: u8,\n     g: u8,\n     b: u8,\n }\n # fn main() {}\n ```\n","sig":null,"attributes":[{"value":"proc_macro_derive(ToPrimitive)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":10239,"byte_end":10272,"line_start":338,"line_end":338,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":15296,"byte_end":15303,"line_start":468,"line_end":468,"column_start":8,"column_end":15},"name":"num_ops","qualname":"::num_ops","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::NumOps`][num_ops] for newtypes.  The inner type must already implement\n `NumOps`.\n\n [num_ops]: https://docs.rs/num-traits/0.2/num_traits/trait.NumOps.html\n\n Note that, since `NumOps` is really a trait alias for `Add + Sub + Mul + Div + Rem`, this macro\n generates impls for _those_ traits.  Furthermore, in all generated impls, `RHS=Self` and\n `Output=Self`.\n","sig":null,"attributes":[{"value":"proc_macro_derive(NumOps)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":15260,"byte_end":15288,"line_start":467,"line_end":467,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":17061,"byte_end":17069,"line_start":516,"line_end":516,"column_start":8,"column_end":16},"name":"num_cast","qualname":"::num_cast","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::NumCast`][num_cast] for newtypes.  The inner type must already implement\n `NumCast`.\n\n [num_cast]: https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\n","sig":null,"attributes":[{"value":"proc_macro_derive(NumCast)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":17024,"byte_end":17053,"line_start":515,"line_end":515,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":17820,"byte_end":17824,"line_start":538,"line_end":538,"column_start":8,"column_end":12},"name":"zero","qualname":"::zero","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::Zero`][zero] for newtypes.  The inner type must already implement `Zero`.\n\n [zero]: https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html\n","sig":null,"attributes":[{"value":"proc_macro_derive(Zero)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":17786,"byte_end":17812,"line_start":537,"line_end":537,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":18647,"byte_end":18650,"line_start":563,"line_end":563,"column_start":8,"column_end":11},"name":"one","qualname":"::one","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::One`][one] for newtypes.  The inner type must already implement `One`.\n\n [one]: https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html\n","sig":null,"attributes":[{"value":"proc_macro_derive(One)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":18614,"byte_end":18639,"line_start":562,"line_end":562,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":19454,"byte_end":19457,"line_start":588,"line_end":588,"column_start":8,"column_end":11},"name":"num","qualname":"::num","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::Num`][num] for newtypes.  The inner type must already implement `Num`.\n\n [num]: https://docs.rs/num-traits/0.2/num_traits/trait.Num.html\n","sig":null,"attributes":[{"value":"proc_macro_derive(Num)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":19421,"byte_end":19446,"line_start":587,"line_end":587,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":20326,"byte_end":20331,"line_start":612,"line_end":612,"column_start":8,"column_end":13},"name":"float","qualname":"::float","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::Float`][float] for newtypes.  The inner type must already implement\n `Float`.\n\n [float]: https://docs.rs/num-traits/0.2/num_traits/float/trait.Float.html\n","sig":null,"attributes":[{"value":"proc_macro_derive(Float)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.5\\src\\lib.rs","byte_start":20291,"byte_end":20318,"line_start":611,"line_end":611,"column_start":1,"column_end":28}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}