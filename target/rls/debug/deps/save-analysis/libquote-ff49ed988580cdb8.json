{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","quote","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"proc-macro\"","-C","metadata=ff49ed988580cdb8","-C","extra-filename=-ff49ed988580cdb8","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--extern","proc_macro2=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libproc_macro2-9c5c3b91993e7f46.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libquote-ff49ed988580cdb8.rmeta"},"prelude":{"crate_id":{"name":"quote","disambiguator":[651987496676725507,17069668937103049513]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","num":14,"id":{"name":"proc_macro","disambiguator":[10563531739546302590,971289991546242127]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","num":15,"id":{"name":"proc_macro2","disambiguator":[17520048794609830858,18155690968216592926]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","num":16,"id":{"name":"unicode_xid","disambiguator":[14445025557903462131,9097206819433286797]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","byte_start":0,"byte_end":28735,"line_start":1,"line_end":861,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","byte_start":3418,"byte_end":3432,"line_start":94,"line_end":94,"column_start":14,"column_end":28},"alias_span":null,"name":"TokenStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","byte_start":3469,"byte_end":3477,"line_start":97,"line_end":97,"column_start":20,"column_end":28},"alias_span":null,"name":"ToTokens","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":36739,"byte_end":36740,"line_start":2,"line_end":2,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Punct, Spacing, Span, Ident, TokenStream","parent":{"krate":0,"index":104}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","byte_start":0,"byte_end":28735,"line_start":1,"line_end":861,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"decl_id":null,"docs":" This crate provides the [`quote!`] macro for turning Rust syntax tree data\n structures into tokens of source code.\n\n [`quote!`]: macro.quote.html\n\n Procedural macros in Rust receive a stream of tokens as input, execute\n arbitrary Rust code to determine how to manipulate those tokens, and produce\n a stream of tokens to hand back to the compiler to compile into the caller's\n crate. Quasi-quoting is a solution to one piece of that -- producing tokens\n to return to the compiler.\n\n The idea of quasi-quoting is that we write *code* that we treat as *data*.\n Within the `quote!` macro, we can write what looks like code to our text\n editor or IDE. We get all the benefits of the editor's brace matching,\n syntax highlighting, indentation, and maybe autocompletion. But rather than\n compiling that as code into the current crate, we can treat it as data, pass\n it around, mutate it, and eventually hand it back to the compiler as tokens\n to compile into the macro caller's crate.\n\n This crate is motivated by the procedural macro use case, but is a\n general-purpose Rust quasi-quoting library and is not specific to procedural\n macros.\n\n *Version requirement: Quote supports any compiler version back to Rust's\n very first support for procedural macros in Rust 1.15.0.*\n\n ```toml\n [dependencies]\n quote = \"0.6\"\n ```\n\n # Example\n\n The following quasi-quoted block of code is something you might find in [a]\n procedural macro having to do with data structure serialization. The `#var`\n syntax performs interpolation of runtime variables into the quoted tokens.\n Check out the documentation of the [`quote!`] macro for more detail about\n the syntax. See also the [`quote_spanned!`] macro which is important for\n implementing hygienic procedural macros.\n\n [a]: https://serde.rs/\n [`quote_spanned!`]: macro.quote_spanned.html\n\n ```edition2018\n # use quote::quote;\n #\n # let generics = \"\";\n # let where_clause = \"\";\n # let field_ty = \"\";\n # let item_ty = \"\";\n # let path = \"\";\n # let value = \"\";\n #\n let tokens = quote! {\n     struct SerializeWith #generics #where_clause {\n         value: &'a #field_ty,\n         phantom: core::marker::PhantomData<#item_ty>,\n     }\n\n     impl #generics serde::Serialize for SerializeWith #generics #where_clause {\n         fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>\n         where\n             S: serde::Serializer,\n         {\n             #path(self.value, serializer)\n         }\n     }\n\n     SerializeWith {\n         value: #value,\n         phantom: core::marker::PhantomData::<#item_ty>,\n     }\n };\n ```\n\n # Recursion limit\n\n The `quote!` macro relies on deep recursion so some large invocations may\n fail with \"recursion limit reached\" when you compile. If it fails, bump up\n the recursion limit by adding `#![recursion_limit = \"128\"]` to your crate.\n An even higher limit may be necessary for especially large invocations.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\ext.rs","byte_start":28981,"byte_end":28995,"line_start":10,"line_end":10,"column_start":11,"column_end":25},"name":"TokenStreamExt","qualname":"::ext::TokenStreamExt","value":"TokenStreamExt: private::Sealed","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":21}],"decl_id":null,"docs":" TokenStream extension trait with methods for appending tokens.\n\n This trait is sealed and cannot be implemented outside of the `quote` crate.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\ext.rs","byte_start":29137,"byte_end":29143,"line_start":14,"line_end":14,"column_start":8,"column_end":14},"name":"append","qualname":"::ext::TokenStreamExt::append","value":"fn <U> (&mut self, token: U) -> ()","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" For use by `ToTokens` implementations.\n\n Appends the token specified to this list of tokens.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\ext.rs","byte_start":29696,"byte_end":29706,"line_start":35,"line_end":35,"column_start":8,"column_end":18},"name":"append_all","qualname":"::ext::TokenStreamExt::append_all","value":"fn <T, I> (&mut self, iter: I) -> ()","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" For use by `ToTokens` implementations.\n\n ```edition2018\n # use quote::{quote, TokenStreamExt, ToTokens};\n # use proc_macro2::TokenStream;\n #\n struct X;\n\n impl ToTokens for X {\n     fn to_tokens(&self, tokens: &mut TokenStream) {\n         tokens.append_all(&[true, false]);\n     }\n }\n\n let tokens = quote!(#X);\n assert_eq!(tokens.to_string(), \"true false\");\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\ext.rs","byte_start":29953,"byte_end":29969,"line_start":44,"line_end":44,"column_start":8,"column_end":24},"name":"append_separated","qualname":"::ext::TokenStreamExt::append_separated","value":"fn <T, I, U> (&mut self, iter: I, op: U) -> ()","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" For use by `ToTokens` implementations.\n\n Appends all of the items in the iterator `I`, separated by the tokens\n `U`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\ext.rs","byte_start":30296,"byte_end":30313,"line_start":54,"line_end":54,"column_start":8,"column_end":25},"name":"append_terminated","qualname":"::ext::TokenStreamExt::append_terminated","value":"fn <T, I, U> (&mut self, iter: I, term: U) -> ()","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" For use by `ToTokens` implementations.\n\n Appends all tokens in the iterator `I`, appending `U` after each\n element, including after the last element of the iterator.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\ext.rs","byte_start":31482,"byte_end":31488,"line_start":109,"line_end":109,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::ext::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":31808,"byte_end":31816,"line_start":12,"line_end":12,"column_start":11,"column_end":19},"name":"ToTokens","qualname":"::to_tokens::ToTokens","value":"ToTokens","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" Types that can be interpolated inside a [`quote!`] invocation.\n\n [`quote!`]: macro.quote.html\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":33238,"byte_end":33247,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"to_tokens","qualname":"::to_tokens::ToTokens::to_tokens","value":"fn (&self, tokens: &mut TokenStream) -> ()","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Write `self` to the given `TokenStream`.\n\n The token append methods provided by the [`TokenStreamExt`] extension\n trait may be useful for implementing `ToTokens`.\n\n [`TokenStreamExt`]: trait.TokenStreamExt.html\n\n # Example\n\n Example implementation for a struct representing Rust paths like\n `std::cmp::PartialEq`:\n\n ```edition2018\n use proc_macro2::{TokenTree, Spacing, Span, Punct, TokenStream};\n use quote::{TokenStreamExt, ToTokens};\n\n pub struct Path {\n     pub global: bool,\n     pub segments: Vec<PathSegment>,\n }\n\n impl ToTokens for Path {\n     fn to_tokens(&self, tokens: &mut TokenStream) {\n         for (i, segment) in self.segments.iter().enumerate() {\n             if i > 0 || self.global {\n                 // Double colon `::`\n                 tokens.append(Punct::new(':', Spacing::Joint));\n                 tokens.append(Punct::new(':', Spacing::Alone));\n             }\n             segment.to_tokens(tokens);\n         }\n     }\n }\n #\n # pub struct PathSegment;\n #\n # impl ToTokens for PathSegment {\n #     fn to_tokens(&self, tokens: &mut TokenStream) {\n #         unimplemented!()\n #     }\n # }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":33504,"byte_end":33521,"line_start":61,"line_end":61,"column_start":8,"column_end":25},"name":"into_token_stream","qualname":"::to_tokens::ToTokens::into_token_stream","value":"fn (self) -> TokenStream","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Convert `self` directly into a `TokenStream` object.\n\n This method is implicitly implemented using `to_tokens`, and acts as a\n convenience method for consumers of the `ToTokens` trait.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"__rt","qualname":"::__rt","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"path = \"runtime.rs\"","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","byte_start":3514,"byte_end":3536,"line_start":101,"line_end":101,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":37187,"byte_end":37192,"line_start":19,"line_end":19,"column_start":8,"column_end":13},"name":"parse","qualname":"::__rt::parse","value":"fn (tokens: &mut TokenStream, span: Span, s: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":38765,"byte_end":38773,"line_start":65,"line_end":65,"column_start":13,"column_end":21},"name":"push_add","qualname":"::__rt::push_add","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":38792,"byte_end":38803,"line_start":66,"line_end":66,"column_start":13,"column_end":24},"name":"push_add_eq","qualname":"::__rt::push_add_eq","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":38826,"byte_end":38834,"line_start":67,"line_end":67,"column_start":13,"column_end":21},"name":"push_and","qualname":"::__rt::push_and","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":38853,"byte_end":38865,"line_start":68,"line_end":68,"column_start":13,"column_end":25},"name":"push_and_and","qualname":"::__rt::push_and_and","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":38888,"byte_end":38899,"line_start":69,"line_end":69,"column_start":13,"column_end":24},"name":"push_and_eq","qualname":"::__rt::push_and_eq","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":38922,"byte_end":38929,"line_start":70,"line_end":70,"column_start":13,"column_end":20},"name":"push_at","qualname":"::__rt::push_at","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":38948,"byte_end":38957,"line_start":71,"line_end":71,"column_start":13,"column_end":22},"name":"push_bang","qualname":"::__rt::push_bang","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":38976,"byte_end":38986,"line_start":72,"line_end":72,"column_start":13,"column_end":23},"name":"push_caret","qualname":"::__rt::push_caret","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39005,"byte_end":39018,"line_start":73,"line_end":73,"column_start":13,"column_end":26},"name":"push_caret_eq","qualname":"::__rt::push_caret_eq","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39041,"byte_end":39051,"line_start":74,"line_end":74,"column_start":13,"column_end":23},"name":"push_colon","qualname":"::__rt::push_colon","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39070,"byte_end":39081,"line_start":75,"line_end":75,"column_start":13,"column_end":24},"name":"push_colon2","qualname":"::__rt::push_colon2","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39104,"byte_end":39114,"line_start":76,"line_end":76,"column_start":13,"column_end":23},"name":"push_comma","qualname":"::__rt::push_comma","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39133,"byte_end":39141,"line_start":77,"line_end":77,"column_start":13,"column_end":21},"name":"push_div","qualname":"::__rt::push_div","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39160,"byte_end":39171,"line_start":78,"line_end":78,"column_start":13,"column_end":24},"name":"push_div_eq","qualname":"::__rt::push_div_eq","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39194,"byte_end":39202,"line_start":79,"line_end":79,"column_start":13,"column_end":21},"name":"push_dot","qualname":"::__rt::push_dot","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39221,"byte_end":39230,"line_start":80,"line_end":80,"column_start":13,"column_end":22},"name":"push_dot2","qualname":"::__rt::push_dot2","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39253,"byte_end":39262,"line_start":81,"line_end":81,"column_start":13,"column_end":22},"name":"push_dot3","qualname":"::__rt::push_dot3","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39289,"byte_end":39304,"line_start":82,"line_end":82,"column_start":13,"column_end":28},"name":"push_dot_dot_eq","qualname":"::__rt::push_dot_dot_eq","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39331,"byte_end":39338,"line_start":83,"line_end":83,"column_start":13,"column_end":20},"name":"push_eq","qualname":"::__rt::push_eq","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39357,"byte_end":39367,"line_start":84,"line_end":84,"column_start":13,"column_end":23},"name":"push_eq_eq","qualname":"::__rt::push_eq_eq","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39390,"byte_end":39397,"line_start":85,"line_end":85,"column_start":13,"column_end":20},"name":"push_ge","qualname":"::__rt::push_ge","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39420,"byte_end":39427,"line_start":86,"line_end":86,"column_start":13,"column_end":20},"name":"push_gt","qualname":"::__rt::push_gt","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39446,"byte_end":39453,"line_start":87,"line_end":87,"column_start":13,"column_end":20},"name":"push_le","qualname":"::__rt::push_le","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39476,"byte_end":39483,"line_start":88,"line_end":88,"column_start":13,"column_end":20},"name":"push_lt","qualname":"::__rt::push_lt","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39502,"byte_end":39513,"line_start":89,"line_end":89,"column_start":13,"column_end":24},"name":"push_mul_eq","qualname":"::__rt::push_mul_eq","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39536,"byte_end":39543,"line_start":90,"line_end":90,"column_start":13,"column_end":20},"name":"push_ne","qualname":"::__rt::push_ne","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39566,"byte_end":39573,"line_start":91,"line_end":91,"column_start":13,"column_end":20},"name":"push_or","qualname":"::__rt::push_or","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39592,"byte_end":39602,"line_start":92,"line_end":92,"column_start":13,"column_end":23},"name":"push_or_eq","qualname":"::__rt::push_or_eq","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39625,"byte_end":39635,"line_start":93,"line_end":93,"column_start":13,"column_end":23},"name":"push_or_or","qualname":"::__rt::push_or_or","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39658,"byte_end":39668,"line_start":94,"line_end":94,"column_start":13,"column_end":23},"name":"push_pound","qualname":"::__rt::push_pound","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39687,"byte_end":39700,"line_start":95,"line_end":95,"column_start":13,"column_end":26},"name":"push_question","qualname":"::__rt::push_question","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39719,"byte_end":39730,"line_start":96,"line_end":96,"column_start":13,"column_end":24},"name":"push_rarrow","qualname":"::__rt::push_rarrow","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39753,"byte_end":39764,"line_start":97,"line_end":97,"column_start":13,"column_end":24},"name":"push_larrow","qualname":"::__rt::push_larrow","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39787,"byte_end":39795,"line_start":98,"line_end":98,"column_start":13,"column_end":21},"name":"push_rem","qualname":"::__rt::push_rem","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39814,"byte_end":39825,"line_start":99,"line_end":99,"column_start":13,"column_end":24},"name":"push_rem_eq","qualname":"::__rt::push_rem_eq","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39848,"byte_end":39862,"line_start":100,"line_end":100,"column_start":13,"column_end":27},"name":"push_fat_arrow","qualname":"::__rt::push_fat_arrow","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39885,"byte_end":39894,"line_start":101,"line_end":101,"column_start":13,"column_end":22},"name":"push_semi","qualname":"::__rt::push_semi","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39913,"byte_end":39921,"line_start":102,"line_end":102,"column_start":13,"column_end":21},"name":"push_shl","qualname":"::__rt::push_shl","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39944,"byte_end":39955,"line_start":103,"line_end":103,"column_start":13,"column_end":24},"name":"push_shl_eq","qualname":"::__rt::push_shl_eq","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":39982,"byte_end":39990,"line_start":104,"line_end":104,"column_start":13,"column_end":21},"name":"push_shr","qualname":"::__rt::push_shr","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":40013,"byte_end":40024,"line_start":105,"line_end":105,"column_start":13,"column_end":24},"name":"push_shr_eq","qualname":"::__rt::push_shr_eq","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":40051,"byte_end":40060,"line_start":106,"line_end":106,"column_start":13,"column_end":22},"name":"push_star","qualname":"::__rt::push_star","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":40079,"byte_end":40087,"line_start":107,"line_end":107,"column_start":13,"column_end":21},"name":"push_sub","qualname":"::__rt::push_sub","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\runtime.rs","byte_start":40106,"byte_end":40117,"line_start":108,"line_end":108,"column_start":13,"column_end":24},"name":"push_sub_eq","qualname":"::__rt::push_sub_eq","value":"fn (tokens: &mut TokenStream, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\ext.rs","byte_start":30466,"byte_end":30477,"line_start":61,"line_end":61,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\ext.rs","byte_start":31513,"byte_end":31524,"line_start":111,"line_end":111,"column_start":21,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":34042,"byte_end":34045,"line_start":83,"line_end":83,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":34192,"byte_end":34195,"line_start":89,"line_end":89,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":34338,"byte_end":34340,"line_start":95,"line_end":95,"column_start":41,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":34474,"byte_end":34480,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":34776,"byte_end":34782,"line_start":115,"line_end":115,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":35887,"byte_end":35892,"line_start":167,"line_end":167,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":36011,"byte_end":36016,"line_start":173,"line_end":173,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":36135,"byte_end":36140,"line_start":179,"line_end":179,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":36259,"byte_end":36266,"line_start":185,"line_end":185,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":36385,"byte_end":36394,"line_start":191,"line_end":191,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":36507,"byte_end":36518,"line_start":197,"line_end":197,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\lib.rs","byte_start":3545,"byte_end":3549,"line_start":102,"line_end":102,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":104}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\ext.rs","byte_start":29006,"byte_end":29012,"line_start":10,"line_end":10,"column_start":36,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":41},"to":{"krate":0,"index":11}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\ext.rs","byte_start":30466,"byte_end":30477,"line_start":61,"line_end":61,"column_start":25,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":15,"index":693},"to":{"krate":0,"index":11}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\ext.rs","byte_start":31513,"byte_end":31524,"line_start":111,"line_end":111,"column_start":21,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":15,"index":693},"to":{"krate":0,"index":41}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":34042,"byte_end":34045,"line_start":83,"line_end":83,"column_start":55,"column_end":58},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":3177},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":34192,"byte_end":34195,"line_start":89,"line_end":89,"column_start":41,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":34338,"byte_end":34340,"line_start":95,"line_end":95,"column_start":41,"column_end":43},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":2782},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":34474,"byte_end":34480,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"kind":{"Impl":{"id":5}},"from":{"krate":2,"index":29426},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":34776,"byte_end":34782,"line_start":115,"line_end":115,"column_start":19,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":4497},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":35887,"byte_end":35892,"line_start":167,"line_end":167,"column_start":19,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":15,"index":719},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":36011,"byte_end":36016,"line_start":173,"line_end":173,"column_start":19,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":15,"index":765},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":36135,"byte_end":36140,"line_start":179,"line_end":179,"column_start":19,"column_end":24},"kind":{"Impl":{"id":12}},"from":{"krate":15,"index":743},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":36259,"byte_end":36266,"line_start":185,"line_end":185,"column_start":19,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":15,"index":770},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":36385,"byte_end":36394,"line_start":191,"line_end":191,"column_start":19,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":15,"index":704},"to":{"krate":0,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.13\\src\\to_tokens.rs","byte_start":36507,"byte_end":36518,"line_start":197,"line_end":197,"column_start":19,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":15,"index":693},"to":{"krate":0,"index":57}}]}