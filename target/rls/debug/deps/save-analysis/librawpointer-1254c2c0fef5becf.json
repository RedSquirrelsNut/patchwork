{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","rawpointer","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=1254c2c0fef5becf","-C","extra-filename=-1254c2c0fef5becf","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\librawpointer-1254c2c0fef5becf.rmeta"},"prelude":{"crate_id":{"name":"rawpointer","disambiguator":[8840432607330281005,18290075967513503684]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":359,"byte_end":6642,"line_start":8,"line_end":246,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":359,"byte_end":6642,"line_start":8,"line_end":246,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":19},{"krate":0,"index":24},{"krate":0,"index":29}],"decl_id":null,"docs":" Rawpointer adds extra utility methods to raw pointers `*const T`, `*mut T`\n and `NonNull<T>`.\n\n Features include:\n\n - Strided offsets - [`.stride_offset(stride,\n   index)`](PointerExt::stride_offset) make it easy to compute\n   pointer offsets where the index is unsigned and the stride is signed.\n\n - Offsetting methods in general for `NonNull`, since it does not have these\n   from libcore\n\n - Post- and preincrement and post- and predecrement methods\n\n   - For `p++` use [`p.post_inc()`](PointerExt::post_inc).\n   - For `++p` use [`p.pre_inc()`](PointerExt::pre_inc).\n   - For `p--` use [`p.post_dec()`](PointerExt::post_dec).\n   - For `--p` use [`p.pre_dec()`](PointerExt::pre_dec).\n\n ```rust\n use rawpointer::PointerExt;\n\n unsafe {\n     // In this example:\n     // Use .post_inc() to iterate and overwrite the first four\n     // elements of the array.\n\n     let mut xs = [0; 16];\n     let mut ptr = xs.as_mut_ptr();\n     let end = ptr.offset(4);\n     let mut i = 0;\n     while ptr != end {\n         *ptr.post_inc() = i;\n         i += 1;\n     }\n     assert_eq!(&xs[..8], &[0, 1, 2, 3, 0, 0, 0, 0]);\n }\n ```\n\n ## Safety\n\n See the Rust [core::ptr] documentation for more information.\n\n ## Rust Version\n\n This version of the crate requires Rust 1.26 or later\n","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":359,"byte_end":369,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":1971,"byte_end":1982,"line_start":64,"line_end":64,"column_start":8,"column_end":19},"name":"ptrdistance","qualname":"::ptrdistance","value":"fn <T> (start: *const T, end: *const T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of elements of `T` from `start` to `end`.<br>\n Return the arithmetic difference if `T` is zero size.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":1946,"byte_end":1963,"line_start":63,"line_end":63,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":2249,"byte_end":2259,"line_start":74,"line_end":74,"column_start":11,"column_end":21},"name":"PointerExt","qualname":"::PointerExt","value":"PointerExt: Copy","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":" Extension methods for raw pointers\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":2283,"byte_end":2289,"line_start":75,"line_end":75,"column_start":15,"column_end":21},"name":"offset","qualname":"::PointerExt::offset","value":"fn (self, i: isize) -> Self","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":2330,"byte_end":2333,"line_start":77,"line_end":77,"column_start":15,"column_end":18},"name":"add","qualname":"::PointerExt::add","value":"fn (self, i: usize) -> Self","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":2413,"byte_end":2416,"line_start":81,"line_end":81,"column_start":15,"column_end":18},"name":"sub","qualname":"::PointerExt::sub","value":"fn (self, i: usize) -> Self","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":2648,"byte_end":2655,"line_start":89,"line_end":89,"column_start":15,"column_end":22},"name":"pre_inc","qualname":"::PointerExt::pre_inc","value":"fn (&mut self) -> Self","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" Increment the pointer by 1, and return its new value.\n\n Equivalent to the C idiom `++ptr`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":2616,"byte_end":2633,"line_start":88,"line_end":88,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":2879,"byte_end":2887,"line_start":98,"line_end":98,"column_start":15,"column_end":23},"name":"post_inc","qualname":"::PointerExt::post_inc","value":"fn (&mut self) -> Self","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" Increment the pointer by 1, but return its old value.\n\n Equivalent to the C idiom `ptr++`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":2847,"byte_end":2864,"line_start":97,"line_end":97,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":3142,"byte_end":3149,"line_start":108,"line_end":108,"column_start":15,"column_end":22},"name":"pre_dec","qualname":"::PointerExt::pre_dec","value":"fn (&mut self) -> Self","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" Decrement the pointer by 1, and return its new value.\n\n Equivalent to the C idiom `--ptr`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":3110,"byte_end":3127,"line_start":107,"line_end":107,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":3374,"byte_end":3382,"line_start":117,"line_end":117,"column_start":15,"column_end":23},"name":"post_dec","qualname":"::PointerExt::post_dec","value":"fn (&mut self) -> Self","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" Decrement the pointer by 1, but return its old value.\n\n Equivalent to the C idiom `ptr--`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":3342,"byte_end":3359,"line_start":116,"line_end":116,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":3548,"byte_end":3551,"line_start":125,"line_end":125,"column_start":15,"column_end":18},"name":"inc","qualname":"::PointerExt::inc","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" Increment by 1\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":3516,"byte_end":3533,"line_start":124,"line_end":124,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":3663,"byte_end":3666,"line_start":131,"line_end":131,"column_start":15,"column_end":18},"name":"dec","qualname":"::PointerExt::dec","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" Decrement by 1\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":3631,"byte_end":3648,"line_start":130,"line_end":130,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":3813,"byte_end":3826,"line_start":137,"line_end":137,"column_start":15,"column_end":28},"name":"stride_offset","qualname":"::PointerExt::stride_offset","value":"fn (self, s: isize, index: usize) -> Self","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" Offset the pointer by `s` multiplied by `index`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":3781,"byte_end":3798,"line_start":136,"line_end":136,"column_start":5,"column_end":22}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":4970,"byte_end":4977,"line_start":184,"line_end":184,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":2262,"byte_end":2266,"line_start":74,"line_end":74,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":1543},"to":{"krate":0,"index":8}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rawpointer-0.2.1\\src\\lib.rs","byte_start":4970,"byte_end":4977,"line_start":184,"line_end":184,"column_start":24,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":1,"index":1251},"to":{"krate":0,"index":8}}]}