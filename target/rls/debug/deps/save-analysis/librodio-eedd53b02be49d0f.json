{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","rodio","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"claxon\"","--cfg","feature=\"flac\"","--cfg","feature=\"hound\"","--cfg","feature=\"lewton\"","--cfg","feature=\"minimp3\"","--cfg","feature=\"mp3\"","--cfg","feature=\"vorbis\"","--cfg","feature=\"wav\"","-C","metadata=eedd53b02be49d0f","-C","extra-filename=-eedd53b02be49d0f","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--extern","claxon=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libclaxon-bf191d6442262106.rmeta","--extern","cpal=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libcpal-412a126b556a8453.rmeta","--extern","hound=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libhound-00c215c09f4c335e.rmeta","--extern","lazy_static=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\liblazy_static-79de1231268f023b.rmeta","--extern","lewton=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\liblewton-2106c8864c7ce0cb.rmeta","--extern","minimp3=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libminimp3-473b579fa13475cb.rmeta","--extern","nalgebra=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libnalgebra-92294f5d4d5213ab.rmeta","--cap-lints","allow","-L","native=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\build\\minimp3-sys-741a96f94388022d\\out","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\librodio-eedd53b02be49d0f.rmeta"},"prelude":{"crate_id":{"name":"rodio","disambiguator":[7300398598293196419,2829772748236981568]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":14,"id":{"name":"claxon","disambiguator":[8640174021156604854,14688180276829674702]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":15,"id":{"name":"cpal","disambiguator":[16450987391932769755,14050607960513736324]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":16,"id":{"name":"lazy_static","disambiguator":[17281579441627161632,7326486140096487162]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":17,"id":{"name":"winapi","disambiguator":[5636639422687459420,15773350436437932257]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":18,"id":{"name":"hound","disambiguator":[15826694583117813707,7505290145761766379]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":19,"id":{"name":"nalgebra","disambiguator":[16144640084948329795,2192412331864463733]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":20,"id":{"name":"mint","disambiguator":[16016546320826219160,4412486244430327654]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":21,"id":{"name":"approx","disambiguator":[8203426696814416008,11700430433253579810]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":22,"id":{"name":"num_traits","disambiguator":[9658936450980938914,14161967064833628679]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":23,"id":{"name":"generic_array","disambiguator":[1224609544316849720,13193010650937205520]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":24,"id":{"name":"typenum","disambiguator":[5806260238053524433,8448313915306359665]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":25,"id":{"name":"matrixmultiply","disambiguator":[15200233628962781980,3207925793241972478]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":26,"id":{"name":"rawpointer","disambiguator":[8840432607330281005,18290075967513503684]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":27,"id":{"name":"num_complex","disambiguator":[5262289262877511432,13900178487251520355]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":28,"id":{"name":"num_rational","disambiguator":[15863994761067920867,5154642504162158822]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":29,"id":{"name":"num_integer","disambiguator":[3873470759457277054,11692439525196161537]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":30,"id":{"name":"rand","disambiguator":[9579956090989077561,6016763311634218399]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":31,"id":{"name":"rand_jitter","disambiguator":[4145674164928602445,12080024616770491715]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":32,"id":{"name":"rand_core","disambiguator":[6148462046942665598,5228056350340481722]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":33,"id":{"name":"rand_os","disambiguator":[1691320983053905964,6841747347442227322]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":34,"id":{"name":"rand_isaac","disambiguator":[10987227229343033978,15292630220743628822]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":35,"id":{"name":"rand_core","disambiguator":[13259434164603681883,13108105096199166138]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":36,"id":{"name":"rand_chacha","disambiguator":[6423863964024767013,15153009560095560849]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":37,"id":{"name":"rand_hc","disambiguator":[525673919022150445,12109758691319754134]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":38,"id":{"name":"rand_pcg","disambiguator":[16317637656073445515,2097876810658516840]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":39,"id":{"name":"rand_xorshift","disambiguator":[9102452492388754499,9181983382554261667]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":40,"id":{"name":"alga","disambiguator":[16037863431148245680,3323900524414736076]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":41,"id":{"name":"lewton","disambiguator":[4807795593755978354,16082504140912831336]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":42,"id":{"name":"byteorder","disambiguator":[373764108737062493,6998070977021925776]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":43,"id":{"name":"smallvec","disambiguator":[7532348961559425697,17176165485341521969]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":44,"id":{"name":"maybe_uninit","disambiguator":[4286604793989925036,16418824572312769135]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":45,"id":{"name":"ogg","disambiguator":[8090993522682251113,15880347833297962562]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":46,"id":{"name":"minimp3","disambiguator":[13117083333770559608,17613918496433735601]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":47,"id":{"name":"minimp3_sys","disambiguator":[1807311207761849676,3912804792226484015]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","num":48,"id":{"name":"slice_deque","disambiguator":[5204407757764599047,5952320756823334924]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":0,"byte_end":4440,"line_start":1,"line_end":134,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":459},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":3645,"byte_end":3665,"line_start":100,"line_end":100,"column_start":5,"column_end":25},"alias_span":null,"name":"default_input_device","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":460},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":3667,"byte_end":3688,"line_start":100,"line_end":100,"column_start":27,"column_end":48},"alias_span":null,"name":"default_output_device","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":452},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":3690,"byte_end":3697,"line_start":100,"line_end":100,"column_start":50,"column_end":57},"alias_span":null,"name":"devices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":453},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":3699,"byte_end":3712,"line_start":100,"line_end":100,"column_start":59,"column_end":72},"alias_span":null,"name":"input_devices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":456},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":3714,"byte_end":3728,"line_start":100,"line_end":100,"column_start":74,"column_end":88},"alias_span":null,"name":"output_devices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":628},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":3730,"byte_end":3736,"line_start":100,"line_end":100,"column_start":90,"column_end":96},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":3763,"byte_end":3769,"line_start":103,"line_end":103,"column_start":22,"column_end":28},"alias_span":null,"name":"Sample","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":3788,"byte_end":3795,"line_start":104,"line_end":104,"column_start":18,"column_end":25},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":3813,"byte_end":3821,"line_start":105,"line_end":105,"column_start":17,"column_end":25},"alias_span":null,"name":"play_raw","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":3837,"byte_end":3841,"line_start":106,"line_end":106,"column_start":15,"column_end":19},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":3859,"byte_end":3865,"line_start":107,"line_end":107,"column_start":17,"column_end":23},"alias_span":null,"name":"Source","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":3889,"byte_end":3900,"line_start":108,"line_end":108,"column_start":23,"column_end":34},"alias_span":null,"name":"SpatialSink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\mod.rs","byte_start":4713,"byte_end":4719,"line_start":10,"line_end":10,"column_start":23,"column_end":29},"alias_span":null,"name":"Sample","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1216},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78110,"byte_end":78117,"line_start":7,"line_end":7,"column_start":24,"column_end":31},"alias_span":null,"name":"Amplify","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78138,"byte_end":78147,"line_start":8,"line_end":8,"column_start":20,"column_end":29},"alias_span":null,"name":"BltFilter","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78173,"byte_end":78181,"line_start":9,"line_end":9,"column_start":25,"column_end":33},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78213,"byte_end":78226,"line_start":10,"line_end":10,"column_start":31,"column_end":44},"alias_span":null,"name":"ChannelVolume","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78249,"byte_end":78254,"line_start":11,"line_end":11,"column_start":22,"column_end":27},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78276,"byte_end":78280,"line_start":12,"line_end":12,"column_start":21,"column_end":25},"alias_span":null,"name":"Done","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78303,"byte_end":78308,"line_start":13,"line_end":13,"column_start":22,"column_end":27},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78332,"byte_end":78338,"line_start":14,"line_end":14,"column_start":23,"column_end":29},"alias_span":null,"name":"FadeIn","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78369,"byte_end":78381,"line_start":15,"line_end":15,"column_start":30,"column_end":42},"alias_span":null,"name":"from_factory","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78383,"byte_end":78398,"line_start":15,"line_end":15,"column_start":44,"column_end":59},"alias_span":null,"name":"FromFactoryIter","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":785},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78427,"byte_end":78436,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"alias_span":null,"name":"from_iter","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1316},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78438,"byte_end":78446,"line_start":16,"line_end":16,"column_start":38,"column_end":46},"alias_span":null,"name":"FromIter","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78468,"byte_end":78471,"line_start":17,"line_end":17,"column_start":20,"column_end":23},"alias_span":null,"name":"Mix","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78497,"byte_end":78505,"line_start":18,"line_end":18,"column_start":25,"column_end":33},"alias_span":null,"name":"Pausable","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78531,"byte_end":78545,"line_start":19,"line_end":19,"column_start":25,"column_end":39},"alias_span":null,"name":"PeriodicAccess","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78569,"byte_end":78575,"line_start":20,"line_end":20,"column_start":23,"column_end":29},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1357},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78610,"byte_end":78626,"line_start":21,"line_end":21,"column_start":34,"column_end":50},"alias_span":null,"name":"SamplesConverter","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78648,"byte_end":78656,"line_start":22,"line_end":22,"column_start":21,"column_end":29},"alias_span":null,"name":"SineWave","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78681,"byte_end":78688,"line_start":23,"line_end":23,"column_start":24,"column_end":31},"alias_span":null,"name":"Spatial","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78711,"byte_end":78716,"line_start":24,"line_end":24,"column_start":22,"column_end":27},"alias_span":null,"name":"Speed","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1392},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78743,"byte_end":78752,"line_start":25,"line_end":25,"column_start":26,"column_end":35},"alias_span":null,"name":"Stoppable","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1402},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78774,"byte_end":78786,"line_start":26,"line_end":26,"column_start":21,"column_end":33},"alias_span":null,"name":"TakeDuration","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78811,"byte_end":78832,"line_start":27,"line_end":27,"column_start":24,"column_end":45},"alias_span":null,"name":"UniformSourceIterator","value":"","parent":{"krate":0,"index":513}},{"kind":"Use","ref_id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":78854,"byte_end":78858,"line_start":28,"line_end":28,"column_start":21,"column_end":25},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":513}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":0,"byte_end":4440,"line_start":1,"line_end":134,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":101},{"krate":0,"index":128},{"krate":0,"index":171},{"krate":0,"index":216},{"krate":0,"index":242},{"krate":0,"index":431},{"krate":0,"index":467},{"krate":0,"index":513},{"krate":0,"index":1132},{"krate":0,"index":1151}],"decl_id":null,"docs":" Audio playback library.\n\n The main concept of this library is [the `Source` trait](source/trait.Source.html), which\n represents a sound (streaming or not). In order to play a sound, there are three steps:\n\n - Create an object that represents the streaming sound. It can be a sine wave, a buffer, a\n   [decoder](decoder/index.html), etc. or even your own type that implements\n   [the `Source` trait](source/trait.Source.html).\n - Choose an output with the [`devices`](fn.devices.html) or\n   [`default_output_device`](fn.default_output_device.html) functions.\n - Call [`play_raw(output, source)`](fn.play_raw.html).\n\n The `play_raw` function expects the source to produce `f32`s, which may not be the case. If you\n get a compilation error, try calling `.convert_samples()` on the source to fix it.\n\n For example, here is how you would play an audio file:\n\n ```no_run\n use std::fs::File;\n use std::io::BufReader;\n use rodio::Source;\n\n let device = rodio::default_output_device().unwrap();\n\n let file = File::open(\"sound.ogg\").unwrap();\n let source = rodio::Decoder::new(BufReader::new(file)).unwrap();\n rodio::play_raw(&device, source.convert_samples());\n ```\n\n ## Sink\n\n In order to make it easier to control the playback, the rodio library also provides a type\n named [`Sink`](struct.Sink.html) which represents an audio track.\n\n Instead of playing the sound with [`play_raw`](fn.play_raw.html), you can add it to a\n [`Sink`](struct.Sink.html) instead.\n\n ```no_run\n use rodio::Sink;\n\n let device = rodio::default_output_device().unwrap();\n let sink = Sink::new(&device);\n\n // Add a dummy source of the sake of the example.\n let source = rodio::source::SineWave::new(440);\n sink.append(source);\n ```\n\n The [`append` method](struct.Sink.html#method.append) will add the sound at the end of the\n sink. It will be played when all the previous sounds have been played. If you want multiple\n sounds to play simultaneously, you should create multiple [`Sink`](struct.Sink.html)s.\n\n The [`Sink`](struct.Sink.html) type also provides utilities such as playing/pausing or\n controlling the volume.\n\n ## Filters\n\n [The `Source` trait](source/trait.Source.html) provides various filters, similarly to the\n standard `Iterator` trait.\n\n Example:\n\n ```\n use rodio::Source;\n use std::time::Duration;\n\n // Repeats the first five seconds of the sound forever.\n # let source = rodio::source::SineWave::new(440);\n let source = source.take_duration(Duration::from_secs(5)).repeat_infinite();\n ```\n\n ## How it works under the hood\n\n Rodio spawns a background thread that is dedicated to reading from the sources and sending\n the output to the device. Whenever you give up ownership of a `Source` in order to play it,\n it is sent to this background thread where it will be read by rodio.\n\n All the sounds are mixed together by rodio before being sent to the operating system or the\n hardware. Therefore there is no restriction on the number of sounds that play simultaneously or\n the number of sinks that can be created (except for the fact that creating too many will slow\n down your program).\n\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample.rs","byte_start":10417,"byte_end":10423,"line_start":68,"line_end":68,"column_start":11,"column_end":17},"name":"Sample","qualname":"::conversions::sample::Sample","value":"Sample: CpalSample","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"decl_id":null,"docs":" Represents a value of a single sample.\n\n This trait is implemented by default on three types: `i16`, `u16` and `f32`.\n\n - For `i16`, silence corresponds to the value `0`. The minimum and maximum amplitudes are\n   represented by `i16::min_value()` and `i16::max_value()` respectively.\n - For `u16`, silence corresponds to the value `u16::max_value() / 2`. The minimum and maximum\n   amplitudes are represented by `0` and `u16::max_value()` respectively.\n - For `f32`, silence corresponds to the value `0.0`. The minimum and maximum amplitudes are\n  represented by `-1.0` and `1.0` respectively.\n\n You can implement this trait on your own type as well if you wish so.\n\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample.rs","byte_start":10625,"byte_end":10629,"line_start":73,"line_end":73,"column_start":8,"column_end":12},"name":"lerp","qualname":"::conversions::sample::Sample::lerp","value":"fn (first: Self, second: Self, numerator: u32, denominator: u32) -> Self","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Linear interpolation between two samples.\n\n The result should be equal to\n `first * numerator / denominator + second * (1 - numerator / denominator)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample.rs","byte_start":10772,"byte_end":10779,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"amplify","qualname":"::conversions::sample::Sample::amplify","value":"fn (self, value: f32) -> Self","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Multiplies the value of this sample by the given amount.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample.rs","byte_start":10861,"byte_end":10875,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"saturating_add","qualname":"::conversions::sample::Sample::saturating_add","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Calls `saturating_add` on the sample.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample.rs","byte_start":10977,"byte_end":10987,"line_start":81,"line_end":81,"column_start":8,"column_end":18},"name":"zero_value","qualname":"::conversions::sample::Sample::zero_value","value":"fn () -> Self","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Returns the value corresponding to the absence of sound.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\engine.rs","byte_start":25376,"byte_end":25384,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"play_raw","qualname":"::engine::play_raw","value":"fn <S> (device: &Device, source: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Plays a source with a device until it ends.\n\n The playing uses a background thread.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":30303,"byte_end":30307,"line_start":19,"line_end":19,"column_start":12,"column_end":16},"name":"Sink","qualname":"::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"decl_id":null,"docs":" Handle to an device that outputs sounds.\n\n Dropping the `Sink` stops all sounds. You can use `detach` if you want the sounds to continue\n playing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":30690,"byte_end":30693,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<Sink>::new","value":"fn (device: &Device) -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Builds a new `Sink`, beginning playback on a Device.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":30669,"byte_end":30678,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":30880,"byte_end":30888,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"new_idle","qualname":"<Sink>::new_idle","value":"fn () -> (Sink, queue::SourcesQueueOutput<f32>)","parent":null,"children":[],"decl_id":null,"docs":" Builds a new `Sink`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":30859,"byte_end":30868,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":31500,"byte_end":31506,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"append","qualname":"<Sink>::append","value":"fn <S> (&self, source: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends a sound to the queue of sounds to play.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":31479,"byte_end":31488,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":32704,"byte_end":32710,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"volume","qualname":"<Sink>::volume","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Gets the volume of the sound.\n\n The value `1.0` is the \"normal\" volume (unfiltered input). Any value other than 1.0 will\n multiply each sample by this value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":32683,"byte_end":32692,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":32997,"byte_end":33007,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"set_volume","qualname":"<Sink>::set_volume","value":"fn (&self, value: f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the volume of the sound.\n\n The value `1.0` is the \"normal\" volume (unfiltered input). Any value other than `1.0` will\n multiply each sample by this value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":32976,"byte_end":32985,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":33200,"byte_end":33204,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"play","qualname":"<Sink>::play","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resumes playback of a paused sink.\n\n No effect if not paused.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":33179,"byte_end":33188,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":33435,"byte_end":33440,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"name":"pause","qualname":"<Sink>::pause","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pauses playback of this sink.\n\n No effect if already paused.\n\n A paused sink can be resumed with `play()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":33689,"byte_end":33698,"line_start":132,"line_end":132,"column_start":12,"column_end":21},"name":"is_paused","qualname":"<Sink>::is_paused","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets if a sink is paused\n\n Sinks can be paused and resumed using `pause()` and `play()`. This returns `true` if the\n sink is paused.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":33845,"byte_end":33849,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"stop","qualname":"<Sink>::stop","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stops the sink by emptying the queue.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":33824,"byte_end":33833,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":34030,"byte_end":34036,"line_start":144,"line_end":144,"column_start":12,"column_end":18},"name":"detach","qualname":"<Sink>::detach","value":"fn (mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Destroys the sink without stopping the sounds that are still playing.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":34009,"byte_end":34018,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":34167,"byte_end":34182,"line_start":150,"line_end":150,"column_start":12,"column_end":27},"name":"sleep_until_end","qualname":"<Sink>::sleep_until_end","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sleeps the current thread until the sound ends.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":34146,"byte_end":34155,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":34425,"byte_end":34430,"line_start":158,"line_end":158,"column_start":12,"column_end":17},"name":"empty","qualname":"<Sink>::empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this sink has no more sounds to play.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":34404,"byte_end":34413,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":34565,"byte_end":34568,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"len","qualname":"<Sink>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of sounds currently in the queue.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":34544,"byte_end":34553,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":36444,"byte_end":36455,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"SpatialSink","qualname":"::spatial_sink::SpatialSink","value":"SpatialSink {  }","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":36708,"byte_end":36711,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<SpatialSink>::new","value":"fn (device: &Device, emitter_position: [f32; 3], left_ear: [f32; 3], right_ear: [f32; 3]) -> SpatialSink","parent":null,"children":[],"decl_id":null,"docs":" Builds a new `SpatialSink`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":36687,"byte_end":36696,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":37152,"byte_end":37172,"line_start":39,"line_end":39,"column_start":12,"column_end":32},"name":"set_emitter_position","qualname":"<SpatialSink>::set_emitter_position","value":"fn (&self, pos: [f32; 3]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of the sound emitter in 3 dimensional space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":37344,"byte_end":37365,"line_start":44,"line_end":44,"column_start":12,"column_end":33},"name":"set_left_ear_position","qualname":"<SpatialSink>::set_left_ear_position","value":"fn (&self, pos: [f32; 3]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of the left ear in 3 dimensional space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":37530,"byte_end":37552,"line_start":49,"line_end":49,"column_start":12,"column_end":34},"name":"set_right_ear_position","qualname":"<SpatialSink>::set_right_ear_position","value":"fn (&self, pos: [f32; 3]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of the right ear in 3 dimensional space.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":37721,"byte_end":37727,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"append","qualname":"<SpatialSink>::append","value":"fn <S> (&self, source: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends a sound to the queue of sounds to play.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":37700,"byte_end":37709,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":38558,"byte_end":38564,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"volume","qualname":"<SpatialSink>::volume","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"\n The value `1.0` is the \"normal\" volume (unfiltered input). Any value other than 1.0 will\n multiply each sample by this value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":38537,"byte_end":38546,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":38830,"byte_end":38840,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"set_volume","qualname":"<SpatialSink>::set_volume","value":"fn (&self, value: f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the volume of the sound.\n\n The value `1.0` is the \"normal\" volume (unfiltered input). Any value other than 1.0 will\n multiply each sample by this value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":38809,"byte_end":38818,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":39016,"byte_end":39020,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"play","qualname":"<SpatialSink>::play","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resumes playback of a paused sound.\n\n No effect if not paused.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":38995,"byte_end":39004,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":39218,"byte_end":39223,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"name":"pause","qualname":"<SpatialSink>::pause","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pauses playback of this sink.\n\n No effect if already paused.\n\n A paused sound can be resumed with `play()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":39419,"byte_end":39428,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"is_paused","qualname":"<SpatialSink>::is_paused","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets if a sound is paused\n\n Sounds can be paused and resumed using pause() and play(). This gets if a sound is paused.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":39554,"byte_end":39558,"line_start":118,"line_end":118,"column_start":12,"column_end":16},"name":"stop","qualname":"<SpatialSink>::stop","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stops the sink by emptying the queue.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":39533,"byte_end":39542,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":39703,"byte_end":39709,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"detach","qualname":"<SpatialSink>::detach","value":"fn (self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Destroys the sink without stopping the sounds that are still playing.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":39682,"byte_end":39691,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":39834,"byte_end":39849,"line_start":130,"line_end":130,"column_start":12,"column_end":27},"name":"sleep_until_end","qualname":"<SpatialSink>::sleep_until_end","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sleeps the current thread until the sound ends.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":39813,"byte_end":39822,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":39990,"byte_end":39995,"line_start":136,"line_end":136,"column_start":12,"column_end":17},"name":"empty","qualname":"<SpatialSink>::empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this sink has no more sounds to play.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":39969,"byte_end":39978,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::buffer","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\buffer.rs","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":227},{"krate":0,"index":231},{"krate":0,"index":237}],"decl_id":null,"docs":" A simple source of samples coming from a buffer.\n\n The `SamplesBuffer` struct can be used to treat a list of values as a `Source`.\n\n # Example\n\n ```\n use rodio::buffer::SamplesBuffer;\n let _ = SamplesBuffer::new(1, 44100, vec![1i16, 2, 3, 4, 5, 6]);\n ```\n\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\buffer.rs","byte_start":40494,"byte_end":40507,"line_start":21,"line_end":21,"column_start":12,"column_end":25},"name":"SamplesBuffer","qualname":"::buffer::SamplesBuffer","value":"SamplesBuffer {  }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226}],"decl_id":null,"docs":" A buffer of samples treated as a source.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\buffer.rs","byte_start":41016,"byte_end":41019,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<SamplesBuffer<S>>::new","value":"fn <D> (channels: u16, sample_rate: u32, data: D) -> SamplesBuffer<S>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new `SamplesBuffer`.\n\n # Panic\n\n - Panicks if the number of channels is zero.\n - Panicks if the samples rate is zero.\n - Panicks if the length of the buffer is larger than approximatively 16 billion elements.\n   This is because the calculation of the duration would overflow.\n\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"decoder","qualname":"::decoder","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":285},{"krate":0,"index":313},{"krate":0,"index":346},{"krate":0,"index":395},{"krate":0,"index":399},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":421},{"krate":0,"index":1209},{"krate":0,"index":1214},{"krate":0,"index":1212},{"krate":0,"index":427},{"krate":0,"index":429}],"decl_id":null,"docs":" Decodes samples from an audio file.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","byte_start":43955,"byte_end":43962,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::decoder::Decoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" Source of audio samples from decoding a file.\n\n Supports MP3, WAV, Vorbis and Flac.\n","sig":null,"attributes":[{"value":"cfg(any\n      (feature = \"wav\", feature = \"flac\", feature = \"vorbis\", feature =\n       \"mp3\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","byte_start":43860,"byte_end":43943,"line_start":22,"line_end":22,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","byte_start":44751,"byte_end":44754,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"fn (data: R) -> Result<Decoder<R>, DecoderError>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new decoder.\n\n Attempts to automatically detect the format of the source of data.\n","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","byte_start":44713,"byte_end":44739,"line_start":52,"line_end":52,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","byte_start":50019,"byte_end":50037,"line_start":223,"line_end":223,"column_start":5,"column_end":23},"name":"UnrecognizedFormat","qualname":"::decoder::DecoderError::UnrecognizedFormat","value":"DecoderError::UnrecognizedFormat","parent":{"krate":0,"index":1209},"children":[],"decl_id":null,"docs":" The format of the data has not been recognized.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","byte_start":49944,"byte_end":49956,"line_start":221,"line_end":221,"column_start":10,"column_end":22},"name":"DecoderError","qualname":"::decoder::DecoderError","value":"DecoderError::{UnrecognizedFormat}","parent":null,"children":[{"krate":0,"index":1210}],"decl_id":null,"docs":" Error that can happen when creating a decoder.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\dynamic_mixer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dynamic_mixer","qualname":"::dynamic_mixer","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\dynamic_mixer.rs","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":448},{"krate":0,"index":452},{"krate":0,"index":456},{"krate":0,"index":462}],"decl_id":null,"docs":" Mixer that plays multiple sounds at the same time.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\dynamic_mixer.rs","byte_start":63633,"byte_end":63638,"line_start":20,"line_end":20,"column_start":8,"column_end":13},"name":"mixer","qualname":"::dynamic_mixer::mixer","value":"fn <S> (channels: u16, sample_rate: u32) -> (Arc<DynamicMixerController<S>>, DynamicMixer<S>)","parent":null,"children":[],"decl_id":null,"docs":" Builds a new mixer.\n\n You can choose the characteristics of the output thanks to this constructor. All the sounds\n added to the mixer will be converted to these values.\n\n After creating a mixer, you can add new sounds with the controller.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\dynamic_mixer.rs","byte_start":64171,"byte_end":64193,"line_start":42,"line_end":42,"column_start":12,"column_end":34},"name":"DynamicMixerController","qualname":"::dynamic_mixer::DynamicMixerController","value":"DynamicMixerController {  }","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447}],"decl_id":null,"docs":" The input of the mixer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\dynamic_mixer.rs","byte_start":64489,"byte_end":64492,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"add","qualname":"<DynamicMixerController<S>>::add","value":"fn <T> (&self, source: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a new source to mix to the existing ones.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\dynamic_mixer.rs","byte_start":64468,"byte_end":64477,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\dynamic_mixer.rs","byte_start":64963,"byte_end":64975,"line_start":69,"line_end":69,"column_start":12,"column_end":24},"name":"DynamicMixer","qualname":"::dynamic_mixer::DynamicMixer","value":"DynamicMixer {  }","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455}],"decl_id":null,"docs":" The output of the mixer. Implements `Source`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"queue","qualname":"::queue","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":486},{"krate":0,"index":493},{"krate":0,"index":498},{"krate":0,"index":505},{"krate":0,"index":510}],"decl_id":null,"docs":" Queue that plays sounds one after the other.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","byte_start":70297,"byte_end":70302,"line_start":29,"line_end":29,"column_start":8,"column_end":13},"name":"queue","qualname":"::queue::queue","value":"fn <S> (keep_alive_if_empty: bool) -> (Arc<SourcesQueueInput<S>>, SourcesQueueOutput<S>)","parent":null,"children":[],"decl_id":null,"docs":" Builds a new queue. It consists of an input and an output.\n\n The input can be used to add sounds to the end of the queue, while the output implements\n `Source` and plays the sounds.\n\n The parameter indicates how the queue should behave if the queue becomes empty:\n\n - If you pass `true`, then the queue is infinite and will play a silence instead until you add\n   a new sound.\n - If you pass `false`, then the queue will report that it has finished playing.\n\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","byte_start":70878,"byte_end":70895,"line_start":50,"line_end":50,"column_start":12,"column_end":29},"name":"SourcesQueueInput","qualname":"::queue::SourcesQueueInput","value":"SourcesQueueInput {  }","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485}],"decl_id":null,"docs":" The input of the queue.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","byte_start":71192,"byte_end":71198,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"append","qualname":"<SourcesQueueInput<S>>::append","value":"fn <T> (&self, source: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a new source to the end of the queue.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","byte_start":71171,"byte_end":71180,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","byte_start":71573,"byte_end":71591,"line_start":77,"line_end":77,"column_start":12,"column_end":30},"name":"append_with_signal","qualname":"<SourcesQueueInput<S>>::append_with_signal","value":"fn <T> (&self, source: T) -> Receiver<()>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new source to the end of the queue.\n\n The `Receiver` will be signalled when the sound has finished playing.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","byte_start":71552,"byte_end":71561,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","byte_start":72005,"byte_end":72028,"line_start":92,"line_end":92,"column_start":12,"column_end":35},"name":"set_keep_alive_if_empty","qualname":"<SourcesQueueInput<S>>::set_keep_alive_if_empty","value":"fn (&self, keep_alive_if_empty: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether the queue stays alive if there's no more sound to play.\n\n See also the constructor.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","byte_start":72228,"byte_end":72246,"line_start":99,"line_end":99,"column_start":12,"column_end":30},"name":"SourcesQueueOutput","qualname":"::queue::SourcesQueueOutput","value":"SourcesQueueOutput {  }","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497}],"decl_id":null,"docs":" The output of the queue. Implements `Source`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"source","qualname":"::source","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":568},{"krate":0,"index":597},{"krate":0,"index":647},{"krate":0,"index":674},{"krate":0,"index":699},{"krate":0,"index":723},{"krate":0,"index":741},{"krate":0,"index":766},{"krate":0,"index":781},{"krate":0,"index":799},{"krate":0,"index":824},{"krate":0,"index":847},{"krate":0,"index":873},{"krate":0,"index":898},{"krate":0,"index":928},{"krate":0,"index":941},{"krate":0,"index":971},{"krate":0,"index":995},{"krate":0,"index":1018},{"krate":0,"index":1040},{"krate":0,"index":1074},{"krate":0,"index":1092},{"krate":0,"index":1114},{"krate":0,"index":1120},{"krate":0,"index":1126}],"decl_id":null,"docs":" Sources of sound and various filters.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1216},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\amplify.rs","byte_start":89396,"byte_end":89403,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"Amplify","qualname":"::source::amplify::Amplify","value":"Amplify {  }","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219}],"decl_id":null,"docs":" Filter that modifies each sample by a given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\amplify.rs","byte_start":89532,"byte_end":89542,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"set_factor","qualname":"<Amplify<I>>::set_factor","value":"fn (&mut self, factor: f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modifies the amplification factor.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\amplify.rs","byte_start":89511,"byte_end":89520,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\amplify.rs","byte_start":89680,"byte_end":89685,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"inner","qualname":"<Amplify<I>>::inner","value":"fn (&self) -> &I","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\amplify.rs","byte_start":89659,"byte_end":89668,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\amplify.rs","byte_start":89810,"byte_end":89819,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<Amplify<I>>::inner_mut","value":"fn (&mut self) -> &mut I","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\amplify.rs","byte_start":89789,"byte_end":89798,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\amplify.rs","byte_start":89933,"byte_end":89943,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Amplify<I>>::into_inner","value":"fn (self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\amplify.rs","byte_start":89912,"byte_end":89921,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":91431,"byte_end":91440,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"BltFilter","qualname":"::source::blt::BltFilter","value":"BltFilter {  }","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":91682,"byte_end":91693,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"to_low_pass","qualname":"<BltFilter<I>>::to_low_pass","value":"fn (&mut self, freq: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modifies this filter so that it becomes a low-pass filter.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":91895,"byte_end":91900,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"inner","qualname":"<BltFilter<I>>::inner","value":"fn (&self) -> &I","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":91874,"byte_end":91883,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":92025,"byte_end":92034,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<BltFilter<I>>::inner_mut","value":"fn (&mut self) -> &mut I","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":92004,"byte_end":92013,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":92148,"byte_end":92158,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BltFilter<I>>::into_inner","value":"fn (self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":92127,"byte_end":92136,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\buffered.rs","byte_start":95431,"byte_end":95439,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"Buffered","qualname":"::source::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"decl_id":null,"docs":" Iterator that at the same time extracts data from the iterator and stores it in a buffer.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\channel_volume.rs","byte_start":100551,"byte_end":100564,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"ChannelVolume","qualname":"::source::channel_volume::ChannelVolume","value":"ChannelVolume {  }","parent":null,"children":[{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264}],"decl_id":null,"docs":" Combines channels in input into a single mono source, then plays that mono sound\n to each channel at the volume given for that channel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\channel_volume.rs","byte_start":100910,"byte_end":100913,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<ChannelVolume<I>>::new","value":"fn (mut input: I, channel_volumes: Vec<f32>) -> ChannelVolume<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\channel_volume.rs","byte_start":101590,"byte_end":101600,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"set_volume","qualname":"<ChannelVolume<I>>::set_volume","value":"fn (&mut self, channel: usize, volume: f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the volume for a given channel number.  Will panic if channel number\n was invalid.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\channel_volume.rs","byte_start":101772,"byte_end":101777,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"inner","qualname":"<ChannelVolume<I>>::inner","value":"fn (&self) -> &I","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\channel_volume.rs","byte_start":101751,"byte_end":101760,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\channel_volume.rs","byte_start":101902,"byte_end":101911,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<ChannelVolume<I>>::inner_mut","value":"fn (&mut self) -> &mut I","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\channel_volume.rs","byte_start":101881,"byte_end":101890,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\channel_volume.rs","byte_start":102025,"byte_end":102035,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ChannelVolume<I>>::into_inner","value":"fn (self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\channel_volume.rs","byte_start":102004,"byte_end":102013,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\delay.rs","byte_start":104245,"byte_end":104250,"line_start":24,"line_end":24,"column_start":12,"column_end":17},"name":"Delay","qualname":"::source::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275}],"decl_id":null,"docs":" A source that delays the given source by a certain amount.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\delay.rs","byte_start":104472,"byte_end":104477,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"inner","qualname":"<Delay<I>>::inner","value":"fn (&self) -> &I","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\delay.rs","byte_start":104451,"byte_end":104460,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\delay.rs","byte_start":104602,"byte_end":104611,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<Delay<I>>::inner_mut","value":"fn (&mut self) -> &mut I","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\delay.rs","byte_start":104581,"byte_end":104590,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\delay.rs","byte_start":104725,"byte_end":104735,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Delay<I>>::into_inner","value":"fn (self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\delay.rs","byte_start":104704,"byte_end":104713,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\done.rs","byte_start":106218,"byte_end":106222,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Done","qualname":"::source::done::Done","value":"Done {  }","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286}],"decl_id":null,"docs":" When the inner source is empty this decrements an `AtomicUsize`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\done.rs","byte_start":106341,"byte_end":106344,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<Done<I>>::new","value":"fn (input: I, signal: Arc<AtomicUsize>) -> Done<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\done.rs","byte_start":106320,"byte_end":106329,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\done.rs","byte_start":106571,"byte_end":106576,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"inner","qualname":"<Done<I>>::inner","value":"fn (&self) -> &I","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\done.rs","byte_start":106550,"byte_end":106559,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\done.rs","byte_start":106701,"byte_end":106710,"line_start":33,"line_end":33,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<Done<I>>::inner_mut","value":"fn (&mut self) -> &mut I","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\done.rs","byte_start":106680,"byte_end":106689,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\done.rs","byte_start":106824,"byte_end":106834,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Done<I>>::into_inner","value":"fn (self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\done.rs","byte_start":106803,"byte_end":106812,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\empty.rs","byte_start":107860,"byte_end":107865,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Empty","qualname":"::source::empty::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" An empty source.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\empty.rs","byte_start":107931,"byte_end":107934,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"new","qualname":"<Empty<S>>::new","value":"fn () -> Empty<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\empty.rs","byte_start":107910,"byte_end":107919,"line_start":11,"line_end":11,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\fadein.rs","byte_start":109013,"byte_end":109019,"line_start":23,"line_end":23,"column_start":12,"column_end":18},"name":"FadeIn","qualname":"::source::fadein::FadeIn","value":"FadeIn {  }","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309}],"decl_id":null,"docs":" Filter that modifies raises the volume from silence over a time period.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\fadein.rs","byte_start":109220,"byte_end":109225,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"inner","qualname":"<FadeIn<I>>::inner","value":"fn (&self) -> &I","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\fadein.rs","byte_start":109199,"byte_end":109208,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\fadein.rs","byte_start":109350,"byte_end":109359,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<FadeIn<I>>::inner_mut","value":"fn (&mut self) -> &mut I","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\fadein.rs","byte_start":109329,"byte_end":109338,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\fadein.rs","byte_start":109473,"byte_end":109483,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FadeIn<I>>::into_inner","value":"fn (self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\fadein.rs","byte_start":109452,"byte_end":109461,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\from_factory.rs","byte_start":111090,"byte_end":111102,"line_start":11,"line_end":11,"column_start":8,"column_end":20},"name":"from_factory","qualname":"::source::from_factory::from_factory","value":"fn <F, S> (factory: F) -> FromIter<FromFactoryIter<F>>","parent":null,"children":[],"decl_id":null,"docs":" Builds a source that chains sources built from a factory.\n\n The `factory` parameter is a function that produces a source. The source is then played.\n Whenever the source ends, `factory` is called again in order to produce the source that is\n played next.\n\n If the `factory` closure returns `None`, then the sound ends.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\from_factory.rs","byte_start":111298,"byte_end":111313,"line_start":19,"line_end":19,"column_start":12,"column_end":27},"name":"FromFactoryIter","qualname":"::source::from_factory::FromFactoryIter","value":"FromFactoryIter {  }","parent":null,"children":[{"krate":0,"index":774}],"decl_id":null,"docs":" Internal type used by `from_factory`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":785},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\from_iter.rs","byte_start":112016,"byte_end":112025,"line_start":13,"line_end":13,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::source::from_iter::from_iter","value":"fn <I> (iterator: I) -> FromIter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Builds a source that chains sources provided by an iterator.\n\n The `iterator` parameter is an iterator that produces a source. The source is then played.\n Whenever the source ends, the `iterator` is used again in order to produce the source that is\n played next.\n\n If the `iterator` produces `None`, then the sound ends.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1316},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\from_iter.rs","byte_start":112358,"byte_end":112366,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"FromIter","qualname":"::source::from_iter::FromIter","value":"FromIter {  }","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319}],"decl_id":null,"docs":" A source that chains sources provided by an iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mix.rs","byte_start":117115,"byte_end":117118,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"Mix","qualname":"::source::mix::Mix","value":"Mix {  }","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1327}],"decl_id":null,"docs":" Filter that modifies each sample by a given value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\pausable.rs","byte_start":119492,"byte_end":119500,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"Pausable","qualname":"::source::pausable::Pausable","value":"Pausable {  }","parent":null,"children":[{"krate":0,"index":1334},{"krate":0,"index":1335}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\pausable.rs","byte_start":119729,"byte_end":119739,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"name":"set_paused","qualname":"<Pausable<I>>::set_paused","value":"fn (&mut self, paused: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether the filter applies.\n\n If set to true, the inner sound stops playing and no samples are processed from it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\pausable.rs","byte_start":119708,"byte_end":119717,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\pausable.rs","byte_start":119878,"byte_end":119883,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"inner","qualname":"<Pausable<I>>::inner","value":"fn (&self) -> &I","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\pausable.rs","byte_start":119857,"byte_end":119866,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\pausable.rs","byte_start":120008,"byte_end":120017,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<Pausable<I>>::inner_mut","value":"fn (&mut self) -> &mut I","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\pausable.rs","byte_start":119987,"byte_end":119996,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\pausable.rs","byte_start":120131,"byte_end":120141,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Pausable<I>>::into_inner","value":"fn (self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\pausable.rs","byte_start":120110,"byte_end":120119,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\periodic.rs","byte_start":121947,"byte_end":121961,"line_start":29,"line_end":29,"column_start":12,"column_end":26},"name":"PeriodicAccess","qualname":"::source::periodic::PeriodicAccess","value":"PeriodicAccess {  }","parent":null,"children":[{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348}],"decl_id":null,"docs":" Calls a function on a source every time a period elapsed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\periodic.rs","byte_start":122477,"byte_end":122482,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"inner","qualname":"<PeriodicAccess<I, F>>::inner","value":"fn (&self) -> &I","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\periodic.rs","byte_start":122456,"byte_end":122465,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\periodic.rs","byte_start":122607,"byte_end":122616,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<PeriodicAccess<I, F>>::inner_mut","value":"fn (&mut self) -> &mut I","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\periodic.rs","byte_start":122586,"byte_end":122595,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\periodic.rs","byte_start":122730,"byte_end":122740,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PeriodicAccess<I, F>>::into_inner","value":"fn (self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\periodic.rs","byte_start":122709,"byte_end":122718,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\repeat.rs","byte_start":125598,"byte_end":125604,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::source::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":883}],"decl_id":null,"docs":" A source that repeats the given source.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1357},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\samples_converter.rs","byte_start":127583,"byte_end":127599,"line_start":14,"line_end":14,"column_start":12,"column_end":28},"name":"SamplesConverter","qualname":"::source::samples_converter::SamplesConverter","value":"SamplesConverter {  }","parent":null,"children":[{"krate":0,"index":1360},{"krate":0,"index":1361}],"decl_id":null,"docs":" An iterator that reads from a `Source` and converts the samples to a specific rate and\n channels count.\n\n It implements `Source` as well, but all the data is guaranteed to be in a single frame whose\n channels and samples rate have been passed to `new`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\samples_converter.rs","byte_start":127712,"byte_end":127715,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<SamplesConverter<I, D>>::new","value":"fn (input: I) -> SamplesConverter<I, D>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\samples_converter.rs","byte_start":127691,"byte_end":127700,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\samples_converter.rs","byte_start":127929,"byte_end":127934,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"inner","qualname":"<SamplesConverter<I, D>>::inner","value":"fn (&self) -> &I","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\samples_converter.rs","byte_start":127908,"byte_end":127917,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\samples_converter.rs","byte_start":128059,"byte_end":128068,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<SamplesConverter<I, D>>::inner_mut","value":"fn (&mut self) -> &mut I","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\samples_converter.rs","byte_start":128038,"byte_end":128047,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\samples_converter.rs","byte_start":128182,"byte_end":128192,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SamplesConverter<I, D>>::into_inner","value":"fn (self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\samples_converter.rs","byte_start":128161,"byte_end":128170,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\sine.rs","byte_start":129386,"byte_end":129394,"line_start":8,"line_end":8,"column_start":12,"column_end":20},"name":"SineWave","qualname":"::source::sine::SineWave","value":"SineWave {  }","parent":null,"children":[{"krate":0,"index":1367},{"krate":0,"index":1368}],"decl_id":null,"docs":" An infinite source that produces a sine.\n\n Always has a rate of 48kHz and one channel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\sine.rs","byte_start":129514,"byte_end":129517,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<SineWave>::new","value":"fn (freq: u32) -> SineWave","parent":null,"children":[],"decl_id":null,"docs":" The frequency of the sine.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\sine.rs","byte_start":129493,"byte_end":129502,"line_start":15,"line_end":15,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\spatial.rs","byte_start":130554,"byte_end":130561,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Spatial","qualname":"::source::spatial::Spatial","value":"Spatial {  }","parent":null,"children":[{"krate":0,"index":1375}],"decl_id":null,"docs":" Combines channels in input into a single mono source, then plays that mono sound\n to each channel at the volume given for that channel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\spatial.rs","byte_start":130731,"byte_end":130734,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<Spatial<I>>::new","value":"fn (input: I, emitter_position: [f32; 3], left_ear: [f32; 3], right_ear: [f32; 3]) -> Spatial<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\spatial.rs","byte_start":131171,"byte_end":131184,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"set_positions","qualname":"<Spatial<I>>::set_positions","value":"fn (&mut self, emitter_pos: [f32; 3], left_ear: [f32; 3], right_ear: [f32; 3]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of the emitter and ears in the 3D world.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\speed.rs","byte_start":133377,"byte_end":133382,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Speed","qualname":"::source::speed::Speed","value":"Speed {  }","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385}],"decl_id":null,"docs":" Filter that modifies each sample by a given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\speed.rs","byte_start":133557,"byte_end":133562,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"inner","qualname":"<Speed<I>>::inner","value":"fn (&self) -> &I","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\speed.rs","byte_start":133536,"byte_end":133545,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\speed.rs","byte_start":133687,"byte_end":133696,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<Speed<I>>::inner_mut","value":"fn (&mut self) -> &mut I","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\speed.rs","byte_start":133666,"byte_end":133675,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\speed.rs","byte_start":133810,"byte_end":133820,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Speed<I>>::into_inner","value":"fn (self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\speed.rs","byte_start":133789,"byte_end":133798,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1392},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\stoppable.rs","byte_start":135458,"byte_end":135467,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"Stoppable","qualname":"::source::stoppable::Stoppable","value":"Stoppable {  }","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\stoppable.rs","byte_start":135582,"byte_end":135586,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"stop","qualname":"<Stoppable<I>>::stop","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stops the sound.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\stoppable.rs","byte_start":135561,"byte_end":135570,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\stoppable.rs","byte_start":135710,"byte_end":135715,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"inner","qualname":"<Stoppable<I>>::inner","value":"fn (&self) -> &I","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\stoppable.rs","byte_start":135689,"byte_end":135698,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\stoppable.rs","byte_start":135840,"byte_end":135849,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<Stoppable<I>>::inner_mut","value":"fn (&mut self) -> &mut I","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\stoppable.rs","byte_start":135819,"byte_end":135828,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\stoppable.rs","byte_start":135963,"byte_end":135973,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Stoppable<I>>::into_inner","value":"fn (self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\stoppable.rs","byte_start":135942,"byte_end":135951,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1402},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\take.rs","byte_start":137249,"byte_end":137261,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"TakeDuration","qualname":"::source::take::TakeDuration","value":"TakeDuration {  }","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406}],"decl_id":null,"docs":" A source that repeats the given source.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\take.rs","byte_start":137833,"byte_end":137838,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"inner","qualname":"<TakeDuration<I>>::inner","value":"fn (&self) -> &I","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\take.rs","byte_start":137812,"byte_end":137821,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\take.rs","byte_start":137963,"byte_end":137972,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<TakeDuration<I>>::inner_mut","value":"fn (&mut self) -> &mut I","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\take.rs","byte_start":137942,"byte_end":137951,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\take.rs","byte_start":138086,"byte_end":138096,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TakeDuration<I>>::into_inner","value":"fn (self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\take.rs","byte_start":138065,"byte_end":138074,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\uniform.rs","byte_start":140487,"byte_end":140508,"line_start":19,"line_end":19,"column_start":12,"column_end":33},"name":"UniformSourceIterator","qualname":"::source::uniform::UniformSourceIterator","value":"UniformSourceIterator {  }","parent":null,"children":[{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419}],"decl_id":null,"docs":" An iterator that reads from a `Source` and converts the samples to a specific rate and\n channels count.\n\n It implements `Source` as well, but all the data is guaranteed to be in a single frame whose\n channels and samples rate have been passed to `new`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\uniform.rs","byte_start":140883,"byte_end":140886,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<UniformSourceIterator<I, D>>::new","value":"fn (input: I, target_channels: u16, target_sample_rate: u32) -> UniformSourceIterator<I, D>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\uniform.rs","byte_start":140862,"byte_end":140871,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\zero.rs","byte_start":144583,"byte_end":144587,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Zero","qualname":"::source::zero::Zero","value":"Zero {  }","parent":null,"children":[{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438}],"decl_id":null,"docs":" An infinite source that produces zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\zero.rs","byte_start":144708,"byte_end":144711,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Zero<S>>::new","value":"fn (channels: u16, sample_rate: u32) -> Zero<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\zero.rs","byte_start":144687,"byte_end":144696,"line_start":15,"line_end":15,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":82585,"byte_end":82591,"line_start":120,"line_end":120,"column_start":11,"column_end":17},"name":"Source","qualname":"::source::Source","value":"Source: Iterator","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113}],"decl_id":null,"docs":" A source of samples.\n\n # A quick lesson about sounds\n\n ## Sampling\n\n A sound is a vibration that propagates through air and reaches your ears. This vibration can\n be represented as an analog signal.\n\n In order to store this signal in the computer's memory or on the disk, we perform what is\n called *sampling*. The consists in choosing an interval of time (for example 20µs) and reading\n the amplitude of the signal at each interval (for example, if the interval is 20µs we read the\n amplitude every 20µs). By doing so we obtain a list of numerical values, each value being\n called a *sample*.\n\n Therefore a sound can be represented in memory by a frequency and a list of samples. The\n frequency is expressed in hertz and corresponds to the number of samples that have been\n read per second. For example if we read one sample every 20µs, the frequency would be\n 50000 Hz. In reality, common values for the frequency are 44100, 48000 and 96000.\n\n ## Channels\n\n But a frequency and a list of values only represent one signal. When you listen to a sound,\n your left and right ears don't receive exactly the same signal. In order to handle this,\n we usually record not one but two different signals: one for the left ear and one for the right\n ear. We say that such a sound has two *channels*.\n\n Sometimes sounds even have five or six channels, each corresponding to a location around the\n head of the listener.\n\n The standard in audio manipulation is to *interleave* the multiple channels. In other words,\n in a sound with two channels the list of samples contains the first sample of the first\n channel, then the first sample of the second channel, then the second sample of the first\n channel, then the second sample of the second channel, and so on. The same applies if you have\n more than two channels. The rodio library only supports this schema.\n\n Therefore in order to represent a sound in memory in fact we need three characteristics: the\n frequency, the number of channels, and the list of samples.\n\n ## The `Source` trait\n\n A Rust object that represents a sound should implement the `Source` trait.\n\n The three characteristics that describe a sound are provided through this trait:\n\n - The number of channels can be retrieved with `channels`.\n - The frequency can be retrieved with `sample_rate`.\n - The list of values can be retrieved by iterating on the source. The `Source` trait requires\n   that the `Iterator` trait be implemented as well.\n\n # Frames\n\n The samples rate and number of channels of some sound sources can change by itself from time\n to time.\n\n > **Note**: As a basic example, if you play two audio files one after the other and treat the\n > whole as a single source, then the channels and samples rate of that source may change at the\n > transition between the two files.\n\n However, for optimization purposes rodio supposes that the number of channels and the frequency\n stay the same for long periods of time and avoids calling `channels()` and\n `sample_rate` too frequently.\n\n In order to properly handle this situation, the `current_frame_len()` method should return\n the number of samples that remain in the iterator before the samples rate and number of\n channels can potentially change.\n\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":83008,"byte_end":83025,"line_start":130,"line_end":130,"column_start":8,"column_end":25},"name":"current_frame_len","qualname":"::source::Source::current_frame_len","value":"fn (&self) -> Option<usize>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Returns the number of samples before the current frame ends. `None` means \"infinite\" or\n \"until the sound ends\".\n Should never return 0 unless there's no more data.\n\n After the engine has finished reading the specified number of samples, it will check\n whether the value of `channels()` and/or `sample_rate()` have changed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":83132,"byte_end":83140,"line_start":133,"line_end":133,"column_start":8,"column_end":16},"name":"channels","qualname":"::source::Source::channels","value":"fn (&self) -> u16","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Returns the number of channels. Channels are always interleaved.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":83260,"byte_end":83271,"line_start":136,"line_end":136,"column_start":8,"column_end":19},"name":"sample_rate","qualname":"::source::Source::sample_rate","value":"fn (&self) -> u32","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Returns the rate at which the source should be played. In number of samples per second.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":83431,"byte_end":83445,"line_start":141,"line_end":141,"column_start":8,"column_end":22},"name":"total_duration","qualname":"::source::Source::total_duration","value":"fn (&self) -> Option<Duration>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Returns the total duration of this source, if known.\n\n `None` indicates at the same time \"infinite\" or \"unknown\".\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":83592,"byte_end":83600,"line_start":145,"line_end":145,"column_start":8,"column_end":16},"name":"buffered","qualname":"::source::Source::buffered","value":"fn (self) -> Buffered<Self>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Stores the source in a buffer in addition to returning it. This iterator can be cloned.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":83575,"byte_end":83584,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":83767,"byte_end":83770,"line_start":154,"line_end":154,"column_start":8,"column_end":11},"name":"mix","qualname":"::source::Source::mix","value":"fn <S> (self, other: S) -> Mix<Self, S>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Mixes this source with another one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":83750,"byte_end":83759,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":84131,"byte_end":84146,"line_start":168,"line_end":168,"column_start":8,"column_end":23},"name":"repeat_infinite","qualname":"::source::Source::repeat_infinite","value":"fn (self) -> Repeat<Self>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Repeats this source forever.\n\n Note that this works by storing the data in a buffer, so the amount of memory used is\n proportional to the size of the sound.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":84114,"byte_end":84123,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":84327,"byte_end":84340,"line_start":177,"line_end":177,"column_start":8,"column_end":21},"name":"take_duration","qualname":"::source::Source::take_duration","value":"fn (self, duration: Duration) -> TakeDuration<Self>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Takes a certain duration of this source and then stops.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":84310,"byte_end":84319,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":84666,"byte_end":84671,"line_start":189,"line_end":189,"column_start":8,"column_end":13},"name":"delay","qualname":"::source::Source::delay","value":"fn (self, duration: Duration) -> Delay<Self>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Delays the sound by a certain duration.\n\n The rate and channels of the silence will use the same format as the first frame of the\n source.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":84649,"byte_end":84658,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":84863,"byte_end":84870,"line_start":198,"line_end":198,"column_start":8,"column_end":15},"name":"amplify","qualname":"::source::Source::amplify","value":"fn (self, value: f32) -> Amplify<Self>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Amplifies the sound by the given value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":84846,"byte_end":84855,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":85037,"byte_end":85044,"line_start":207,"line_end":207,"column_start":8,"column_end":15},"name":"fade_in","qualname":"::source::Source::fade_in","value":"fn (self, duration: Duration) -> FadeIn<Self>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Fades in the sound.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":85020,"byte_end":85029,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":85712,"byte_end":85727,"line_start":225,"line_end":225,"column_start":8,"column_end":23},"name":"periodic_access","qualname":"::source::Source::periodic_access","value":"fn <F> (self, period: Duration, access: F) -> PeriodicAccess<Self, F>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Calls the `access` closure on `Self` the first time the source is iterated and every\n time `period` elapses.\n\n Later changes in either `sample_rate()` or `channels_count()` won't be reflected in\n the rate of access.\n\n The rate is based on playback speed, so both the following will call `access` when the\n same samples are reached:\n `periodic_access(Duration::from_secs(1), ...).speed(2.0)`\n `speed(2.0).periodic_access(Duration::from_secs(2), ...)`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":85695,"byte_end":85704,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":86031,"byte_end":86036,"line_start":235,"line_end":235,"column_start":8,"column_end":13},"name":"speed","qualname":"::source::Source::speed","value":"fn (self, ratio: f32) -> Speed<Self>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Changes the play speed of the sound. Does not adjust the samples, only the play speed.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":86014,"byte_end":86023,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":86510,"byte_end":86516,"line_start":255,"line_end":255,"column_start":8,"column_end":14},"name":"reverb","qualname":"::source::Source::reverb","value":"fn (self, duration: Duration, amplitude: f32) -> Mix<Self, Delay<Amplify<Self>>>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Adds a basic reverb effect.\n\n This function requires the source to implement `Clone`. This can be done by using\n `buffered()`.\n\n # Example\n\n ```ignore\n use std::time::Duration;\n\n let source = source.buffered().reverb(Duration::from_millis(100), 0.7);\n ```\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":86493,"byte_end":86502,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":86819,"byte_end":86834,"line_start":265,"line_end":265,"column_start":8,"column_end":23},"name":"convert_samples","qualname":"::source::Source::convert_samples","value":"fn <D> (self) -> SamplesConverter<Self, D>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Converts the samples of this source to another type.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":86802,"byte_end":86811,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":87052,"byte_end":87060,"line_start":276,"line_end":276,"column_start":8,"column_end":16},"name":"pausable","qualname":"::source::Source::pausable","value":"fn (self, initially_paused: bool) -> Pausable<Self>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Makes the sound pausable.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":87035,"byte_end":87044,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":87285,"byte_end":87294,"line_start":286,"line_end":286,"column_start":8,"column_end":17},"name":"stoppable","qualname":"::source::Source::stoppable","value":"fn (self) -> Stoppable<Self>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Makes the sound stoppable.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":87268,"byte_end":87277,"line_start":285,"line_end":285,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":87506,"byte_end":87514,"line_start":296,"line_end":296,"column_start":8,"column_end":16},"name":"low_pass","qualname":"::source::Source::low_pass","value":"fn (self, freq: u32) -> BltFilter<Self>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Applies a low-pass filter to the source.\n **Warning**: Probably buggy.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":87489,"byte_end":87498,"line_start":295,"line_end":295,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\static_buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"static_buffer","qualname":"::static_buffer","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\static_buffer.rs","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1445},{"krate":0,"index":1451},{"krate":0,"index":1137},{"krate":0,"index":1140},{"krate":0,"index":1146}],"decl_id":null,"docs":" A simple source of samples coming from a static buffer.\n\n The `StaticSamplesBuffer` struct can be used to treat a list of values as a `Source`.\n\n # Example\n\n ```\n use rodio::static_buffer::StaticSamplesBuffer;\n let _ = StaticSamplesBuffer::new(1, 44100, &[1i16, 2, 3, 4, 5, 6]);\n ```\n\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\static_buffer.rs","byte_start":145924,"byte_end":145943,"line_start":22,"line_end":22,"column_start":12,"column_end":31},"name":"StaticSamplesBuffer","qualname":"::static_buffer::StaticSamplesBuffer","value":"StaticSamplesBuffer {  }","parent":null,"children":[{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450}],"decl_id":null,"docs":" A buffer of samples treated as a source.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\static_buffer.rs","byte_start":146493,"byte_end":146496,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<StaticSamplesBuffer<S>>::new","value":"fn (channels: u16, sample_rate: u32, data: &'static [S]) -> StaticSamplesBuffer<S>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new `StaticSamplesBuffer`.\n\n # Panic\n\n - Panicks if the number of channels is zero.\n - Panicks if the samples rate is zero.\n - Panicks if the length of the buffer is larger than approximatively 16 billion elements.\n   This is because the calculation of the duration would overflow.\n\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":4197,"byte_end":4206,"line_start":126,"line_end":126,"column_start":8,"column_end":17},"name":"play_once","qualname":"::play_once","value":"fn <R> (device: &Device, input: R) -> Result<Sink, decoder::DecoderError>","parent":null,"children":[],"decl_id":null,"docs":" Plays a sound once. Returns a `Sink` that can be used to control the sound.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":4180,"byte_end":4189,"line_start":125,"line_end":125,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\channels.rs","byte_start":5253,"byte_end":5274,"line_start":16,"line_end":16,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\channels.rs","byte_start":5973,"byte_end":5994,"line_start":49,"line_end":49,"column_start":22,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\channels.rs","byte_start":7248,"byte_end":7269,"line_start":96,"line_end":96,"column_start":31,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample.rs","byte_start":8865,"byte_end":8878,"line_start":11,"line_end":11,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample.rs","byte_start":9252,"byte_end":9265,"line_start":28,"line_end":28,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample.rs","byte_start":9607,"byte_end":9620,"line_start":47,"line_end":47,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample_rate.rs","byte_start":13488,"byte_end":13507,"line_start":31,"line_end":31,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample_rate.rs","byte_start":15717,"byte_end":15736,"line_start":116,"line_end":116,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample_rate.rs","byte_start":20497,"byte_end":20516,"line_start":239,"line_end":239,"column_start":31,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":30597,"byte_end":30601,"line_start":35,"line_end":35,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":34659,"byte_end":34663,"line_start":169,"line_end":169,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":36633,"byte_end":36644,"line_start":22,"line_end":22,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\buffer.rs","byte_start":40615,"byte_end":40628,"line_start":28,"line_end":28,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\buffer.rs","byte_start":41702,"byte_end":41715,"line_start":65,"line_end":65,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\buffer.rs","byte_start":42106,"byte_end":42119,"line_start":90,"line_end":90,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\flac.rs","byte_start":50869,"byte_end":50880,"line_start":24,"line_end":24,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\flac.rs","byte_start":51662,"byte_end":51673,"line_start":52,"line_end":52,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\flac.rs","byte_start":52260,"byte_end":52271,"line_start":79,"line_end":79,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mp3.rs","byte_start":54369,"byte_end":54379,"line_start":17,"line_end":17,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mp3.rs","byte_start":54719,"byte_end":54729,"line_start":33,"line_end":33,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mp3.rs","byte_start":55178,"byte_end":55188,"line_start":58,"line_end":58,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\vorbis.rs","byte_start":56052,"byte_end":56065,"line_start":18,"line_end":18,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\vorbis.rs","byte_start":56942,"byte_end":56955,"line_start":49,"line_end":49,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\vorbis.rs","byte_start":57428,"byte_end":57441,"line_start":74,"line_end":74,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\wav.rs","byte_start":59124,"byte_end":59134,"line_start":18,"line_end":18,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\wav.rs","byte_start":59819,"byte_end":59834,"line_start":51,"line_end":51,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\wav.rs","byte_start":60972,"byte_end":60987,"line_start":87,"line_end":87,"column_start":31,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\wav.rs","byte_start":61041,"byte_end":61051,"line_start":93,"line_end":93,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\wav.rs","byte_start":61557,"byte_end":61567,"line_start":119,"line_end":119,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\wav.rs","byte_start":61846,"byte_end":61856,"line_start":136,"line_end":136,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","byte_start":44540,"byte_end":44547,"line_start":45,"line_end":45,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","byte_start":46155,"byte_end":46162,"line_start":103,"line_end":103,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","byte_start":47746,"byte_end":47753,"line_start":158,"line_end":158,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","byte_start":50064,"byte_end":50076,"line_start":226,"line_end":226,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","byte_start":50276,"byte_end":50288,"line_start":234,"line_end":234,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\dynamic_mixer.rs","byte_start":64343,"byte_end":64365,"line_start":49,"line_end":49,"column_start":9,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\dynamic_mixer.rs","byte_start":65181,"byte_end":65193,"line_start":77,"line_end":77,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\dynamic_mixer.rs","byte_start":65598,"byte_end":65610,"line_start":102,"line_end":102,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","byte_start":71055,"byte_end":71072,"line_start":57,"line_end":57,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","byte_start":72528,"byte_end":72546,"line_start":110,"line_end":110,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","byte_start":74044,"byte_end":74062,"line_start":162,"line_end":162,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","byte_start":74777,"byte_end":74795,"line_start":190,"line_end":190,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\amplify.rs","byte_start":89451,"byte_end":89458,"line_start":25,"line_end":25,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\amplify.rs","byte_start":90006,"byte_end":90013,"line_start":51,"line_end":51,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\amplify.rs","byte_start":90354,"byte_end":90361,"line_start":69,"line_end":69,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\amplify.rs","byte_start":90451,"byte_end":90458,"line_start":76,"line_end":76,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":91589,"byte_end":91598,"line_start":35,"line_end":35,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":92221,"byte_end":92230,"line_start":61,"line_end":61,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":93171,"byte_end":93180,"line_start":103,"line_end":103,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":93261,"byte_end":93270,"line_start":109,"line_end":109,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":93787,"byte_end":93797,"line_start":139,"line_end":139,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":94652,"byte_end":94662,"line_start":174,"line_end":174,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\buffered.rs","byte_start":97081,"byte_end":97089,"line_start":100,"line_end":100,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\buffered.rs","byte_start":97980,"byte_end":97988,"line_start":131,"line_end":131,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\buffered.rs","byte_start":99038,"byte_end":99046,"line_start":176,"line_end":176,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\buffered.rs","byte_start":100003,"byte_end":100011,"line_start":214,"line_end":214,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\channel_volume.rs","byte_start":100838,"byte_end":100851,"line_start":21,"line_end":21,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\channel_volume.rs","byte_start":102098,"byte_end":102111,"line_start":72,"line_end":72,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\channel_volume.rs","byte_start":103059,"byte_end":103072,"line_start":105,"line_end":105,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\channel_volume.rs","byte_start":103162,"byte_end":103175,"line_start":112,"line_end":112,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\delay.rs","byte_start":104345,"byte_end":104350,"line_start":30,"line_end":30,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\delay.rs","byte_start":104798,"byte_end":104803,"line_start":54,"line_end":54,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\delay.rs","byte_start":105406,"byte_end":105411,"line_start":81,"line_end":81,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\done.rs","byte_start":106306,"byte_end":106310,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\done.rs","byte_start":106905,"byte_end":106909,"line_start":44,"line_end":44,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\done.rs","byte_start":107273,"byte_end":107277,"line_start":62,"line_end":62,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\empty.rs","byte_start":107895,"byte_end":107900,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\empty.rs","byte_start":108008,"byte_end":108013,"line_start":17,"line_end":17,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\empty.rs","byte_start":108132,"byte_end":108137,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\fadein.rs","byte_start":109092,"byte_end":109098,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\fadein.rs","byte_start":109546,"byte_end":109552,"line_start":53,"line_end":53,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\fadein.rs","byte_start":110153,"byte_end":110159,"line_start":78,"line_end":78,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\fadein.rs","byte_start":110249,"byte_end":110255,"line_start":85,"line_end":85,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\from_factory.rs","byte_start":111362,"byte_end":111377,"line_start":23,"line_end":23,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\from_iter.rs","byte_start":112591,"byte_end":112599,"line_start":38,"line_end":38,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\from_iter.rs","byte_start":113442,"byte_end":113450,"line_start":73,"line_end":73,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mix.rs","byte_start":117338,"byte_end":117341,"line_start":39,"line_end":39,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mix.rs","byte_start":118208,"byte_end":118211,"line_start":76,"line_end":76,"column_start":36,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mix.rs","byte_start":118371,"byte_end":118374,"line_start":85,"line_end":85,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\pausable.rs","byte_start":119549,"byte_end":119557,"line_start":20,"line_end":20,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\pausable.rs","byte_start":120204,"byte_end":120212,"line_start":48,"line_end":48,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\pausable.rs","byte_start":120586,"byte_end":120594,"line_start":70,"line_end":70,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\periodic.rs","byte_start":122316,"byte_end":122330,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\periodic.rs","byte_start":122807,"byte_end":122821,"line_start":69,"line_end":69,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\periodic.rs","byte_start":123343,"byte_end":123357,"line_start":94,"line_end":94,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\repeat.rs","byte_start":125723,"byte_end":125729,"line_start":31,"line_end":31,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\repeat.rs","byte_start":126186,"byte_end":126192,"line_start":55,"line_end":55,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\repeat.rs","byte_start":126958,"byte_end":126964,"line_start":90,"line_end":90,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\samples_converter.rs","byte_start":127662,"byte_end":127678,"line_start":19,"line_end":19,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\samples_converter.rs","byte_start":128258,"byte_end":128274,"line_start":47,"line_end":47,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\samples_converter.rs","byte_start":128614,"byte_end":128630,"line_start":66,"line_end":66,"column_start":34,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\samples_converter.rs","byte_start":128741,"byte_end":128757,"line_start":74,"line_end":74,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\sine.rs","byte_start":129443,"byte_end":129451,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\sine.rs","byte_start":129657,"byte_end":129665,"line_start":24,"line_end":24,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\sine.rs","byte_start":129940,"byte_end":129948,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\spatial.rs","byte_start":130657,"byte_end":130664,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\spatial.rs","byte_start":132187,"byte_end":132194,"line_start":59,"line_end":59,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\spatial.rs","byte_start":132503,"byte_end":132510,"line_start":77,"line_end":77,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\spatial.rs","byte_start":132608,"byte_end":132615,"line_start":84,"line_end":84,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\speed.rs","byte_start":133430,"byte_end":133435,"line_start":21,"line_end":21,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\speed.rs","byte_start":133884,"byte_end":133889,"line_start":46,"line_end":46,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\speed.rs","byte_start":134190,"byte_end":134195,"line_start":64,"line_end":64,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\speed.rs","byte_start":134285,"byte_end":134290,"line_start":71,"line_end":71,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\stoppable.rs","byte_start":135517,"byte_end":135526,"line_start":20,"line_end":20,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\stoppable.rs","byte_start":136036,"byte_end":136045,"line_start":46,"line_end":46,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\stoppable.rs","byte_start":136409,"byte_end":136418,"line_start":68,"line_end":68,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\take.rs","byte_start":137360,"byte_end":137372,"line_start":23,"line_end":23,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\take.rs","byte_start":138159,"byte_end":138171,"line_start":55,"line_end":55,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\take.rs","byte_start":138768,"byte_end":138780,"line_start":80,"line_end":80,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\uniform.rs","byte_start":140771,"byte_end":140792,"line_start":31,"line_end":31,"column_start":12,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1052},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\uniform.rs","byte_start":142168,"byte_end":142189,"line_start":78,"line_end":78,"column_start":25,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\uniform.rs","byte_start":142978,"byte_end":142999,"line_start":114,"line_end":114,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\uniform.rs","byte_start":143533,"byte_end":143537,"line_start":147,"line_end":147,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\uniform.rs","byte_start":144380,"byte_end":144384,"line_start":186,"line_end":186,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\zero.rs","byte_start":144673,"byte_end":144677,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\zero.rs","byte_start":144916,"byte_end":144920,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\zero.rs","byte_start":145077,"byte_end":145081,"line_start":37,"line_end":37,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":87684,"byte_end":87687,"line_start":305,"line_end":305,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":88133,"byte_end":88136,"line_start":330,"line_end":330,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":88589,"byte_end":88592,"line_start":355,"line_end":355,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\static_buffer.rs","byte_start":146080,"byte_end":146099,"line_start":32,"line_end":32,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\static_buffer.rs","byte_start":147127,"byte_end":147146,"line_start":66,"line_end":66,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\static_buffer.rs","byte_start":147537,"byte_end":147556,"line_start":91,"line_end":91,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":3997,"byte_end":4003,"line_start":117,"line_end":117,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":216}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":4013,"byte_end":4020,"line_start":118,"line_end":118,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":242}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":4030,"byte_end":4043,"line_start":119,"line_end":119,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":431}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":4053,"byte_end":4058,"line_start":120,"line_end":120,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":467}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":4068,"byte_end":4074,"line_start":121,"line_end":121,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":513}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\lib.rs","byte_start":4084,"byte_end":4097,"line_start":122,"line_end":122,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":1132}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\channels.rs","byte_start":5253,"byte_end":5274,"line_start":16,"line_end":16,"column_start":9,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\channels.rs","byte_start":5973,"byte_end":5994,"line_start":49,"line_end":49,"column_start":22,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1153},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\channels.rs","byte_start":7248,"byte_end":7269,"line_start":96,"line_end":96,"column_start":31,"column_end":52},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1153},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample.rs","byte_start":8865,"byte_end":8878,"line_start":11,"line_end":11,"column_start":12,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample.rs","byte_start":9252,"byte_end":9265,"line_start":28,"line_end":28,"column_start":25,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1166},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample.rs","byte_start":9607,"byte_end":9620,"line_start":47,"line_end":47,"column_start":34,"column_end":47},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1166},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample.rs","byte_start":10425,"byte_end":10435,"line_start":68,"line_end":68,"column_start":19,"column_end":29},"kind":"SuperTrait","from":{"krate":15,"index":77},"to":{"krate":0,"index":63}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample_rate.rs","byte_start":13488,"byte_end":13507,"line_start":31,"line_end":31,"column_start":9,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample_rate.rs","byte_start":15717,"byte_end":15736,"line_start":116,"line_end":116,"column_start":22,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1179},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\conversions\\sample_rate.rs","byte_start":20497,"byte_end":20516,"line_start":239,"line_end":239,"column_start":31,"column_end":50},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1179},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":30597,"byte_end":30601,"line_start":35,"line_end":35,"column_start":6,"column_end":10},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\sink.rs","byte_start":34659,"byte_end":34663,"line_start":169,"line_end":169,"column_start":15,"column_end":19},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":143},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\spatial_sink.rs","byte_start":36633,"byte_end":36644,"line_start":22,"line_end":22,"column_start":6,"column_end":17},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\buffer.rs","byte_start":40615,"byte_end":40628,"line_start":28,"line_end":28,"column_start":9,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\buffer.rs","byte_start":41702,"byte_end":41715,"line_start":65,"line_end":65,"column_start":20,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":221},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\buffer.rs","byte_start":42106,"byte_end":42119,"line_start":90,"line_end":90,"column_start":22,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":221},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\flac.rs","byte_start":50869,"byte_end":50880,"line_start":24,"line_end":24,"column_start":9,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\flac.rs","byte_start":51662,"byte_end":51673,"line_start":52,"line_end":52,"column_start":20,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":259},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\flac.rs","byte_start":52260,"byte_end":52271,"line_start":79,"line_end":79,"column_start":22,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":259},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mp3.rs","byte_start":54369,"byte_end":54379,"line_start":17,"line_end":17,"column_start":9,"column_end":19},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mp3.rs","byte_start":54719,"byte_end":54729,"line_start":33,"line_end":33,"column_start":20,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":294},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mp3.rs","byte_start":55178,"byte_end":55188,"line_start":58,"line_end":58,"column_start":22,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":294},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\vorbis.rs","byte_start":56052,"byte_end":56065,"line_start":18,"line_end":18,"column_start":9,"column_end":22},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\vorbis.rs","byte_start":56942,"byte_end":56955,"line_start":49,"line_end":49,"column_start":20,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":322},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\vorbis.rs","byte_start":57428,"byte_end":57441,"line_start":74,"line_end":74,"column_start":22,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":322},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\wav.rs","byte_start":59124,"byte_end":59134,"line_start":18,"line_end":18,"column_start":9,"column_end":19},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\wav.rs","byte_start":59819,"byte_end":59834,"line_start":51,"line_end":51,"column_start":22,"column_end":37},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\wav.rs","byte_start":60972,"byte_end":60987,"line_start":87,"line_end":87,"column_start":31,"column_end":46},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\wav.rs","byte_start":61041,"byte_end":61051,"line_start":93,"line_end":93,"column_start":20,"column_end":30},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":356},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\wav.rs","byte_start":61557,"byte_end":61567,"line_start":119,"line_end":119,"column_start":22,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\wav.rs","byte_start":61846,"byte_end":61856,"line_start":136,"line_end":136,"column_start":31,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","byte_start":44540,"byte_end":44547,"line_start":45,"line_end":45,"column_start":9,"column_end":16},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","byte_start":46155,"byte_end":46162,"line_start":103,"line_end":103,"column_start":22,"column_end":29},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","byte_start":47746,"byte_end":47753,"line_start":158,"line_end":158,"column_start":20,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":395},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","byte_start":50064,"byte_end":50076,"line_start":226,"line_end":226,"column_start":23,"column_end":35},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1209},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\decoder\\mod.rs","byte_start":50276,"byte_end":50288,"line_start":234,"line_end":234,"column_start":16,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1209},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\dynamic_mixer.rs","byte_start":64343,"byte_end":64365,"line_start":49,"line_end":49,"column_start":9,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\dynamic_mixer.rs","byte_start":65181,"byte_end":65193,"line_start":77,"line_end":77,"column_start":20,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":452},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\dynamic_mixer.rs","byte_start":65598,"byte_end":65610,"line_start":102,"line_end":102,"column_start":22,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","byte_start":71055,"byte_end":71072,"line_start":57,"line_end":57,"column_start":9,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","byte_start":72528,"byte_end":72546,"line_start":110,"line_end":110,"column_start":20,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":493},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","byte_start":74044,"byte_end":74062,"line_start":162,"line_end":162,"column_start":22,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":493},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\queue.rs","byte_start":74777,"byte_end":74795,"line_start":190,"line_end":190,"column_start":9,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\amplify.rs","byte_start":89451,"byte_end":89458,"line_start":25,"line_end":25,"column_start":9,"column_end":16},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\amplify.rs","byte_start":90006,"byte_end":90013,"line_start":51,"line_end":51,"column_start":22,"column_end":29},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\amplify.rs","byte_start":90354,"byte_end":90361,"line_start":69,"line_end":69,"column_start":31,"column_end":38},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\amplify.rs","byte_start":90451,"byte_end":90458,"line_start":76,"line_end":76,"column_start":20,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1216},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":91589,"byte_end":91598,"line_start":35,"line_end":35,"column_start":9,"column_end":18},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":92221,"byte_end":92230,"line_start":61,"line_end":61,"column_start":22,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1226},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":93171,"byte_end":93180,"line_start":103,"line_end":103,"column_start":31,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1226},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":93261,"byte_end":93270,"line_start":109,"line_end":109,"column_start":20,"column_end":29},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1226},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":93787,"byte_end":93797,"line_start":139,"line_end":139,"column_start":6,"column_end":16},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\blt.rs","byte_start":94652,"byte_end":94662,"line_start":174,"line_end":174,"column_start":6,"column_end":16},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\buffered.rs","byte_start":97081,"byte_end":97089,"line_start":100,"line_end":100,"column_start":9,"column_end":17},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\buffered.rs","byte_start":97980,"byte_end":97988,"line_start":131,"line_end":131,"column_start":22,"column_end":30},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":607},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\buffered.rs","byte_start":99038,"byte_end":99046,"line_start":176,"line_end":176,"column_start":20,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":607},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\buffered.rs","byte_start":100003,"byte_end":100011,"line_start":214,"line_end":214,"column_start":19,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":607},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\channel_volume.rs","byte_start":100838,"byte_end":100851,"line_start":21,"line_end":21,"column_start":9,"column_end":22},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\channel_volume.rs","byte_start":102098,"byte_end":102111,"line_start":72,"line_end":72,"column_start":22,"column_end":35},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1259},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\channel_volume.rs","byte_start":103059,"byte_end":103072,"line_start":105,"line_end":105,"column_start":31,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1259},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\channel_volume.rs","byte_start":103162,"byte_end":103175,"line_start":112,"line_end":112,"column_start":20,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1259},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\delay.rs","byte_start":104345,"byte_end":104350,"line_start":30,"line_end":30,"column_start":9,"column_end":14},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\delay.rs","byte_start":104798,"byte_end":104803,"line_start":54,"line_end":54,"column_start":22,"column_end":27},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1271},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\delay.rs","byte_start":105406,"byte_end":105411,"line_start":81,"line_end":81,"column_start":20,"column_end":25},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1271},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\done.rs","byte_start":106306,"byte_end":106310,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\done.rs","byte_start":106905,"byte_end":106909,"line_start":44,"line_end":44,"column_start":30,"column_end":34},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1282},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\done.rs","byte_start":107273,"byte_end":107277,"line_start":62,"line_end":62,"column_start":20,"column_end":24},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1282},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\empty.rs","byte_start":107895,"byte_end":107900,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\empty.rs","byte_start":108008,"byte_end":108013,"line_start":17,"line_end":17,"column_start":22,"column_end":27},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1293},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\empty.rs","byte_start":108132,"byte_end":108137,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1293},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\fadein.rs","byte_start":109092,"byte_end":109098,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\fadein.rs","byte_start":109546,"byte_end":109552,"line_start":53,"line_end":53,"column_start":22,"column_end":28},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\fadein.rs","byte_start":110153,"byte_end":110159,"line_start":78,"line_end":78,"column_start":31,"column_end":37},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\fadein.rs","byte_start":110249,"byte_end":110255,"line_start":85,"line_end":85,"column_start":20,"column_end":26},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\from_factory.rs","byte_start":111362,"byte_end":111377,"line_start":23,"line_end":23,"column_start":25,"column_end":40},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\from_iter.rs","byte_start":112591,"byte_end":112599,"line_start":38,"line_end":38,"column_start":22,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1316},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\from_iter.rs","byte_start":113442,"byte_end":113450,"line_start":73,"line_end":73,"column_start":20,"column_end":28},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1316},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mix.rs","byte_start":117338,"byte_end":117341,"line_start":39,"line_end":39,"column_start":27,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mix.rs","byte_start":118208,"byte_end":118211,"line_start":76,"line_end":76,"column_start":36,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mix.rs","byte_start":118371,"byte_end":118374,"line_start":85,"line_end":85,"column_start":25,"column_end":28},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1323},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\pausable.rs","byte_start":119549,"byte_end":119557,"line_start":20,"line_end":20,"column_start":9,"column_end":17},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\pausable.rs","byte_start":120204,"byte_end":120212,"line_start":48,"line_end":48,"column_start":22,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1332},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\pausable.rs","byte_start":120586,"byte_end":120594,"line_start":70,"line_end":70,"column_start":20,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1332},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\periodic.rs","byte_start":122316,"byte_end":122330,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\periodic.rs","byte_start":122807,"byte_end":122821,"line_start":69,"line_end":69,"column_start":25,"column_end":39},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\periodic.rs","byte_start":123343,"byte_end":123357,"line_start":94,"line_end":94,"column_start":23,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1342},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\repeat.rs","byte_start":125723,"byte_end":125729,"line_start":31,"line_end":31,"column_start":22,"column_end":28},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\repeat.rs","byte_start":126186,"byte_end":126192,"line_start":55,"line_end":55,"column_start":20,"column_end":26},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":880},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\repeat.rs","byte_start":126958,"byte_end":126964,"line_start":90,"line_end":90,"column_start":19,"column_end":25},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\samples_converter.rs","byte_start":127662,"byte_end":127678,"line_start":19,"line_end":19,"column_start":12,"column_end":28},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\samples_converter.rs","byte_start":128258,"byte_end":128274,"line_start":47,"line_end":47,"column_start":25,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1357},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\samples_converter.rs","byte_start":128614,"byte_end":128630,"line_start":66,"line_end":66,"column_start":34,"column_end":50},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1357},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\samples_converter.rs","byte_start":128741,"byte_end":128757,"line_start":74,"line_end":74,"column_start":23,"column_end":39},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1357},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\sine.rs","byte_start":129443,"byte_end":129451,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\sine.rs","byte_start":129657,"byte_end":129665,"line_start":24,"line_end":24,"column_start":19,"column_end":27},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1366},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\sine.rs","byte_start":129940,"byte_end":129948,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1366},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\spatial.rs","byte_start":130657,"byte_end":130664,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\spatial.rs","byte_start":132187,"byte_end":132194,"line_start":59,"line_end":59,"column_start":22,"column_end":29},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\spatial.rs","byte_start":132503,"byte_end":132510,"line_start":77,"line_end":77,"column_start":31,"column_end":38},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\spatial.rs","byte_start":132608,"byte_end":132615,"line_start":84,"line_end":84,"column_start":20,"column_end":27},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1373},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\speed.rs","byte_start":133430,"byte_end":133435,"line_start":21,"line_end":21,"column_start":9,"column_end":14},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\speed.rs","byte_start":133884,"byte_end":133889,"line_start":46,"line_end":46,"column_start":22,"column_end":27},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\speed.rs","byte_start":134190,"byte_end":134195,"line_start":64,"line_end":64,"column_start":31,"column_end":36},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\speed.rs","byte_start":134285,"byte_end":134290,"line_start":71,"line_end":71,"column_start":20,"column_end":25},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1382},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\stoppable.rs","byte_start":135517,"byte_end":135526,"line_start":20,"line_end":20,"column_start":9,"column_end":18},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\stoppable.rs","byte_start":136036,"byte_end":136045,"line_start":46,"line_end":46,"column_start":22,"column_end":31},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1392},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\stoppable.rs","byte_start":136409,"byte_end":136418,"line_start":68,"line_end":68,"column_start":20,"column_end":29},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1392},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\take.rs","byte_start":137360,"byte_end":137372,"line_start":23,"line_end":23,"column_start":9,"column_end":21},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\take.rs","byte_start":138159,"byte_end":138171,"line_start":55,"line_end":55,"column_start":22,"column_end":34},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1402},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\take.rs","byte_start":138768,"byte_end":138780,"line_start":80,"line_end":80,"column_start":20,"column_end":32},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1402},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\uniform.rs","byte_start":140771,"byte_end":140792,"line_start":31,"line_end":31,"column_start":12,"column_end":33},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\uniform.rs","byte_start":142168,"byte_end":142189,"line_start":78,"line_end":78,"column_start":25,"column_end":46},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\uniform.rs","byte_start":142978,"byte_end":142999,"line_start":114,"line_end":114,"column_start":23,"column_end":44},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1413},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\uniform.rs","byte_start":143533,"byte_end":143537,"line_start":147,"line_end":147,"column_start":22,"column_end":26},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1424},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\uniform.rs","byte_start":144380,"byte_end":144384,"line_start":186,"line_end":186,"column_start":31,"column_end":35},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1424},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\zero.rs","byte_start":144673,"byte_end":144677,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\zero.rs","byte_start":144916,"byte_end":144920,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\zero.rs","byte_start":145077,"byte_end":145081,"line_start":37,"line_end":37,"column_start":20,"column_end":24},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1434},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":82593,"byte_end":82601,"line_start":120,"line_end":120,"column_start":19,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3653},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":87684,"byte_end":87687,"line_start":305,"line_end":305,"column_start":20,"column_end":23},"kind":{"Impl":{"id":120}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":88133,"byte_end":88136,"line_start":330,"line_end":330,"column_start":20,"column_end":23},"kind":{"Impl":{"id":121}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\source\\mod.rs","byte_start":88589,"byte_end":88592,"line_start":355,"line_end":355,"column_start":20,"column_end":23},"kind":{"Impl":{"id":122}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\static_buffer.rs","byte_start":146080,"byte_end":146099,"line_start":32,"line_end":32,"column_start":9,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\static_buffer.rs","byte_start":147127,"byte_end":147146,"line_start":66,"line_end":66,"column_start":20,"column_end":39},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1445},"to":{"krate":0,"index":1092}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rodio-0.9.0\\src\\static_buffer.rs","byte_start":147537,"byte_end":147556,"line_start":91,"line_end":91,"column_start":22,"column_end":41},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1445},"to":{"krate":2,"index":3653}}]}