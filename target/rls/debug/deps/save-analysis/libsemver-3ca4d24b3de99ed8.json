{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","semver","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"serde\"","-C","metadata=3ca4d24b3de99ed8","-C","extra-filename=-3ca4d24b3de99ed8","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--extern","semver_parser=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libsemver_parser-6e0db1160a4d6fc0.rmeta","--extern","serde=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libserde-2a896fb95a925c1e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libsemver-3ca4d24b3de99ed8.rmeta"},"prelude":{"crate_id":{"name":"semver","disambiguator":[11830488384403117037,10236351128320695191]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","num":14,"id":{"name":"semver_parser","disambiguator":[4379643248955657422,17962576801092161360]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","num":15,"id":{"name":"serde","disambiguator":[16831666952140436121,16703902071327022250]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","byte_start":472,"byte_end":5672,"line_start":11,"line_end":182,"column_start":1,"column_end":17}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","byte_start":5440,"byte_end":5447,"line_start":174,"line_end":174,"column_start":19,"column_end":26},"alias_span":null,"name":"Version","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","byte_start":5449,"byte_end":5459,"line_start":174,"line_end":174,"column_start":28,"column_end":38},"alias_span":null,"name":"Identifier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","byte_start":5461,"byte_end":5472,"line_start":174,"line_end":174,"column_start":40,"column_end":51},"alias_span":null,"name":"SemVerError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","byte_start":5505,"byte_end":5512,"line_start":175,"line_end":175,"column_start":31,"column_end":38},"alias_span":null,"name":"Numeric","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","byte_start":5514,"byte_end":5526,"line_start":175,"line_end":175,"column_start":40,"column_end":52},"alias_span":null,"name":"AlphaNumeric","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","byte_start":5551,"byte_end":5561,"line_start":176,"line_end":176,"column_start":23,"column_end":33},"alias_span":null,"name":"VersionReq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","byte_start":5563,"byte_end":5576,"line_start":176,"line_end":176,"column_start":35,"column_end":48},"alias_span":null,"name":"ReqParseError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","byte_start":472,"byte_end":5672,"line_start":11,"line_end":182,"column_start":1,"column_end":17},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":101}],"decl_id":null,"docs":" Semantic version parsing and comparison.\n\n Semantic versioning (see http://semver.org/) is a set of rules for\n assigning version numbers.\n\n ## SemVer overview\n\n Given a version number MAJOR.MINOR.PATCH, increment the:\n\n 1. MAJOR version when you make incompatible API changes,\n 2. MINOR version when you add functionality in a backwards-compatible\n    manner, and\n 3. PATCH version when you make backwards-compatible bug fixes.\n\n Additional labels for pre-release and build metadata are available as\n extensions to the MAJOR.MINOR.PATCH format.\n\n Any references to 'the spec' in this documentation refer to [version 2.0 of\n the SemVer spec](http://semver.org/spec/v2.0.0.html).\n\n ## SemVer and the Rust ecosystem\n\n Rust itself follows the SemVer specification, as does its standard\n libraries. The two are not tied together.\n\n [Cargo](http://crates.io), Rust's package manager, uses SemVer to determine\n which versions of packages you need installed.\n\n ## Versions\n\n At its simplest, the `semver` crate allows you to construct `Version`\n objects using the `parse` method:\n\n ```{rust}\n use semver::Version;\n\n assert!(Version::parse(\"1.2.3\") == Ok(Version {\n    major: 1,\n    minor: 2,\n    patch: 3,\n    pre: vec!(),\n    build: vec!(),\n }));\n ```\n\n If you have multiple `Version`s, you can use the usual comparison operators\n to compare them:\n\n ```{rust}\n use semver::Version;\n\n assert!(Version::parse(\"1.2.3-alpha\") != Version::parse(\"1.2.3-beta\"));\n assert!(Version::parse(\"1.2.3-alpha2\") >  Version::parse(\"1.2.0\"));\n ```\n\n If you explicitly need to modify a Version, SemVer also allows you to\n increment the major, minor, and patch numbers in accordance with the spec.\n\n Please note that in order to do this, you must use a mutable Version:\n\n ```{rust}\n use semver::Version;\n\n let mut bugfix_release = Version::parse(\"1.0.0\").unwrap();\n bugfix_release.increment_patch();\n\n assert_eq!(Ok(bugfix_release), Version::parse(\"1.0.1\"));\n ```\n\n When incrementing the minor version number, the patch number resets to zero\n (in accordance with section 7 of the spec)\n\n ```{rust}\n use semver::Version;\n\n let mut feature_release = Version::parse(\"1.4.6\").unwrap();\n feature_release.increment_minor();\n\n assert_eq!(Ok(feature_release), Version::parse(\"1.5.0\"));\n ```\n\n Similarly, when incrementing the major version number, the patch and minor\n numbers reset to zero (in accordance with section 8 of the spec)\n\n ```{rust}\n use semver::Version;\n\n let mut chrome_release = Version::parse(\"41.5.5377\").unwrap();\n chrome_release.increment_major();\n\n assert_eq!(Ok(chrome_release), Version::parse(\"42.0.0\"));\n ```\n\n ## Requirements\n\n The `semver` crate also provides the ability to compare requirements, which\n are more complex comparisons.\n\n For example, creating a requirement that only matches versions greater than\n or equal to 1.0.0:\n\n ```{rust}\n # #![allow(unstable)]\n use semver::Version;\n use semver::VersionReq;\n\n let r = VersionReq::parse(\">= 1.0.0\").unwrap();\n let v = Version::parse(\"1.0.0\").unwrap();\n\n assert!(r.to_string() == \">= 1.0.0\".to_string());\n assert!(r.matches(&v))\n ```\n\n It also allows parsing of `~x.y.z` and `^x.y.z` requirements as defined at\n https://www.npmjs.org/doc/misc/semver.html\n\n **Tilde requirements** specify a minimal version with some updates:\n\n ```notrust\n ~1.2.3 := >=1.2.3 <1.3.0\n ~1.2   := >=1.2.0 <1.3.0\n ~1     := >=1.0.0 <2.0.0\n ```\n\n **Caret requirements** allow SemVer compatible updates to a specified\n verion, `0.x` and `0.x+1` are not considered compatible, but `1.x` and\n `1.x+1` are.\n\n `0.0.x` is not considered compatible with any other version.\n Missing minor and patch versions are desugared to `0` but allow flexibility\n for that value.\n\n ```notrust\n ^1.2.3 := >=1.2.3 <2.0.0\n ^0.2.3 := >=0.2.3 <0.3.0\n ^0.0.3 := >=0.0.3 <0.0.4\n ^0.0   := >=0.0.0 <0.1.0\n ^0     := >=0.0.0 <1.0.0\n ```\n\n **Wildcard requirements** allows parsing of version requirements of the\n formats `*`, `x.*` and `x.y.*`.\n\n ```notrust\n *     := >=0.0.0\n 1.*   := >=1.0.0 <2.0.0\n 1.2.* := >=1.2.0 <1.3.0\n ```\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\lib.rs","byte_start":5095,"byte_end":5117,"line_start":162,"line_end":162,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":6824,"byte_end":6831,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"Numeric","qualname":"::version::Identifier::Numeric","value":"Identifier::Numeric(u64)","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" An identifier that's solely numbers.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":6890,"byte_end":6902,"line_start":38,"line_end":38,"column_start":5,"column_end":17},"name":"AlphaNumeric","qualname":"::version::Identifier::AlphaNumeric","value":"Identifier::AlphaNumeric(String)","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" An identifier with letters and numbers.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":6762,"byte_end":6772,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"name":"Identifier","qualname":"::version::Identifier","value":"Identifier::{Numeric, AlphaNumeric}","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":190}],"decl_id":null,"docs":" An identifier in the pre-release or build metadata.\n\n See sections 9 and 10 of the spec for more about pre-release identifers and\n build metadata.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":9124,"byte_end":9131,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"Version","qualname":"::version::Version","value":"Version { major, minor, patch, pre, build }","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"decl_id":null,"docs":" Represents a version number conforming to the semantic versioning scheme.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":9212,"byte_end":9217,"line_start":109,"line_end":109,"column_start":9,"column_end":14},"name":"major","qualname":"::version::Version::major","value":"u64","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" The major version, to be incremented on incompatible changes.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":9347,"byte_end":9352,"line_start":112,"line_end":112,"column_start":9,"column_end":14},"name":"minor","qualname":"::version::Version::minor","value":"u64","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" The minor version, to be incremented when functionality is added in a\n backwards-compatible manner.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":9466,"byte_end":9471,"line_start":115,"line_end":115,"column_start":9,"column_end":14},"name":"patch","qualname":"::version::Version::patch","value":"u64","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" The patch version, to be incremented when backwards-compatible bug\n fixes are made.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":9545,"byte_end":9548,"line_start":117,"line_end":117,"column_start":9,"column_end":12},"name":"pre","qualname":"::version::Version::pre","value":"std::vec::Vec<version::Identifier>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" The pre-release version identifier, if one exists.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":9648,"byte_end":9653,"line_start":119,"line_end":119,"column_start":9,"column_end":14},"name":"build","qualname":"::version::Version::build","value":"std::vec::Vec<version::Identifier>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" The build metadata, ignored when determining version precedence.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":11317,"byte_end":11327,"line_start":176,"line_end":176,"column_start":5,"column_end":15},"name":"ParseError","qualname":"::version::SemVerError::ParseError","value":"SemVerError::ParseError(String)","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" An error ocurred while parsing.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":11259,"byte_end":11270,"line_start":174,"line_end":174,"column_start":10,"column_end":21},"name":"SemVerError","qualname":"::version::SemVerError","value":"SemVerError::{ParseError}","parent":null,"children":[{"krate":0,"index":229}],"decl_id":null,"docs":" An error type for this crate\n\n Currently, just a generic error. Will make this nicer later.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":11863,"byte_end":11866,"line_start":201,"line_end":201,"column_start":12,"column_end":15},"name":"new","qualname":"<Version>::new","value":"fn (major: u64, minor: u64, patch: u64) -> Version","parent":null,"children":[],"decl_id":null,"docs":" Contructs the simple case without pre or build.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":12144,"byte_end":12149,"line_start":212,"line_end":212,"column_start":12,"column_end":17},"name":"parse","qualname":"<Version>::parse","value":"fn (version: &str) -> Result<Version>","parent":null,"children":[],"decl_id":null,"docs":" Parse a string into a semver object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":12664,"byte_end":12679,"line_start":229,"line_end":229,"column_start":12,"column_end":27},"name":"increment_patch","qualname":"<Version>::increment_patch","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Increments the patch number for this Version (Must be mutable)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":12934,"byte_end":12949,"line_start":237,"line_end":237,"column_start":12,"column_end":27},"name":"increment_minor","qualname":"<Version>::increment_minor","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Increments the minor version number for this Version (Must be mutable)\n\n As instructed by section 7 of the spec, the patch number is reset to 0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":13247,"byte_end":13262,"line_start":247,"line_end":247,"column_start":12,"column_end":27},"name":"increment_major","qualname":"<Version>::increment_major","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Increments the major version number for this Version (Must be mutable)\n\n As instructed by section 8 of the spec, the minor and patch numbers are\n reset to 0\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":13468,"byte_end":13481,"line_start":255,"line_end":255,"column_start":12,"column_end":25},"name":"is_prerelease","qualname":"<Version>::is_prerelease","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks to see if the current Version is in pre-release status\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":33494,"byte_end":33504,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"VersionReq","qualname":"::version_req::VersionReq","value":"VersionReq {  }","parent":null,"children":[{"krate":0,"index":247}],"decl_id":null,"docs":" A `VersionReq` is a struct containing a list of predicates that can apply to ranges of version\n numbers. Matching operations can then be done with the `VersionReq` against a particular\n version to see if it satisfies some or all of the constraints.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":36992,"byte_end":37017,"line_start":146,"line_end":146,"column_start":5,"column_end":30},"name":"InvalidVersionRequirement","qualname":"::version_req::ReqParseError::InvalidVersionRequirement","value":"ReqParseError::InvalidVersionRequirement","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" The given version requirement is invalid.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":37111,"byte_end":37123,"line_start":148,"line_end":148,"column_start":5,"column_end":17},"name":"OpAlreadySet","qualname":"::version_req::ReqParseError::OpAlreadySet","value":"ReqParseError::OpAlreadySet","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" You have already provided an operation, such as `=`, `~`, or `^`. Only use one.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":37180,"byte_end":37192,"line_start":150,"line_end":150,"column_start":5,"column_end":17},"name":"InvalidSigil","qualname":"::version_req::ReqParseError::InvalidSigil","value":"ReqParseError::InvalidSigil","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" The sigil you have written is not correct.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":37251,"byte_end":37281,"line_start":152,"line_end":152,"column_start":5,"column_end":35},"name":"VersionComponentsMustBeNumeric","qualname":"::version_req::ReqParseError::VersionComponentsMustBeNumeric","value":"ReqParseError::VersionComponentsMustBeNumeric","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" All components of a version must be numeric.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":37337,"byte_end":37354,"line_start":154,"line_end":154,"column_start":5,"column_end":22},"name":"InvalidIdentifier","qualname":"::version_req::ReqParseError::InvalidIdentifier","value":"ReqParseError::InvalidIdentifier","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" There was an error parsing an identifier.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":37406,"byte_end":37426,"line_start":156,"line_end":156,"column_start":5,"column_end":25},"name":"MajorVersionRequired","qualname":"::version_req::ReqParseError::MajorVersionRequired","value":"ReqParseError::MajorVersionRequired","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" At least a major version is required.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":37478,"byte_end":37509,"line_start":158,"line_end":158,"column_start":5,"column_end":36},"name":"UnimplementedVersionRequirement","qualname":"::version_req::ReqParseError::UnimplementedVersionRequirement","value":"ReqParseError::UnimplementedVersionRequirement","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" An unimplemented version requirement.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":37563,"byte_end":37591,"line_start":160,"line_end":160,"column_start":5,"column_end":33},"name":"DeprecatedVersionRequirement","qualname":"::version_req::ReqParseError::DeprecatedVersionRequirement","value":"ReqParseError::DeprecatedVersionRequirement(VersionReq)","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" This form of requirement is deprecated.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":36922,"byte_end":36935,"line_start":144,"line_end":144,"column_start":10,"column_end":23},"name":"ReqParseError","qualname":"::version_req::ReqParseError","value":"ReqParseError::{InvalidVersionRequirement, OpAlreadySet, InvalidSigil, VersionComponentsMustBeNumeric, InvalidIdentifier, MajorVersionRequired, UnimplementedVersionRequirement, DeprecatedVersionRequirement}","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":393}],"decl_id":null,"docs":" A `ReqParseError` is returned from methods which parse a string into a `VersionReq`. Each\n enumeration is one of the possible errors that can occur.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":39268,"byte_end":39271,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"any","qualname":"<VersionReq>::any","value":"fn () -> VersionReq","parent":null,"children":[],"decl_id":null,"docs":" `any()` is a factory method which creates a `VersionReq` with no constraints. In other\n words, any version will match against it.\n\n # Examples\n\n ```\n use semver::VersionReq;\n\n let anything = VersionReq::any();\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":40523,"byte_end":40528,"line_start":244,"line_end":244,"column_start":12,"column_end":17},"name":"parse","qualname":"<VersionReq>::parse","value":"fn (input: &str) -> Result<VersionReq, ReqParseError>","parent":null,"children":[],"decl_id":null,"docs":" `parse()` is the main constructor of a `VersionReq`. It takes a string like `\"^1.2.3\"`\n and turns it into a `VersionReq` that matches that particular constraint.\n\n A `Result` is returned which contains a `ReqParseError` if there was a problem parsing the\n `VersionReq`.\n\n # Examples\n\n ```\n use semver::VersionReq;\n\n let version = VersionReq::parse(\"=1.2.3\");\n let version = VersionReq::parse(\">1.2.3\");\n let version = VersionReq::parse(\"<1.2.3\");\n let version = VersionReq::parse(\"~1.2.3\");\n let version = VersionReq::parse(\"^1.2.3\");\n let version = VersionReq::parse(\"1.2.3\"); // synonym for ^1.2.3\n let version = VersionReq::parse(\"<=1.2.3\");\n let version = VersionReq::parse(\">=1.2.3\");\n ```\n\n This example demonstrates error handling, and will panic.\n\n ```should-panic\n use semver::VersionReq;\n\n let version = match VersionReq::parse(\"not a version\") {\n     Ok(version) => version,\n     Err(e) => panic!(\"There was a problem parsing: {}\", e),\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":41754,"byte_end":41759,"line_start":281,"line_end":281,"column_start":12,"column_end":17},"name":"exact","qualname":"<VersionReq>::exact","value":"fn (version: &Version) -> VersionReq","parent":null,"children":[],"decl_id":null,"docs":" `exact()` is a factory method which creates a `VersionReq` with one exact constraint.\n\n # Examples\n\n ```\n use semver::VersionReq;\n use semver::Version;\n\n let version = Version { major: 1, minor: 1, patch: 1, pre: vec![], build: vec![] };\n let exact = VersionReq::exact(&version);\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":42272,"byte_end":42279,"line_start":298,"line_end":298,"column_start":12,"column_end":19},"name":"matches","qualname":"<VersionReq>::matches","value":"fn (&self, version: &Version) -> bool","parent":null,"children":[],"decl_id":null,"docs":" `matches()` matches a given `Version` against this `VersionReq`.\n\n # Examples\n\n ```\n use semver::VersionReq;\n use semver::Version;\n\n let version = Version { major: 1, minor: 1, patch: 1, pre: vec![], build: vec![] };\n let exact = VersionReq::exact(&version);\n\n assert!(exact.matches(&version));\n ```\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":6965,"byte_end":6975,"line_start":41,"line_end":41,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":7294,"byte_end":7304,"line_start":50,"line_end":50,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":7605,"byte_end":7615,"line_start":61,"line_end":61,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":8025,"byte_end":8035,"line_start":74,"line_end":74,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":8281,"byte_end":8298,"line_start":81,"line_end":81,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":9722,"byte_end":9729,"line_start":122,"line_end":122,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":10111,"byte_end":10118,"line_start":135,"line_end":135,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":10377,"byte_end":10384,"line_start":145,"line_end":145,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":10614,"byte_end":10628,"line_start":152,"line_end":152,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":11362,"byte_end":11373,"line_start":179,"line_end":179,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":11557,"byte_end":11568,"line_start":187,"line_end":187,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":11785,"byte_end":11792,"line_start":198,"line_end":198,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":13559,"byte_end":13566,"line_start":260,"line_end":260,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":13701,"byte_end":13708,"line_start":268,"line_end":268,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":14463,"byte_end":14470,"line_start":294,"line_end":294,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":14891,"byte_end":14898,"line_start":305,"line_end":305,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":15023,"byte_end":15030,"line_start":311,"line_end":311,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":15840,"byte_end":15847,"line_start":340,"line_end":340,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":16062,"byte_end":16069,"line_start":349,"line_end":349,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":33590,"byte_end":33600,"line_start":37,"line_end":37,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":33816,"byte_end":33826,"line_start":44,"line_end":44,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":34088,"byte_end":34098,"line_start":54,"line_end":54,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":34337,"byte_end":34354,"line_start":61,"line_end":61,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":35366,"byte_end":35368,"line_start":98,"line_end":98,"column_start":41,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":36404,"byte_end":36413,"line_start":129,"line_end":129,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":37630,"byte_end":37643,"line_start":163,"line_end":163,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":37763,"byte_end":37776,"line_start":169,"line_end":169,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":38618,"byte_end":38631,"line_start":188,"line_end":188,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":38958,"byte_end":38968,"line_start":198,"line_end":198,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":42606,"byte_end":42616,"line_start":309,"line_end":309,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":42757,"byte_end":42766,"line_start":317,"line_end":317,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":48055,"byte_end":48065,"line_start":489,"line_end":489,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":48538,"byte_end":48547,"line_start":507,"line_end":507,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":49830,"byte_end":49832,"line_start":548,"line_end":548,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":6965,"byte_end":6975,"line_start":41,"line_end":41,"column_start":51,"column_end":61},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":186},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":7294,"byte_end":7304,"line_start":50,"line_end":50,"column_start":23,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":186},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":7605,"byte_end":7615,"line_start":61,"line_end":61,"column_start":20,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":186},"to":{"krate":15,"index":1637}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":8025,"byte_end":8035,"line_start":74,"line_end":74,"column_start":32,"column_end":42},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":186},"to":{"krate":15,"index":1192}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":8281,"byte_end":8298,"line_start":81,"line_end":81,"column_start":36,"column_end":53},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":44},"to":{"krate":15,"index":1276}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":9722,"byte_end":9729,"line_start":122,"line_end":122,"column_start":48,"column_end":55},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":10111,"byte_end":10118,"line_start":135,"line_end":135,"column_start":20,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":215},"to":{"krate":15,"index":1637}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":10377,"byte_end":10384,"line_start":145,"line_end":145,"column_start":32,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":215},"to":{"krate":15,"index":1192}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":10614,"byte_end":10628,"line_start":152,"line_end":152,"column_start":36,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":63},"to":{"krate":15,"index":1276}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":11362,"byte_end":11373,"line_start":179,"line_end":179,"column_start":23,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":228},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":11557,"byte_end":11568,"line_start":187,"line_end":187,"column_start":16,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":228},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":11785,"byte_end":11792,"line_start":198,"line_end":198,"column_start":6,"column_end":13},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":13559,"byte_end":13566,"line_start":260,"line_end":260,"column_start":23,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":6815}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":13701,"byte_end":13708,"line_start":268,"line_end":268,"column_start":23,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":14463,"byte_end":14470,"line_start":294,"line_end":294,"column_start":25,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":14891,"byte_end":14898,"line_start":305,"line_end":305,"column_start":26,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":2077}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":15023,"byte_end":15030,"line_start":311,"line_end":311,"column_start":19,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":2066}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":15840,"byte_end":15847,"line_start":340,"line_end":340,"column_start":21,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version.rs","byte_start":16062,"byte_end":16069,"line_start":349,"line_end":349,"column_start":30,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":33590,"byte_end":33600,"line_start":37,"line_end":37,"column_start":49,"column_end":59},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":33816,"byte_end":33826,"line_start":44,"line_end":44,"column_start":20,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":246},"to":{"krate":15,"index":1637}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":34088,"byte_end":34098,"line_start":54,"line_end":54,"column_start":32,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":246},"to":{"krate":15,"index":1192}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":34337,"byte_end":34354,"line_start":61,"line_end":61,"column_start":36,"column_end":53},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":140},"to":{"krate":15,"index":1276}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":35366,"byte_end":35368,"line_start":98,"line_end":98,"column_start":41,"column_end":43},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":294},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":36404,"byte_end":36413,"line_start":129,"line_end":129,"column_start":48,"column_end":57},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":37630,"byte_end":37643,"line_start":163,"line_end":163,"column_start":23,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":37763,"byte_end":37776,"line_start":169,"line_end":169,"column_start":16,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":378},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":38618,"byte_end":38631,"line_start":188,"line_end":188,"column_start":23,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":38958,"byte_end":38968,"line_start":198,"line_end":198,"column_start":6,"column_end":16},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":42606,"byte_end":42616,"line_start":309,"line_end":309,"column_start":23,"column_end":33},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":6815}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":42757,"byte_end":42766,"line_start":317,"line_end":317,"column_start":6,"column_end":15},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":48055,"byte_end":48065,"line_start":489,"line_end":489,"column_start":23,"column_end":33},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":48538,"byte_end":48547,"line_start":507,"line_end":507,"column_start":23,"column_end":32},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\semver-0.9.0\\src\\version_req.rs","byte_start":49830,"byte_end":49832,"line_start":548,"line_end":548,"column_start":23,"column_end":25},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":294},"to":{"krate":2,"index":7648}}]}