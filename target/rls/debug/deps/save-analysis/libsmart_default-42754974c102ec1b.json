{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","smart_default","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","proc-macro","--emit=dep-info,link","-C","prefer-dynamic","-C","debuginfo=2","-C","metadata=42754974c102ec1b","-C","extra-filename=-42754974c102ec1b","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--extern","proc_macro2=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libproc_macro2-9c5c3b91993e7f46.rlib","--extern","quote=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libquote-ff49ed988580cdb8.rlib","--extern","syn=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libsyn-2b0730359f4f085b.rlib","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\smart_default-42754974c102ec1b.dll"},"prelude":{"crate_id":{"name":"smart_default","disambiguator":[4219905306800985627,17975484927296300282]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":14,"id":{"name":"proc_macro","disambiguator":[10563531739546302590,971289991546242127]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":15,"id":{"name":"proc_macro2","disambiguator":[17520048794609830858,18155690968216592926]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":16,"id":{"name":"unicode_xid","disambiguator":[14445025557903462131,9097206819433286797]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":17,"id":{"name":"syn","disambiguator":[15666796787743624003,5576019380429387652]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","num":18,"id":{"name":"quote","disambiguator":[651987496676725507,17069668937103049513]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","byte_start":0,"byte_end":2909,"line_start":1,"line_end":84,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","byte_start":0,"byte_end":2909,"line_start":1,"line_end":84,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":29},{"krate":0,"index":47},{"krate":0,"index":57},{"krate":0,"index":68}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","byte_start":2578,"byte_end":2598,"line_start":74,"line_end":74,"column_start":8,"column_end":28},"name":"derive_smart_default","qualname":"::derive_smart_default","value":"fn (input: proc_macro::TokenStream) -> proc_macro::TokenStream","parent":null,"children":[],"decl_id":null,"docs":" # Smart Default\n\n This crate provides a custom derive for `SmartDefault`. `SmartDefault` is not a real type -\n deriving it will actually `impl Default`. The difference from regular `#[derive(Default)]` is\n that `#[derive(SmartDefault)]` allows you to use `#[default = \"...\"]` attributes to customize\n the `::default()` method and to support `struct`s that don't have `Default` for all their\n fields - and even `enum`s!\n\n # Examples\n\n ```\n #[macro_use]\n extern crate smart_default;\n\n # fn main() {\n #[derive(SmartDefault)]\n # #[derive(PartialEq)]\n # #[allow(dead_code)]\n enum Foo {\n     Bar,\n     #[default]\n     Baz {\n         #[default = 12]\n         a: i32,\n         b: i32,\n         #[default(Some(Default::default()))]\n         c: Option<i32>,\n         #[default(_code = \"vec![1, 2, 3]\")]\n         d: Vec<u32>,\n         #[default = \"four\"]\n         e: String,\n     },\n     Qux(i32),\n }\n\n assert!(Foo::default() == Foo::Baz {\n     a: 12,\n     b: 0,\n     c: Some(0),\n     d: vec![1, 2, 3],\n     e: \"four\".to_owned(),\n });\n # }\n ```\n\n * `Baz` has the `#[default]` attribute. This means that the default `Foo` is a `Foo::Baz`. Only\n   one variant may have a `#[default]` attribute, and that attribute must have no value.\n * `a` has a `#[default = 12]` attribute. This means that it's default value is `12`.\n * `b` has no `#[default = ...]` attribute. It's default value will `i32`'s default value\n   instead - `0`.\n * `c` is an `Option<i32>`, and it's default is `Some(Default::default())`. Rust cannot (currently)\n   parse `#[default = Some(Default::default())]` and therefore we have to use a special syntax:\n   `#[default(Some(Default::default))]`\n * `d` has the `!` token in it, which cannot (currently) be parsed even with `#[default(...)]`,\n   so we have to encode it as a string and mark it as `_code = `.\n * `e` is a `String`, so the string literal \"four\" is automatically converted to it. This\n   automatic conversion **only** happens to string (or byte string) literals - and only if\n   `_code` is not used.\n * Documentation for the `impl Default` section is generated automatically, specifying the\n   default value returned from `::default()`.\n","sig":null,"attributes":[{"value":"proc_macro_derive(SmartDefault, attributes (default))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\lib.rs","byte_start":2515,"byte_end":2570,"line_start":73,"line_end":73,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\default_attr.rs","byte_start":8340,"byte_end":8351,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\smart-default-0.5.2\\src\\default_attr.rs","byte_start":8340,"byte_end":8351,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}}]}