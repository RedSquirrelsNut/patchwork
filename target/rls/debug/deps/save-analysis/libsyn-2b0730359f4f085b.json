{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","syn","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","--cfg","feature=\"clone-impls\"","--cfg","feature=\"default\"","--cfg","feature=\"derive\"","--cfg","feature=\"full\"","--cfg","feature=\"parsing\"","--cfg","feature=\"printing\"","--cfg","feature=\"proc-macro\"","--cfg","feature=\"quote\"","--cfg","feature=\"visit\"","-C","metadata=2b0730359f4f085b","-C","extra-filename=-2b0730359f4f085b","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--extern","proc_macro2=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libproc_macro2-9c5c3b91993e7f46.rmeta","--extern","quote=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libquote-ff49ed988580cdb8.rmeta","--extern","unicode_xid=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libunicode_xid-a2a0e1b2f4acbb23.rmeta","--cap-lints","allow","--cfg","syn_can_match_trailing_dollar","--cfg","syn_can_use_thread_id","--cfg","syn_can_use_associated_constants","--cfg","syn_can_call_macro_by_path","--cfg","syn_disable_nightly_tests","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libsyn-2b0730359f4f085b.rmeta"},"prelude":{"crate_id":{"name":"syn","disambiguator":[15666796787743624003,5576019380429387652]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":14,"id":{"name":"proc_macro","disambiguator":[10563531739546302590,971289991546242127]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":15,"id":{"name":"proc_macro2","disambiguator":[17520048794609830858,18155690968216592926]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":16,"id":{"name":"unicode_xid","disambiguator":[14445025557903462131,9097206819433286797]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":17,"id":{"name":"quote","disambiguator":[651987496676725507,17069668937103049513]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":0,"byte_end":25341,"line_start":1,"line_end":740,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":4202},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":66202,"byte_end":66210,"line_start":829,"line_end":829,"column_start":15,"column_end":23},"alias_span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":66214,"byte_end":66221,"line_start":829,"line_end":829,"column_start":27,"column_end":34},"name":"CapSelf","value":"","parent":{"krate":0,"index":57}},{"kind":"Use","ref_id":{"krate":0,"index":4207},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":66252,"byte_end":66261,"line_start":831,"line_end":831,"column_start":15,"column_end":24},"alias_span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":66265,"byte_end":66270,"line_start":831,"line_end":831,"column_start":28,"column_end":33},"name":"Self_","value":"","parent":{"krate":0,"index":57}},{"kind":"Use","ref_id":{"krate":15,"index":765},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":70504,"byte_end":70509,"line_start":10,"line_end":10,"column_start":22,"column_end":27},"alias_span":null,"name":"Ident","value":"","parent":{"krate":0,"index":172}},{"kind":"Use","ref_id":{"krate":15,"index":765},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10841,"byte_end":10846,"line_start":302,"line_end":302,"column_start":16,"column_end":21},"alias_span":null,"name":"Ident","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5433},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10974,"byte_end":10983,"line_start":307,"line_end":307,"column_start":16,"column_end":25},"alias_span":null,"name":"AttrStyle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5425},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10985,"byte_end":10994,"line_start":307,"line_end":307,"column_start":27,"column_end":36},"alias_span":null,"name":"Attribute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10996,"byte_end":11009,"line_start":307,"line_end":307,"column_start":38,"column_end":51},"alias_span":null,"name":"AttributeArgs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5448},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11011,"byte_end":11015,"line_start":307,"line_end":307,"column_start":53,"column_end":57},"alias_span":null,"name":"Meta","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5460},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11017,"byte_end":11025,"line_start":307,"line_end":307,"column_start":59,"column_end":67},"alias_span":null,"name":"MetaList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5466},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11027,"byte_end":11040,"line_start":307,"line_end":307,"column_start":69,"column_end":82},"alias_span":null,"name":"MetaNameValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5478},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11042,"byte_end":11052,"line_start":307,"line_end":307,"column_start":84,"column_end":94},"alias_span":null,"name":"NestedMeta","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5523},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11186,"byte_end":11191,"line_start":313,"line_end":313,"column_start":5,"column_end":10},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5500},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11193,"byte_end":11199,"line_start":313,"line_end":313,"column_start":12,"column_end":18},"alias_span":null,"name":"Fields","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5511},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11201,"byte_end":11212,"line_start":313,"line_end":313,"column_start":20,"column_end":31},"alias_span":null,"name":"FieldsNamed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5516},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11214,"byte_end":11227,"line_start":313,"line_end":313,"column_start":33,"column_end":46},"alias_span":null,"name":"FieldsUnnamed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5489},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11229,"byte_end":11236,"line_start":313,"line_end":313,"column_start":48,"column_end":55},"alias_span":null,"name":"Variant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5555},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11238,"byte_end":11246,"line_start":313,"line_end":313,"column_start":57,"column_end":65},"alias_span":null,"name":"VisCrate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5551},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11248,"byte_end":11257,"line_start":313,"line_end":313,"column_start":67,"column_end":76},"alias_span":null,"name":"VisPublic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5559},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11259,"byte_end":11272,"line_start":313,"line_end":313,"column_start":78,"column_end":91},"alias_span":null,"name":"VisRestricted","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5537},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11278,"byte_end":11288,"line_start":314,"line_end":314,"column_start":5,"column_end":15},"alias_span":null,"name":"Visibility","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5648},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11424,"byte_end":11428,"line_start":321,"line_end":321,"column_start":5,"column_end":9},"alias_span":null,"name":"Expr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5784},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11430,"byte_end":11439,"line_start":321,"line_end":321,"column_start":11,"column_end":20},"alias_span":null,"name":"ExprArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5918},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11441,"byte_end":11451,"line_start":321,"line_end":321,"column_start":22,"column_end":32},"alias_span":null,"name":"ExprAssign","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5925},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11453,"byte_end":11465,"line_start":321,"line_end":321,"column_start":34,"column_end":46},"alias_span":null,"name":"ExprAssignOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6025},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11467,"byte_end":11476,"line_start":321,"line_end":321,"column_start":48,"column_end":57},"alias_span":null,"name":"ExprAsync","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5813},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11478,"byte_end":11488,"line_start":321,"line_end":321,"column_start":59,"column_end":69},"alias_span":null,"name":"ExprBinary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5912},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11490,"byte_end":11499,"line_start":321,"line_end":321,"column_start":71,"column_end":80},"alias_span":null,"name":"ExprBlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5771},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11501,"byte_end":11508,"line_start":321,"line_end":321,"column_start":82,"column_end":89},"alias_span":null,"name":"ExprBox","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5966},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11514,"byte_end":11523,"line_start":322,"line_end":322,"column_start":5,"column_end":14},"alias_span":null,"name":"ExprBreak","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5790},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11525,"byte_end":11533,"line_start":322,"line_end":322,"column_start":16,"column_end":24},"alias_span":null,"name":"ExprCall","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5831},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11535,"byte_end":11543,"line_start":322,"line_end":322,"column_start":26,"column_end":34},"alias_span":null,"name":"ExprCast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5894},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11545,"byte_end":11556,"line_start":322,"line_end":322,"column_start":36,"column_end":47},"alias_span":null,"name":"ExprClosure","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5973},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11558,"byte_end":11570,"line_start":322,"line_end":322,"column_start":49,"column_end":61},"alias_span":null,"name":"ExprContinue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5932},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11572,"byte_end":11581,"line_start":322,"line_end":322,"column_start":63,"column_end":72},"alias_span":null,"name":"ExprField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5869},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11583,"byte_end":11594,"line_start":322,"line_end":322,"column_start":74,"column_end":85},"alias_span":null,"name":"ExprForLoop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6013},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11596,"byte_end":11605,"line_start":322,"line_end":322,"column_start":87,"column_end":96},"alias_span":null,"name":"ExprGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5853},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11611,"byte_end":11617,"line_start":323,"line_end":323,"column_start":5,"column_end":11},"alias_span":null,"name":"ExprIf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5777},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11619,"byte_end":11630,"line_start":323,"line_end":323,"column_start":13,"column_end":24},"alias_span":null,"name":"ExprInPlace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5939},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11632,"byte_end":11641,"line_start":323,"line_end":323,"column_start":26,"column_end":35},"alias_span":null,"name":"ExprIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5845},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11643,"byte_end":11650,"line_start":323,"line_end":323,"column_start":37,"column_end":44},"alias_span":null,"name":"ExprLet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5826},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11652,"byte_end":11659,"line_start":323,"line_end":323,"column_start":46,"column_end":53},"alias_span":null,"name":"ExprLit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5879},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11661,"byte_end":11669,"line_start":323,"line_end":323,"column_start":55,"column_end":63},"alias_span":null,"name":"ExprLoop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5985},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11671,"byte_end":11680,"line_start":323,"line_end":323,"column_start":65,"column_end":74},"alias_span":null,"name":"ExprMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5886},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11682,"byte_end":11691,"line_start":323,"line_end":323,"column_start":76,"column_end":85},"alias_span":null,"name":"ExprMatch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5797},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11697,"byte_end":11711,"line_start":324,"line_end":324,"column_start":5,"column_end":19},"alias_span":null,"name":"ExprMethodCall","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6007},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11713,"byte_end":11722,"line_start":324,"line_end":324,"column_start":21,"column_end":30},"alias_span":null,"name":"ExprParen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5953},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11724,"byte_end":11732,"line_start":324,"line_end":324,"column_start":32,"column_end":40},"alias_span":null,"name":"ExprPath","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5946},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11734,"byte_end":11743,"line_start":324,"line_end":324,"column_start":42,"column_end":51},"alias_span":null,"name":"ExprRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5959},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11745,"byte_end":11758,"line_start":324,"line_end":324,"column_start":53,"column_end":66},"alias_span":null,"name":"ExprReference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5999},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11760,"byte_end":11770,"line_start":324,"line_end":324,"column_start":68,"column_end":78},"alias_span":null,"name":"ExprRepeat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5979},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11772,"byte_end":11782,"line_start":324,"line_end":324,"column_start":80,"column_end":90},"alias_span":null,"name":"ExprReturn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5990},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11788,"byte_end":11798,"line_start":325,"line_end":325,"column_start":5,"column_end":15},"alias_span":null,"name":"ExprStruct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6019},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11800,"byte_end":11807,"line_start":325,"line_end":325,"column_start":17,"column_end":24},"alias_span":null,"name":"ExprTry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6032},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11809,"byte_end":11821,"line_start":325,"line_end":325,"column_start":26,"column_end":38},"alias_span":null,"name":"ExprTryBlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5807},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11823,"byte_end":11832,"line_start":325,"line_end":325,"column_start":40,"column_end":49},"alias_span":null,"name":"ExprTuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5838},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11834,"byte_end":11842,"line_start":325,"line_end":325,"column_start":51,"column_end":59},"alias_span":null,"name":"ExprType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5820},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11844,"byte_end":11853,"line_start":325,"line_end":325,"column_start":61,"column_end":70},"alias_span":null,"name":"ExprUnary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5906},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11855,"byte_end":11865,"line_start":325,"line_end":325,"column_start":72,"column_end":82},"alias_span":null,"name":"ExprUnsafe","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6044},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11867,"byte_end":11879,"line_start":325,"line_end":325,"column_start":84,"column_end":96},"alias_span":null,"name":"ExprVerbatim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5861},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11885,"byte_end":11894,"line_start":326,"line_end":326,"column_start":5,"column_end":14},"alias_span":null,"name":"ExprWhile","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6038},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11896,"byte_end":11905,"line_start":326,"line_end":326,"column_start":16,"column_end":25},"alias_span":null,"name":"ExprYield","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6059},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11907,"byte_end":11912,"line_start":326,"line_end":326,"column_start":27,"column_end":32},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6050},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11914,"byte_end":11920,"line_start":326,"line_end":326,"column_start":34,"column_end":40},"alias_span":null,"name":"Member","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6266},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11971,"byte_end":11974,"line_start":331,"line_end":331,"column_start":5,"column_end":8},"alias_span":null,"name":"Arm","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6092},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11976,"byte_end":11981,"line_start":331,"line_end":331,"column_start":10,"column_end":15},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6286},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11983,"byte_end":11991,"line_start":331,"line_end":331,"column_start":17,"column_end":25},"alias_span":null,"name":"FieldPat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6080},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11993,"byte_end":12003,"line_start":331,"line_end":331,"column_start":27,"column_end":37},"alias_span":null,"name":"FieldValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6071},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12005,"byte_end":12026,"line_start":331,"line_end":331,"column_start":39,"column_end":60},"alias_span":null,"name":"GenericMethodArgument","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6087},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12028,"byte_end":12033,"line_start":331,"line_end":331,"column_start":62,"column_end":67},"alias_span":null,"name":"Label","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6113},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12035,"byte_end":12040,"line_start":331,"line_end":331,"column_start":69,"column_end":74},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6064},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12042,"byte_end":12057,"line_start":331,"line_end":331,"column_start":76,"column_end":91},"alias_span":null,"name":"MethodTurbofish","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6148},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12059,"byte_end":12062,"line_start":331,"line_end":331,"column_start":93,"column_end":96},"alias_span":null,"name":"Pat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6226},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12068,"byte_end":12074,"line_start":332,"line_end":332,"column_start":5,"column_end":11},"alias_span":null,"name":"PatBox","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6194},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12076,"byte_end":12084,"line_start":332,"line_end":332,"column_start":13,"column_end":21},"alias_span":null,"name":"PatIdent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6237},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12086,"byte_end":12092,"line_start":332,"line_end":332,"column_start":23,"column_end":29},"alias_span":null,"name":"PatLit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6256},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12094,"byte_end":12102,"line_start":332,"line_end":332,"column_start":31,"column_end":39},"alias_span":null,"name":"PatMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6213},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12104,"byte_end":12111,"line_start":332,"line_end":332,"column_start":41,"column_end":48},"alias_span":null,"name":"PatPath","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6241},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12113,"byte_end":12121,"line_start":332,"line_end":332,"column_start":50,"column_end":58},"alias_span":null,"name":"PatRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6231},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12123,"byte_end":12129,"line_start":332,"line_end":332,"column_start":60,"column_end":66},"alias_span":null,"name":"PatRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6247},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12131,"byte_end":12139,"line_start":332,"line_end":332,"column_start":68,"column_end":76},"alias_span":null,"name":"PatSlice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6201},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12141,"byte_end":12150,"line_start":332,"line_end":332,"column_start":78,"column_end":87},"alias_span":null,"name":"PatStruct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6218},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12152,"byte_end":12160,"line_start":332,"line_end":332,"column_start":89,"column_end":97},"alias_span":null,"name":"PatTuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6208},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12166,"byte_end":12180,"line_start":333,"line_end":333,"column_start":5,"column_end":19},"alias_span":null,"name":"PatTupleStruct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6260},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12182,"byte_end":12193,"line_start":333,"line_end":333,"column_start":21,"column_end":32},"alias_span":null,"name":"PatVerbatim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6190},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12195,"byte_end":12202,"line_start":333,"line_end":333,"column_start":34,"column_end":41},"alias_span":null,"name":"PatWild","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6276},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12204,"byte_end":12215,"line_start":333,"line_end":333,"column_start":43,"column_end":54},"alias_span":null,"name":"RangeLimits","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6097},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12217,"byte_end":12221,"line_start":333,"line_end":333,"column_start":56,"column_end":60},"alias_span":null,"name":"Stmt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6470},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12365,"byte_end":12379,"line_start":340,"line_end":340,"column_start":5,"column_end":19},"alias_span":null,"name":"BoundLifetimes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6437},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12381,"byte_end":12391,"line_start":340,"line_end":340,"column_start":21,"column_end":31},"alias_span":null,"name":"ConstParam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6409},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12393,"byte_end":12405,"line_start":340,"line_end":340,"column_start":33,"column_end":45},"alias_span":null,"name":"GenericParam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6394},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12407,"byte_end":12415,"line_start":340,"line_end":340,"column_start":47,"column_end":55},"alias_span":null,"name":"Generics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6430},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12417,"byte_end":12428,"line_start":340,"line_end":340,"column_start":57,"column_end":68},"alias_span":null,"name":"LifetimeDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6546},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12430,"byte_end":12441,"line_start":340,"line_end":340,"column_start":70,"column_end":81},"alias_span":null,"name":"PredicateEq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6540},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12447,"byte_end":12464,"line_start":341,"line_end":341,"column_start":5,"column_end":22},"alias_span":null,"name":"PredicateLifetime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6533},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12466,"byte_end":12479,"line_start":341,"line_end":341,"column_start":24,"column_end":37},"alias_span":null,"name":"PredicateType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6494},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12481,"byte_end":12491,"line_start":341,"line_end":341,"column_start":39,"column_end":49},"alias_span":null,"name":"TraitBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6501},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12493,"byte_end":12511,"line_start":341,"line_end":341,"column_start":51,"column_end":69},"alias_span":null,"name":"TraitBoundModifier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6421},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12513,"byte_end":12522,"line_start":341,"line_end":341,"column_start":71,"column_end":80},"alias_span":null,"name":"TypeParam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6483},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12524,"byte_end":12538,"line_start":341,"line_end":341,"column_start":82,"column_end":96},"alias_span":null,"name":"TypeParamBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6510},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12544,"byte_end":12555,"line_start":342,"line_end":342,"column_start":5,"column_end":16},"alias_span":null,"name":"WhereClause","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6521},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12557,"byte_end":12571,"line_start":342,"line_end":342,"column_start":18,"column_end":32},"alias_span":null,"name":"WherePredicate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6449},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12672,"byte_end":12684,"line_start":345,"line_end":345,"column_start":20,"column_end":32},"alias_span":null,"name":"ImplGenerics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6463},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12686,"byte_end":12695,"line_start":345,"line_end":345,"column_start":34,"column_end":43},"alias_span":null,"name":"Turbofish","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6456},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12697,"byte_end":12709,"line_start":345,"line_end":345,"column_start":45,"column_end":57},"alias_span":null,"name":"TypeGenerics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7169},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12793,"byte_end":12804,"line_start":351,"line_end":351,"column_start":5,"column_end":16},"alias_span":null,"name":"ArgCaptured","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7164},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12806,"byte_end":12813,"line_start":351,"line_end":351,"column_start":18,"column_end":25},"alias_span":null,"name":"ArgSelf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7157},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12815,"byte_end":12825,"line_start":351,"line_end":351,"column_start":27,"column_end":37},"alias_span":null,"name":"ArgSelfRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7139},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12827,"byte_end":12832,"line_start":351,"line_end":351,"column_start":39,"column_end":44},"alias_span":null,"name":"FnArg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7120},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12834,"byte_end":12840,"line_start":351,"line_end":351,"column_start":46,"column_end":52},"alias_span":null,"name":"FnDecl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6897},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12842,"byte_end":12853,"line_start":351,"line_end":351,"column_start":54,"column_end":65},"alias_span":null,"name":"ForeignItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6915},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12855,"byte_end":12868,"line_start":351,"line_end":351,"column_start":67,"column_end":80},"alias_span":null,"name":"ForeignItemFn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6942},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12870,"byte_end":12886,"line_start":351,"line_end":351,"column_start":82,"column_end":98},"alias_span":null,"name":"ForeignItemMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6923},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12892,"byte_end":12909,"line_start":352,"line_end":352,"column_start":5,"column_end":22},"alias_span":null,"name":"ForeignItemStatic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6934},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12911,"byte_end":12926,"line_start":352,"line_end":352,"column_start":24,"column_end":39},"alias_span":null,"name":"ForeignItemType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6948},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12928,"byte_end":12947,"line_start":352,"line_end":352,"column_start":41,"column_end":60},"alias_span":null,"name":"ForeignItemVerbatim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7034},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12949,"byte_end":12957,"line_start":352,"line_end":352,"column_start":62,"column_end":70},"alias_span":null,"name":"ImplItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7055},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12959,"byte_end":12972,"line_start":352,"line_end":352,"column_start":72,"column_end":85},"alias_span":null,"name":"ImplItemConst","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7088},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12978,"byte_end":12997,"line_start":353,"line_end":353,"column_start":5,"column_end":24},"alias_span":null,"name":"ImplItemExistential","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7099},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12999,"byte_end":13012,"line_start":353,"line_end":353,"column_start":26,"column_end":39},"alias_span":null,"name":"ImplItemMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7068},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13014,"byte_end":13028,"line_start":353,"line_end":353,"column_start":41,"column_end":55},"alias_span":null,"name":"ImplItemMethod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7076},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13030,"byte_end":13042,"line_start":353,"line_end":353,"column_start":57,"column_end":69},"alias_span":null,"name":"ImplItemType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7105},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13044,"byte_end":13060,"line_start":353,"line_end":353,"column_start":71,"column_end":87},"alias_span":null,"name":"ImplItemVerbatim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6590},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13062,"byte_end":13066,"line_start":353,"line_end":353,"column_start":89,"column_end":93},"alias_span":null,"name":"Item","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6679},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13072,"byte_end":13081,"line_start":354,"line_end":354,"column_start":5,"column_end":14},"alias_span":null,"name":"ItemConst","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6752},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13083,"byte_end":13091,"line_start":354,"line_end":354,"column_start":16,"column_end":24},"alias_span":null,"name":"ItemEnum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6730},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13093,"byte_end":13108,"line_start":354,"line_end":354,"column_start":26,"column_end":41},"alias_span":null,"name":"ItemExistential","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6647},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13110,"byte_end":13125,"line_start":354,"line_end":354,"column_start":43,"column_end":58},"alias_span":null,"name":"ItemExternCrate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6691},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13127,"byte_end":13133,"line_start":354,"line_end":354,"column_start":60,"column_end":66},"alias_span":null,"name":"ItemFn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6712},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13135,"byte_end":13149,"line_start":354,"line_end":354,"column_start":68,"column_end":82},"alias_span":null,"name":"ItemForeignMod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6796},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13151,"byte_end":13159,"line_start":354,"line_end":354,"column_start":84,"column_end":92},"alias_span":null,"name":"ItemImpl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6808},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13165,"byte_end":13174,"line_start":355,"line_end":355,"column_start":5,"column_end":14},"alias_span":null,"name":"ItemMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6815},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13176,"byte_end":13186,"line_start":355,"line_end":355,"column_start":16,"column_end":26},"alias_span":null,"name":"ItemMacro2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6703},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13188,"byte_end":13195,"line_start":355,"line_end":355,"column_start":28,"column_end":35},"alias_span":null,"name":"ItemMod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6666},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13197,"byte_end":13207,"line_start":355,"line_end":355,"column_start":37,"column_end":47},"alias_span":null,"name":"ItemStatic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6742},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13209,"byte_end":13219,"line_start":355,"line_end":355,"column_start":49,"column_end":59},"alias_span":null,"name":"ItemStruct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6771},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13221,"byte_end":13230,"line_start":355,"line_end":355,"column_start":61,"column_end":70},"alias_span":null,"name":"ItemTrait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6785},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13232,"byte_end":13246,"line_start":355,"line_end":355,"column_start":72,"column_end":86},"alias_span":null,"name":"ItemTraitAlias","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6719},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13248,"byte_end":13256,"line_start":355,"line_end":355,"column_start":88,"column_end":96},"alias_span":null,"name":"ItemType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6762},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13262,"byte_end":13271,"line_start":356,"line_end":356,"column_start":5,"column_end":14},"alias_span":null,"name":"ItemUnion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6657},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13273,"byte_end":13280,"line_start":356,"line_end":356,"column_start":16,"column_end":23},"alias_span":null,"name":"ItemUse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6826},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13282,"byte_end":13294,"line_start":356,"line_end":356,"column_start":25,"column_end":37},"alias_span":null,"name":"ItemVerbatim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7111},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13296,"byte_end":13305,"line_start":356,"line_end":356,"column_start":39,"column_end":48},"alias_span":null,"name":"MethodSig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6964},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13307,"byte_end":13316,"line_start":356,"line_end":356,"column_start":50,"column_end":59},"alias_span":null,"name":"TraitItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6982},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13318,"byte_end":13332,"line_start":356,"line_end":356,"column_start":61,"column_end":75},"alias_span":null,"name":"TraitItemConst","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7010},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13334,"byte_end":13348,"line_start":356,"line_end":356,"column_start":77,"column_end":91},"alias_span":null,"name":"TraitItemMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6992},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13354,"byte_end":13369,"line_start":357,"line_end":357,"column_start":5,"column_end":20},"alias_span":null,"name":"TraitItemMethod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6999},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13371,"byte_end":13384,"line_start":357,"line_end":357,"column_start":22,"column_end":35},"alias_span":null,"name":"TraitItemType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7016},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13386,"byte_end":13403,"line_start":357,"line_end":357,"column_start":37,"column_end":54},"alias_span":null,"name":"TraitItemVerbatim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6876},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13405,"byte_end":13412,"line_start":357,"line_end":357,"column_start":56,"column_end":63},"alias_span":null,"name":"UseGlob","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6880},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13414,"byte_end":13422,"line_start":357,"line_end":357,"column_start":65,"column_end":73},"alias_span":null,"name":"UseGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6866},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13424,"byte_end":13431,"line_start":357,"line_end":357,"column_start":75,"column_end":82},"alias_span":null,"name":"UseName","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6860},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13433,"byte_end":13440,"line_start":357,"line_end":357,"column_start":84,"column_end":91},"alias_span":null,"name":"UsePath","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6870},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13446,"byte_end":13455,"line_start":358,"line_end":358,"column_start":5,"column_end":14},"alias_span":null,"name":"UseRename","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6842},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13457,"byte_end":13464,"line_start":358,"line_end":358,"column_start":16,"column_end":23},"alias_span":null,"name":"UseTree","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7177},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13544,"byte_end":13548,"line_start":364,"line_end":364,"column_start":15,"column_end":19},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7183},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13583,"byte_end":13591,"line_start":367,"line_end":367,"column_start":19,"column_end":27},"alias_span":null,"name":"Lifetime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7311},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13722,"byte_end":13733,"line_start":373,"line_end":373,"column_start":5,"column_end":16},"alias_span":null,"name":"FloatSuffix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7282},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13735,"byte_end":13744,"line_start":373,"line_end":373,"column_start":18,"column_end":27},"alias_span":null,"name":"IntSuffix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7204},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13746,"byte_end":13749,"line_start":373,"line_end":373,"column_start":29,"column_end":32},"alias_span":null,"name":"Lit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7255},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13751,"byte_end":13758,"line_start":373,"line_end":373,"column_start":34,"column_end":41},"alias_span":null,"name":"LitBool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7239},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13760,"byte_end":13767,"line_start":373,"line_end":373,"column_start":43,"column_end":50},"alias_span":null,"name":"LitByte","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7235},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13769,"byte_end":13779,"line_start":373,"line_end":373,"column_start":52,"column_end":62},"alias_span":null,"name":"LitByteStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7243},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13781,"byte_end":13788,"line_start":373,"line_end":373,"column_start":64,"column_end":71},"alias_span":null,"name":"LitChar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7251},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13790,"byte_end":13798,"line_start":373,"line_end":373,"column_start":73,"column_end":81},"alias_span":null,"name":"LitFloat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7247},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13800,"byte_end":13806,"line_start":373,"line_end":373,"column_start":83,"column_end":89},"alias_span":null,"name":"LitInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7231},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13808,"byte_end":13814,"line_start":373,"line_end":373,"column_start":91,"column_end":97},"alias_span":null,"name":"LitStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7260},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13820,"byte_end":13831,"line_start":374,"line_end":374,"column_start":5,"column_end":16},"alias_span":null,"name":"LitVerbatim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7274},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13833,"byte_end":13841,"line_start":374,"line_end":374,"column_start":18,"column_end":26},"alias_span":null,"name":"StrStyle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7320},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13970,"byte_end":13975,"line_start":380,"line_end":380,"column_start":15,"column_end":20},"alias_span":null,"name":"Macro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7327},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13977,"byte_end":13991,"line_start":380,"line_end":380,"column_start":22,"column_end":36},"alias_span":null,"name":"MacroDelimiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7353},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14101,"byte_end":14105,"line_start":385,"line_end":385,"column_start":18,"column_end":22},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7371},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14107,"byte_end":14115,"line_start":385,"line_end":385,"column_start":24,"column_end":32},"alias_span":null,"name":"DataEnum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7365},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14117,"byte_end":14127,"line_start":385,"line_end":385,"column_start":34,"column_end":44},"alias_span":null,"name":"DataStruct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7377},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14129,"byte_end":14138,"line_start":385,"line_end":385,"column_start":46,"column_end":55},"alias_span":null,"name":"DataUnion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7339},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14140,"byte_end":14151,"line_start":385,"line_end":385,"column_start":57,"column_end":68},"alias_span":null,"name":"DeriveInput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7382},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14276,"byte_end":14281,"line_start":390,"line_end":390,"column_start":14,"column_end":19},"alias_span":null,"name":"BinOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7470},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14283,"byte_end":14287,"line_start":390,"line_end":390,"column_start":21,"column_end":25},"alias_span":null,"name":"UnOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7646},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14417,"byte_end":14420,"line_start":396,"line_end":396,"column_start":5,"column_end":8},"alias_span":null,"name":"Abi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7651},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14422,"byte_end":14431,"line_start":396,"line_end":396,"column_start":10,"column_end":19},"alias_span":null,"name":"BareFnArg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7656},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14433,"byte_end":14446,"line_start":396,"line_end":396,"column_start":21,"column_end":34},"alias_span":null,"name":"BareFnArgName","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7665},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14448,"byte_end":14458,"line_start":396,"line_end":396,"column_start":36,"column_end":46},"alias_span":null,"name":"ReturnType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7513},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14460,"byte_end":14464,"line_start":396,"line_end":396,"column_start":48,"column_end":52},"alias_span":null,"name":"Type","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7566},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14466,"byte_end":14475,"line_start":396,"line_end":396,"column_start":54,"column_end":63},"alias_span":null,"name":"TypeArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7587},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14477,"byte_end":14487,"line_start":396,"line_end":396,"column_start":65,"column_end":75},"alias_span":null,"name":"TypeBareFn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7627},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14489,"byte_end":14498,"line_start":396,"line_end":396,"column_start":77,"column_end":86},"alias_span":null,"name":"TypeGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7617},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14504,"byte_end":14517,"line_start":397,"line_end":397,"column_start":5,"column_end":18},"alias_span":null,"name":"TypeImplTrait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7632},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14519,"byte_end":14528,"line_start":397,"line_end":397,"column_start":20,"column_end":29},"alias_span":null,"name":"TypeInfer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7636},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14530,"byte_end":14539,"line_start":397,"line_end":397,"column_start":31,"column_end":40},"alias_span":null,"name":"TypeMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7598},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14541,"byte_end":14550,"line_start":397,"line_end":397,"column_start":42,"column_end":51},"alias_span":null,"name":"TypeNever","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7622},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14552,"byte_end":14561,"line_start":397,"line_end":397,"column_start":53,"column_end":62},"alias_span":null,"name":"TypeParen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7607},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14563,"byte_end":14571,"line_start":397,"line_end":397,"column_start":64,"column_end":72},"alias_span":null,"name":"TypePath","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7573},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14573,"byte_end":14580,"line_start":397,"line_end":397,"column_start":74,"column_end":81},"alias_span":null,"name":"TypePtr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7580},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14582,"byte_end":14595,"line_start":397,"line_end":397,"column_start":83,"column_end":96},"alias_span":null,"name":"TypeReference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7561},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14601,"byte_end":14610,"line_start":398,"line_end":398,"column_start":5,"column_end":14},"alias_span":null,"name":"TypeSlice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7612},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14612,"byte_end":14627,"line_start":398,"line_end":398,"column_start":16,"column_end":31},"alias_span":null,"name":"TypeTraitObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7602},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14629,"byte_end":14638,"line_start":398,"line_end":398,"column_start":33,"column_end":42},"alias_span":null,"name":"TypeTuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7640},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14640,"byte_end":14652,"line_start":398,"line_end":398,"column_start":44,"column_end":56},"alias_span":null,"name":"TypeVerbatim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7713},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14788,"byte_end":14818,"line_start":405,"line_end":405,"column_start":5,"column_end":35},"alias_span":null,"name":"AngleBracketedGenericArguments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7720},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14820,"byte_end":14827,"line_start":405,"line_end":405,"column_start":37,"column_end":44},"alias_span":null,"name":"Binding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7726},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14829,"byte_end":14839,"line_start":405,"line_end":405,"column_start":46,"column_end":56},"alias_span":null,"name":"Constraint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7695},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14841,"byte_end":14856,"line_start":405,"line_end":405,"column_start":58,"column_end":73},"alias_span":null,"name":"GenericArgument","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7732},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14862,"byte_end":14891,"line_start":406,"line_end":406,"column_start":5,"column_end":34},"alias_span":null,"name":"ParenthesizedGenericArguments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7674},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14893,"byte_end":14897,"line_start":406,"line_end":406,"column_start":36,"column_end":40},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7684},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14899,"byte_end":14912,"line_start":406,"line_end":406,"column_start":42,"column_end":55},"alias_span":null,"name":"PathArguments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7679},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14914,"byte_end":14925,"line_start":406,"line_end":406,"column_start":57,"column_end":68},"alias_span":null,"name":"PathSegment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7738},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14927,"byte_end":14932,"line_start":406,"line_end":406,"column_start":70,"column_end":75},"alias_span":null,"name":"QSelf","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":19865,"byte_end":19866,"line_start":549,"line_end":549,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"visit","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":2181},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":669948,"byte_end":669953,"line_start":1,"line_end":1,"column_start":21,"column_end":26},"alias_span":null,"name":"Clone","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":2,"index":2045},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":669974,"byte_end":669976,"line_start":2,"line_end":2,"column_start":20,"column_end":22},"alias_span":null,"name":"Eq","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":2,"index":2040},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":669978,"byte_end":669987,"line_start":2,"line_end":2,"column_start":24,"column_end":33},"alias_span":null,"name":"PartialEq","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":2,"index":2258},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670012,"byte_end":670016,"line_start":3,"line_end":3,"column_start":23,"column_end":27},"alias_span":null,"name":"From","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":2,"index":2206},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670040,"byte_end":670047,"line_start":4,"line_end":4,"column_start":23,"column_end":30},"alias_span":null,"name":"Default","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":5,"index":3245},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670068,"byte_end":670072,"line_start":5,"line_end":5,"column_start":20,"column_end":24},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":2,"index":7643},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670074,"byte_end":670079,"line_start":5,"line_end":5,"column_start":26,"column_end":31},"alias_span":null,"name":"Debug","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":2,"index":7612},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670081,"byte_end":670090,"line_start":5,"line_end":5,"column_start":33,"column_end":42},"alias_span":null,"name":"Formatter","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":2,"index":7285},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670113,"byte_end":670117,"line_start":6,"line_end":6,"column_start":21,"column_end":25},"alias_span":null,"name":"Hash","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":2,"index":7293},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670119,"byte_end":670125,"line_start":6,"line_end":6,"column_start":27,"column_end":33},"alias_span":null,"name":"Hasher","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":2,"index":1543},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670149,"byte_end":670153,"line_start":7,"line_end":7,"column_start":22,"column_end":26},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":2,"index":29428},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670185,"byte_end":670189,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":2,"index":29430},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670191,"byte_end":670195,"line_start":8,"line_end":8,"column_start":37,"column_end":41},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":2,"index":29529},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670228,"byte_end":670231,"line_start":9,"line_end":9,"column_start":31,"column_end":34},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":2,"index":29526},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670233,"byte_end":670235,"line_start":9,"line_end":9,"column_start":36,"column_end":38},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":15,"index":698},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670315,"byte_end":670319,"line_start":14,"line_end":14,"column_start":23,"column_end":27},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":15,"index":693},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670321,"byte_end":670332,"line_start":14,"line_end":14,"column_start":29,"column_end":40},"alias_span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670336,"byte_end":670348,"line_start":14,"line_end":14,"column_start":44,"column_end":56},"name":"TokenStream2","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":0,"index":3149},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670366,"byte_end":670375,"line_start":16,"line_end":16,"column_start":15,"column_end":24},"alias_span":null,"name":"IntoSpans","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":14,"index":2902},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670526,"byte_end":670537,"line_start":22,"line_end":22,"column_start":21,"column_end":32},"alias_span":null,"name":"TokenStream","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":17,"index":57},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670585,"byte_end":670593,"line_start":25,"line_end":25,"column_start":17,"column_end":25},"alias_span":null,"name":"ToTokens","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":17,"index":11},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670595,"byte_end":670609,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"alias_span":null,"name":"TokenStreamExt","value":"","parent":{"krate":0,"index":2911}},{"kind":"Use","ref_id":{"krate":0,"index":3251},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":699425,"byte_end":699430,"line_start":216,"line_end":216,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":3004}},{"kind":"Use","ref_id":{"krate":0,"index":3249},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":699432,"byte_end":699438,"line_start":216,"line_end":216,"column_start":24,"column_end":30},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":3004}},{"kind":"Use","ref_id":{"krate":0,"index":2978},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":699461,"byte_end":699471,"line_start":217,"line_end":217,"column_start":21,"column_end":31},"alias_span":null,"name":"Lookahead1","value":"","parent":{"krate":0,"index":3004}},{"kind":"Use","ref_id":{"krate":0,"index":2990},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":699473,"byte_end":699477,"line_start":217,"line_end":217,"column_start":33,"column_end":37},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":3004}},{"kind":"Use","ref_id":{"krate":0,"index":3251},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20488,"byte_end":20493,"line_start":581,"line_end":581,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3249},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20495,"byte_end":20501,"line_start":581,"line_end":581,"column_start":24,"column_end":30},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":0,"byte_end":25341,"line_start":1,"line_end":740,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":14},{"krate":0,"index":57},{"krate":0,"index":172},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":263},{"krate":0,"index":271},{"krate":0,"index":332},{"krate":0,"index":342},{"krate":0,"index":617},{"krate":0,"index":661},{"krate":0,"index":686},{"krate":0,"index":829},{"krate":0,"index":844},{"krate":0,"index":848},{"krate":0,"index":1074},{"krate":0,"index":1125},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1328},{"krate":0,"index":1341},{"krate":0,"index":1382},{"krate":0,"index":1385},{"krate":0,"index":1408},{"krate":0,"index":1414},{"krate":0,"index":1434},{"krate":0,"index":1437},{"krate":0,"index":1549},{"krate":0,"index":1570},{"krate":0,"index":1639},{"krate":0,"index":1649},{"krate":0,"index":1712},{"krate":0,"index":1741},{"krate":0,"index":2020},{"krate":0,"index":2046},{"krate":0,"index":2064},{"krate":0,"index":2081},{"krate":0,"index":2910},{"krate":0,"index":2911},{"krate":0,"index":2946},{"krate":0,"index":2952},{"krate":0,"index":2963},{"krate":0,"index":2966},{"krate":0,"index":3004},{"krate":0,"index":3147},{"krate":0,"index":3190},{"krate":0,"index":3202},{"krate":0,"index":3226},{"krate":0,"index":3228},{"krate":0,"index":3277},{"krate":0,"index":3280},{"krate":0,"index":3282},{"krate":0,"index":3284},{"krate":0,"index":3286}],"decl_id":null,"docs":" Syn is a parsing library for parsing a stream of Rust tokens into a syntax\n tree of Rust source code.\n\n Currently this library is geared toward use in Rust procedural macros, but\n contains some APIs that may be useful more generally.\n\n - **Data structures** — Syn provides a complete syntax tree that can\n   represent any valid Rust source code. The syntax tree is rooted at\n   [`syn::File`] which represents a full source file, but there are other\n   entry points that may be useful to procedural macros including\n   [`syn::Item`], [`syn::Expr`] and [`syn::Type`].\n\n - **Custom derives** — Of particular interest to custom derives is\n   [`syn::DeriveInput`] which is any of the three legal input items to a\n   derive macro. An example below shows using this type in a library that can\n   derive implementations of a trait of your own.\n\n - **Parsing** — Parsing in Syn is built around [parser functions] with the\n   signature `fn(ParseStream) -> Result<T>`. Every syntax tree node defined\n   by Syn is individually parsable and may be used as a building block for\n   custom syntaxes, or you may dream up your own brand new syntax without\n   involving any of our syntax tree types.\n\n - **Location information** — Every token parsed by Syn is associated with a\n   `Span` that tracks line and column information back to the source of that\n   token. These spans allow a procedural macro to display detailed error\n   messages pointing to all the right places in the user's code. There is an\n   example of this below.\n\n - **Feature flags** — Functionality is aggressively feature gated so your\n   procedural macros enable only what they need, and do not pay in compile\n   time for all the rest.\n\n [`syn::File`]: struct.File.html\n [`syn::Item`]: enum.Item.html\n [`syn::Expr`]: enum.Expr.html\n [`syn::Type`]: enum.Type.html\n [`syn::DeriveInput`]: struct.DeriveInput.html\n [parser functions]: parse/index.html\n\n *Version requirement: Syn supports any compiler version back to Rust's very\n first support for procedural macros in Rust 1.15.0. Some features especially\n around error reporting are only available in newer compilers or on the\n nightly channel.*\n\n ## Example of a custom derive\n\n The canonical custom derive using Syn looks like this. We write an ordinary\n Rust function tagged with a `proc_macro_derive` attribute and the name of\n the trait we are deriving. Any time that derive appears in the user's code,\n the Rust compiler passes their data structure as tokens into our macro. We\n get to execute arbitrary Rust code to figure out what to do with those\n tokens, then hand some tokens back to the compiler to compile into the\n user's crate.\n\n [`TokenStream`]: https://doc.rust-lang.org/proc_macro/struct.TokenStream.html\n\n ```toml\n [dependencies]\n syn = \"0.15\"\n quote = \"0.6\"\n\n [lib]\n proc-macro = true\n ```\n\n ```edition2018\n extern crate proc_macro;\n\n use proc_macro::TokenStream;\n use quote::quote;\n use syn::{parse_macro_input, DeriveInput};\n\n # const IGNORE_TOKENS: &str = stringify! {\n #[proc_macro_derive(MyMacro)]\n # };\n pub fn my_macro(input: TokenStream) -> TokenStream {\n     // Parse the input tokens into a syntax tree\n     let input = parse_macro_input!(input as DeriveInput);\n\n     // Build the output, possibly using quasi-quotation\n     let expanded = quote! {\n         // ...\n     };\n\n     // Hand the output tokens back to the compiler\n     TokenStream::from(expanded)\n }\n ```\n\n The [`heapsize`] example directory shows a complete working Macros 1.1\n implementation of a custom derive. It works on any Rust compiler 1.15+.\n The example derives a `HeapSize` trait which computes an estimate of the\n amount of heap memory owned by a value.\n\n [`heapsize`]: https://github.com/dtolnay/syn/tree/master/examples/heapsize\n\n ```edition2018\n pub trait HeapSize {\n     /// Total number of bytes of heap memory owned by `self`.\n     fn heap_size_of_children(&self) -> usize;\n }\n ```\n\n The custom derive allows users to write `#[derive(HeapSize)]` on data\n structures in their program.\n\n ```edition2018\n # const IGNORE_TOKENS: &str = stringify! {\n #[derive(HeapSize)]\n # };\n struct Demo<'a, T: ?Sized> {\n     a: Box<T>,\n     b: u8,\n     c: &'a str,\n     d: String,\n }\n ```\n\n ## Spans and error reporting\n\n The token-based procedural macro API provides great control over where the\n compiler's error messages are displayed in user code. Consider the error the\n user sees if one of their field types does not implement `HeapSize`.\n\n ```edition2018\n # const IGNORE_TOKENS: &str = stringify! {\n #[derive(HeapSize)]\n # };\n struct Broken {\n     ok: String,\n     bad: std::thread::Thread,\n }\n ```\n\n By tracking span information all the way through the expansion of a\n procedural macro as shown in the `heapsize` example, token-based macros in\n Syn are able to trigger errors that directly pinpoint the source of the\n problem.\n\n ```text\n error[E0277]: the trait bound `std::thread::Thread: HeapSize` is not satisfied\n  --> src/main.rs:7:5\n   |\n 7 |     bad: std::thread::Thread,\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `HeapSize` is not implemented for `Thread`\n ```\n\n ## Parsing a custom syntax\n\n The [`lazy-static`] example directory shows the implementation of a\n `functionlike!(...)` procedural macro in which the input tokens are parsed\n using Syn's parsing API.\n\n [`lazy-static`]: https://github.com/dtolnay/syn/tree/master/examples/lazy-static\n\n The example reimplements the popular `lazy_static` crate from crates.io as a\n procedural macro.\n\n ```edition2018\n # macro_rules! lazy_static {\n #     ($($tt:tt)*) => {}\n # }\n #\n lazy_static! {\n     static ref USERNAME: Regex = Regex::new(\"^[a-z0-9_-]{3,16}$\").unwrap();\n }\n ```\n\n The implementation shows how to trigger custom warnings and error messages\n on the macro input.\n\n ```text\n warning: come on, pick a more creative name\n   --> src/main.rs:10:16\n    |\n 10 |     static ref FOO: String = \"lazy_static\".to_owned();\n    |                ^^^\n ```\n\n ## Testing\n\n When testing macros, we often care not just that the macro can be used\n successfully but also that when the macro is provided with invalid input it\n produces maximally helpful error messages. Consider using the [`trybuild`]\n crate to write tests for errors that are emitted by your macro or errors\n detected by the Rust compiler in the expanded code following misuse of the\n macro. Such tests help avoid regressions from later refactors that\n mistakenly make an error no longer trigger or be less helpful than it used\n to be.\n\n [`trybuild`]: https://github.com/dtolnay/trybuild\n\n ## Debugging\n\n When developing a procedural macro it can be helpful to look at what the\n generated code looks like. Use `cargo rustc -- -Zunstable-options\n --pretty=expanded` or the [`cargo expand`] subcommand.\n\n [`cargo expand`]: https://github.com/dtolnay/cargo-expand\n\n To show the expanded code for some crate that uses your procedural macro,\n run `cargo expand` from that crate. To show the expanded code for one of\n your own test cases, run `cargo expand --test the_test_case` where the last\n argument is the name of the test file without the `.rs` extension.\n\n This write-up by Brandon W Maister discusses debugging in more detail:\n [Debugging Rust's new Custom Derive system][debugging].\n\n [debugging]: https://quodlibetor.github.io/posts/debugging-rusts-new-custom-derive-system/\n\n ## Optional features\n\n Syn puts a lot of functionality behind optional features in order to\n optimize compile time for the most common use cases. The following features\n are available.\n\n - **`derive`** *(enabled by default)* — Data structures for representing the\n   possible input to a custom derive, including structs and enums and types.\n - **`full`** — Data structures for representing the syntax tree of all valid\n   Rust source code, including items and expressions.\n - **`parsing`** *(enabled by default)* — Ability to parse input tokens into\n   a syntax tree node of a chosen type.\n - **`printing`** *(enabled by default)* — Ability to print a syntax tree\n   node as tokens of Rust source code.\n - **`visit`** — Trait for traversing a syntax tree.\n - **`visit-mut`** — Trait for traversing and mutating in place a syntax\n   tree.\n - **`fold`** — Trait for transforming an owned syntax tree.\n - **`clone-impls`** *(enabled by default)* — Clone impls for all syntax tree\n   types.\n - **`extra-traits`** — Debug, Eq, PartialEq, Hash impls for all syntax tree\n   types.\n - **`proc-macro`** *(enabled by default)* — Runtime dependency on the\n   dynamic library libproc_macro from rustc toolchain.\n","sig":null,"attributes":[{"value":"allow(unknown_lints, bare_trait_objects, ellipsis_inclusive_range_patterns)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":9350,"byte_end":9429,"line_start":239,"line_end":239,"column_start":1,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"group","qualname":"::group","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":26},{"krate":0,"index":30},{"krate":0,"index":34},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10714,"byte_end":10741,"line_start":293,"line_end":293,"column_start":1,"column_end":28}},{"value":"macro_use","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10757,"byte_end":10769,"line_start":295,"line_end":295,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30082,"byte_end":30088,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Parens","qualname":"::group::Parens","value":"Parens { token, content }","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30103,"byte_end":30108,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"token","qualname":"::group::Parens::token","value":"token::Paren","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30132,"byte_end":30139,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"name":"content","qualname":"::group::Parens::content","value":"parse::ParseBuffer<'a>","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30206,"byte_end":30212,"line_start":17,"line_end":17,"column_start":12,"column_end":18},"name":"Braces","qualname":"::group::Braces","value":"Braces { token, content }","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30227,"byte_end":30232,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"token","qualname":"::group::Braces::token","value":"token::Brace","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30256,"byte_end":30263,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"content","qualname":"::group::Braces::content","value":"parse::ParseBuffer<'a>","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30330,"byte_end":30338,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"Brackets","qualname":"::group::Brackets","value":"Brackets { token, content }","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30353,"byte_end":30358,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"token","qualname":"::group::Brackets::token","value":"token::Bracket","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30384,"byte_end":30391,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"name":"content","qualname":"::group::Brackets::content","value":"parse::ParseBuffer<'a>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30508,"byte_end":30513,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"Group","qualname":"::group::Group","value":"Group { token, content }","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"full\", feature = \"derive\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30432,"byte_end":30481,"line_start":30,"line_end":30,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30528,"byte_end":30533,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"token","qualname":"::group::Group::token","value":"token::Group","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30557,"byte_end":30564,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"name":"content","qualname":"::group::Group::content","value":"parse::ParseBuffer<'a>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30627,"byte_end":30639,"line_start":39,"line_end":39,"column_start":8,"column_end":20},"name":"parse_parens","qualname":"::group::parse_parens","value":"fn <'a> (input: &ParseBuffer<'a>) -> Result<Parens<'a>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30887,"byte_end":30899,"line_start":48,"line_end":48,"column_start":8,"column_end":20},"name":"parse_braces","qualname":"::group::parse_braces","value":"fn <'a> (input: &ParseBuffer<'a>) -> Result<Braces<'a>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":31141,"byte_end":31155,"line_start":57,"line_end":57,"column_start":8,"column_end":22},"name":"parse_brackets","qualname":"::group::parse_brackets","value":"fn <'a> (input: &ParseBuffer<'a>) -> Result<Brackets<'a>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"token","qualname":"::token","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":3288},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3297},{"krate":0,"index":3298},{"krate":0,"index":3302},{"krate":0,"index":3303},{"krate":0,"index":3307},{"krate":0,"index":3308},{"krate":0,"index":3312},{"krate":0,"index":3313},{"krate":0,"index":3317},{"krate":0,"index":3318},{"krate":0,"index":3322},{"krate":0,"index":3323},{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3332},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":3339},{"krate":0,"index":3345},{"krate":0,"index":3342},{"krate":0,"index":3333},{"krate":0,"index":3336},{"krate":0,"index":3346},{"krate":0,"index":3349},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":4027},{"krate":0,"index":4031},{"krate":0,"index":4029},{"krate":0,"index":3351},{"krate":0,"index":3354},{"krate":0,"index":3356},{"krate":0,"index":3358},{"krate":0,"index":3360},{"krate":0,"index":3363},{"krate":0,"index":4032},{"krate":0,"index":4036},{"krate":0,"index":4034},{"krate":0,"index":3364},{"krate":0,"index":3367},{"krate":0,"index":3369},{"krate":0,"index":3371},{"krate":0,"index":3373},{"krate":0,"index":3376},{"krate":0,"index":4037},{"krate":0,"index":4041},{"krate":0,"index":4039},{"krate":0,"index":3377},{"krate":0,"index":3380},{"krate":0,"index":3382},{"krate":0,"index":3384},{"krate":0,"index":3386},{"krate":0,"index":3389},{"krate":0,"index":4042},{"krate":0,"index":4046},{"krate":0,"index":4044},{"krate":0,"index":3390},{"krate":0,"index":3393},{"krate":0,"index":3395},{"krate":0,"index":3397},{"krate":0,"index":3399},{"krate":0,"index":3402},{"krate":0,"index":4047},{"krate":0,"index":4051},{"krate":0,"index":4049},{"krate":0,"index":3403},{"krate":0,"index":3406},{"krate":0,"index":3408},{"krate":0,"index":3410},{"krate":0,"index":3412},{"krate":0,"index":3415},{"krate":0,"index":4052},{"krate":0,"index":4056},{"krate":0,"index":4054},{"krate":0,"index":3416},{"krate":0,"index":3419},{"krate":0,"index":3421},{"krate":0,"index":3423},{"krate":0,"index":3425},{"krate":0,"index":3428},{"krate":0,"index":4057},{"krate":0,"index":4061},{"krate":0,"index":4059},{"krate":0,"index":3429},{"krate":0,"index":3432},{"krate":0,"index":3434},{"krate":0,"index":3436},{"krate":0,"index":3438},{"krate":0,"index":3441},{"krate":0,"index":4062},{"krate":0,"index":4066},{"krate":0,"index":4064},{"krate":0,"index":3442},{"krate":0,"index":3445},{"krate":0,"index":3447},{"krate":0,"index":3449},{"krate":0,"index":3451},{"krate":0,"index":3454},{"krate":0,"index":4067},{"krate":0,"index":4071},{"krate":0,"index":4069},{"krate":0,"index":3455},{"krate":0,"index":3458},{"krate":0,"index":3460},{"krate":0,"index":3462},{"krate":0,"index":3464},{"krate":0,"index":3467},{"krate":0,"index":4072},{"krate":0,"index":4076},{"krate":0,"index":4074},{"krate":0,"index":3468},{"krate":0,"index":3471},{"krate":0,"index":3473},{"krate":0,"index":3475},{"krate":0,"index":3477},{"krate":0,"index":3480},{"krate":0,"index":4077},{"krate":0,"index":4081},{"krate":0,"index":4079},{"krate":0,"index":3481},{"krate":0,"index":3484},{"krate":0,"index":3486},{"krate":0,"index":3488},{"krate":0,"index":3490},{"krate":0,"index":3493},{"krate":0,"index":4082},{"krate":0,"index":4086},{"krate":0,"index":4084},{"krate":0,"index":3494},{"krate":0,"index":3497},{"krate":0,"index":3499},{"krate":0,"index":3501},{"krate":0,"index":3503},{"krate":0,"index":3506},{"krate":0,"index":4087},{"krate":0,"index":4091},{"krate":0,"index":4089},{"krate":0,"index":3507},{"krate":0,"index":3510},{"krate":0,"index":3512},{"krate":0,"index":3514},{"krate":0,"index":3516},{"krate":0,"index":3519},{"krate":0,"index":4092},{"krate":0,"index":4096},{"krate":0,"index":4094},{"krate":0,"index":3520},{"krate":0,"index":3523},{"krate":0,"index":3525},{"krate":0,"index":3527},{"krate":0,"index":3529},{"krate":0,"index":3532},{"krate":0,"index":4097},{"krate":0,"index":4101},{"krate":0,"index":4099},{"krate":0,"index":3533},{"krate":0,"index":3536},{"krate":0,"index":3538},{"krate":0,"index":3540},{"krate":0,"index":3542},{"krate":0,"index":3545},{"krate":0,"index":4102},{"krate":0,"index":4106},{"krate":0,"index":4104},{"krate":0,"index":3546},{"krate":0,"index":3549},{"krate":0,"index":3551},{"krate":0,"index":3553},{"krate":0,"index":3555},{"krate":0,"index":3558},{"krate":0,"index":4107},{"krate":0,"index":4111},{"krate":0,"index":4109},{"krate":0,"index":3559},{"krate":0,"index":3562},{"krate":0,"index":3564},{"krate":0,"index":3566},{"krate":0,"index":3568},{"krate":0,"index":3571},{"krate":0,"index":4112},{"krate":0,"index":4116},{"krate":0,"index":4114},{"krate":0,"index":3572},{"krate":0,"index":3575},{"krate":0,"index":3577},{"krate":0,"index":3579},{"krate":0,"index":3581},{"krate":0,"index":3584},{"krate":0,"index":4117},{"krate":0,"index":4121},{"krate":0,"index":4119},{"krate":0,"index":3585},{"krate":0,"index":3588},{"krate":0,"index":3590},{"krate":0,"index":3592},{"krate":0,"index":3594},{"krate":0,"index":3597},{"krate":0,"index":4122},{"krate":0,"index":4126},{"krate":0,"index":4124},{"krate":0,"index":3598},{"krate":0,"index":3601},{"krate":0,"index":3603},{"krate":0,"index":3605},{"krate":0,"index":3607},{"krate":0,"index":3610},{"krate":0,"index":4127},{"krate":0,"index":4131},{"krate":0,"index":4129},{"krate":0,"index":3611},{"krate":0,"index":3614},{"krate":0,"index":3616},{"krate":0,"index":3618},{"krate":0,"index":3620},{"krate":0,"index":3623},{"krate":0,"index":4132},{"krate":0,"index":4136},{"krate":0,"index":4134},{"krate":0,"index":3624},{"krate":0,"index":3627},{"krate":0,"index":3629},{"krate":0,"index":3631},{"krate":0,"index":3633},{"krate":0,"index":3636},{"krate":0,"index":4137},{"krate":0,"index":4141},{"krate":0,"index":4139},{"krate":0,"index":3637},{"krate":0,"index":3640},{"krate":0,"index":3642},{"krate":0,"index":3644},{"krate":0,"index":3646},{"krate":0,"index":3649},{"krate":0,"index":4142},{"krate":0,"index":4146},{"krate":0,"index":4144},{"krate":0,"index":3650},{"krate":0,"index":3653},{"krate":0,"index":3655},{"krate":0,"index":3657},{"krate":0,"index":3659},{"krate":0,"index":3662},{"krate":0,"index":4147},{"krate":0,"index":4151},{"krate":0,"index":4149},{"krate":0,"index":3663},{"krate":0,"index":3666},{"krate":0,"index":3668},{"krate":0,"index":3670},{"krate":0,"index":3672},{"krate":0,"index":3675},{"krate":0,"index":4152},{"krate":0,"index":4156},{"krate":0,"index":4154},{"krate":0,"index":3676},{"krate":0,"index":3679},{"krate":0,"index":3681},{"krate":0,"index":3683},{"krate":0,"index":3685},{"krate":0,"index":3688},{"krate":0,"index":4157},{"krate":0,"index":4161},{"krate":0,"index":4159},{"krate":0,"index":3689},{"krate":0,"index":3692},{"krate":0,"index":3694},{"krate":0,"index":3696},{"krate":0,"index":3698},{"krate":0,"index":3701},{"krate":0,"index":4162},{"krate":0,"index":4166},{"krate":0,"index":4164},{"krate":0,"index":3702},{"krate":0,"index":3705},{"krate":0,"index":3707},{"krate":0,"index":3709},{"krate":0,"index":3711},{"krate":0,"index":3714},{"krate":0,"index":4167},{"krate":0,"index":4171},{"krate":0,"index":4169},{"krate":0,"index":3715},{"krate":0,"index":3718},{"krate":0,"index":3720},{"krate":0,"index":3722},{"krate":0,"index":3724},{"krate":0,"index":3727},{"krate":0,"index":4172},{"krate":0,"index":4176},{"krate":0,"index":4174},{"krate":0,"index":3728},{"krate":0,"index":3731},{"krate":0,"index":3733},{"krate":0,"index":3735},{"krate":0,"index":3737},{"krate":0,"index":3740},{"krate":0,"index":4177},{"krate":0,"index":4181},{"krate":0,"index":4179},{"krate":0,"index":3741},{"krate":0,"index":3744},{"krate":0,"index":3746},{"krate":0,"index":3748},{"krate":0,"index":3750},{"krate":0,"index":3753},{"krate":0,"index":4182},{"krate":0,"index":4186},{"krate":0,"index":4184},{"krate":0,"index":3754},{"krate":0,"index":3757},{"krate":0,"index":3759},{"krate":0,"index":3761},{"krate":0,"index":3763},{"krate":0,"index":3766},{"krate":0,"index":4187},{"krate":0,"index":4191},{"krate":0,"index":4189},{"krate":0,"index":3767},{"krate":0,"index":3770},{"krate":0,"index":3772},{"krate":0,"index":3774},{"krate":0,"index":3776},{"krate":0,"index":3779},{"krate":0,"index":4192},{"krate":0,"index":4196},{"krate":0,"index":4194},{"krate":0,"index":3780},{"krate":0,"index":3783},{"krate":0,"index":3785},{"krate":0,"index":3787},{"krate":0,"index":3789},{"krate":0,"index":3792},{"krate":0,"index":4197},{"krate":0,"index":4201},{"krate":0,"index":4199},{"krate":0,"index":3793},{"krate":0,"index":3796},{"krate":0,"index":3798},{"krate":0,"index":3800},{"krate":0,"index":3802},{"krate":0,"index":3805},{"krate":0,"index":4202},{"krate":0,"index":4206},{"krate":0,"index":4204},{"krate":0,"index":3806},{"krate":0,"index":3809},{"krate":0,"index":3811},{"krate":0,"index":3813},{"krate":0,"index":3815},{"krate":0,"index":3818},{"krate":0,"index":4207},{"krate":0,"index":4211},{"krate":0,"index":4209},{"krate":0,"index":3819},{"krate":0,"index":3822},{"krate":0,"index":3824},{"krate":0,"index":3826},{"krate":0,"index":3828},{"krate":0,"index":3831},{"krate":0,"index":4212},{"krate":0,"index":4216},{"krate":0,"index":4214},{"krate":0,"index":3832},{"krate":0,"index":3835},{"krate":0,"index":3837},{"krate":0,"index":3839},{"krate":0,"index":3841},{"krate":0,"index":3844},{"krate":0,"index":4217},{"krate":0,"index":4221},{"krate":0,"index":4219},{"krate":0,"index":3845},{"krate":0,"index":3848},{"krate":0,"index":3850},{"krate":0,"index":3852},{"krate":0,"index":3854},{"krate":0,"index":3857},{"krate":0,"index":4222},{"krate":0,"index":4226},{"krate":0,"index":4224},{"krate":0,"index":3858},{"krate":0,"index":3861},{"krate":0,"index":3863},{"krate":0,"index":3865},{"krate":0,"index":3867},{"krate":0,"index":3870},{"krate":0,"index":4227},{"krate":0,"index":4231},{"krate":0,"index":4229},{"krate":0,"index":3871},{"krate":0,"index":3874},{"krate":0,"index":3876},{"krate":0,"index":3878},{"krate":0,"index":3880},{"krate":0,"index":3883},{"krate":0,"index":4232},{"krate":0,"index":4236},{"krate":0,"index":4234},{"krate":0,"index":3884},{"krate":0,"index":3887},{"krate":0,"index":3889},{"krate":0,"index":3891},{"krate":0,"index":3893},{"krate":0,"index":3896},{"krate":0,"index":4237},{"krate":0,"index":4241},{"krate":0,"index":4239},{"krate":0,"index":3897},{"krate":0,"index":3900},{"krate":0,"index":3902},{"krate":0,"index":3904},{"krate":0,"index":3906},{"krate":0,"index":3909},{"krate":0,"index":4242},{"krate":0,"index":4246},{"krate":0,"index":4244},{"krate":0,"index":3910},{"krate":0,"index":3913},{"krate":0,"index":3915},{"krate":0,"index":3917},{"krate":0,"index":3919},{"krate":0,"index":3922},{"krate":0,"index":4247},{"krate":0,"index":4251},{"krate":0,"index":4249},{"krate":0,"index":3923},{"krate":0,"index":3926},{"krate":0,"index":3928},{"krate":0,"index":3930},{"krate":0,"index":3932},{"krate":0,"index":3935},{"krate":0,"index":4252},{"krate":0,"index":4256},{"krate":0,"index":4254},{"krate":0,"index":3936},{"krate":0,"index":3939},{"krate":0,"index":3941},{"krate":0,"index":3943},{"krate":0,"index":3945},{"krate":0,"index":3948},{"krate":0,"index":4257},{"krate":0,"index":4261},{"krate":0,"index":4259},{"krate":0,"index":3949},{"krate":0,"index":3952},{"krate":0,"index":3954},{"krate":0,"index":3956},{"krate":0,"index":3958},{"krate":0,"index":3961},{"krate":0,"index":4262},{"krate":0,"index":4266},{"krate":0,"index":4264},{"krate":0,"index":3962},{"krate":0,"index":3965},{"krate":0,"index":3967},{"krate":0,"index":3969},{"krate":0,"index":3971},{"krate":0,"index":3974},{"krate":0,"index":4267},{"krate":0,"index":4271},{"krate":0,"index":4269},{"krate":0,"index":3975},{"krate":0,"index":3978},{"krate":0,"index":3980},{"krate":0,"index":3982},{"krate":0,"index":3984},{"krate":0,"index":3987},{"krate":0,"index":4272},{"krate":0,"index":4276},{"krate":0,"index":4274},{"krate":0,"index":3988},{"krate":0,"index":3991},{"krate":0,"index":3993},{"krate":0,"index":3995},{"krate":0,"index":3997},{"krate":0,"index":4000},{"krate":0,"index":4277},{"krate":0,"index":4281},{"krate":0,"index":4279},{"krate":0,"index":4001},{"krate":0,"index":4004},{"krate":0,"index":4006},{"krate":0,"index":4008},{"krate":0,"index":4010},{"krate":0,"index":4013},{"krate":0,"index":4282},{"krate":0,"index":4286},{"krate":0,"index":4284},{"krate":0,"index":4014},{"krate":0,"index":4017},{"krate":0,"index":4019},{"krate":0,"index":4021},{"krate":0,"index":4023},{"krate":0,"index":4026},{"krate":0,"index":4661},{"krate":0,"index":4667},{"krate":0,"index":4664},{"krate":0,"index":4655},{"krate":0,"index":4658},{"krate":0,"index":4668},{"krate":0,"index":4671},{"krate":0,"index":4287},{"krate":0,"index":4289},{"krate":0,"index":4291},{"krate":0,"index":4294},{"krate":0,"index":4679},{"krate":0,"index":4685},{"krate":0,"index":4682},{"krate":0,"index":4673},{"krate":0,"index":4676},{"krate":0,"index":4295},{"krate":0,"index":4297},{"krate":0,"index":4299},{"krate":0,"index":4302},{"krate":0,"index":4692},{"krate":0,"index":4698},{"krate":0,"index":4695},{"krate":0,"index":4686},{"krate":0,"index":4689},{"krate":0,"index":4699},{"krate":0,"index":4702},{"krate":0,"index":4303},{"krate":0,"index":4305},{"krate":0,"index":4307},{"krate":0,"index":4310},{"krate":0,"index":4710},{"krate":0,"index":4716},{"krate":0,"index":4713},{"krate":0,"index":4704},{"krate":0,"index":4707},{"krate":0,"index":4311},{"krate":0,"index":4313},{"krate":0,"index":4315},{"krate":0,"index":4318},{"krate":0,"index":4723},{"krate":0,"index":4729},{"krate":0,"index":4726},{"krate":0,"index":4717},{"krate":0,"index":4720},{"krate":0,"index":4319},{"krate":0,"index":4321},{"krate":0,"index":4323},{"krate":0,"index":4326},{"krate":0,"index":4736},{"krate":0,"index":4742},{"krate":0,"index":4739},{"krate":0,"index":4730},{"krate":0,"index":4733},{"krate":0,"index":4743},{"krate":0,"index":4746},{"krate":0,"index":4327},{"krate":0,"index":4329},{"krate":0,"index":4331},{"krate":0,"index":4334},{"krate":0,"index":4754},{"krate":0,"index":4760},{"krate":0,"index":4757},{"krate":0,"index":4748},{"krate":0,"index":4751},{"krate":0,"index":4761},{"krate":0,"index":4764},{"krate":0,"index":4335},{"krate":0,"index":4337},{"krate":0,"index":4339},{"krate":0,"index":4342},{"krate":0,"index":4772},{"krate":0,"index":4778},{"krate":0,"index":4775},{"krate":0,"index":4766},{"krate":0,"index":4769},{"krate":0,"index":4779},{"krate":0,"index":4782},{"krate":0,"index":4343},{"krate":0,"index":4345},{"krate":0,"index":4347},{"krate":0,"index":4350},{"krate":0,"index":4790},{"krate":0,"index":4796},{"krate":0,"index":4793},{"krate":0,"index":4784},{"krate":0,"index":4787},{"krate":0,"index":4351},{"krate":0,"index":4353},{"krate":0,"index":4355},{"krate":0,"index":4358},{"krate":0,"index":4803},{"krate":0,"index":4809},{"krate":0,"index":4806},{"krate":0,"index":4797},{"krate":0,"index":4800},{"krate":0,"index":4810},{"krate":0,"index":4813},{"krate":0,"index":4359},{"krate":0,"index":4361},{"krate":0,"index":4363},{"krate":0,"index":4366},{"krate":0,"index":4821},{"krate":0,"index":4827},{"krate":0,"index":4824},{"krate":0,"index":4815},{"krate":0,"index":4818},{"krate":0,"index":4367},{"krate":0,"index":4369},{"krate":0,"index":4371},{"krate":0,"index":4374},{"krate":0,"index":4834},{"krate":0,"index":4840},{"krate":0,"index":4837},{"krate":0,"index":4828},{"krate":0,"index":4831},{"krate":0,"index":4841},{"krate":0,"index":4844},{"krate":0,"index":4375},{"krate":0,"index":4377},{"krate":0,"index":4379},{"krate":0,"index":4382},{"krate":0,"index":4852},{"krate":0,"index":4858},{"krate":0,"index":4855},{"krate":0,"index":4846},{"krate":0,"index":4849},{"krate":0,"index":4859},{"krate":0,"index":4862},{"krate":0,"index":4383},{"krate":0,"index":4385},{"krate":0,"index":4387},{"krate":0,"index":4390},{"krate":0,"index":4870},{"krate":0,"index":4876},{"krate":0,"index":4873},{"krate":0,"index":4864},{"krate":0,"index":4867},{"krate":0,"index":4391},{"krate":0,"index":4393},{"krate":0,"index":4395},{"krate":0,"index":4398},{"krate":0,"index":4883},{"krate":0,"index":4889},{"krate":0,"index":4886},{"krate":0,"index":4877},{"krate":0,"index":4880},{"krate":0,"index":4890},{"krate":0,"index":4893},{"krate":0,"index":4399},{"krate":0,"index":4401},{"krate":0,"index":4403},{"krate":0,"index":4406},{"krate":0,"index":4901},{"krate":0,"index":4907},{"krate":0,"index":4904},{"krate":0,"index":4895},{"krate":0,"index":4898},{"krate":0,"index":4908},{"krate":0,"index":4911},{"krate":0,"index":4407},{"krate":0,"index":4409},{"krate":0,"index":4411},{"krate":0,"index":4414},{"krate":0,"index":4919},{"krate":0,"index":4925},{"krate":0,"index":4922},{"krate":0,"index":4913},{"krate":0,"index":4916},{"krate":0,"index":4415},{"krate":0,"index":4417},{"krate":0,"index":4419},{"krate":0,"index":4422},{"krate":0,"index":4932},{"krate":0,"index":4938},{"krate":0,"index":4935},{"krate":0,"index":4926},{"krate":0,"index":4929},{"krate":0,"index":4423},{"krate":0,"index":4425},{"krate":0,"index":4427},{"krate":0,"index":4430},{"krate":0,"index":4945},{"krate":0,"index":4951},{"krate":0,"index":4948},{"krate":0,"index":4939},{"krate":0,"index":4942},{"krate":0,"index":4431},{"krate":0,"index":4433},{"krate":0,"index":4435},{"krate":0,"index":4438},{"krate":0,"index":4958},{"krate":0,"index":4964},{"krate":0,"index":4961},{"krate":0,"index":4952},{"krate":0,"index":4955},{"krate":0,"index":4965},{"krate":0,"index":4968},{"krate":0,"index":4439},{"krate":0,"index":4441},{"krate":0,"index":4443},{"krate":0,"index":4446},{"krate":0,"index":4976},{"krate":0,"index":4982},{"krate":0,"index":4979},{"krate":0,"index":4970},{"krate":0,"index":4973},{"krate":0,"index":4447},{"krate":0,"index":4449},{"krate":0,"index":4451},{"krate":0,"index":4454},{"krate":0,"index":4989},{"krate":0,"index":4995},{"krate":0,"index":4992},{"krate":0,"index":4983},{"krate":0,"index":4986},{"krate":0,"index":4455},{"krate":0,"index":4457},{"krate":0,"index":4459},{"krate":0,"index":4462},{"krate":0,"index":5002},{"krate":0,"index":5008},{"krate":0,"index":5005},{"krate":0,"index":4996},{"krate":0,"index":4999},{"krate":0,"index":5009},{"krate":0,"index":5012},{"krate":0,"index":4463},{"krate":0,"index":4465},{"krate":0,"index":4467},{"krate":0,"index":4470},{"krate":0,"index":5020},{"krate":0,"index":5026},{"krate":0,"index":5023},{"krate":0,"index":5014},{"krate":0,"index":5017},{"krate":0,"index":4471},{"krate":0,"index":4473},{"krate":0,"index":4475},{"krate":0,"index":4478},{"krate":0,"index":5033},{"krate":0,"index":5039},{"krate":0,"index":5036},{"krate":0,"index":5027},{"krate":0,"index":5030},{"krate":0,"index":5040},{"krate":0,"index":5043},{"krate":0,"index":4479},{"krate":0,"index":4481},{"krate":0,"index":4483},{"krate":0,"index":4486},{"krate":0,"index":5051},{"krate":0,"index":5057},{"krate":0,"index":5054},{"krate":0,"index":5045},{"krate":0,"index":5048},{"krate":0,"index":4487},{"krate":0,"index":4489},{"krate":0,"index":4491},{"krate":0,"index":4494},{"krate":0,"index":5064},{"krate":0,"index":5070},{"krate":0,"index":5067},{"krate":0,"index":5058},{"krate":0,"index":5061},{"krate":0,"index":4495},{"krate":0,"index":4497},{"krate":0,"index":4499},{"krate":0,"index":4502},{"krate":0,"index":5077},{"krate":0,"index":5083},{"krate":0,"index":5080},{"krate":0,"index":5071},{"krate":0,"index":5074},{"krate":0,"index":5084},{"krate":0,"index":5087},{"krate":0,"index":4503},{"krate":0,"index":4505},{"krate":0,"index":4507},{"krate":0,"index":4510},{"krate":0,"index":5095},{"krate":0,"index":5101},{"krate":0,"index":5098},{"krate":0,"index":5089},{"krate":0,"index":5092},{"krate":0,"index":4511},{"krate":0,"index":4513},{"krate":0,"index":4515},{"krate":0,"index":4518},{"krate":0,"index":5108},{"krate":0,"index":5114},{"krate":0,"index":5111},{"krate":0,"index":5102},{"krate":0,"index":5105},{"krate":0,"index":4519},{"krate":0,"index":4521},{"krate":0,"index":4523},{"krate":0,"index":4526},{"krate":0,"index":5121},{"krate":0,"index":5127},{"krate":0,"index":5124},{"krate":0,"index":5115},{"krate":0,"index":5118},{"krate":0,"index":5128},{"krate":0,"index":5131},{"krate":0,"index":4527},{"krate":0,"index":4529},{"krate":0,"index":4531},{"krate":0,"index":4534},{"krate":0,"index":5139},{"krate":0,"index":5145},{"krate":0,"index":5142},{"krate":0,"index":5133},{"krate":0,"index":5136},{"krate":0,"index":5146},{"krate":0,"index":5149},{"krate":0,"index":4535},{"krate":0,"index":4537},{"krate":0,"index":4539},{"krate":0,"index":4542},{"krate":0,"index":5157},{"krate":0,"index":5163},{"krate":0,"index":5160},{"krate":0,"index":5151},{"krate":0,"index":5154},{"krate":0,"index":4543},{"krate":0,"index":4545},{"krate":0,"index":4547},{"krate":0,"index":4550},{"krate":0,"index":5170},{"krate":0,"index":5176},{"krate":0,"index":5173},{"krate":0,"index":5164},{"krate":0,"index":5167},{"krate":0,"index":4551},{"krate":0,"index":4553},{"krate":0,"index":4555},{"krate":0,"index":4558},{"krate":0,"index":5183},{"krate":0,"index":5189},{"krate":0,"index":5186},{"krate":0,"index":5177},{"krate":0,"index":5180},{"krate":0,"index":5190},{"krate":0,"index":5193},{"krate":0,"index":4559},{"krate":0,"index":4561},{"krate":0,"index":4563},{"krate":0,"index":4566},{"krate":0,"index":5201},{"krate":0,"index":5207},{"krate":0,"index":5204},{"krate":0,"index":5195},{"krate":0,"index":5198},{"krate":0,"index":4567},{"krate":0,"index":4569},{"krate":0,"index":4571},{"krate":0,"index":4574},{"krate":0,"index":5214},{"krate":0,"index":5220},{"krate":0,"index":5217},{"krate":0,"index":5208},{"krate":0,"index":5211},{"krate":0,"index":4575},{"krate":0,"index":4577},{"krate":0,"index":4579},{"krate":0,"index":4582},{"krate":0,"index":5227},{"krate":0,"index":5233},{"krate":0,"index":5230},{"krate":0,"index":5221},{"krate":0,"index":5224},{"krate":0,"index":5234},{"krate":0,"index":5237},{"krate":0,"index":4583},{"krate":0,"index":4585},{"krate":0,"index":4587},{"krate":0,"index":4590},{"krate":0,"index":5245},{"krate":0,"index":5251},{"krate":0,"index":5248},{"krate":0,"index":5239},{"krate":0,"index":5242},{"krate":0,"index":4591},{"krate":0,"index":4593},{"krate":0,"index":4595},{"krate":0,"index":4598},{"krate":0,"index":5258},{"krate":0,"index":5264},{"krate":0,"index":5261},{"krate":0,"index":5252},{"krate":0,"index":5255},{"krate":0,"index":4599},{"krate":0,"index":4601},{"krate":0,"index":4603},{"krate":0,"index":4606},{"krate":0,"index":5271},{"krate":0,"index":5277},{"krate":0,"index":5274},{"krate":0,"index":5265},{"krate":0,"index":5268},{"krate":0,"index":4607},{"krate":0,"index":4609},{"krate":0,"index":4611},{"krate":0,"index":4614},{"krate":0,"index":5284},{"krate":0,"index":5290},{"krate":0,"index":5287},{"krate":0,"index":5278},{"krate":0,"index":5281},{"krate":0,"index":4615},{"krate":0,"index":4617},{"krate":0,"index":4619},{"krate":0,"index":4622},{"krate":0,"index":5297},{"krate":0,"index":5303},{"krate":0,"index":5300},{"krate":0,"index":5291},{"krate":0,"index":5294},{"krate":0,"index":5304},{"krate":0,"index":5307},{"krate":0,"index":4623},{"krate":0,"index":4625},{"krate":0,"index":4627},{"krate":0,"index":4630},{"krate":0,"index":5315},{"krate":0,"index":5321},{"krate":0,"index":5318},{"krate":0,"index":5309},{"krate":0,"index":5312},{"krate":0,"index":5322},{"krate":0,"index":5325},{"krate":0,"index":4631},{"krate":0,"index":4633},{"krate":0,"index":4635},{"krate":0,"index":4638},{"krate":0,"index":5333},{"krate":0,"index":5339},{"krate":0,"index":5336},{"krate":0,"index":5327},{"krate":0,"index":5330},{"krate":0,"index":4639},{"krate":0,"index":4641},{"krate":0,"index":4643},{"krate":0,"index":4646},{"krate":0,"index":5346},{"krate":0,"index":5352},{"krate":0,"index":5349},{"krate":0,"index":5340},{"krate":0,"index":5343},{"krate":0,"index":5353},{"krate":0,"index":5356},{"krate":0,"index":4647},{"krate":0,"index":4649},{"krate":0,"index":4651},{"krate":0,"index":4654},{"krate":0,"index":5394},{"krate":0,"index":5398},{"krate":0,"index":5396},{"krate":0,"index":5358},{"krate":0,"index":5361},{"krate":0,"index":5363},{"krate":0,"index":5366},{"krate":0,"index":5399},{"krate":0,"index":5403},{"krate":0,"index":5401},{"krate":0,"index":5367},{"krate":0,"index":5370},{"krate":0,"index":5372},{"krate":0,"index":5375},{"krate":0,"index":5404},{"krate":0,"index":5408},{"krate":0,"index":5406},{"krate":0,"index":5376},{"krate":0,"index":5379},{"krate":0,"index":5381},{"krate":0,"index":5384},{"krate":0,"index":5409},{"krate":0,"index":5413},{"krate":0,"index":5411},{"krate":0,"index":5385},{"krate":0,"index":5388},{"krate":0,"index":5390},{"krate":0,"index":5393},{"krate":0,"index":135},{"krate":0,"index":5414},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":158}],"decl_id":null,"docs":" Tokens representing Rust punctuation, keywords, and delimiters.\n\n The type names in this module can be difficult to keep straight, so we\n prefer to use the [`Token!`] macro instead. This is a type-macro that\n expands to the token type of the given token.\n\n [`Token!`]: ../macro.Token.html\n\n # Example\n\n The [`ItemStatic`] syntax tree node is defined like this.\n\n [`ItemStatic`]: ../struct.ItemStatic.html\n\n ```edition2018\n # use syn::{Attribute, Expr, Ident, Token, Type, Visibility};\n #\n pub struct ItemStatic {\n     pub attrs: Vec<Attribute>,\n     pub vis: Visibility,\n     pub static_token: Token![static],\n     pub mutability: Option<Token![mut]>,\n     pub ident: Ident,\n     pub colon_token: Token![:],\n     pub ty: Box<Type>,\n     pub eq_token: Token![=],\n     pub expr: Box<Expr>,\n     pub semi_token: Token![;],\n }\n ```\n\n # Parsing\n\n Keywords and punctuation can be parsed through the [`ParseStream::parse`]\n method. Delimiter tokens are parsed using the [`parenthesized!`],\n [`bracketed!`] and [`braced!`] macros.\n\n [`ParseStream::parse`]: ../parse/struct.ParseBuffer.html#method.parse\n [`parenthesized!`]: ../macro.parenthesized.html\n [`bracketed!`]: ../macro.bracketed.html\n [`braced!`]: ../macro.braced.html\n\n ```edition2018\n use syn::{Attribute, Result};\n use syn::parse::{Parse, ParseStream};\n #\n # enum ItemStatic {}\n\n // Parse the ItemStatic struct shown above.\n impl Parse for ItemStatic {\n     fn parse(input: ParseStream) -> Result<Self> {\n         # use syn::ItemStatic;\n         # fn parse(input: ParseStream) -> Result<ItemStatic> {\n         Ok(ItemStatic {\n             attrs: input.call(Attribute::parse_outer)?,\n             vis: input.parse()?,\n             static_token: input.parse()?,\n             mutability: input.parse()?,\n             ident: input.parse()?,\n             colon_token: input.parse()?,\n             ty: input.parse()?,\n             eq_token: input.parse()?,\n             expr: input.parse()?,\n             semi_token: input.parse()?,\n         })\n         # }\n         # unimplemented!()\n     }\n }\n ```\n\n # Other operations\n\n Every keyword and punctuation token supports the following operations.\n\n - [Peeking] — `input.peek(Token![...])`\n\n - [Parsing] — `input.parse::<Token![...]>()?`\n\n - [Printing] — `quote!( ... #the_token ... )`\n\n - Construction from a [`Span`] — `let the_token = Token![...](sp)`\n\n - Field access to its span — `let sp = the_token.span`\n\n [Peeking]: ../parse/struct.ParseBuffer.html#method.peek\n [Parsing]: ../parse/struct.ParseBuffer.html#method.parse\n [Printing]: https://docs.rs/quote/0.6/quote/trait.ToTokens.html\n [`Span`]: https://docs.rs/proc-macro2/0.4/proc_macro2/struct.Span.html\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10786,"byte_end":10798,"line_start":298,"line_end":298,"column_start":1,"column_end":13}}]},{"kind":"Trait","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":41775,"byte_end":41780,"line_start":131,"line_end":131,"column_start":11,"column_end":16},"name":"Token","qualname":"::token::Token","value":"Token: private::Sealed","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":" Marker trait for types that represent single tokens.\n\n This trait is sealed and cannot be implemented for types outside of Syn.\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":41737,"byte_end":41764,"line_start":130,"line_end":130,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":41849,"byte_end":41853,"line_start":134,"line_end":134,"column_start":8,"column_end":12},"name":"peek","qualname":"::token::Token::peek","value":"fn (cursor: Cursor) -> bool","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":41929,"byte_end":41936,"line_start":138,"line_end":138,"column_start":8,"column_end":15},"name":"display","qualname":"::token::Token::display","value":"fn () -> &'static str","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":42047,"byte_end":42053,"line_start":145,"line_end":145,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::token::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":42005,"byte_end":42032,"line_start":144,"line_end":144,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":42197,"byte_end":42205,"line_start":150,"line_end":150,"column_start":16,"column_end":24},"name":"WithSpan","qualname":"::token::private::WithSpan","value":"WithSpan { span }","parent":null,"children":[{"krate":0,"index":94}],"decl_id":null,"docs":" Support writing `token.span` rather than `token.spans[0]` on tokens that\n hold a single span.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":42171,"byte_end":42181,"line_start":149,"line_end":149,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":42220,"byte_end":42224,"line_start":151,"line_end":151,"column_start":13,"column_end":17},"name":"span","qualname":"::token::private::WithSpan::span","value":"proc_macro2::Span","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44144,"byte_end":44155,"line_start":214,"line_end":214,"column_start":11,"column_end":22},"name":"CustomToken","qualname":"::token::CustomToken","value":"CustomToken","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44106,"byte_end":44133,"line_start":213,"line_end":213,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44165,"byte_end":44169,"line_start":215,"line_end":215,"column_start":8,"column_end":12},"name":"peek","qualname":"::token::CustomToken::peek","value":"fn (cursor: Cursor) -> bool","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44202,"byte_end":44209,"line_start":216,"line_end":216,"column_start":8,"column_end":15},"name":"display","qualname":"::token::CustomToken::display","value":"fn () -> &'static str","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3339},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":52406,"byte_end":52416,"line_start":500,"line_end":500,"column_start":20,"column_end":30},"name":"Underscore","qualname":"::token::Underscore","value":"Underscore { spans }","parent":null,"children":[{"krate":0,"index":3340}],"decl_id":null,"docs":" `_`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":3333},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":52406,"byte_end":52416,"line_start":500,"line_end":500,"column_start":20,"column_end":30},"name":"Underscore","qualname":"::token::Underscore","value":"fn <S> (spans: S) -> Underscore","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4027},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54586,"byte_end":54594,"line_start":594,"line_end":594,"column_start":30,"column_end":38},"name":"Abstract","qualname":"::token::Abstract","value":"Abstract { span }","parent":null,"children":[{"krate":0,"index":4028}],"decl_id":null,"docs":" `abstract`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3351},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54586,"byte_end":54594,"line_start":594,"line_end":594,"column_start":30,"column_end":38},"name":"Abstract","qualname":"::token::Abstract","value":"fn <S> (span: S) -> Abstract","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4032},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54643,"byte_end":54645,"line_start":595,"line_end":595,"column_start":30,"column_end":32},"name":"As","qualname":"::token::As","value":"As { span }","parent":null,"children":[{"krate":0,"index":4033}],"decl_id":null,"docs":" `as`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3364},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54643,"byte_end":54645,"line_start":595,"line_end":595,"column_start":30,"column_end":32},"name":"As","qualname":"::token::As","value":"fn <S> (span: S) -> As","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4037},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54694,"byte_end":54699,"line_start":596,"line_end":596,"column_start":30,"column_end":35},"name":"Async","qualname":"::token::Async","value":"Async { span }","parent":null,"children":[{"krate":0,"index":4038}],"decl_id":null,"docs":" `async`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3377},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54694,"byte_end":54699,"line_start":596,"line_end":596,"column_start":30,"column_end":35},"name":"Async","qualname":"::token::Async","value":"fn <S> (span: S) -> Async","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4042},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54748,"byte_end":54752,"line_start":597,"line_end":597,"column_start":30,"column_end":34},"name":"Auto","qualname":"::token::Auto","value":"Auto { span }","parent":null,"children":[{"krate":0,"index":4043}],"decl_id":null,"docs":" `auto`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3390},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54748,"byte_end":54752,"line_start":597,"line_end":597,"column_start":30,"column_end":34},"name":"Auto","qualname":"::token::Auto","value":"fn <S> (span: S) -> Auto","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4047},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54801,"byte_end":54807,"line_start":598,"line_end":598,"column_start":30,"column_end":36},"name":"Become","qualname":"::token::Become","value":"Become { span }","parent":null,"children":[{"krate":0,"index":4048}],"decl_id":null,"docs":" `become`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3403},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54801,"byte_end":54807,"line_start":598,"line_end":598,"column_start":30,"column_end":36},"name":"Become","qualname":"::token::Become","value":"fn <S> (span: S) -> Become","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4052},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54856,"byte_end":54859,"line_start":599,"line_end":599,"column_start":30,"column_end":33},"name":"Box","qualname":"::token::Box","value":"Box { span }","parent":null,"children":[{"krate":0,"index":4053}],"decl_id":null,"docs":" `box`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3416},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54856,"byte_end":54859,"line_start":599,"line_end":599,"column_start":30,"column_end":33},"name":"Box","qualname":"::token::Box","value":"fn <S> (span: S) -> Box","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4057},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54908,"byte_end":54913,"line_start":600,"line_end":600,"column_start":30,"column_end":35},"name":"Break","qualname":"::token::Break","value":"Break { span }","parent":null,"children":[{"krate":0,"index":4058}],"decl_id":null,"docs":" `break`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3429},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54908,"byte_end":54913,"line_start":600,"line_end":600,"column_start":30,"column_end":35},"name":"Break","qualname":"::token::Break","value":"fn <S> (span: S) -> Break","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4062},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54962,"byte_end":54967,"line_start":601,"line_end":601,"column_start":30,"column_end":35},"name":"Const","qualname":"::token::Const","value":"Const { span }","parent":null,"children":[{"krate":0,"index":4063}],"decl_id":null,"docs":" `const`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3442},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54962,"byte_end":54967,"line_start":601,"line_end":601,"column_start":30,"column_end":35},"name":"Const","qualname":"::token::Const","value":"fn <S> (span: S) -> Const","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4067},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55016,"byte_end":55024,"line_start":602,"line_end":602,"column_start":30,"column_end":38},"name":"Continue","qualname":"::token::Continue","value":"Continue { span }","parent":null,"children":[{"krate":0,"index":4068}],"decl_id":null,"docs":" `continue`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3455},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55016,"byte_end":55024,"line_start":602,"line_end":602,"column_start":30,"column_end":38},"name":"Continue","qualname":"::token::Continue","value":"fn <S> (span: S) -> Continue","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4072},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55073,"byte_end":55078,"line_start":603,"line_end":603,"column_start":30,"column_end":35},"name":"Crate","qualname":"::token::Crate","value":"Crate { span }","parent":null,"children":[{"krate":0,"index":4073}],"decl_id":null,"docs":" `crate`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3468},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55073,"byte_end":55078,"line_start":603,"line_end":603,"column_start":30,"column_end":35},"name":"Crate","qualname":"::token::Crate","value":"fn <S> (span: S) -> Crate","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4077},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55127,"byte_end":55134,"line_start":604,"line_end":604,"column_start":30,"column_end":37},"name":"Default","qualname":"::token::Default","value":"Default { span }","parent":null,"children":[{"krate":0,"index":4078}],"decl_id":null,"docs":" `default`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3481},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55127,"byte_end":55134,"line_start":604,"line_end":604,"column_start":30,"column_end":37},"name":"Default","qualname":"::token::Default","value":"fn <S> (span: S) -> Default","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4082},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55183,"byte_end":55185,"line_start":605,"line_end":605,"column_start":30,"column_end":32},"name":"Do","qualname":"::token::Do","value":"Do { span }","parent":null,"children":[{"krate":0,"index":4083}],"decl_id":null,"docs":" `do`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3494},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55183,"byte_end":55185,"line_start":605,"line_end":605,"column_start":30,"column_end":32},"name":"Do","qualname":"::token::Do","value":"fn <S> (span: S) -> Do","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4087},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55234,"byte_end":55237,"line_start":606,"line_end":606,"column_start":30,"column_end":33},"name":"Dyn","qualname":"::token::Dyn","value":"Dyn { span }","parent":null,"children":[{"krate":0,"index":4088}],"decl_id":null,"docs":" `dyn`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3507},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55234,"byte_end":55237,"line_start":606,"line_end":606,"column_start":30,"column_end":33},"name":"Dyn","qualname":"::token::Dyn","value":"fn <S> (span: S) -> Dyn","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4092},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55286,"byte_end":55290,"line_start":607,"line_end":607,"column_start":30,"column_end":34},"name":"Else","qualname":"::token::Else","value":"Else { span }","parent":null,"children":[{"krate":0,"index":4093}],"decl_id":null,"docs":" `else`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3520},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55286,"byte_end":55290,"line_start":607,"line_end":607,"column_start":30,"column_end":34},"name":"Else","qualname":"::token::Else","value":"fn <S> (span: S) -> Else","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4097},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55339,"byte_end":55343,"line_start":608,"line_end":608,"column_start":30,"column_end":34},"name":"Enum","qualname":"::token::Enum","value":"Enum { span }","parent":null,"children":[{"krate":0,"index":4098}],"decl_id":null,"docs":" `enum`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3533},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55339,"byte_end":55343,"line_start":608,"line_end":608,"column_start":30,"column_end":34},"name":"Enum","qualname":"::token::Enum","value":"fn <S> (span: S) -> Enum","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4102},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55392,"byte_end":55403,"line_start":609,"line_end":609,"column_start":30,"column_end":41},"name":"Existential","qualname":"::token::Existential","value":"Existential { span }","parent":null,"children":[{"krate":0,"index":4103}],"decl_id":null,"docs":" `existential`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3546},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55392,"byte_end":55403,"line_start":609,"line_end":609,"column_start":30,"column_end":41},"name":"Existential","qualname":"::token::Existential","value":"fn <S> (span: S) -> Existential","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4107},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55452,"byte_end":55458,"line_start":610,"line_end":610,"column_start":30,"column_end":36},"name":"Extern","qualname":"::token::Extern","value":"Extern { span }","parent":null,"children":[{"krate":0,"index":4108}],"decl_id":null,"docs":" `extern`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3559},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55452,"byte_end":55458,"line_start":610,"line_end":610,"column_start":30,"column_end":36},"name":"Extern","qualname":"::token::Extern","value":"fn <S> (span: S) -> Extern","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4112},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55507,"byte_end":55512,"line_start":611,"line_end":611,"column_start":30,"column_end":35},"name":"Final","qualname":"::token::Final","value":"Final { span }","parent":null,"children":[{"krate":0,"index":4113}],"decl_id":null,"docs":" `final`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3572},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55507,"byte_end":55512,"line_start":611,"line_end":611,"column_start":30,"column_end":35},"name":"Final","qualname":"::token::Final","value":"fn <S> (span: S) -> Final","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4117},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55561,"byte_end":55563,"line_start":612,"line_end":612,"column_start":30,"column_end":32},"name":"Fn","qualname":"::token::Fn","value":"Fn { span }","parent":null,"children":[{"krate":0,"index":4118}],"decl_id":null,"docs":" `fn`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3585},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55561,"byte_end":55563,"line_start":612,"line_end":612,"column_start":30,"column_end":32},"name":"Fn","qualname":"::token::Fn","value":"fn <S> (span: S) -> Fn","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4122},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55612,"byte_end":55615,"line_start":613,"line_end":613,"column_start":30,"column_end":33},"name":"For","qualname":"::token::For","value":"For { span }","parent":null,"children":[{"krate":0,"index":4123}],"decl_id":null,"docs":" `for`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3598},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55612,"byte_end":55615,"line_start":613,"line_end":613,"column_start":30,"column_end":33},"name":"For","qualname":"::token::For","value":"fn <S> (span: S) -> For","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4127},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55664,"byte_end":55666,"line_start":614,"line_end":614,"column_start":30,"column_end":32},"name":"If","qualname":"::token::If","value":"If { span }","parent":null,"children":[{"krate":0,"index":4128}],"decl_id":null,"docs":" `if`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3611},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55664,"byte_end":55666,"line_start":614,"line_end":614,"column_start":30,"column_end":32},"name":"If","qualname":"::token::If","value":"fn <S> (span: S) -> If","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4132},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55715,"byte_end":55719,"line_start":615,"line_end":615,"column_start":30,"column_end":34},"name":"Impl","qualname":"::token::Impl","value":"Impl { span }","parent":null,"children":[{"krate":0,"index":4133}],"decl_id":null,"docs":" `impl`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3624},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55715,"byte_end":55719,"line_start":615,"line_end":615,"column_start":30,"column_end":34},"name":"Impl","qualname":"::token::Impl","value":"fn <S> (span: S) -> Impl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4137},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55768,"byte_end":55770,"line_start":616,"line_end":616,"column_start":30,"column_end":32},"name":"In","qualname":"::token::In","value":"In { span }","parent":null,"children":[{"krate":0,"index":4138}],"decl_id":null,"docs":" `in`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3637},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55768,"byte_end":55770,"line_start":616,"line_end":616,"column_start":30,"column_end":32},"name":"In","qualname":"::token::In","value":"fn <S> (span: S) -> In","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4142},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55819,"byte_end":55822,"line_start":617,"line_end":617,"column_start":30,"column_end":33},"name":"Let","qualname":"::token::Let","value":"Let { span }","parent":null,"children":[{"krate":0,"index":4143}],"decl_id":null,"docs":" `let`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3650},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55819,"byte_end":55822,"line_start":617,"line_end":617,"column_start":30,"column_end":33},"name":"Let","qualname":"::token::Let","value":"fn <S> (span: S) -> Let","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4147},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55871,"byte_end":55875,"line_start":618,"line_end":618,"column_start":30,"column_end":34},"name":"Loop","qualname":"::token::Loop","value":"Loop { span }","parent":null,"children":[{"krate":0,"index":4148}],"decl_id":null,"docs":" `loop`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3663},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55871,"byte_end":55875,"line_start":618,"line_end":618,"column_start":30,"column_end":34},"name":"Loop","qualname":"::token::Loop","value":"fn <S> (span: S) -> Loop","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4152},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55924,"byte_end":55929,"line_start":619,"line_end":619,"column_start":30,"column_end":35},"name":"Macro","qualname":"::token::Macro","value":"Macro { span }","parent":null,"children":[{"krate":0,"index":4153}],"decl_id":null,"docs":" `macro`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3676},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55924,"byte_end":55929,"line_start":619,"line_end":619,"column_start":30,"column_end":35},"name":"Macro","qualname":"::token::Macro","value":"fn <S> (span: S) -> Macro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4157},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55978,"byte_end":55983,"line_start":620,"line_end":620,"column_start":30,"column_end":35},"name":"Match","qualname":"::token::Match","value":"Match { span }","parent":null,"children":[{"krate":0,"index":4158}],"decl_id":null,"docs":" `match`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3689},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55978,"byte_end":55983,"line_start":620,"line_end":620,"column_start":30,"column_end":35},"name":"Match","qualname":"::token::Match","value":"fn <S> (span: S) -> Match","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4162},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56032,"byte_end":56035,"line_start":621,"line_end":621,"column_start":30,"column_end":33},"name":"Mod","qualname":"::token::Mod","value":"Mod { span }","parent":null,"children":[{"krate":0,"index":4163}],"decl_id":null,"docs":" `mod`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3702},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56032,"byte_end":56035,"line_start":621,"line_end":621,"column_start":30,"column_end":33},"name":"Mod","qualname":"::token::Mod","value":"fn <S> (span: S) -> Mod","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4167},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56084,"byte_end":56088,"line_start":622,"line_end":622,"column_start":30,"column_end":34},"name":"Move","qualname":"::token::Move","value":"Move { span }","parent":null,"children":[{"krate":0,"index":4168}],"decl_id":null,"docs":" `move`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3715},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56084,"byte_end":56088,"line_start":622,"line_end":622,"column_start":30,"column_end":34},"name":"Move","qualname":"::token::Move","value":"fn <S> (span: S) -> Move","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4172},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56137,"byte_end":56140,"line_start":623,"line_end":623,"column_start":30,"column_end":33},"name":"Mut","qualname":"::token::Mut","value":"Mut { span }","parent":null,"children":[{"krate":0,"index":4173}],"decl_id":null,"docs":" `mut`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3728},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56137,"byte_end":56140,"line_start":623,"line_end":623,"column_start":30,"column_end":33},"name":"Mut","qualname":"::token::Mut","value":"fn <S> (span: S) -> Mut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4177},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56189,"byte_end":56197,"line_start":624,"line_end":624,"column_start":30,"column_end":38},"name":"Override","qualname":"::token::Override","value":"Override { span }","parent":null,"children":[{"krate":0,"index":4178}],"decl_id":null,"docs":" `override`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3741},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56189,"byte_end":56197,"line_start":624,"line_end":624,"column_start":30,"column_end":38},"name":"Override","qualname":"::token::Override","value":"fn <S> (span: S) -> Override","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4182},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56246,"byte_end":56250,"line_start":625,"line_end":625,"column_start":30,"column_end":34},"name":"Priv","qualname":"::token::Priv","value":"Priv { span }","parent":null,"children":[{"krate":0,"index":4183}],"decl_id":null,"docs":" `priv`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3754},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56246,"byte_end":56250,"line_start":625,"line_end":625,"column_start":30,"column_end":34},"name":"Priv","qualname":"::token::Priv","value":"fn <S> (span: S) -> Priv","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4187},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56299,"byte_end":56302,"line_start":626,"line_end":626,"column_start":30,"column_end":33},"name":"Pub","qualname":"::token::Pub","value":"Pub { span }","parent":null,"children":[{"krate":0,"index":4188}],"decl_id":null,"docs":" `pub`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3767},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56299,"byte_end":56302,"line_start":626,"line_end":626,"column_start":30,"column_end":33},"name":"Pub","qualname":"::token::Pub","value":"fn <S> (span: S) -> Pub","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4192},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56351,"byte_end":56354,"line_start":627,"line_end":627,"column_start":30,"column_end":33},"name":"Ref","qualname":"::token::Ref","value":"Ref { span }","parent":null,"children":[{"krate":0,"index":4193}],"decl_id":null,"docs":" `ref`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3780},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56351,"byte_end":56354,"line_start":627,"line_end":627,"column_start":30,"column_end":33},"name":"Ref","qualname":"::token::Ref","value":"fn <S> (span: S) -> Ref","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4197},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56403,"byte_end":56409,"line_start":628,"line_end":628,"column_start":30,"column_end":36},"name":"Return","qualname":"::token::Return","value":"Return { span }","parent":null,"children":[{"krate":0,"index":4198}],"decl_id":null,"docs":" `return`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3793},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56403,"byte_end":56409,"line_start":628,"line_end":628,"column_start":30,"column_end":36},"name":"Return","qualname":"::token::Return","value":"fn <S> (span: S) -> Return","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4202},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56458,"byte_end":56466,"line_start":629,"line_end":629,"column_start":30,"column_end":38},"name":"SelfType","qualname":"::token::SelfType","value":"SelfType { span }","parent":null,"children":[{"krate":0,"index":4203}],"decl_id":null,"docs":" `Self`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3806},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56458,"byte_end":56466,"line_start":629,"line_end":629,"column_start":30,"column_end":38},"name":"SelfType","qualname":"::token::SelfType","value":"fn <S> (span: S) -> SelfType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4207},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56511,"byte_end":56520,"line_start":630,"line_end":630,"column_start":30,"column_end":39},"name":"SelfValue","qualname":"::token::SelfValue","value":"SelfValue { span }","parent":null,"children":[{"krate":0,"index":4208}],"decl_id":null,"docs":" `self`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3819},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56511,"byte_end":56520,"line_start":630,"line_end":630,"column_start":30,"column_end":39},"name":"SelfValue","qualname":"::token::SelfValue","value":"fn <S> (span: S) -> SelfValue","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4212},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56564,"byte_end":56570,"line_start":631,"line_end":631,"column_start":30,"column_end":36},"name":"Static","qualname":"::token::Static","value":"Static { span }","parent":null,"children":[{"krate":0,"index":4213}],"decl_id":null,"docs":" `static`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3832},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56564,"byte_end":56570,"line_start":631,"line_end":631,"column_start":30,"column_end":36},"name":"Static","qualname":"::token::Static","value":"fn <S> (span: S) -> Static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4217},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56619,"byte_end":56625,"line_start":632,"line_end":632,"column_start":30,"column_end":36},"name":"Struct","qualname":"::token::Struct","value":"Struct { span }","parent":null,"children":[{"krate":0,"index":4218}],"decl_id":null,"docs":" `struct`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3845},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56619,"byte_end":56625,"line_start":632,"line_end":632,"column_start":30,"column_end":36},"name":"Struct","qualname":"::token::Struct","value":"fn <S> (span: S) -> Struct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4222},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56674,"byte_end":56679,"line_start":633,"line_end":633,"column_start":30,"column_end":35},"name":"Super","qualname":"::token::Super","value":"Super { span }","parent":null,"children":[{"krate":0,"index":4223}],"decl_id":null,"docs":" `super`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3858},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56674,"byte_end":56679,"line_start":633,"line_end":633,"column_start":30,"column_end":35},"name":"Super","qualname":"::token::Super","value":"fn <S> (span: S) -> Super","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4227},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56728,"byte_end":56733,"line_start":634,"line_end":634,"column_start":30,"column_end":35},"name":"Trait","qualname":"::token::Trait","value":"Trait { span }","parent":null,"children":[{"krate":0,"index":4228}],"decl_id":null,"docs":" `trait`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3871},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56728,"byte_end":56733,"line_start":634,"line_end":634,"column_start":30,"column_end":35},"name":"Trait","qualname":"::token::Trait","value":"fn <S> (span: S) -> Trait","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4232},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56782,"byte_end":56785,"line_start":635,"line_end":635,"column_start":30,"column_end":33},"name":"Try","qualname":"::token::Try","value":"Try { span }","parent":null,"children":[{"krate":0,"index":4233}],"decl_id":null,"docs":" `try`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3884},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56782,"byte_end":56785,"line_start":635,"line_end":635,"column_start":30,"column_end":33},"name":"Try","qualname":"::token::Try","value":"fn <S> (span: S) -> Try","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4237},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56834,"byte_end":56838,"line_start":636,"line_end":636,"column_start":30,"column_end":34},"name":"Type","qualname":"::token::Type","value":"Type { span }","parent":null,"children":[{"krate":0,"index":4238}],"decl_id":null,"docs":" `type`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3897},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56834,"byte_end":56838,"line_start":636,"line_end":636,"column_start":30,"column_end":34},"name":"Type","qualname":"::token::Type","value":"fn <S> (span: S) -> Type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4242},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56887,"byte_end":56893,"line_start":637,"line_end":637,"column_start":30,"column_end":36},"name":"Typeof","qualname":"::token::Typeof","value":"Typeof { span }","parent":null,"children":[{"krate":0,"index":4243}],"decl_id":null,"docs":" `typeof`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3910},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56887,"byte_end":56893,"line_start":637,"line_end":637,"column_start":30,"column_end":36},"name":"Typeof","qualname":"::token::Typeof","value":"fn <S> (span: S) -> Typeof","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4247},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56942,"byte_end":56947,"line_start":638,"line_end":638,"column_start":30,"column_end":35},"name":"Union","qualname":"::token::Union","value":"Union { span }","parent":null,"children":[{"krate":0,"index":4248}],"decl_id":null,"docs":" `union`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3923},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56942,"byte_end":56947,"line_start":638,"line_end":638,"column_start":30,"column_end":35},"name":"Union","qualname":"::token::Union","value":"fn <S> (span: S) -> Union","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4252},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56996,"byte_end":57002,"line_start":639,"line_end":639,"column_start":30,"column_end":36},"name":"Unsafe","qualname":"::token::Unsafe","value":"Unsafe { span }","parent":null,"children":[{"krate":0,"index":4253}],"decl_id":null,"docs":" `unsafe`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3936},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56996,"byte_end":57002,"line_start":639,"line_end":639,"column_start":30,"column_end":36},"name":"Unsafe","qualname":"::token::Unsafe","value":"fn <S> (span: S) -> Unsafe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4257},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57051,"byte_end":57058,"line_start":640,"line_end":640,"column_start":30,"column_end":37},"name":"Unsized","qualname":"::token::Unsized","value":"Unsized { span }","parent":null,"children":[{"krate":0,"index":4258}],"decl_id":null,"docs":" `unsized`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3949},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57051,"byte_end":57058,"line_start":640,"line_end":640,"column_start":30,"column_end":37},"name":"Unsized","qualname":"::token::Unsized","value":"fn <S> (span: S) -> Unsized","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4262},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57107,"byte_end":57110,"line_start":641,"line_end":641,"column_start":30,"column_end":33},"name":"Use","qualname":"::token::Use","value":"Use { span }","parent":null,"children":[{"krate":0,"index":4263}],"decl_id":null,"docs":" `use`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3962},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57107,"byte_end":57110,"line_start":641,"line_end":641,"column_start":30,"column_end":33},"name":"Use","qualname":"::token::Use","value":"fn <S> (span: S) -> Use","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4267},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57159,"byte_end":57166,"line_start":642,"line_end":642,"column_start":30,"column_end":37},"name":"Virtual","qualname":"::token::Virtual","value":"Virtual { span }","parent":null,"children":[{"krate":0,"index":4268}],"decl_id":null,"docs":" `virtual`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3975},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57159,"byte_end":57166,"line_start":642,"line_end":642,"column_start":30,"column_end":37},"name":"Virtual","qualname":"::token::Virtual","value":"fn <S> (span: S) -> Virtual","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4272},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57215,"byte_end":57220,"line_start":643,"line_end":643,"column_start":30,"column_end":35},"name":"Where","qualname":"::token::Where","value":"Where { span }","parent":null,"children":[{"krate":0,"index":4273}],"decl_id":null,"docs":" `where`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3988},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57215,"byte_end":57220,"line_start":643,"line_end":643,"column_start":30,"column_end":35},"name":"Where","qualname":"::token::Where","value":"fn <S> (span: S) -> Where","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4277},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57269,"byte_end":57274,"line_start":644,"line_end":644,"column_start":30,"column_end":35},"name":"While","qualname":"::token::While","value":"While { span }","parent":null,"children":[{"krate":0,"index":4278}],"decl_id":null,"docs":" `while`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4001},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57269,"byte_end":57274,"line_start":644,"line_end":644,"column_start":30,"column_end":35},"name":"While","qualname":"::token::While","value":"fn <S> (span: S) -> While","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4282},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57323,"byte_end":57328,"line_start":645,"line_end":645,"column_start":30,"column_end":35},"name":"Yield","qualname":"::token::Yield","value":"Yield { span }","parent":null,"children":[{"krate":0,"index":4283}],"decl_id":null,"docs":" `yield`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4014},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57323,"byte_end":57328,"line_start":645,"line_end":645,"column_start":30,"column_end":35},"name":"Yield","qualname":"::token::Yield","value":"fn <S> (span: S) -> Yield","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4661},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57402,"byte_end":57405,"line_start":649,"line_end":649,"column_start":30,"column_end":33},"name":"Add","qualname":"::token::Add","value":"Add { spans }","parent":null,"children":[{"krate":0,"index":4662}],"decl_id":null,"docs":" `+`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4655},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57402,"byte_end":57405,"line_start":649,"line_end":649,"column_start":30,"column_end":33},"name":"Add","qualname":"::token::Add","value":"fn <S> (spans: S) -> Add","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4679},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57452,"byte_end":57457,"line_start":650,"line_end":650,"column_start":30,"column_end":35},"name":"AddEq","qualname":"::token::AddEq","value":"AddEq { spans }","parent":null,"children":[{"krate":0,"index":4680}],"decl_id":null,"docs":" `+=`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4673},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57452,"byte_end":57457,"line_start":650,"line_end":650,"column_start":30,"column_end":35},"name":"AddEq","qualname":"::token::AddEq","value":"fn <S> (spans: S) -> AddEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4692},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57503,"byte_end":57506,"line_start":651,"line_end":651,"column_start":30,"column_end":33},"name":"And","qualname":"::token::And","value":"And { spans }","parent":null,"children":[{"krate":0,"index":4693}],"decl_id":null,"docs":" `&`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4686},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57503,"byte_end":57506,"line_start":651,"line_end":651,"column_start":30,"column_end":33},"name":"And","qualname":"::token::And","value":"fn <S> (spans: S) -> And","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4710},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57553,"byte_end":57559,"line_start":652,"line_end":652,"column_start":30,"column_end":36},"name":"AndAnd","qualname":"::token::AndAnd","value":"AndAnd { spans }","parent":null,"children":[{"krate":0,"index":4711}],"decl_id":null,"docs":" `&&`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4704},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57553,"byte_end":57559,"line_start":652,"line_end":652,"column_start":30,"column_end":36},"name":"AndAnd","qualname":"::token::AndAnd","value":"fn <S> (spans: S) -> AndAnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4723},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57604,"byte_end":57609,"line_start":653,"line_end":653,"column_start":30,"column_end":35},"name":"AndEq","qualname":"::token::AndEq","value":"AndEq { spans }","parent":null,"children":[{"krate":0,"index":4724}],"decl_id":null,"docs":" `&=`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4717},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57604,"byte_end":57609,"line_start":653,"line_end":653,"column_start":30,"column_end":35},"name":"AndEq","qualname":"::token::AndEq","value":"fn <S> (spans: S) -> AndEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4736},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57655,"byte_end":57657,"line_start":654,"line_end":654,"column_start":30,"column_end":32},"name":"At","qualname":"::token::At","value":"At { spans }","parent":null,"children":[{"krate":0,"index":4737}],"decl_id":null,"docs":" `@`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4730},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57655,"byte_end":57657,"line_start":654,"line_end":654,"column_start":30,"column_end":32},"name":"At","qualname":"::token::At","value":"fn <S> (spans: S) -> At","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4754},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57705,"byte_end":57709,"line_start":655,"line_end":655,"column_start":30,"column_end":34},"name":"Bang","qualname":"::token::Bang","value":"Bang { spans }","parent":null,"children":[{"krate":0,"index":4755}],"decl_id":null,"docs":" `!`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4748},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57705,"byte_end":57709,"line_start":655,"line_end":655,"column_start":30,"column_end":34},"name":"Bang","qualname":"::token::Bang","value":"fn <S> (spans: S) -> Bang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4772},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57755,"byte_end":57760,"line_start":656,"line_end":656,"column_start":30,"column_end":35},"name":"Caret","qualname":"::token::Caret","value":"Caret { spans }","parent":null,"children":[{"krate":0,"index":4773}],"decl_id":null,"docs":" `^`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4766},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57755,"byte_end":57760,"line_start":656,"line_end":656,"column_start":30,"column_end":35},"name":"Caret","qualname":"::token::Caret","value":"fn <S> (spans: S) -> Caret","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4790},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57805,"byte_end":57812,"line_start":657,"line_end":657,"column_start":30,"column_end":37},"name":"CaretEq","qualname":"::token::CaretEq","value":"CaretEq { spans }","parent":null,"children":[{"krate":0,"index":4791}],"decl_id":null,"docs":" `^=`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4784},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57805,"byte_end":57812,"line_start":657,"line_end":657,"column_start":30,"column_end":37},"name":"CaretEq","qualname":"::token::CaretEq","value":"fn <S> (spans: S) -> CaretEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4803},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57856,"byte_end":57861,"line_start":658,"line_end":658,"column_start":30,"column_end":35},"name":"Colon","qualname":"::token::Colon","value":"Colon { spans }","parent":null,"children":[{"krate":0,"index":4804}],"decl_id":null,"docs":" `:`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4797},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57856,"byte_end":57861,"line_start":658,"line_end":658,"column_start":30,"column_end":35},"name":"Colon","qualname":"::token::Colon","value":"fn <S> (spans: S) -> Colon","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4821},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57906,"byte_end":57912,"line_start":659,"line_end":659,"column_start":30,"column_end":36},"name":"Colon2","qualname":"::token::Colon2","value":"Colon2 { spans }","parent":null,"children":[{"krate":0,"index":4822}],"decl_id":null,"docs":" `::`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4815},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57906,"byte_end":57912,"line_start":659,"line_end":659,"column_start":30,"column_end":36},"name":"Colon2","qualname":"::token::Colon2","value":"fn <S> (spans: S) -> Colon2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4834},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57957,"byte_end":57962,"line_start":660,"line_end":660,"column_start":30,"column_end":35},"name":"Comma","qualname":"::token::Comma","value":"Comma { spans }","parent":null,"children":[{"krate":0,"index":4835}],"decl_id":null,"docs":" `,`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4828},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57957,"byte_end":57962,"line_start":660,"line_end":660,"column_start":30,"column_end":35},"name":"Comma","qualname":"::token::Comma","value":"fn <S> (spans: S) -> Comma","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4852},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58007,"byte_end":58010,"line_start":661,"line_end":661,"column_start":30,"column_end":33},"name":"Div","qualname":"::token::Div","value":"Div { spans }","parent":null,"children":[{"krate":0,"index":4853}],"decl_id":null,"docs":" `/`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4846},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58007,"byte_end":58010,"line_start":661,"line_end":661,"column_start":30,"column_end":33},"name":"Div","qualname":"::token::Div","value":"fn <S> (spans: S) -> Div","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4870},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58057,"byte_end":58062,"line_start":662,"line_end":662,"column_start":30,"column_end":35},"name":"DivEq","qualname":"::token::DivEq","value":"DivEq { spans }","parent":null,"children":[{"krate":0,"index":4871}],"decl_id":null,"docs":" `/=`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4864},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58057,"byte_end":58062,"line_start":662,"line_end":662,"column_start":30,"column_end":35},"name":"DivEq","qualname":"::token::DivEq","value":"fn <S> (spans: S) -> DivEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4883},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58108,"byte_end":58114,"line_start":663,"line_end":663,"column_start":30,"column_end":36},"name":"Dollar","qualname":"::token::Dollar","value":"Dollar { spans }","parent":null,"children":[{"krate":0,"index":4884}],"decl_id":null,"docs":" `$`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4877},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58108,"byte_end":58114,"line_start":663,"line_end":663,"column_start":30,"column_end":36},"name":"Dollar","qualname":"::token::Dollar","value":"fn <S> (spans: S) -> Dollar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4901},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58158,"byte_end":58161,"line_start":664,"line_end":664,"column_start":30,"column_end":33},"name":"Dot","qualname":"::token::Dot","value":"Dot { spans }","parent":null,"children":[{"krate":0,"index":4902}],"decl_id":null,"docs":" `.`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4895},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58158,"byte_end":58161,"line_start":664,"line_end":664,"column_start":30,"column_end":33},"name":"Dot","qualname":"::token::Dot","value":"fn <S> (spans: S) -> Dot","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4919},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58208,"byte_end":58212,"line_start":665,"line_end":665,"column_start":30,"column_end":34},"name":"Dot2","qualname":"::token::Dot2","value":"Dot2 { spans }","parent":null,"children":[{"krate":0,"index":4920}],"decl_id":null,"docs":" `..`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4913},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58208,"byte_end":58212,"line_start":665,"line_end":665,"column_start":30,"column_end":34},"name":"Dot2","qualname":"::token::Dot2","value":"fn <S> (spans: S) -> Dot2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4932},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58259,"byte_end":58263,"line_start":666,"line_end":666,"column_start":30,"column_end":34},"name":"Dot3","qualname":"::token::Dot3","value":"Dot3 { spans }","parent":null,"children":[{"krate":0,"index":4933}],"decl_id":null,"docs":" `...`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4926},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58259,"byte_end":58263,"line_start":666,"line_end":666,"column_start":30,"column_end":34},"name":"Dot3","qualname":"::token::Dot3","value":"fn <S> (spans: S) -> Dot3","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4945},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58311,"byte_end":58319,"line_start":667,"line_end":667,"column_start":30,"column_end":38},"name":"DotDotEq","qualname":"::token::DotDotEq","value":"DotDotEq { spans }","parent":null,"children":[{"krate":0,"index":4946}],"decl_id":null,"docs":" `..=`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4939},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58311,"byte_end":58319,"line_start":667,"line_end":667,"column_start":30,"column_end":38},"name":"DotDotEq","qualname":"::token::DotDotEq","value":"fn <S> (spans: S) -> DotDotEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4958},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58363,"byte_end":58365,"line_start":668,"line_end":668,"column_start":30,"column_end":32},"name":"Eq","qualname":"::token::Eq","value":"Eq { spans }","parent":null,"children":[{"krate":0,"index":4959}],"decl_id":null,"docs":" `=`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4952},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58363,"byte_end":58365,"line_start":668,"line_end":668,"column_start":30,"column_end":32},"name":"Eq","qualname":"::token::Eq","value":"fn <S> (spans: S) -> Eq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4976},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58413,"byte_end":58417,"line_start":669,"line_end":669,"column_start":30,"column_end":34},"name":"EqEq","qualname":"::token::EqEq","value":"EqEq { spans }","parent":null,"children":[{"krate":0,"index":4977}],"decl_id":null,"docs":" `==`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4970},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58413,"byte_end":58417,"line_start":669,"line_end":669,"column_start":30,"column_end":34},"name":"EqEq","qualname":"::token::EqEq","value":"fn <S> (spans: S) -> EqEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4989},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58464,"byte_end":58466,"line_start":670,"line_end":670,"column_start":30,"column_end":32},"name":"Ge","qualname":"::token::Ge","value":"Ge { spans }","parent":null,"children":[{"krate":0,"index":4990}],"decl_id":null,"docs":" `>=`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4983},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58464,"byte_end":58466,"line_start":670,"line_end":670,"column_start":30,"column_end":32},"name":"Ge","qualname":"::token::Ge","value":"fn <S> (spans: S) -> Ge","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5002},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58515,"byte_end":58517,"line_start":671,"line_end":671,"column_start":30,"column_end":32},"name":"Gt","qualname":"::token::Gt","value":"Gt { spans }","parent":null,"children":[{"krate":0,"index":5003}],"decl_id":null,"docs":" `>`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4996},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58515,"byte_end":58517,"line_start":671,"line_end":671,"column_start":30,"column_end":32},"name":"Gt","qualname":"::token::Gt","value":"fn <S> (spans: S) -> Gt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5020},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58565,"byte_end":58567,"line_start":672,"line_end":672,"column_start":30,"column_end":32},"name":"Le","qualname":"::token::Le","value":"Le { spans }","parent":null,"children":[{"krate":0,"index":5021}],"decl_id":null,"docs":" `<=`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5014},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58565,"byte_end":58567,"line_start":672,"line_end":672,"column_start":30,"column_end":32},"name":"Le","qualname":"::token::Le","value":"fn <S> (spans: S) -> Le","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5033},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58616,"byte_end":58618,"line_start":673,"line_end":673,"column_start":30,"column_end":32},"name":"Lt","qualname":"::token::Lt","value":"Lt { spans }","parent":null,"children":[{"krate":0,"index":5034}],"decl_id":null,"docs":" `<`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5027},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58616,"byte_end":58618,"line_start":673,"line_end":673,"column_start":30,"column_end":32},"name":"Lt","qualname":"::token::Lt","value":"fn <S> (spans: S) -> Lt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5051},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58666,"byte_end":58671,"line_start":674,"line_end":674,"column_start":30,"column_end":35},"name":"MulEq","qualname":"::token::MulEq","value":"MulEq { spans }","parent":null,"children":[{"krate":0,"index":5052}],"decl_id":null,"docs":" `*=`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5045},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58666,"byte_end":58671,"line_start":674,"line_end":674,"column_start":30,"column_end":35},"name":"MulEq","qualname":"::token::MulEq","value":"fn <S> (spans: S) -> MulEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5064},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58717,"byte_end":58719,"line_start":675,"line_end":675,"column_start":30,"column_end":32},"name":"Ne","qualname":"::token::Ne","value":"Ne { spans }","parent":null,"children":[{"krate":0,"index":5065}],"decl_id":null,"docs":" `!=`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5058},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58717,"byte_end":58719,"line_start":675,"line_end":675,"column_start":30,"column_end":32},"name":"Ne","qualname":"::token::Ne","value":"fn <S> (spans: S) -> Ne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5077},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58768,"byte_end":58770,"line_start":676,"line_end":676,"column_start":30,"column_end":32},"name":"Or","qualname":"::token::Or","value":"Or { spans }","parent":null,"children":[{"krate":0,"index":5078}],"decl_id":null,"docs":" `|`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5071},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58768,"byte_end":58770,"line_start":676,"line_end":676,"column_start":30,"column_end":32},"name":"Or","qualname":"::token::Or","value":"fn <S> (spans: S) -> Or","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5095},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58818,"byte_end":58822,"line_start":677,"line_end":677,"column_start":30,"column_end":34},"name":"OrEq","qualname":"::token::OrEq","value":"OrEq { spans }","parent":null,"children":[{"krate":0,"index":5096}],"decl_id":null,"docs":" `|=`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5089},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58818,"byte_end":58822,"line_start":677,"line_end":677,"column_start":30,"column_end":34},"name":"OrEq","qualname":"::token::OrEq","value":"fn <S> (spans: S) -> OrEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5108},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58869,"byte_end":58873,"line_start":678,"line_end":678,"column_start":30,"column_end":34},"name":"OrOr","qualname":"::token::OrOr","value":"OrOr { spans }","parent":null,"children":[{"krate":0,"index":5109}],"decl_id":null,"docs":" `||`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5102},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58869,"byte_end":58873,"line_start":678,"line_end":678,"column_start":30,"column_end":34},"name":"OrOr","qualname":"::token::OrOr","value":"fn <S> (spans: S) -> OrOr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5121},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58920,"byte_end":58925,"line_start":679,"line_end":679,"column_start":30,"column_end":35},"name":"Pound","qualname":"::token::Pound","value":"Pound { spans }","parent":null,"children":[{"krate":0,"index":5122}],"decl_id":null,"docs":" `#`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5115},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58920,"byte_end":58925,"line_start":679,"line_end":679,"column_start":30,"column_end":35},"name":"Pound","qualname":"::token::Pound","value":"fn <S> (spans: S) -> Pound","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5139},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58970,"byte_end":58978,"line_start":680,"line_end":680,"column_start":30,"column_end":38},"name":"Question","qualname":"::token::Question","value":"Question { spans }","parent":null,"children":[{"krate":0,"index":5140}],"decl_id":null,"docs":" `?`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5133},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58970,"byte_end":58978,"line_start":680,"line_end":680,"column_start":30,"column_end":38},"name":"Question","qualname":"::token::Question","value":"fn <S> (spans: S) -> Question","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5157},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59020,"byte_end":59026,"line_start":681,"line_end":681,"column_start":30,"column_end":36},"name":"RArrow","qualname":"::token::RArrow","value":"RArrow { spans }","parent":null,"children":[{"krate":0,"index":5158}],"decl_id":null,"docs":" `->`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5151},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59020,"byte_end":59026,"line_start":681,"line_end":681,"column_start":30,"column_end":36},"name":"RArrow","qualname":"::token::RArrow","value":"fn <S> (spans: S) -> RArrow","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5170},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59071,"byte_end":59077,"line_start":682,"line_end":682,"column_start":30,"column_end":36},"name":"LArrow","qualname":"::token::LArrow","value":"LArrow { spans }","parent":null,"children":[{"krate":0,"index":5171}],"decl_id":null,"docs":" `<-`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5164},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59071,"byte_end":59077,"line_start":682,"line_end":682,"column_start":30,"column_end":36},"name":"LArrow","qualname":"::token::LArrow","value":"fn <S> (spans: S) -> LArrow","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5183},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59122,"byte_end":59125,"line_start":683,"line_end":683,"column_start":30,"column_end":33},"name":"Rem","qualname":"::token::Rem","value":"Rem { spans }","parent":null,"children":[{"krate":0,"index":5184}],"decl_id":null,"docs":" `%`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5177},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59122,"byte_end":59125,"line_start":683,"line_end":683,"column_start":30,"column_end":33},"name":"Rem","qualname":"::token::Rem","value":"fn <S> (spans: S) -> Rem","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5201},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59172,"byte_end":59177,"line_start":684,"line_end":684,"column_start":30,"column_end":35},"name":"RemEq","qualname":"::token::RemEq","value":"RemEq { spans }","parent":null,"children":[{"krate":0,"index":5202}],"decl_id":null,"docs":" `%=`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5195},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59172,"byte_end":59177,"line_start":684,"line_end":684,"column_start":30,"column_end":35},"name":"RemEq","qualname":"::token::RemEq","value":"fn <S> (spans: S) -> RemEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5214},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59223,"byte_end":59231,"line_start":685,"line_end":685,"column_start":30,"column_end":38},"name":"FatArrow","qualname":"::token::FatArrow","value":"FatArrow { spans }","parent":null,"children":[{"krate":0,"index":5215}],"decl_id":null,"docs":" `=>`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5208},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59223,"byte_end":59231,"line_start":685,"line_end":685,"column_start":30,"column_end":38},"name":"FatArrow","qualname":"::token::FatArrow","value":"fn <S> (spans: S) -> FatArrow","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5227},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59274,"byte_end":59278,"line_start":686,"line_end":686,"column_start":30,"column_end":34},"name":"Semi","qualname":"::token::Semi","value":"Semi { spans }","parent":null,"children":[{"krate":0,"index":5228}],"decl_id":null,"docs":" `;`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5221},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59274,"byte_end":59278,"line_start":686,"line_end":686,"column_start":30,"column_end":34},"name":"Semi","qualname":"::token::Semi","value":"fn <S> (spans: S) -> Semi","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5245},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59324,"byte_end":59327,"line_start":687,"line_end":687,"column_start":30,"column_end":33},"name":"Shl","qualname":"::token::Shl","value":"Shl { spans }","parent":null,"children":[{"krate":0,"index":5246}],"decl_id":null,"docs":" `<<`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5239},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59324,"byte_end":59327,"line_start":687,"line_end":687,"column_start":30,"column_end":33},"name":"Shl","qualname":"::token::Shl","value":"fn <S> (spans: S) -> Shl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5258},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59375,"byte_end":59380,"line_start":688,"line_end":688,"column_start":30,"column_end":35},"name":"ShlEq","qualname":"::token::ShlEq","value":"ShlEq { spans }","parent":null,"children":[{"krate":0,"index":5259}],"decl_id":null,"docs":" `<<=`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5252},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59375,"byte_end":59380,"line_start":688,"line_end":688,"column_start":30,"column_end":35},"name":"ShlEq","qualname":"::token::ShlEq","value":"fn <S> (spans: S) -> ShlEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5271},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59427,"byte_end":59430,"line_start":689,"line_end":689,"column_start":30,"column_end":33},"name":"Shr","qualname":"::token::Shr","value":"Shr { spans }","parent":null,"children":[{"krate":0,"index":5272}],"decl_id":null,"docs":" `>>`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5265},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59427,"byte_end":59430,"line_start":689,"line_end":689,"column_start":30,"column_end":33},"name":"Shr","qualname":"::token::Shr","value":"fn <S> (spans: S) -> Shr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5284},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59478,"byte_end":59483,"line_start":690,"line_end":690,"column_start":30,"column_end":35},"name":"ShrEq","qualname":"::token::ShrEq","value":"ShrEq { spans }","parent":null,"children":[{"krate":0,"index":5285}],"decl_id":null,"docs":" `>>=`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5278},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59478,"byte_end":59483,"line_start":690,"line_end":690,"column_start":30,"column_end":35},"name":"ShrEq","qualname":"::token::ShrEq","value":"fn <S> (spans: S) -> ShrEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5297},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59530,"byte_end":59534,"line_start":691,"line_end":691,"column_start":30,"column_end":34},"name":"Star","qualname":"::token::Star","value":"Star { spans }","parent":null,"children":[{"krate":0,"index":5298}],"decl_id":null,"docs":" `*`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5291},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59530,"byte_end":59534,"line_start":691,"line_end":691,"column_start":30,"column_end":34},"name":"Star","qualname":"::token::Star","value":"fn <S> (spans: S) -> Star","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5315},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59580,"byte_end":59583,"line_start":692,"line_end":692,"column_start":30,"column_end":33},"name":"Sub","qualname":"::token::Sub","value":"Sub { spans }","parent":null,"children":[{"krate":0,"index":5316}],"decl_id":null,"docs":" `-`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5309},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59580,"byte_end":59583,"line_start":692,"line_end":692,"column_start":30,"column_end":33},"name":"Sub","qualname":"::token::Sub","value":"fn <S> (spans: S) -> Sub","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5333},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59630,"byte_end":59635,"line_start":693,"line_end":693,"column_start":30,"column_end":35},"name":"SubEq","qualname":"::token::SubEq","value":"SubEq { spans }","parent":null,"children":[{"krate":0,"index":5334}],"decl_id":null,"docs":" `-=`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5327},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59630,"byte_end":59635,"line_start":693,"line_end":693,"column_start":30,"column_end":35},"name":"SubEq","qualname":"::token::SubEq","value":"fn <S> (spans: S) -> SubEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5346},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59681,"byte_end":59686,"line_start":694,"line_end":694,"column_start":30,"column_end":35},"name":"Tilde","qualname":"::token::Tilde","value":"Tilde { spans }","parent":null,"children":[{"krate":0,"index":5347}],"decl_id":null,"docs":" `~`\n\n Don't try to remember the name of this type -- use the [`Token!`]\n macro instead.\n\n [`Token!`]: crate::token\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":5340},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59681,"byte_end":59686,"line_start":694,"line_end":694,"column_start":30,"column_end":35},"name":"Tilde","qualname":"::token::Tilde","value":"fn <S> (spans: S) -> Tilde","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5394},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59755,"byte_end":59760,"line_start":698,"line_end":698,"column_start":30,"column_end":35},"name":"Brace","qualname":"::token::Brace","value":"Brace { span }","parent":null,"children":[{"krate":0,"index":5395}],"decl_id":null,"docs":" `{...}`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5358},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59755,"byte_end":59760,"line_start":698,"line_end":698,"column_start":30,"column_end":35},"name":"Brace","qualname":"::token::Brace","value":"fn <S> (span: S) -> Brace","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":50824,"byte_end":50848,"line_start":446,"line_end":446,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5399},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59809,"byte_end":59816,"line_start":699,"line_end":699,"column_start":30,"column_end":37},"name":"Bracket","qualname":"::token::Bracket","value":"Bracket { span }","parent":null,"children":[{"krate":0,"index":5400}],"decl_id":null,"docs":" `[...]`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5367},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59809,"byte_end":59816,"line_start":699,"line_end":699,"column_start":30,"column_end":37},"name":"Bracket","qualname":"::token::Bracket","value":"fn <S> (span: S) -> Bracket","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":50824,"byte_end":50848,"line_start":446,"line_end":446,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5404},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59863,"byte_end":59868,"line_start":700,"line_end":700,"column_start":30,"column_end":35},"name":"Paren","qualname":"::token::Paren","value":"Paren { span }","parent":null,"children":[{"krate":0,"index":5405}],"decl_id":null,"docs":" `(...)`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5376},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59863,"byte_end":59868,"line_start":700,"line_end":700,"column_start":30,"column_end":35},"name":"Paren","qualname":"::token::Paren","value":"fn <S> (span: S) -> Paren","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":50824,"byte_end":50848,"line_start":446,"line_end":446,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5409},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59917,"byte_end":59922,"line_start":701,"line_end":701,"column_start":30,"column_end":35},"name":"Group","qualname":"::token::Group","value":"Group { span }","parent":null,"children":[{"krate":0,"index":5410}],"decl_id":null,"docs":" None-delimited group\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5385},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59917,"byte_end":59922,"line_start":701,"line_end":701,"column_start":30,"column_end":35},"name":"Group","qualname":"::token::Group","value":"fn <S> (span: S) -> Group","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":50824,"byte_end":50848,"line_start":446,"line_end":446,"column_start":13,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":66343,"byte_end":66350,"line_start":836,"line_end":836,"column_start":9,"column_end":16},"name":"parsing","qualname":"::token::parsing","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":157}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":66307,"byte_end":66334,"line_start":835,"line_end":835,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":66513,"byte_end":66520,"line_start":844,"line_end":844,"column_start":12,"column_end":19},"name":"keyword","qualname":"::token::parsing::keyword","value":"fn (input: ParseStream, token: &str) -> Result<Span>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":66873,"byte_end":66885,"line_start":855,"line_end":855,"column_start":12,"column_end":24},"name":"peek_keyword","qualname":"::token::parsing::peek_keyword","value":"fn (cursor: Cursor, token: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":67070,"byte_end":67075,"line_start":863,"line_end":863,"column_start":12,"column_end":17},"name":"punct","qualname":"::token::parsing::punct","value":"fn <S> (input: ParseStream, token: &str) -> Result<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":68232,"byte_end":68242,"line_start":895,"line_end":895,"column_start":12,"column_end":22},"name":"peek_punct","qualname":"::token::parsing::peek_punct","value":"fn (mut cursor: Cursor, token: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":68902,"byte_end":68910,"line_start":918,"line_end":918,"column_start":9,"column_end":17},"name":"printing","qualname":"::token::printing","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"printing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":68865,"byte_end":68893,"line_start":917,"line_end":917,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":69039,"byte_end":69044,"line_start":922,"line_end":922,"column_start":12,"column_end":17},"name":"punct","qualname":"::token::printing::punct","value":"fn (s: &str, spans: &[Span], tokens: &mut TokenStream) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":69608,"byte_end":69615,"line_start":940,"line_end":940,"column_start":12,"column_end":19},"name":"keyword","qualname":"::token::printing::keyword","value":"fn (s: &str, span: Span, tokens: &mut TokenStream) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":69727,"byte_end":69732,"line_start":944,"line_end":944,"column_start":12,"column_end":17},"name":"delim","qualname":"::token::printing::delim","value":"fn <F> (s: &str, span: Span, tokens: &mut TokenStream, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":70587,"byte_end":70592,"line_start":15,"line_end":15,"column_start":8,"column_end":13},"name":"Ident","qualname":"::ident::Ident","value":"fn (marker: lookahead::TokenMarker) -> Ident","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":70512,"byte_end":70539,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":70555,"byte_end":70579,"line_start":14,"line_end":14,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":5425},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":76556,"byte_end":76565,"line_start":96,"line_end":96,"column_start":16,"column_end":25},"name":"Attribute","qualname":"::attr::Attribute","value":"Attribute { pound_token, style, bracket_token, path, tts }","parent":null,"children":[{"krate":0,"index":5426},{"krate":0,"index":5427},{"krate":0,"index":5428},{"krate":0,"index":5429},{"krate":0,"index":5430}],"decl_id":null,"docs":" An attribute like `#[repr(transparent)]`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n\n # Syntax\n\n Rust has six types of attributes.\n\n - Outer attributes like `#[repr(transparent)]`. These appear outside or\n   in front of the item they describe.\n - Inner attributes like `#![feature(proc_macro)]`. These appear inside\n   of the item they describe, usually a module.\n - Outer doc comments like `/// # Example`.\n - Inner doc comments like `//! Please file an issue`.\n - Outer block comments `/** # Example */`.\n - Inner block comments `/*! Please file an issue */`.\n\n The `style` field of type `AttrStyle` distinguishes whether an attribute\n is outer or inner. Doc comments and block comments are promoted to\n attributes, as this is how they are processed by the compiler and by\n `macro_rules!` macros.\n\n The `path` field gives the possibly colon-delimited path against which\n the attribute is resolved. It is equal to `\"doc\"` for desugared doc\n comments. The `tts` field contains the rest of the attribute body as\n tokens.\n\n ```text\n #[derive(Copy)]      #[crate::precondition x < 5]\n   ^^^^^^~~~~~~         ^^^^^^^^^^^^^^^^^^^ ~~~~~\n    path  tts                   path         tts\n ```\n\n Use the [`parse_meta`] method to try parsing the tokens of an attribute\n into the structured representation that is used by convention across\n most Rust libraries.\n\n [`parse_meta`]: Attribute::parse_meta\n\n # Parsing\n\n This type does not implement the [`Parse`] trait and thus cannot be\n parsed directly by [`ParseStream::parse`]. Instead use\n [`ParseStream::call`] with one of the two parser functions\n [`Attribute::parse_outer`] or [`Attribute::parse_inner`] depending on\n which you intend to parse.\n\n [`Parse`]: parse::Parse\n [`ParseStream::parse`]: parse::ParseBuffer::parse\n [`ParseStream::call`]: parse::ParseBuffer::call\n\n ```edition2018\n use syn::{Attribute, Ident, Result, Token};\n use syn::parse::{Parse, ParseStream};\n\n // Parses a unit struct with attributes.\n //\n //     #[path = \"s.tmpl\"]\n //     struct S;\n struct UnitStruct {\n     attrs: Vec<Attribute>,\n     struct_token: Token![struct],\n     name: Ident,\n     semi_token: Token![;],\n }\n\n impl Parse for UnitStruct {\n     fn parse(input: ParseStream) -> Result<Self> {\n         Ok(UnitStruct {\n             attrs: input.call(Attribute::parse_outer)?,\n             struct_token: input.parse()?,\n             name: input.parse()?,\n             semi_token: input.parse()?,\n         })\n     }\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5426},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":76601,"byte_end":76612,"line_start":97,"line_end":97,"column_start":13,"column_end":24},"name":"pound_token","qualname":"::attr::Attribute::pound_token","value":"token::Pound","parent":{"krate":0,"index":5425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5427},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":76637,"byte_end":76642,"line_start":98,"line_end":98,"column_start":13,"column_end":18},"name":"style","qualname":"::attr::Attribute::style","value":"attr::AttrStyle","parent":{"krate":0,"index":5425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5428},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":76667,"byte_end":76680,"line_start":99,"line_end":99,"column_start":13,"column_end":26},"name":"bracket_token","qualname":"::attr::Attribute::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":5425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5429},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":76710,"byte_end":76714,"line_start":100,"line_end":100,"column_start":13,"column_end":17},"name":"path","qualname":"::attr::Attribute::path","value":"path::Path","parent":{"krate":0,"index":5425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5430},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":76734,"byte_end":76737,"line_start":101,"line_end":101,"column_start":13,"column_end":16},"name":"tts","qualname":"::attr::Attribute::tts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":5425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":77738,"byte_end":77752,"line_start":139,"line_end":139,"column_start":12,"column_end":26},"name":"interpret_meta","qualname":"<Attribute>::interpret_meta","value":"fn (&self) -> Option<Meta>","parent":null,"children":[],"decl_id":null,"docs":" Parses the content of the attribute, consisting of the path and tts, as\n a [`Meta`] if possible.\n\n Deprecated; use `parse_meta` instead.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":78879,"byte_end":78889,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"parse_meta","qualname":"<Attribute>::parse_meta","value":"fn (&self) -> Result<Meta>","parent":null,"children":[],"decl_id":null,"docs":" Parses the content of the attribute, consisting of the path and tts, as\n a [`Meta`] if possible.\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":78840,"byte_end":78867,"line_start":177,"line_end":177,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":79767,"byte_end":79778,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"parse_outer","qualname":"<Attribute>::parse_outer","value":"fn (input: ParseStream) -> Result<Vec<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Parses zero or more outer attributes from the stream.\n\n *This function is available if Syn is built with the `\"parsing\"`\n feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":79728,"byte_end":79755,"line_start":201,"line_end":201,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":80201,"byte_end":80212,"line_start":215,"line_end":215,"column_start":12,"column_end":23},"name":"parse_inner","qualname":"<Attribute>::parse_inner","value":"fn (input: ParseStream) -> Result<Vec<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Parses zero or more inner attributes from the stream.\n\n *This function is available if Syn is built with the `\"parsing\"`\n feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":80162,"byte_end":80189,"line_start":214,"line_end":214,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5434},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":85436,"byte_end":85441,"line_start":384,"line_end":384,"column_start":9,"column_end":14},"name":"Outer","qualname":"::attr::AttrStyle::Outer","value":"AttrStyle::Outer","parent":{"krate":0,"index":5433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5436},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":85451,"byte_end":85456,"line_start":385,"line_end":385,"column_start":9,"column_end":14},"name":"Inner","qualname":"::attr::AttrStyle::Inner","value":"AttrStyle::Inner(crate::token::Bang)","parent":{"krate":0,"index":5433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5433},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":85416,"byte_end":85425,"line_start":383,"line_end":383,"column_start":14,"column_end":23},"name":"AttrStyle","qualname":"::attr::AttrStyle","value":"AttrStyle::{Outer, Inner}","parent":null,"children":[{"krate":0,"index":5434},{"krate":0,"index":5436}],"decl_id":null,"docs":" Distinguishes between attributes that decorate an item and attributes\n that are contained within an item.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n\n # Outer attributes\n\n - `#[repr(transparent)]`\n - `/// # Example`\n - `/** Please file an issue */`\n\n # Inner attributes\n\n - `#![feature(proc_macro)]`\n - `//! # Example`\n - `/*! Please file an issue */`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5449},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86317,"byte_end":86321,"line_start":417,"line_end":417,"column_start":13,"column_end":17},"name":"Word","qualname":"::attr::Meta::Word","value":"Meta::Word(Ident)","parent":{"krate":0,"index":5448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5452},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86539,"byte_end":86543,"line_start":422,"line_end":422,"column_start":13,"column_end":17},"name":"List","qualname":"::attr::Meta::List","value":"Meta::List(MetaList)","parent":{"krate":0,"index":5448},"children":[],"decl_id":null,"docs":" A structured list within an attribute, like `derive(Copy, Clone)`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5455},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86908,"byte_end":86917,"line_start":431,"line_end":431,"column_start":13,"column_end":22},"name":"NameValue","qualname":"::attr::Meta::NameValue","value":"Meta::NameValue(MetaNameValue)","parent":{"krate":0,"index":5448},"children":[],"decl_id":null,"docs":" A name-value pair within an attribute, like `feature = \"nightly\"`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5448},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86298,"byte_end":86302,"line_start":416,"line_end":416,"column_start":14,"column_end":18},"name":"Meta","qualname":"::attr::Meta","value":"Meta::{Word, List, NameValue}","parent":null,"children":[{"krate":0,"index":5449},{"krate":0,"index":5452},{"krate":0,"index":5455}],"decl_id":null,"docs":" Content of a compile-time structured attribute.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n\n ## Word\n\n A meta word is like the `test` in `#[test]`.\n\n ## List\n\n A meta list is like the `derive(Copy)` in `#[derive(Copy)]`.\n\n ## NameValue\n\n A name-value meta is like the `path = \"...\"` in `#[path =\n \"sys/windows.rs\"]`.\n\n # Syntax tree enum\n\n This type is a [syntax tree enum].\n\n [syntax tree enum]: enum.Expr.html#syntax-tree-enums\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5460},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86544,"byte_end":86552,"line_start":422,"line_end":422,"column_start":18,"column_end":26},"name":"MetaList","qualname":"::attr::MetaList","value":"MetaList { ident, paren_token, nested }","parent":null,"children":[{"krate":0,"index":5461},{"krate":0,"index":5462},{"krate":0,"index":5463}],"decl_id":null,"docs":" A structured list within an attribute, like `derive(Copy, Clone)`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5461},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86571,"byte_end":86576,"line_start":423,"line_end":423,"column_start":17,"column_end":22},"name":"ident","qualname":"::attr::MetaList::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":5460},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5462},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86601,"byte_end":86612,"line_start":424,"line_end":424,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::attr::MetaList::paren_token","value":"token::Paren","parent":{"krate":0,"index":5460},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5463},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86644,"byte_end":86650,"line_start":425,"line_end":425,"column_start":17,"column_end":23},"name":"nested","qualname":"::attr::MetaList::nested","value":"punctuated::Punctuated<attr::NestedMeta, token::Comma>","parent":{"krate":0,"index":5460},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5466},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86918,"byte_end":86931,"line_start":431,"line_end":431,"column_start":23,"column_end":36},"name":"MetaNameValue","qualname":"::attr::MetaNameValue","value":"MetaNameValue { ident, eq_token, lit }","parent":null,"children":[{"krate":0,"index":5467},{"krate":0,"index":5468},{"krate":0,"index":5469}],"decl_id":null,"docs":" A name-value pair within an attribute, like `feature = \"nightly\"`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5467},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86950,"byte_end":86955,"line_start":432,"line_end":432,"column_start":17,"column_end":22},"name":"ident","qualname":"::attr::MetaNameValue::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":5466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5468},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86980,"byte_end":86988,"line_start":433,"line_end":433,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::attr::MetaNameValue::eq_token","value":"token::Eq","parent":{"krate":0,"index":5466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5469},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87017,"byte_end":87020,"line_start":434,"line_end":434,"column_start":17,"column_end":20},"name":"lit","qualname":"::attr::MetaNameValue::lit","value":"lit::Lit","parent":{"krate":0,"index":5466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87303,"byte_end":87307,"line_start":444,"line_end":444,"column_start":12,"column_end":16},"name":"name","qualname":"<Meta>::name","value":"fn (&self) -> Ident","parent":null,"children":[],"decl_id":null,"docs":" Returns the identifier that begins this structured meta item.\n\n For example this would return the `test` in `#[test]`, the `derive` in\n `#[derive(Copy)]`, and the `path` in `#[path = \"sys/windows.rs\"]`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5479},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87874,"byte_end":87878,"line_start":461,"line_end":461,"column_start":13,"column_end":17},"name":"Meta","qualname":"::attr::NestedMeta::Meta","value":"NestedMeta::Meta(Meta)","parent":{"krate":0,"index":5478},"children":[],"decl_id":null,"docs":" A structured meta item, like the `Copy` in `#[derive(Copy)]` which\n would be a nested `Meta::Word`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5482},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87977,"byte_end":87984,"line_start":464,"line_end":464,"column_start":13,"column_end":20},"name":"Literal","qualname":"::attr::NestedMeta::Literal","value":"NestedMeta::Literal(Lit)","parent":{"krate":0,"index":5478},"children":[],"decl_id":null,"docs":" A Rust literal, like the `\"new_name\"` in `#[rename(\"new_name\")]`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5478},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87726,"byte_end":87736,"line_start":458,"line_end":458,"column_start":14,"column_end":24},"name":"NestedMeta","qualname":"::attr::NestedMeta","value":"NestedMeta::{Meta, Literal}","parent":null,"children":[{"krate":0,"index":5479},{"krate":0,"index":5482}],"decl_id":null,"docs":" Element of a compile-time attribute list.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88995,"byte_end":89008,"line_start":503,"line_end":503,"column_start":10,"column_end":23},"name":"AttributeArgs","qualname":"::attr::AttributeArgs","value":"Vec<NestedMeta>","parent":null,"children":[],"decl_id":null,"docs":" Conventional argument type associated with an invocation of an attribute\n macro.\n\n For example if we are developing an attribute macro that is intended to be\n invoked on function items as follows:\n\n ```edition2018\n # const IGNORE: &str = stringify! {\n #[my_attribute(path = \"/v1/refresh\")]\n # };\n pub fn refresh() {\n     /* ... */\n }\n ```\n\n The implementation of this macro would want to parse its attribute arguments\n as type `AttributeArgs`.\n\n ```edition2018\n extern crate proc_macro;\n\n use proc_macro::TokenStream;\n use syn::{parse_macro_input, AttributeArgs, ItemFn};\n\n # const IGNORE: &str = stringify! {\n #[proc_macro_attribute]\n # };\n pub fn my_attribute(args: TokenStream, input: TokenStream) -> TokenStream {\n     let args = parse_macro_input!(args as AttributeArgs);\n     let input = parse_macro_input!(input as ItemFn);\n\n     /* ... */\n #   \"\".parse().unwrap()\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":89066,"byte_end":89069,"line_start":506,"line_end":506,"column_start":10,"column_end":13},"name":"Ret","qualname":"::attr::FilterAttrs::Ret","value":"type Ret: Iterator<Item = &'a Attribute>;","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5489},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":94468,"byte_end":94475,"line_start":9,"line_end":9,"column_start":16,"column_end":23},"name":"Variant","qualname":"::data::Variant","value":"Variant { attrs, ident, fields, discriminant }","parent":null,"children":[{"krate":0,"index":5490},{"krate":0,"index":5491},{"krate":0,"index":5492},{"krate":0,"index":5493}],"decl_id":null,"docs":" An enum variant.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5490},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":94536,"byte_end":94541,"line_start":11,"line_end":11,"column_start":13,"column_end":18},"name":"attrs","qualname":"::data::Variant::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5489},"children":[],"decl_id":null,"docs":" Attributes tagged on the variant.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5491},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":94605,"byte_end":94610,"line_start":14,"line_end":14,"column_start":13,"column_end":18},"name":"ident","qualname":"::data::Variant::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":5489},"children":[],"decl_id":null,"docs":" Name of the variant.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5492},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":94675,"byte_end":94681,"line_start":17,"line_end":17,"column_start":13,"column_end":19},"name":"fields","qualname":"::data::Variant::fields","value":"data::Fields","parent":{"krate":0,"index":5489},"children":[],"decl_id":null,"docs":" Content stored in the variant.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5493},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":94753,"byte_end":94765,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"name":"discriminant","qualname":"::data::Variant::discriminant","value":"std::option::Option<(token::Eq, expr::Expr)>","parent":{"krate":0,"index":5489},"children":[],"decl_id":null,"docs":" Explicit discriminant: `Variant = 1`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5501},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95546,"byte_end":95551,"line_start":44,"line_end":44,"column_start":13,"column_end":18},"name":"Named","qualname":"::data::Fields::Named","value":"Fields::Named(FieldsNamed)","parent":{"krate":0,"index":5500},"children":[],"decl_id":null,"docs":" Named fields of a struct or struct variant such as `Point { x: f64,\n y: f64 }`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5504},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95886,"byte_end":95893,"line_start":53,"line_end":53,"column_start":13,"column_end":20},"name":"Unnamed","qualname":"::data::Fields::Unnamed","value":"Fields::Unnamed(FieldsUnnamed)","parent":{"krate":0,"index":5500},"children":[],"decl_id":null,"docs":" Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5507},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":96089,"byte_end":96093,"line_start":59,"line_end":59,"column_start":13,"column_end":17},"name":"Unit","qualname":"::data::Fields::Unit","value":"Fields::Unit","parent":{"krate":0,"index":5500},"children":[],"decl_id":null,"docs":" Unit struct or unit variant such as `None`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5500},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95304,"byte_end":95310,"line_start":38,"line_end":38,"column_start":14,"column_end":20},"name":"Fields","qualname":"::data::Fields","value":"Fields::{Named, Unnamed, Unit}","parent":null,"children":[{"krate":0,"index":5501},{"krate":0,"index":5504},{"krate":0,"index":5507}],"decl_id":null,"docs":" Data stored within an enum variant or struct.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n\n # Syntax tree enum\n\n This type is a [syntax tree enum].\n\n [syntax tree enum]: enum.Expr.html#syntax-tree-enums\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5511},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95552,"byte_end":95563,"line_start":44,"line_end":44,"column_start":19,"column_end":30},"name":"FieldsNamed","qualname":"::data::FieldsNamed","value":"FieldsNamed { brace_token, named }","parent":null,"children":[{"krate":0,"index":5512},{"krate":0,"index":5513}],"decl_id":null,"docs":" Named fields of a struct or struct variant such as `Point { x: f64,\n y: f64 }`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5512},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95582,"byte_end":95593,"line_start":45,"line_end":45,"column_start":17,"column_end":28},"name":"brace_token","qualname":"::data::FieldsNamed::brace_token","value":"token::Brace","parent":{"krate":0,"index":5511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5513},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95625,"byte_end":95630,"line_start":46,"line_end":46,"column_start":17,"column_end":22},"name":"named","qualname":"::data::FieldsNamed::named","value":"punctuated::Punctuated<data::Field, token::Comma>","parent":{"krate":0,"index":5511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5516},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95894,"byte_end":95907,"line_start":53,"line_end":53,"column_start":21,"column_end":34},"name":"FieldsUnnamed","qualname":"::data::FieldsUnnamed","value":"FieldsUnnamed { paren_token, unnamed }","parent":null,"children":[{"krate":0,"index":5517},{"krate":0,"index":5518}],"decl_id":null,"docs":" Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5517},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95926,"byte_end":95937,"line_start":54,"line_end":54,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::data::FieldsUnnamed::paren_token","value":"token::Paren","parent":{"krate":0,"index":5516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5518},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95969,"byte_end":95976,"line_start":55,"line_end":55,"column_start":17,"column_end":24},"name":"unnamed","qualname":"::data::FieldsUnnamed::unnamed","value":"punctuated::Punctuated<data::Field, token::Comma>","parent":{"krate":0,"index":5516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":96318,"byte_end":96322,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"iter","qualname":"<Fields>::iter","value":"fn (&self) -> punctuated::Iter<Field>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the borrowed [`Field`] items in this object. This\n iterator can be used to iterate over a named or unnamed struct or\n variant's fields uniformly.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":96776,"byte_end":96784,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Fields>::iter_mut","value":"fn (&mut self) -> punctuated::IterMut<Field>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the mutably borrowed [`Field`] items in this\n object. This iterator can be used to iterate over a named or unnamed\n struct or variant's fields uniformly.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5523},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":97630,"byte_end":97635,"line_start":110,"line_end":110,"column_start":16,"column_end":21},"name":"Field","qualname":"::data::Field","value":"Field { attrs, vis, ident, colon_token, ty }","parent":null,"children":[{"krate":0,"index":5524},{"krate":0,"index":5525},{"krate":0,"index":5526},{"krate":0,"index":5527},{"krate":0,"index":5528}],"decl_id":null,"docs":" A field of a struct or enum variant.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5524},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":97694,"byte_end":97699,"line_start":112,"line_end":112,"column_start":13,"column_end":18},"name":"attrs","qualname":"::data::Field::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5523},"children":[],"decl_id":null,"docs":" Attributes tagged on the field.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5525},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":97767,"byte_end":97770,"line_start":115,"line_end":115,"column_start":13,"column_end":16},"name":"vis","qualname":"::data::Field::vis","value":"data::Visibility","parent":{"krate":0,"index":5523},"children":[],"decl_id":null,"docs":" Visibility of the field.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5526},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":97899,"byte_end":97904,"line_start":120,"line_end":120,"column_start":13,"column_end":18},"name":"ident","qualname":"::data::Field::ident","value":"std::option::Option<proc_macro2::Ident>","parent":{"krate":0,"index":5523},"children":[],"decl_id":null,"docs":" Name of the field, if any.\n\n Fields of tuple structs have no names.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5527},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":97934,"byte_end":97945,"line_start":122,"line_end":122,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::data::Field::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":5523},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5528},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":98010,"byte_end":98012,"line_start":125,"line_end":125,"column_start":13,"column_end":15},"name":"ty","qualname":"::data::Field::ty","value":"ty::Type","parent":{"krate":0,"index":5523},"children":[],"decl_id":null,"docs":" Type of the field.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5538},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":98755,"byte_end":98761,"line_start":149,"line_end":149,"column_start":13,"column_end":19},"name":"Public","qualname":"::data::Visibility::Public","value":"Visibility::Public(VisPublic)","parent":{"krate":0,"index":5537},"children":[],"decl_id":null,"docs":" A public visibility level: `pub`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5541},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99004,"byte_end":99009,"line_start":157,"line_end":157,"column_start":13,"column_end":18},"name":"Crate","qualname":"::data::Visibility::Crate","value":"Visibility::Crate(VisCrate)","parent":{"krate":0,"index":5537},"children":[],"decl_id":null,"docs":" A crate-level visibility: `crate`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5544},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99347,"byte_end":99357,"line_start":166,"line_end":166,"column_start":13,"column_end":23},"name":"Restricted","qualname":"::data::Visibility::Restricted","value":"Visibility::Restricted(VisRestricted)","parent":{"krate":0,"index":5537},"children":[],"decl_id":null,"docs":" A visibility level restricted to some path: `pub(self)` or\n `pub(super)` or `pub(crate)` or `pub(in some::module)`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5547},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99627,"byte_end":99636,"line_start":174,"line_end":174,"column_start":13,"column_end":22},"name":"Inherited","qualname":"::data::Visibility::Inherited","value":"Visibility::Inherited","parent":{"krate":0,"index":5537},"children":[],"decl_id":null,"docs":" An inherited visibility, which usually means private.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5537},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":98566,"byte_end":98576,"line_start":144,"line_end":144,"column_start":14,"column_end":24},"name":"Visibility","qualname":"::data::Visibility","value":"Visibility::{Public, Crate, Restricted, Inherited}","parent":null,"children":[{"krate":0,"index":5538},{"krate":0,"index":5541},{"krate":0,"index":5544},{"krate":0,"index":5547}],"decl_id":null,"docs":" The visibility level of an item: inherited or `pub` or\n `pub(restricted)`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n\n # Syntax tree enum\n\n This type is a [syntax tree enum].\n\n [syntax tree enum]: enum.Expr.html#syntax-tree-enums\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5551},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":98762,"byte_end":98771,"line_start":149,"line_end":149,"column_start":20,"column_end":29},"name":"VisPublic","qualname":"::data::VisPublic","value":"VisPublic { pub_token }","parent":null,"children":[{"krate":0,"index":5552}],"decl_id":null,"docs":" A public visibility level: `pub`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5552},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":98790,"byte_end":98799,"line_start":150,"line_end":150,"column_start":17,"column_end":26},"name":"pub_token","qualname":"::data::VisPublic::pub_token","value":"token::Pub","parent":{"krate":0,"index":5551},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5555},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99010,"byte_end":99018,"line_start":157,"line_end":157,"column_start":19,"column_end":27},"name":"VisCrate","qualname":"::data::VisCrate","value":"VisCrate { crate_token }","parent":null,"children":[{"krate":0,"index":5556}],"decl_id":null,"docs":" A crate-level visibility: `crate`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5556},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99037,"byte_end":99048,"line_start":158,"line_end":158,"column_start":17,"column_end":28},"name":"crate_token","qualname":"::data::VisCrate::crate_token","value":"token::Crate","parent":{"krate":0,"index":5555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5559},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99358,"byte_end":99371,"line_start":166,"line_end":166,"column_start":24,"column_end":37},"name":"VisRestricted","qualname":"::data::VisRestricted","value":"VisRestricted { pub_token, paren_token, in_token, path }","parent":null,"children":[{"krate":0,"index":5560},{"krate":0,"index":5561},{"krate":0,"index":5562},{"krate":0,"index":5563}],"decl_id":null,"docs":" A visibility level restricted to some path: `pub(self)` or\n `pub(super)` or `pub(crate)` or `pub(in some::module)`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5560},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99390,"byte_end":99399,"line_start":167,"line_end":167,"column_start":17,"column_end":26},"name":"pub_token","qualname":"::data::VisRestricted::pub_token","value":"token::Pub","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5561},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99430,"byte_end":99441,"line_start":168,"line_end":168,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::data::VisRestricted::paren_token","value":"token::Paren","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5562},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99473,"byte_end":99481,"line_start":169,"line_end":169,"column_start":17,"column_end":25},"name":"in_token","qualname":"::data::VisRestricted::in_token","value":"std::option::Option<token::In>","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5563},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99519,"byte_end":99523,"line_start":170,"line_end":170,"column_start":17,"column_end":21},"name":"path","qualname":"::data::VisRestricted::path","value":"std::boxed::Box<path::Path>","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":101432,"byte_end":101443,"line_start":234,"line_end":234,"column_start":16,"column_end":27},"name":"parse_named","qualname":"<Field>::parse_named","value":"fn (input: ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parses a named (braced struct) field.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":101827,"byte_end":101840,"line_start":245,"line_end":245,"column_start":16,"column_end":29},"name":"parse_unnamed","qualname":"<Field>::parse_unnamed","value":"fn (input: ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parses an unnamed (tuple struct) field.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5649},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":109418,"byte_end":109421,"line_start":90,"line_end":90,"column_start":13,"column_end":16},"name":"Box","qualname":"::expr::Expr::Box","value":"Expr::Box(ExprBox)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A box expression: `box f`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5652},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":109721,"byte_end":109728,"line_start":99,"line_end":99,"column_start":13,"column_end":20},"name":"InPlace","qualname":"::expr::Expr::InPlace","value":"Expr::InPlace(ExprInPlace)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A placement expression: `place <- value`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5655},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110070,"byte_end":110075,"line_start":109,"line_end":109,"column_start":13,"column_end":18},"name":"Array","qualname":"::expr::Expr::Array","value":"Expr::Array(ExprArray)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A slice literal expression: `[a, b, c, d]`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5658},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110431,"byte_end":110435,"line_start":119,"line_end":119,"column_start":13,"column_end":17},"name":"Call","qualname":"::expr::Expr::Call","value":"Expr::Call(ExprCall)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A function call expression: `invoke(a, b)`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5661},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110788,"byte_end":110798,"line_start":129,"line_end":129,"column_start":13,"column_end":23},"name":"MethodCall","qualname":"::expr::Expr::MethodCall","value":"Expr::MethodCall(ExprMethodCall)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A method call expression: `x.foo::<T>(a, b)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5664},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111278,"byte_end":111283,"line_start":142,"line_end":142,"column_start":13,"column_end":18},"name":"Tuple","qualname":"::expr::Expr::Tuple","value":"Expr::Tuple(ExprTuple)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A tuple expression: `(a, b, c, d)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5667},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111629,"byte_end":111635,"line_start":152,"line_end":152,"column_start":13,"column_end":19},"name":"Binary","qualname":"::expr::Expr::Binary","value":"Expr::Binary(ExprBinary)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A binary operation: `a + b`, `a * b`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5670},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111968,"byte_end":111973,"line_start":163,"line_end":163,"column_start":13,"column_end":18},"name":"Unary","qualname":"::expr::Expr::Unary","value":"Expr::Unary(ExprUnary)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A unary operation: `!x`, `*x`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5673},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112290,"byte_end":112293,"line_start":173,"line_end":173,"column_start":13,"column_end":16},"name":"Lit","qualname":"::expr::Expr::Lit","value":"Expr::Lit(ExprLit)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A literal in place of an expression: `1`, `\"foo\"`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5676},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112557,"byte_end":112561,"line_start":182,"line_end":182,"column_start":13,"column_end":17},"name":"Cast","qualname":"::expr::Expr::Cast","value":"Expr::Cast(ExprCast)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A cast expression: `foo as f64`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5679},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112885,"byte_end":112889,"line_start":192,"line_end":192,"column_start":13,"column_end":17},"name":"Type","qualname":"::expr::Expr::Type","value":"Expr::Type(ExprType)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A type ascription expression: `foo: f64`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5682},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113215,"byte_end":113218,"line_start":202,"line_end":202,"column_start":13,"column_end":16},"name":"Let","qualname":"::expr::Expr::Let","value":"Expr::Let(ExprLet)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A `let` guard: `let Some(x) = opt`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5685},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113807,"byte_end":113809,"line_start":217,"line_end":217,"column_start":13,"column_end":15},"name":"If","qualname":"::expr::Expr::If","value":"Expr::If(ExprIf)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" An `if` expression with an optional `else` block: `if expr { ... }\n else { ... }`.\n\n The `else` branch expression may only be an `If` or `Block`\n expression, not any of the other types of expression.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5688},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114200,"byte_end":114205,"line_start":228,"line_end":228,"column_start":13,"column_end":18},"name":"While","qualname":"::expr::Expr::While","value":"Expr::While(ExprWhile)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A while loop: `while expr { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5691},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114575,"byte_end":114582,"line_start":239,"line_end":239,"column_start":13,"column_end":20},"name":"ForLoop","qualname":"::expr::Expr::ForLoop","value":"Expr::ForLoop(ExprForLoop)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A for loop: `for pat in expr { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5694},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115016,"byte_end":115020,"line_start":252,"line_end":252,"column_start":13,"column_end":17},"name":"Loop","qualname":"::expr::Expr::Loop","value":"Expr::Loop(ExprLoop)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Conditionless loop: `loop { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5697},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115378,"byte_end":115383,"line_start":262,"line_end":262,"column_start":13,"column_end":18},"name":"Match","qualname":"::expr::Expr::Match","value":"Expr::Match(ExprMatch)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A `match` expression: `match n { Some(n) => {}, None => {} }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5700},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115760,"byte_end":115767,"line_start":273,"line_end":273,"column_start":13,"column_end":20},"name":"Closure","qualname":"::expr::Expr::Closure","value":"Expr::Closure(ExprClosure)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A closure expression: `|a, b| a + b`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5703},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116339,"byte_end":116345,"line_start":288,"line_end":288,"column_start":13,"column_end":19},"name":"Unsafe","qualname":"::expr::Expr::Unsafe","value":"Expr::Unsafe(ExprUnsafe)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" An unsafe block: `unsafe { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5706},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116637,"byte_end":116642,"line_start":297,"line_end":297,"column_start":13,"column_end":18},"name":"Block","qualname":"::expr::Expr::Block","value":"Expr::Block(ExprBlock)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A blocked scope: `{ ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5709},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116940,"byte_end":116946,"line_start":306,"line_end":306,"column_start":13,"column_end":19},"name":"Assign","qualname":"::expr::Expr::Assign","value":"Expr::Assign(ExprAssign)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" An assignment expression: `a = compute()`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5712},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117288,"byte_end":117296,"line_start":316,"line_end":316,"column_start":13,"column_end":21},"name":"AssignOp","qualname":"::expr::Expr::AssignOp","value":"Expr::AssignOp(ExprAssignOp)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A compound assignment expression: `counter += 1`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5715},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117674,"byte_end":117679,"line_start":327,"line_end":327,"column_start":13,"column_end":18},"name":"Field","qualname":"::expr::Expr::Field","value":"Expr::Field(ExprField)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Access of a named struct field (`obj.k`) or unnamed tuple struct\n field (`obj.0`).\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5718},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118042,"byte_end":118047,"line_start":338,"line_end":338,"column_start":13,"column_end":18},"name":"Index","qualname":"::expr::Expr::Index","value":"Expr::Index(ExprIndex)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A square bracketed indexing expression: `vector[2]`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5721},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118401,"byte_end":118406,"line_start":348,"line_end":348,"column_start":13,"column_end":18},"name":"Range","qualname":"::expr::Expr::Range","value":"Expr::Range(ExprRange)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5724},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118921,"byte_end":118925,"line_start":362,"line_end":362,"column_start":13,"column_end":17},"name":"Path","qualname":"::expr::Expr::Path","value":"Expr::Path(ExprPath)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A path like `std::mem::replace` possibly containing generic\n parameters and a qualified self-type.\n\n A plain identifier like `x` is a path of length 1.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5727},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119214,"byte_end":119223,"line_start":371,"line_end":371,"column_start":13,"column_end":22},"name":"Reference","qualname":"::expr::Expr::Reference","value":"Expr::Reference(ExprReference)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A referencing operation: `&a` or `&mut a`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5730},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119617,"byte_end":119622,"line_start":382,"line_end":382,"column_start":13,"column_end":18},"name":"Break","qualname":"::expr::Expr::Break","value":"Expr::Break(ExprBreak)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A `break`, with an optional label to break and an optional\n expression.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5733},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119973,"byte_end":119981,"line_start":392,"line_end":392,"column_start":13,"column_end":21},"name":"Continue","qualname":"::expr::Expr::Continue","value":"Expr::Continue(ExprContinue)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A `continue`, with an optional label.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5736},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":120313,"byte_end":120319,"line_start":401,"line_end":401,"column_start":13,"column_end":19},"name":"Return","qualname":"::expr::Expr::Return","value":"Expr::Return(ExprReturn)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A `return`, with an optional value to be returned.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5739},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":120645,"byte_end":120650,"line_start":410,"line_end":410,"column_start":13,"column_end":18},"name":"Macro","qualname":"::expr::Expr::Macro","value":"Expr::Macro(ExprMacro)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A macro invocation expression: `format!(\"{}\", q)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5742},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121042,"byte_end":121048,"line_start":421,"line_end":421,"column_start":13,"column_end":19},"name":"Struct","qualname":"::expr::Expr::Struct","value":"Expr::Struct(ExprStruct)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A struct literal expression: `Point { x: 1, y: 1 }`.\n\n The `rest` provides the value of the remaining fields as in `S { a:\n 1, b: 1, ..rest }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5745},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121523,"byte_end":121529,"line_start":433,"line_end":433,"column_start":13,"column_end":19},"name":"Repeat","qualname":"::expr::Expr::Repeat","value":"Expr::Repeat(ExprRepeat)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" An array literal constructed from one repeated element: `[0u8; N]`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5748},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121907,"byte_end":121912,"line_start":444,"line_end":444,"column_start":13,"column_end":18},"name":"Paren","qualname":"::expr::Expr::Paren","value":"Expr::Paren(ExprParen)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A parenthesized expression: `(a + b)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5751},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":122415,"byte_end":122420,"line_start":457,"line_end":457,"column_start":13,"column_end":18},"name":"Group","qualname":"::expr::Expr::Group","value":"Expr::Group(ExprGroup)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" An expression contained within invisible delimiters.\n\n This variant is important for faithfully representing the precedence\n of expressions and is related to `None`-delimited spans in a\n `TokenStream`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5754},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":122710,"byte_end":122713,"line_start":466,"line_end":466,"column_start":13,"column_end":16},"name":"Try","qualname":"::expr::Expr::Try","value":"Expr::Try(ExprTry)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A try-expression: `expr?`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5757},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123007,"byte_end":123012,"line_start":475,"line_end":475,"column_start":13,"column_end":18},"name":"Async","qualname":"::expr::Expr::Async","value":"Expr::Async(ExprAsync)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" An async block: `async { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5760},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123348,"byte_end":123356,"line_start":485,"line_end":485,"column_start":13,"column_end":21},"name":"TryBlock","qualname":"::expr::Expr::TryBlock","value":"Expr::TryBlock(ExprTryBlock)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A try block: `try { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5763},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123650,"byte_end":123655,"line_start":494,"line_end":494,"column_start":13,"column_end":18},"name":"Yield","qualname":"::expr::Expr::Yield","value":"Expr::Yield(ExprYield)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A yield expression: `yield expr`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5766},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":124007,"byte_end":124015,"line_start":504,"line_end":504,"column_start":13,"column_end":21},"name":"Verbatim","qualname":"::expr::Expr::Verbatim","value":"Expr::Verbatim(ExprVerbatim)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Tokens in expression position not interpreted by Syn.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5648},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":109268,"byte_end":109272,"line_start":86,"line_end":86,"column_start":14,"column_end":18},"name":"Expr","qualname":"::expr::Expr","value":"Expr::{Box, InPlace, Array, Call, MethodCall, Tuple, Binary, Unary, Lit, Cast, Type, Let, If, While, ForLoop, Loop, Match, Closure, Unsafe, Block, Assign, AssignOp, Field, Index, Range, Path, Reference, Break, Continue, Return, Macro, Struct, Repeat, Paren, Group, Try, Async, TryBlock, Yield, Verbatim}","parent":null,"children":[{"krate":0,"index":5649},{"krate":0,"index":5652},{"krate":0,"index":5655},{"krate":0,"index":5658},{"krate":0,"index":5661},{"krate":0,"index":5664},{"krate":0,"index":5667},{"krate":0,"index":5670},{"krate":0,"index":5673},{"krate":0,"index":5676},{"krate":0,"index":5679},{"krate":0,"index":5682},{"krate":0,"index":5685},{"krate":0,"index":5688},{"krate":0,"index":5691},{"krate":0,"index":5694},{"krate":0,"index":5697},{"krate":0,"index":5700},{"krate":0,"index":5703},{"krate":0,"index":5706},{"krate":0,"index":5709},{"krate":0,"index":5712},{"krate":0,"index":5715},{"krate":0,"index":5718},{"krate":0,"index":5721},{"krate":0,"index":5724},{"krate":0,"index":5727},{"krate":0,"index":5730},{"krate":0,"index":5733},{"krate":0,"index":5736},{"krate":0,"index":5739},{"krate":0,"index":5742},{"krate":0,"index":5745},{"krate":0,"index":5748},{"krate":0,"index":5751},{"krate":0,"index":5754},{"krate":0,"index":5757},{"krate":0,"index":5760},{"krate":0,"index":5763},{"krate":0,"index":5766}],"decl_id":null,"docs":" A Rust expression.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n\n # Syntax tree enums\n\n This type is a syntax tree enum. In Syn this and other syntax tree enums\n are designed to be traversed using the following rebinding idiom.\n\n ```edition2018\n # use syn::Expr;\n #\n # fn example(expr: Expr) {\n # const IGNORE: &str = stringify! {\n let expr: Expr = /* ... */;\n # };\n match expr {\n     Expr::MethodCall(expr) => {\n         /* ... */\n     }\n     Expr::Cast(expr) => {\n         /* ... */\n     }\n     Expr::If(expr) => {\n         /* ... */\n     }\n\n     /* ... */\n     # _ => {}\n # }\n # }\n ```\n\n We begin with a variable `expr` of type `Expr` that has no fields\n (because it is an enum), and by matching on it and rebinding a variable\n with the same name `expr` we effectively imbue our variable with all of\n the data fields provided by the variant that it turned out to be. So for\n example above if we ended up in the `MethodCall` case then we get to use\n `expr.receiver`, `expr.args` etc; if we ended up in the `If` case we get\n to use `expr.cond`, `expr.then_branch`, `expr.else_branch`.\n\n This approach avoids repeating the variant names twice on every line.\n\n ```edition2018\n # use syn::{Expr, ExprMethodCall};\n #\n # fn example(expr: Expr) {\n // Repetitive; recommend not doing this.\n match expr {\n     Expr::MethodCall(ExprMethodCall { method, args, .. }) => {\n # }\n # _ => {}\n # }\n # }\n ```\n\n In general, the name to which a syntax tree enum variant is bound should\n be a suitable name for the complete syntax tree enum type.\n\n ```edition2018\n # use syn::{Expr, ExprField};\n #\n # fn example(discriminant: ExprField) {\n // Binding is called `base` which is the name I would use if I were\n // assigning `*discriminant.base` without an `if let`.\n if let Expr::Tuple(base) = *discriminant.base {\n # }\n # }\n ```\n\n A sign that you may not be choosing the right variable names is if you\n see names getting repeated in your code, like accessing\n `receiver.receiver` or `pat.pat` or `cond.cond`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5771},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":109422,"byte_end":109429,"line_start":90,"line_end":90,"column_start":17,"column_end":24},"name":"ExprBox","qualname":"::expr::ExprBox","value":"ExprBox { attrs, box_token, expr }","parent":null,"children":[{"krate":0,"index":5772},{"krate":0,"index":5773},{"krate":0,"index":5774}],"decl_id":null,"docs":" A box expression: `box f`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5772},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":109454,"byte_end":109459,"line_start":91,"line_end":91,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprBox::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5773},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":109493,"byte_end":109502,"line_start":92,"line_end":92,"column_start":17,"column_end":26},"name":"box_token","qualname":"::expr::ExprBox::box_token","value":"token::Box","parent":{"krate":0,"index":5771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5774},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":109533,"byte_end":109537,"line_start":93,"line_end":93,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprBox::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5777},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":109729,"byte_end":109740,"line_start":99,"line_end":99,"column_start":21,"column_end":32},"name":"ExprInPlace","qualname":"::expr::ExprInPlace","value":"ExprInPlace { attrs, place, arrow_token, value }","parent":null,"children":[{"krate":0,"index":5778},{"krate":0,"index":5779},{"krate":0,"index":5780},{"krate":0,"index":5781}],"decl_id":null,"docs":" A placement expression: `place <- value`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5778},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":109765,"byte_end":109770,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprInPlace::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5779},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":109804,"byte_end":109809,"line_start":101,"line_end":101,"column_start":17,"column_end":22},"name":"place","qualname":"::expr::ExprInPlace::place","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5780},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":109838,"byte_end":109849,"line_start":102,"line_end":102,"column_start":17,"column_end":28},"name":"arrow_token","qualname":"::expr::ExprInPlace::arrow_token","value":"token::LArrow","parent":{"krate":0,"index":5777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5781},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":109879,"byte_end":109884,"line_start":103,"line_end":103,"column_start":17,"column_end":22},"name":"value","qualname":"::expr::ExprInPlace::value","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5784},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110076,"byte_end":110085,"line_start":109,"line_end":109,"column_start":19,"column_end":28},"name":"ExprArray","qualname":"::expr::ExprArray","value":"ExprArray { attrs, bracket_token, elems }","parent":null,"children":[{"krate":0,"index":5785},{"krate":0,"index":5786},{"krate":0,"index":5787}],"decl_id":null,"docs":" A slice literal expression: `[a, b, c, d]`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5785},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110110,"byte_end":110115,"line_start":110,"line_end":110,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprArray::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5786},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110149,"byte_end":110162,"line_start":111,"line_end":111,"column_start":17,"column_end":30},"name":"bracket_token","qualname":"::expr::ExprArray::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":5784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5787},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110196,"byte_end":110201,"line_start":112,"line_end":112,"column_start":17,"column_end":22},"name":"elems","qualname":"::expr::ExprArray::elems","value":"punctuated::Punctuated<expr::Expr, token::Comma>","parent":{"krate":0,"index":5784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5790},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110436,"byte_end":110444,"line_start":119,"line_end":119,"column_start":18,"column_end":26},"name":"ExprCall","qualname":"::expr::ExprCall","value":"ExprCall { attrs, func, paren_token, args }","parent":null,"children":[{"krate":0,"index":5791},{"krate":0,"index":5792},{"krate":0,"index":5793},{"krate":0,"index":5794}],"decl_id":null,"docs":" A function call expression: `invoke(a, b)`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5791},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110463,"byte_end":110468,"line_start":120,"line_end":120,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprCall::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5790},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5792},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110502,"byte_end":110506,"line_start":121,"line_end":121,"column_start":17,"column_end":21},"name":"func","qualname":"::expr::ExprCall::func","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5790},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5793},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110535,"byte_end":110546,"line_start":122,"line_end":122,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::expr::ExprCall::paren_token","value":"token::Paren","parent":{"krate":0,"index":5790},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5794},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110578,"byte_end":110582,"line_start":123,"line_end":123,"column_start":17,"column_end":21},"name":"args","qualname":"::expr::ExprCall::args","value":"punctuated::Punctuated<expr::Expr, token::Comma>","parent":{"krate":0,"index":5790},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5797},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110799,"byte_end":110813,"line_start":129,"line_end":129,"column_start":24,"column_end":38},"name":"ExprMethodCall","qualname":"::expr::ExprMethodCall","value":"ExprMethodCall { attrs, receiver, dot_token, method, turbofish, paren_token, args }","parent":null,"children":[{"krate":0,"index":5798},{"krate":0,"index":5799},{"krate":0,"index":5800},{"krate":0,"index":5801},{"krate":0,"index":5802},{"krate":0,"index":5803},{"krate":0,"index":5804}],"decl_id":null,"docs":" A method call expression: `x.foo::<T>(a, b)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5798},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110838,"byte_end":110843,"line_start":130,"line_end":130,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprMethodCall::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5797},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5799},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110877,"byte_end":110885,"line_start":131,"line_end":131,"column_start":17,"column_end":25},"name":"receiver","qualname":"::expr::ExprMethodCall::receiver","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5797},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5800},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110914,"byte_end":110923,"line_start":132,"line_end":132,"column_start":17,"column_end":26},"name":"dot_token","qualname":"::expr::ExprMethodCall::dot_token","value":"token::Dot","parent":{"krate":0,"index":5797},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5801},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110952,"byte_end":110958,"line_start":133,"line_end":133,"column_start":17,"column_end":23},"name":"method","qualname":"::expr::ExprMethodCall::method","value":"proc_macro2::Ident","parent":{"krate":0,"index":5797},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5802},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110983,"byte_end":110992,"line_start":134,"line_end":134,"column_start":17,"column_end":26},"name":"turbofish","qualname":"::expr::ExprMethodCall::turbofish","value":"std::option::Option<expr::MethodTurbofish>","parent":{"krate":0,"index":5797},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5803},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111035,"byte_end":111046,"line_start":135,"line_end":135,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::expr::ExprMethodCall::paren_token","value":"token::Paren","parent":{"krate":0,"index":5797},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5804},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111078,"byte_end":111082,"line_start":136,"line_end":136,"column_start":17,"column_end":21},"name":"args","qualname":"::expr::ExprMethodCall::args","value":"punctuated::Punctuated<expr::Expr, token::Comma>","parent":{"krate":0,"index":5797},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5807},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111284,"byte_end":111293,"line_start":142,"line_end":142,"column_start":19,"column_end":28},"name":"ExprTuple","qualname":"::expr::ExprTuple","value":"ExprTuple { attrs, paren_token, elems }","parent":null,"children":[{"krate":0,"index":5808},{"krate":0,"index":5809},{"krate":0,"index":5810}],"decl_id":null,"docs":" A tuple expression: `(a, b, c, d)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5808},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111318,"byte_end":111323,"line_start":143,"line_end":143,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprTuple::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5807},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5809},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111357,"byte_end":111368,"line_start":144,"line_end":144,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::expr::ExprTuple::paren_token","value":"token::Paren","parent":{"krate":0,"index":5807},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5810},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111400,"byte_end":111405,"line_start":145,"line_end":145,"column_start":17,"column_end":22},"name":"elems","qualname":"::expr::ExprTuple::elems","value":"punctuated::Punctuated<expr::Expr, token::Comma>","parent":{"krate":0,"index":5807},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5813},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111636,"byte_end":111646,"line_start":152,"line_end":152,"column_start":20,"column_end":30},"name":"ExprBinary","qualname":"::expr::ExprBinary","value":"ExprBinary { attrs, left, op, right }","parent":null,"children":[{"krate":0,"index":5814},{"krate":0,"index":5815},{"krate":0,"index":5816},{"krate":0,"index":5817}],"decl_id":null,"docs":" A binary operation: `a + b`, `a * b`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5814},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111665,"byte_end":111670,"line_start":153,"line_end":153,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprBinary::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5813},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5815},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111704,"byte_end":111708,"line_start":154,"line_end":154,"column_start":17,"column_end":21},"name":"left","qualname":"::expr::ExprBinary::left","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5813},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5816},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111737,"byte_end":111739,"line_start":155,"line_end":155,"column_start":17,"column_end":19},"name":"op","qualname":"::expr::ExprBinary::op","value":"op::BinOp","parent":{"krate":0,"index":5813},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5817},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111764,"byte_end":111769,"line_start":156,"line_end":156,"column_start":17,"column_end":22},"name":"right","qualname":"::expr::ExprBinary::right","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5813},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5820},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111974,"byte_end":111983,"line_start":163,"line_end":163,"column_start":19,"column_end":28},"name":"ExprUnary","qualname":"::expr::ExprUnary","value":"ExprUnary { attrs, op, expr }","parent":null,"children":[{"krate":0,"index":5821},{"krate":0,"index":5822},{"krate":0,"index":5823}],"decl_id":null,"docs":" A unary operation: `!x`, `*x`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5821},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112002,"byte_end":112007,"line_start":164,"line_end":164,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprUnary::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5822},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112041,"byte_end":112043,"line_start":165,"line_end":165,"column_start":17,"column_end":19},"name":"op","qualname":"::expr::ExprUnary::op","value":"op::UnOp","parent":{"krate":0,"index":5820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5823},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112067,"byte_end":112071,"line_start":166,"line_end":166,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprUnary::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5826},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112294,"byte_end":112301,"line_start":173,"line_end":173,"column_start":17,"column_end":24},"name":"ExprLit","qualname":"::expr::ExprLit","value":"ExprLit { attrs, lit }","parent":null,"children":[{"krate":0,"index":5827},{"krate":0,"index":5828}],"decl_id":null,"docs":" A literal in place of an expression: `1`, `\"foo\"`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5827},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112320,"byte_end":112325,"line_start":174,"line_end":174,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprLit::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5826},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5828},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112359,"byte_end":112362,"line_start":175,"line_end":175,"column_start":17,"column_end":20},"name":"lit","qualname":"::expr::ExprLit::lit","value":"lit::Lit","parent":{"krate":0,"index":5826},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5831},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112562,"byte_end":112570,"line_start":182,"line_end":182,"column_start":18,"column_end":26},"name":"ExprCast","qualname":"::expr::ExprCast","value":"ExprCast { attrs, expr, as_token, ty }","parent":null,"children":[{"krate":0,"index":5832},{"krate":0,"index":5833},{"krate":0,"index":5834},{"krate":0,"index":5835}],"decl_id":null,"docs":" A cast expression: `foo as f64`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5832},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112589,"byte_end":112594,"line_start":183,"line_end":183,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprCast::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5831},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5833},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112628,"byte_end":112632,"line_start":184,"line_end":184,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprCast::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5831},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5834},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112661,"byte_end":112669,"line_start":185,"line_end":185,"column_start":17,"column_end":25},"name":"as_token","qualname":"::expr::ExprCast::as_token","value":"token::As","parent":{"krate":0,"index":5831},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5835},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112699,"byte_end":112701,"line_start":186,"line_end":186,"column_start":17,"column_end":19},"name":"ty","qualname":"::expr::ExprCast::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":5831},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5838},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112890,"byte_end":112898,"line_start":192,"line_end":192,"column_start":18,"column_end":26},"name":"ExprType","qualname":"::expr::ExprType","value":"ExprType { attrs, expr, colon_token, ty }","parent":null,"children":[{"krate":0,"index":5839},{"krate":0,"index":5840},{"krate":0,"index":5841},{"krate":0,"index":5842}],"decl_id":null,"docs":" A type ascription expression: `foo: f64`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5839},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112923,"byte_end":112928,"line_start":193,"line_end":193,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprType::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5840},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112962,"byte_end":112966,"line_start":194,"line_end":194,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprType::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5841},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112995,"byte_end":113006,"line_start":195,"line_end":195,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::expr::ExprType::colon_token","value":"token::Colon","parent":{"krate":0,"index":5838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5842},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113035,"byte_end":113037,"line_start":196,"line_end":196,"column_start":17,"column_end":19},"name":"ty","qualname":"::expr::ExprType::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":5838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5845},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113219,"byte_end":113226,"line_start":202,"line_end":202,"column_start":17,"column_end":24},"name":"ExprLet","qualname":"::expr::ExprLet","value":"ExprLet { attrs, let_token, pats, eq_token, expr }","parent":null,"children":[{"krate":0,"index":5846},{"krate":0,"index":5847},{"krate":0,"index":5848},{"krate":0,"index":5849},{"krate":0,"index":5850}],"decl_id":null,"docs":" A `let` guard: `let Some(x) = opt`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5846},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113251,"byte_end":113256,"line_start":203,"line_end":203,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprLet::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5847},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113290,"byte_end":113299,"line_start":204,"line_end":204,"column_start":17,"column_end":26},"name":"let_token","qualname":"::expr::ExprLet::let_token","value":"token::Let","parent":{"krate":0,"index":5845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5848},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113330,"byte_end":113334,"line_start":205,"line_end":205,"column_start":17,"column_end":21},"name":"pats","qualname":"::expr::ExprLet::pats","value":"punctuated::Punctuated<expr::Pat, token::Or>","parent":{"krate":0,"index":5845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5849},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113380,"byte_end":113388,"line_start":206,"line_end":206,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::expr::ExprLet::eq_token","value":"token::Eq","parent":{"krate":0,"index":5845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5850},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113417,"byte_end":113421,"line_start":207,"line_end":207,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprLet::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5853},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113810,"byte_end":113816,"line_start":217,"line_end":217,"column_start":16,"column_end":22},"name":"ExprIf","qualname":"::expr::ExprIf","value":"ExprIf { attrs, if_token, cond, then_branch, else_branch }","parent":null,"children":[{"krate":0,"index":5854},{"krate":0,"index":5855},{"krate":0,"index":5856},{"krate":0,"index":5857},{"krate":0,"index":5858}],"decl_id":null,"docs":" An `if` expression with an optional `else` block: `if expr { ... }\n else { ... }`.\n\n The `else` branch expression may only be an `If` or `Block`\n expression, not any of the other types of expression.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5854},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113841,"byte_end":113846,"line_start":218,"line_end":218,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprIf::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5855},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113880,"byte_end":113888,"line_start":219,"line_end":219,"column_start":17,"column_end":25},"name":"if_token","qualname":"::expr::ExprIf::if_token","value":"token::If","parent":{"krate":0,"index":5853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5856},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113918,"byte_end":113922,"line_start":220,"line_end":220,"column_start":17,"column_end":21},"name":"cond","qualname":"::expr::ExprIf::cond","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5857},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113951,"byte_end":113962,"line_start":221,"line_end":221,"column_start":17,"column_end":28},"name":"then_branch","qualname":"::expr::ExprIf::then_branch","value":"expr::Block","parent":{"krate":0,"index":5853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5858},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113987,"byte_end":113998,"line_start":222,"line_end":222,"column_start":17,"column_end":28},"name":"else_branch","qualname":"::expr::ExprIf::else_branch","value":"std::option::Option<(token::Else, std::boxed::Box<expr::Expr>)>","parent":{"krate":0,"index":5853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5861},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114206,"byte_end":114215,"line_start":228,"line_end":228,"column_start":19,"column_end":28},"name":"ExprWhile","qualname":"::expr::ExprWhile","value":"ExprWhile { attrs, label, while_token, cond, body }","parent":null,"children":[{"krate":0,"index":5862},{"krate":0,"index":5863},{"krate":0,"index":5864},{"krate":0,"index":5865},{"krate":0,"index":5866}],"decl_id":null,"docs":" A while loop: `while expr { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5862},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114240,"byte_end":114245,"line_start":229,"line_end":229,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprWhile::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5863},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114279,"byte_end":114284,"line_start":230,"line_end":230,"column_start":17,"column_end":22},"name":"label","qualname":"::expr::ExprWhile::label","value":"std::option::Option<expr::Label>","parent":{"krate":0,"index":5861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5864},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114317,"byte_end":114328,"line_start":231,"line_end":231,"column_start":17,"column_end":28},"name":"while_token","qualname":"::expr::ExprWhile::while_token","value":"token::While","parent":{"krate":0,"index":5861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5865},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114361,"byte_end":114365,"line_start":232,"line_end":232,"column_start":17,"column_end":21},"name":"cond","qualname":"::expr::ExprWhile::cond","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5866},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114394,"byte_end":114398,"line_start":233,"line_end":233,"column_start":17,"column_end":21},"name":"body","qualname":"::expr::ExprWhile::body","value":"expr::Block","parent":{"krate":0,"index":5861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5869},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114583,"byte_end":114594,"line_start":239,"line_end":239,"column_start":21,"column_end":32},"name":"ExprForLoop","qualname":"::expr::ExprForLoop","value":"ExprForLoop { attrs, label, for_token, pat, in_token, expr, body }","parent":null,"children":[{"krate":0,"index":5870},{"krate":0,"index":5871},{"krate":0,"index":5872},{"krate":0,"index":5873},{"krate":0,"index":5874},{"krate":0,"index":5875},{"krate":0,"index":5876}],"decl_id":null,"docs":" A for loop: `for pat in expr { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5870},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114619,"byte_end":114624,"line_start":240,"line_end":240,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprForLoop::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5871},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114658,"byte_end":114663,"line_start":241,"line_end":241,"column_start":17,"column_end":22},"name":"label","qualname":"::expr::ExprForLoop::label","value":"std::option::Option<expr::Label>","parent":{"krate":0,"index":5869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5872},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114696,"byte_end":114705,"line_start":242,"line_end":242,"column_start":17,"column_end":26},"name":"for_token","qualname":"::expr::ExprForLoop::for_token","value":"token::For","parent":{"krate":0,"index":5869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5873},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114736,"byte_end":114739,"line_start":243,"line_end":243,"column_start":17,"column_end":20},"name":"pat","qualname":"::expr::ExprForLoop::pat","value":"std::boxed::Box<expr::Pat>","parent":{"krate":0,"index":5869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5874},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114767,"byte_end":114775,"line_start":244,"line_end":244,"column_start":17,"column_end":25},"name":"in_token","qualname":"::expr::ExprForLoop::in_token","value":"token::In","parent":{"krate":0,"index":5869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5875},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114805,"byte_end":114809,"line_start":245,"line_end":245,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprForLoop::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5876},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114838,"byte_end":114842,"line_start":246,"line_end":246,"column_start":17,"column_end":21},"name":"body","qualname":"::expr::ExprForLoop::body","value":"expr::Block","parent":{"krate":0,"index":5869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5879},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115021,"byte_end":115029,"line_start":252,"line_end":252,"column_start":18,"column_end":26},"name":"ExprLoop","qualname":"::expr::ExprLoop","value":"ExprLoop { attrs, label, loop_token, body }","parent":null,"children":[{"krate":0,"index":5880},{"krate":0,"index":5881},{"krate":0,"index":5882},{"krate":0,"index":5883}],"decl_id":null,"docs":" Conditionless loop: `loop { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5880},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115054,"byte_end":115059,"line_start":253,"line_end":253,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprLoop::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5881},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115093,"byte_end":115098,"line_start":254,"line_end":254,"column_start":17,"column_end":22},"name":"label","qualname":"::expr::ExprLoop::label","value":"std::option::Option<expr::Label>","parent":{"krate":0,"index":5879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5882},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115131,"byte_end":115141,"line_start":255,"line_end":255,"column_start":17,"column_end":27},"name":"loop_token","qualname":"::expr::ExprLoop::loop_token","value":"token::Loop","parent":{"krate":0,"index":5879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5883},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115173,"byte_end":115177,"line_start":256,"line_end":256,"column_start":17,"column_end":21},"name":"body","qualname":"::expr::ExprLoop::body","value":"expr::Block","parent":{"krate":0,"index":5879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5886},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115384,"byte_end":115393,"line_start":262,"line_end":262,"column_start":19,"column_end":28},"name":"ExprMatch","qualname":"::expr::ExprMatch","value":"ExprMatch { attrs, match_token, expr, brace_token, arms }","parent":null,"children":[{"krate":0,"index":5887},{"krate":0,"index":5888},{"krate":0,"index":5889},{"krate":0,"index":5890},{"krate":0,"index":5891}],"decl_id":null,"docs":" A `match` expression: `match n { Some(n) => {}, None => {} }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5887},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115418,"byte_end":115423,"line_start":263,"line_end":263,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprMatch::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5888},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115457,"byte_end":115468,"line_start":264,"line_end":264,"column_start":17,"column_end":28},"name":"match_token","qualname":"::expr::ExprMatch::match_token","value":"token::Match","parent":{"krate":0,"index":5886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5889},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115501,"byte_end":115505,"line_start":265,"line_end":265,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprMatch::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5890},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115534,"byte_end":115545,"line_start":266,"line_end":266,"column_start":17,"column_end":28},"name":"brace_token","qualname":"::expr::ExprMatch::brace_token","value":"token::Brace","parent":{"krate":0,"index":5886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5891},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115577,"byte_end":115581,"line_start":267,"line_end":267,"column_start":17,"column_end":21},"name":"arms","qualname":"::expr::ExprMatch::arms","value":"std::vec::Vec<expr::Arm>","parent":{"krate":0,"index":5886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5894},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115768,"byte_end":115779,"line_start":273,"line_end":273,"column_start":21,"column_end":32},"name":"ExprClosure","qualname":"::expr::ExprClosure","value":"ExprClosure { attrs, asyncness, movability, capture, or1_token, inputs, or2_token, output, body }","parent":null,"children":[{"krate":0,"index":5895},{"krate":0,"index":5896},{"krate":0,"index":5897},{"krate":0,"index":5898},{"krate":0,"index":5899},{"krate":0,"index":5900},{"krate":0,"index":5901},{"krate":0,"index":5902},{"krate":0,"index":5903}],"decl_id":null,"docs":" A closure expression: `|a, b| a + b`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5895},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115804,"byte_end":115809,"line_start":274,"line_end":274,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprClosure::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5896},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115843,"byte_end":115852,"line_start":275,"line_end":275,"column_start":17,"column_end":26},"name":"asyncness","qualname":"::expr::ExprClosure::asyncness","value":"std::option::Option<token::Async>","parent":{"krate":0,"index":5894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5897},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115893,"byte_end":115903,"line_start":276,"line_end":276,"column_start":17,"column_end":27},"name":"movability","qualname":"::expr::ExprClosure::movability","value":"std::option::Option<token::Static>","parent":{"krate":0,"index":5894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5898},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115945,"byte_end":115952,"line_start":277,"line_end":277,"column_start":17,"column_end":24},"name":"capture","qualname":"::expr::ExprClosure::capture","value":"std::option::Option<token::Move>","parent":{"krate":0,"index":5894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5899},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115992,"byte_end":116001,"line_start":278,"line_end":278,"column_start":17,"column_end":26},"name":"or1_token","qualname":"::expr::ExprClosure::or1_token","value":"token::Or","parent":{"krate":0,"index":5894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5900},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116030,"byte_end":116036,"line_start":279,"line_end":279,"column_start":17,"column_end":23},"name":"inputs","qualname":"::expr::ExprClosure::inputs","value":"punctuated::Punctuated<item::FnArg, token::Comma>","parent":{"krate":0,"index":5894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5901},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116084,"byte_end":116093,"line_start":280,"line_end":280,"column_start":17,"column_end":26},"name":"or2_token","qualname":"::expr::ExprClosure::or2_token","value":"token::Or","parent":{"krate":0,"index":5894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5902},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116122,"byte_end":116128,"line_start":281,"line_end":281,"column_start":17,"column_end":23},"name":"output","qualname":"::expr::ExprClosure::output","value":"ty::ReturnType","parent":{"krate":0,"index":5894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5903},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116158,"byte_end":116162,"line_start":282,"line_end":282,"column_start":17,"column_end":21},"name":"body","qualname":"::expr::ExprClosure::body","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5906},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116346,"byte_end":116356,"line_start":288,"line_end":288,"column_start":20,"column_end":30},"name":"ExprUnsafe","qualname":"::expr::ExprUnsafe","value":"ExprUnsafe { attrs, unsafe_token, block }","parent":null,"children":[{"krate":0,"index":5907},{"krate":0,"index":5908},{"krate":0,"index":5909}],"decl_id":null,"docs":" An unsafe block: `unsafe { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5907},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116381,"byte_end":116386,"line_start":289,"line_end":289,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprUnsafe::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5908},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116420,"byte_end":116432,"line_start":290,"line_end":290,"column_start":17,"column_end":29},"name":"unsafe_token","qualname":"::expr::ExprUnsafe::unsafe_token","value":"token::Unsafe","parent":{"krate":0,"index":5906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5909},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116466,"byte_end":116471,"line_start":291,"line_end":291,"column_start":17,"column_end":22},"name":"block","qualname":"::expr::ExprUnsafe::block","value":"expr::Block","parent":{"krate":0,"index":5906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5912},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116643,"byte_end":116652,"line_start":297,"line_end":297,"column_start":19,"column_end":28},"name":"ExprBlock","qualname":"::expr::ExprBlock","value":"ExprBlock { attrs, label, block }","parent":null,"children":[{"krate":0,"index":5913},{"krate":0,"index":5914},{"krate":0,"index":5915}],"decl_id":null,"docs":" A blocked scope: `{ ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5913},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116677,"byte_end":116682,"line_start":298,"line_end":298,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprBlock::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5914},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116716,"byte_end":116721,"line_start":299,"line_end":299,"column_start":17,"column_end":22},"name":"label","qualname":"::expr::ExprBlock::label","value":"std::option::Option<expr::Label>","parent":{"krate":0,"index":5912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5915},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116754,"byte_end":116759,"line_start":300,"line_end":300,"column_start":17,"column_end":22},"name":"block","qualname":"::expr::ExprBlock::block","value":"expr::Block","parent":{"krate":0,"index":5912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5918},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116947,"byte_end":116957,"line_start":306,"line_end":306,"column_start":20,"column_end":30},"name":"ExprAssign","qualname":"::expr::ExprAssign","value":"ExprAssign { attrs, left, eq_token, right }","parent":null,"children":[{"krate":0,"index":5919},{"krate":0,"index":5920},{"krate":0,"index":5921},{"krate":0,"index":5922}],"decl_id":null,"docs":" An assignment expression: `a = compute()`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5919},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116982,"byte_end":116987,"line_start":307,"line_end":307,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprAssign::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5918},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5920},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117021,"byte_end":117025,"line_start":308,"line_end":308,"column_start":17,"column_end":21},"name":"left","qualname":"::expr::ExprAssign::left","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5918},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5921},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117054,"byte_end":117062,"line_start":309,"line_end":309,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::expr::ExprAssign::eq_token","value":"token::Eq","parent":{"krate":0,"index":5918},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5922},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117091,"byte_end":117096,"line_start":310,"line_end":310,"column_start":17,"column_end":22},"name":"right","qualname":"::expr::ExprAssign::right","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5918},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5925},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117297,"byte_end":117309,"line_start":316,"line_end":316,"column_start":22,"column_end":34},"name":"ExprAssignOp","qualname":"::expr::ExprAssignOp","value":"ExprAssignOp { attrs, left, op, right }","parent":null,"children":[{"krate":0,"index":5926},{"krate":0,"index":5927},{"krate":0,"index":5928},{"krate":0,"index":5929}],"decl_id":null,"docs":" A compound assignment expression: `counter += 1`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5926},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117334,"byte_end":117339,"line_start":317,"line_end":317,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprAssignOp::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5925},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5927},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117373,"byte_end":117377,"line_start":318,"line_end":318,"column_start":17,"column_end":21},"name":"left","qualname":"::expr::ExprAssignOp::left","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5925},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5928},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117406,"byte_end":117408,"line_start":319,"line_end":319,"column_start":17,"column_end":19},"name":"op","qualname":"::expr::ExprAssignOp::op","value":"op::BinOp","parent":{"krate":0,"index":5925},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5929},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117433,"byte_end":117438,"line_start":320,"line_end":320,"column_start":17,"column_end":22},"name":"right","qualname":"::expr::ExprAssignOp::right","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5925},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5932},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117680,"byte_end":117689,"line_start":327,"line_end":327,"column_start":19,"column_end":28},"name":"ExprField","qualname":"::expr::ExprField","value":"ExprField { attrs, base, dot_token, member }","parent":null,"children":[{"krate":0,"index":5933},{"krate":0,"index":5934},{"krate":0,"index":5935},{"krate":0,"index":5936}],"decl_id":null,"docs":" Access of a named struct field (`obj.k`) or unnamed tuple struct\n field (`obj.0`).\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5933},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117708,"byte_end":117713,"line_start":328,"line_end":328,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprField::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5934},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117747,"byte_end":117751,"line_start":329,"line_end":329,"column_start":17,"column_end":21},"name":"base","qualname":"::expr::ExprField::base","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5935},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117780,"byte_end":117789,"line_start":330,"line_end":330,"column_start":17,"column_end":26},"name":"dot_token","qualname":"::expr::ExprField::dot_token","value":"token::Dot","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5936},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117818,"byte_end":117824,"line_start":331,"line_end":331,"column_start":17,"column_end":23},"name":"member","qualname":"::expr::ExprField::member","value":"expr::Member","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5939},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118048,"byte_end":118057,"line_start":338,"line_end":338,"column_start":19,"column_end":28},"name":"ExprIndex","qualname":"::expr::ExprIndex","value":"ExprIndex { attrs, expr, bracket_token, index }","parent":null,"children":[{"krate":0,"index":5940},{"krate":0,"index":5941},{"krate":0,"index":5942},{"krate":0,"index":5943}],"decl_id":null,"docs":" A square bracketed indexing expression: `vector[2]`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5940},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118076,"byte_end":118081,"line_start":339,"line_end":339,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprIndex::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5941},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118115,"byte_end":118119,"line_start":340,"line_end":340,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprIndex::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5942},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118148,"byte_end":118161,"line_start":341,"line_end":341,"column_start":17,"column_end":30},"name":"bracket_token","qualname":"::expr::ExprIndex::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":5939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5943},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118195,"byte_end":118200,"line_start":342,"line_end":342,"column_start":17,"column_end":22},"name":"index","qualname":"::expr::ExprIndex::index","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5946},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118407,"byte_end":118416,"line_start":348,"line_end":348,"column_start":19,"column_end":28},"name":"ExprRange","qualname":"::expr::ExprRange","value":"ExprRange { attrs, from, limits, to }","parent":null,"children":[{"krate":0,"index":5947},{"krate":0,"index":5948},{"krate":0,"index":5949},{"krate":0,"index":5950}],"decl_id":null,"docs":" A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5947},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118441,"byte_end":118446,"line_start":349,"line_end":349,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprRange::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5946},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5948},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118480,"byte_end":118484,"line_start":350,"line_end":350,"column_start":17,"column_end":21},"name":"from","qualname":"::expr::ExprRange::from","value":"std::option::Option<std::boxed::Box<expr::Expr>>","parent":{"krate":0,"index":5946},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5949},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118521,"byte_end":118527,"line_start":351,"line_end":351,"column_start":17,"column_end":23},"name":"limits","qualname":"::expr::ExprRange::limits","value":"expr::RangeLimits","parent":{"krate":0,"index":5946},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5950},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118558,"byte_end":118560,"line_start":352,"line_end":352,"column_start":17,"column_end":19},"name":"to","qualname":"::expr::ExprRange::to","value":"std::option::Option<std::boxed::Box<expr::Expr>>","parent":{"krate":0,"index":5946},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5953},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118926,"byte_end":118934,"line_start":362,"line_end":362,"column_start":18,"column_end":26},"name":"ExprPath","qualname":"::expr::ExprPath","value":"ExprPath { attrs, qself, path }","parent":null,"children":[{"krate":0,"index":5954},{"krate":0,"index":5955},{"krate":0,"index":5956}],"decl_id":null,"docs":" A path like `std::mem::replace` possibly containing generic\n parameters and a qualified self-type.\n\n A plain identifier like `x` is a path of length 1.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5954},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118953,"byte_end":118958,"line_start":363,"line_end":363,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprPath::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5955},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118992,"byte_end":118997,"line_start":364,"line_end":364,"column_start":17,"column_end":22},"name":"qself","qualname":"::expr::ExprPath::qself","value":"std::option::Option<path::QSelf>","parent":{"krate":0,"index":5953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5956},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119030,"byte_end":119034,"line_start":365,"line_end":365,"column_start":17,"column_end":21},"name":"path","qualname":"::expr::ExprPath::path","value":"path::Path","parent":{"krate":0,"index":5953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5959},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119224,"byte_end":119237,"line_start":371,"line_end":371,"column_start":23,"column_end":36},"name":"ExprReference","qualname":"::expr::ExprReference","value":"ExprReference { attrs, and_token, mutability, expr }","parent":null,"children":[{"krate":0,"index":5960},{"krate":0,"index":5961},{"krate":0,"index":5962},{"krate":0,"index":5963}],"decl_id":null,"docs":" A referencing operation: `&a` or `&mut a`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5960},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119262,"byte_end":119267,"line_start":372,"line_end":372,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprReference::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5961},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119301,"byte_end":119310,"line_start":373,"line_end":373,"column_start":17,"column_end":26},"name":"and_token","qualname":"::expr::ExprReference::and_token","value":"token::And","parent":{"krate":0,"index":5959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5962},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119339,"byte_end":119349,"line_start":374,"line_end":374,"column_start":17,"column_end":27},"name":"mutability","qualname":"::expr::ExprReference::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":5959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5963},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119388,"byte_end":119392,"line_start":375,"line_end":375,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprReference::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5966},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119623,"byte_end":119632,"line_start":382,"line_end":382,"column_start":19,"column_end":28},"name":"ExprBreak","qualname":"::expr::ExprBreak","value":"ExprBreak { attrs, break_token, label, expr }","parent":null,"children":[{"krate":0,"index":5967},{"krate":0,"index":5968},{"krate":0,"index":5969},{"krate":0,"index":5970}],"decl_id":null,"docs":" A `break`, with an optional label to break and an optional\n expression.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5967},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119657,"byte_end":119662,"line_start":383,"line_end":383,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprBreak::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5968},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119696,"byte_end":119707,"line_start":384,"line_end":384,"column_start":17,"column_end":28},"name":"break_token","qualname":"::expr::ExprBreak::break_token","value":"token::Break","parent":{"krate":0,"index":5966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5969},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119740,"byte_end":119745,"line_start":385,"line_end":385,"column_start":17,"column_end":22},"name":"label","qualname":"::expr::ExprBreak::label","value":"std::option::Option<lifetime::Lifetime>","parent":{"krate":0,"index":5966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5970},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119781,"byte_end":119785,"line_start":386,"line_end":386,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprBreak::expr","value":"std::option::Option<std::boxed::Box<expr::Expr>>","parent":{"krate":0,"index":5966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5973},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119982,"byte_end":119994,"line_start":392,"line_end":392,"column_start":22,"column_end":34},"name":"ExprContinue","qualname":"::expr::ExprContinue","value":"ExprContinue { attrs, continue_token, label }","parent":null,"children":[{"krate":0,"index":5974},{"krate":0,"index":5975},{"krate":0,"index":5976}],"decl_id":null,"docs":" A `continue`, with an optional label.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5974},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":120019,"byte_end":120024,"line_start":393,"line_end":393,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprContinue::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5973},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5975},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":120058,"byte_end":120072,"line_start":394,"line_end":394,"column_start":17,"column_end":31},"name":"continue_token","qualname":"::expr::ExprContinue::continue_token","value":"token::Continue","parent":{"krate":0,"index":5973},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5976},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":120108,"byte_end":120113,"line_start":395,"line_end":395,"column_start":17,"column_end":22},"name":"label","qualname":"::expr::ExprContinue::label","value":"std::option::Option<lifetime::Lifetime>","parent":{"krate":0,"index":5973},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5979},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":120320,"byte_end":120330,"line_start":401,"line_end":401,"column_start":20,"column_end":30},"name":"ExprReturn","qualname":"::expr::ExprReturn","value":"ExprReturn { attrs, return_token, expr }","parent":null,"children":[{"krate":0,"index":5980},{"krate":0,"index":5981},{"krate":0,"index":5982}],"decl_id":null,"docs":" A `return`, with an optional value to be returned.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5980},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":120355,"byte_end":120360,"line_start":402,"line_end":402,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprReturn::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5981},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":120394,"byte_end":120406,"line_start":403,"line_end":403,"column_start":17,"column_end":29},"name":"return_token","qualname":"::expr::ExprReturn::return_token","value":"token::Return","parent":{"krate":0,"index":5979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5982},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":120440,"byte_end":120444,"line_start":404,"line_end":404,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprReturn::expr","value":"std::option::Option<std::boxed::Box<expr::Expr>>","parent":{"krate":0,"index":5979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5985},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":120651,"byte_end":120660,"line_start":410,"line_end":410,"column_start":19,"column_end":28},"name":"ExprMacro","qualname":"::expr::ExprMacro","value":"ExprMacro { attrs, mac }","parent":null,"children":[{"krate":0,"index":5986},{"krate":0,"index":5987}],"decl_id":null,"docs":" A macro invocation expression: `format!(\"{}\", q)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5986},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":120685,"byte_end":120690,"line_start":411,"line_end":411,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprMacro::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5987},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":120724,"byte_end":120727,"line_start":412,"line_end":412,"column_start":17,"column_end":20},"name":"mac","qualname":"::expr::ExprMacro::mac","value":"mac::Macro","parent":{"krate":0,"index":5985},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5990},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121049,"byte_end":121059,"line_start":421,"line_end":421,"column_start":20,"column_end":30},"name":"ExprStruct","qualname":"::expr::ExprStruct","value":"ExprStruct { attrs, path, brace_token, fields, dot2_token, rest }","parent":null,"children":[{"krate":0,"index":5991},{"krate":0,"index":5992},{"krate":0,"index":5993},{"krate":0,"index":5994},{"krate":0,"index":5995},{"krate":0,"index":5996}],"decl_id":null,"docs":" A struct literal expression: `Point { x: 1, y: 1 }`.\n\n The `rest` provides the value of the remaining fields as in `S { a:\n 1, b: 1, ..rest }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5991},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121084,"byte_end":121089,"line_start":422,"line_end":422,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprStruct::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5992},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121123,"byte_end":121127,"line_start":423,"line_end":423,"column_start":17,"column_end":21},"name":"path","qualname":"::expr::ExprStruct::path","value":"path::Path","parent":{"krate":0,"index":5990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5993},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121151,"byte_end":121162,"line_start":424,"line_end":424,"column_start":17,"column_end":28},"name":"brace_token","qualname":"::expr::ExprStruct::brace_token","value":"token::Brace","parent":{"krate":0,"index":5990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5994},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121194,"byte_end":121200,"line_start":425,"line_end":425,"column_start":17,"column_end":23},"name":"fields","qualname":"::expr::ExprStruct::fields","value":"punctuated::Punctuated<expr::FieldValue, token::Comma>","parent":{"krate":0,"index":5990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5995},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121253,"byte_end":121263,"line_start":426,"line_end":426,"column_start":17,"column_end":27},"name":"dot2_token","qualname":"::expr::ExprStruct::dot2_token","value":"std::option::Option<token::Dot2>","parent":{"krate":0,"index":5990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5996},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121301,"byte_end":121305,"line_start":427,"line_end":427,"column_start":17,"column_end":21},"name":"rest","qualname":"::expr::ExprStruct::rest","value":"std::option::Option<std::boxed::Box<expr::Expr>>","parent":{"krate":0,"index":5990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5999},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121530,"byte_end":121540,"line_start":433,"line_end":433,"column_start":20,"column_end":30},"name":"ExprRepeat","qualname":"::expr::ExprRepeat","value":"ExprRepeat { attrs, bracket_token, expr, semi_token, len }","parent":null,"children":[{"krate":0,"index":6000},{"krate":0,"index":6001},{"krate":0,"index":6002},{"krate":0,"index":6003},{"krate":0,"index":6004}],"decl_id":null,"docs":" An array literal constructed from one repeated element: `[0u8; N]`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6000},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121565,"byte_end":121570,"line_start":434,"line_end":434,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprRepeat::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6001},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121604,"byte_end":121617,"line_start":435,"line_end":435,"column_start":17,"column_end":30},"name":"bracket_token","qualname":"::expr::ExprRepeat::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":5999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6002},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121651,"byte_end":121655,"line_start":436,"line_end":436,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprRepeat::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6003},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121684,"byte_end":121694,"line_start":437,"line_end":437,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::expr::ExprRepeat::semi_token","value":"token::Semi","parent":{"krate":0,"index":5999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6004},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121723,"byte_end":121726,"line_start":438,"line_end":438,"column_start":17,"column_end":20},"name":"len","qualname":"::expr::ExprRepeat::len","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6007},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121913,"byte_end":121922,"line_start":444,"line_end":444,"column_start":19,"column_end":28},"name":"ExprParen","qualname":"::expr::ExprParen","value":"ExprParen { attrs, paren_token, expr }","parent":null,"children":[{"krate":0,"index":6008},{"krate":0,"index":6009},{"krate":0,"index":6010}],"decl_id":null,"docs":" A parenthesized expression: `(a + b)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6008},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121941,"byte_end":121946,"line_start":445,"line_end":445,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprParen::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6009},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121980,"byte_end":121991,"line_start":446,"line_end":446,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::expr::ExprParen::paren_token","value":"token::Paren","parent":{"krate":0,"index":6007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6010},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":122023,"byte_end":122027,"line_start":447,"line_end":447,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprParen::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":6007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6013},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":122421,"byte_end":122430,"line_start":457,"line_end":457,"column_start":19,"column_end":28},"name":"ExprGroup","qualname":"::expr::ExprGroup","value":"ExprGroup { attrs, group_token, expr }","parent":null,"children":[{"krate":0,"index":6014},{"krate":0,"index":6015},{"krate":0,"index":6016}],"decl_id":null,"docs":" An expression contained within invisible delimiters.\n\n This variant is important for faithfully representing the precedence\n of expressions and is related to `None`-delimited spans in a\n `TokenStream`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6014},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":122455,"byte_end":122460,"line_start":458,"line_end":458,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprGroup::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6015},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":122494,"byte_end":122505,"line_start":459,"line_end":459,"column_start":17,"column_end":28},"name":"group_token","qualname":"::expr::ExprGroup::group_token","value":"token::Group","parent":{"krate":0,"index":6013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6016},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":122537,"byte_end":122541,"line_start":460,"line_end":460,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprGroup::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":6013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6019},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":122714,"byte_end":122721,"line_start":466,"line_end":466,"column_start":17,"column_end":24},"name":"ExprTry","qualname":"::expr::ExprTry","value":"ExprTry { attrs, expr, question_token }","parent":null,"children":[{"krate":0,"index":6020},{"krate":0,"index":6021},{"krate":0,"index":6022}],"decl_id":null,"docs":" A try-expression: `expr?`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6020},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":122746,"byte_end":122751,"line_start":467,"line_end":467,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprTry::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6021},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":122785,"byte_end":122789,"line_start":468,"line_end":468,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprTry::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":6019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6022},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":122818,"byte_end":122832,"line_start":469,"line_end":469,"column_start":17,"column_end":31},"name":"question_token","qualname":"::expr::ExprTry::question_token","value":"token::Question","parent":{"krate":0,"index":6019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6025},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123013,"byte_end":123022,"line_start":475,"line_end":475,"column_start":19,"column_end":28},"name":"ExprAsync","qualname":"::expr::ExprAsync","value":"ExprAsync { attrs, async_token, capture, block }","parent":null,"children":[{"krate":0,"index":6026},{"krate":0,"index":6027},{"krate":0,"index":6028},{"krate":0,"index":6029}],"decl_id":null,"docs":" An async block: `async { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6026},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123047,"byte_end":123052,"line_start":476,"line_end":476,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprAsync::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6025},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6027},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123086,"byte_end":123097,"line_start":477,"line_end":477,"column_start":17,"column_end":28},"name":"async_token","qualname":"::expr::ExprAsync::async_token","value":"token::Async","parent":{"krate":0,"index":6025},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6028},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123130,"byte_end":123137,"line_start":478,"line_end":478,"column_start":17,"column_end":24},"name":"capture","qualname":"::expr::ExprAsync::capture","value":"std::option::Option<token::Move>","parent":{"krate":0,"index":6025},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6029},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123177,"byte_end":123182,"line_start":479,"line_end":479,"column_start":17,"column_end":22},"name":"block","qualname":"::expr::ExprAsync::block","value":"expr::Block","parent":{"krate":0,"index":6025},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6032},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123357,"byte_end":123369,"line_start":485,"line_end":485,"column_start":22,"column_end":34},"name":"ExprTryBlock","qualname":"::expr::ExprTryBlock","value":"ExprTryBlock { attrs, try_token, block }","parent":null,"children":[{"krate":0,"index":6033},{"krate":0,"index":6034},{"krate":0,"index":6035}],"decl_id":null,"docs":" A try block: `try { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6033},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123394,"byte_end":123399,"line_start":486,"line_end":486,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprTryBlock::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6032},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6034},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123433,"byte_end":123442,"line_start":487,"line_end":487,"column_start":17,"column_end":26},"name":"try_token","qualname":"::expr::ExprTryBlock::try_token","value":"token::Try","parent":{"krate":0,"index":6032},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6035},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123473,"byte_end":123478,"line_start":488,"line_end":488,"column_start":17,"column_end":22},"name":"block","qualname":"::expr::ExprTryBlock::block","value":"expr::Block","parent":{"krate":0,"index":6032},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6038},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123656,"byte_end":123665,"line_start":494,"line_end":494,"column_start":19,"column_end":28},"name":"ExprYield","qualname":"::expr::ExprYield","value":"ExprYield { attrs, yield_token, expr }","parent":null,"children":[{"krate":0,"index":6039},{"krate":0,"index":6040},{"krate":0,"index":6041}],"decl_id":null,"docs":" A yield expression: `yield expr`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25520,"byte_end":25544,"line_start":7,"line_end":7,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6039},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123690,"byte_end":123695,"line_start":495,"line_end":495,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprYield::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6040},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123729,"byte_end":123740,"line_start":496,"line_end":496,"column_start":17,"column_end":28},"name":"yield_token","qualname":"::expr::ExprYield::yield_token","value":"token::Yield","parent":{"krate":0,"index":6038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6041},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123773,"byte_end":123777,"line_start":497,"line_end":497,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprYield::expr","value":"std::option::Option<std::boxed::Box<expr::Expr>>","parent":{"krate":0,"index":6038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6044},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":124016,"byte_end":124028,"line_start":504,"line_end":504,"column_start":22,"column_end":34},"name":"ExprVerbatim","qualname":"::expr::ExprVerbatim","value":"ExprVerbatim { tts }","parent":null,"children":[{"krate":0,"index":6045}],"decl_id":null,"docs":" Tokens in expression position not interpreted by Syn.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6045},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":124068,"byte_end":124071,"line_start":505,"line_end":505,"column_start":17,"column_end":20},"name":"tts","qualname":"::expr::ExprVerbatim::tts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":6044},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6051},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":127417,"byte_end":127422,"line_start":586,"line_end":586,"column_start":9,"column_end":14},"name":"Named","qualname":"::expr::Member::Named","value":"Member::Named(Ident)","parent":{"krate":0,"index":6050},"children":[],"decl_id":null,"docs":" A named field like `self.x`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6054},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":127483,"byte_end":127490,"line_start":588,"line_end":588,"column_start":9,"column_end":16},"name":"Unnamed","qualname":"::expr::Member::Unnamed","value":"Member::Unnamed(Index)","parent":{"krate":0,"index":6050},"children":[],"decl_id":null,"docs":" An unnamed field like `self.0`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6050},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":127359,"byte_end":127365,"line_start":584,"line_end":584,"column_start":14,"column_end":20},"name":"Member","qualname":"::expr::Member","value":"Member::{Named, Unnamed}","parent":null,"children":[{"krate":0,"index":6051},{"krate":0,"index":6054}],"decl_id":null,"docs":" A struct or tuple struct field accessed in a struct literal or field\n expression.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6059},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":127695,"byte_end":127700,"line_start":597,"line_end":597,"column_start":16,"column_end":21},"name":"Index","qualname":"::expr::Index","value":"Index { index, span }","parent":null,"children":[{"krate":0,"index":6060},{"krate":0,"index":6061}],"decl_id":null,"docs":" The index of an unnamed tuple struct field.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6060},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":127736,"byte_end":127741,"line_start":598,"line_end":598,"column_start":13,"column_end":18},"name":"index","qualname":"::expr::Index::index","value":"u32","parent":{"krate":0,"index":6059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6061},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":127760,"byte_end":127764,"line_start":599,"line_end":599,"column_start":13,"column_end":17},"name":"span","qualname":"::expr::Index::span","value":"proc_macro2::Span","parent":{"krate":0,"index":6059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6064},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":128579,"byte_end":128594,"line_start":636,"line_end":636,"column_start":16,"column_end":31},"name":"MethodTurbofish","qualname":"::expr::MethodTurbofish","value":"MethodTurbofish { colon2_token, lt_token, args, gt_token }","parent":null,"children":[{"krate":0,"index":6065},{"krate":0,"index":6066},{"krate":0,"index":6067},{"krate":0,"index":6068}],"decl_id":null,"docs":" The `::<>` explicit type parameters passed to a method call:\n `parse::<u64>()`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6065},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":128609,"byte_end":128621,"line_start":637,"line_end":637,"column_start":13,"column_end":25},"name":"colon2_token","qualname":"::expr::MethodTurbofish::colon2_token","value":"token::Colon2","parent":{"krate":0,"index":6064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6066},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":128647,"byte_end":128655,"line_start":638,"line_end":638,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::expr::MethodTurbofish::lt_token","value":"token::Lt","parent":{"krate":0,"index":6064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6067},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":128680,"byte_end":128684,"line_start":639,"line_end":639,"column_start":13,"column_end":17},"name":"args","qualname":"::expr::MethodTurbofish::args","value":"punctuated::Punctuated<expr::GenericMethodArgument, token::Comma>","parent":{"krate":0,"index":6064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6068},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":128744,"byte_end":128752,"line_start":640,"line_end":640,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::expr::MethodTurbofish::gt_token","value":"token::Gt","parent":{"krate":0,"index":6064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6072},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":129031,"byte_end":129035,"line_start":651,"line_end":651,"column_start":9,"column_end":13},"name":"Type","qualname":"::expr::GenericMethodArgument::Type","value":"GenericMethodArgument::Type(Type)","parent":{"krate":0,"index":6071},"children":[],"decl_id":null,"docs":" A type argument.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6075},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":129253,"byte_end":129258,"line_start":656,"line_end":656,"column_start":9,"column_end":14},"name":"Const","qualname":"::expr::GenericMethodArgument::Const","value":"GenericMethodArgument::Const(Expr)","parent":{"krate":0,"index":6071},"children":[],"decl_id":null,"docs":" A const expression. Must be inside of a block.\n\n NOTE: Identity expressions are represented as Type arguments, as\n they are indistinguishable syntactically.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6071},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":128970,"byte_end":128991,"line_start":649,"line_end":649,"column_start":14,"column_end":35},"name":"GenericMethodArgument","qualname":"::expr::GenericMethodArgument","value":"GenericMethodArgument::{Type, Const}","parent":null,"children":[{"krate":0,"index":6072},{"krate":0,"index":6075}],"decl_id":null,"docs":" An individual generic argument to a method, like `T`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6080},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":129461,"byte_end":129471,"line_start":665,"line_end":665,"column_start":16,"column_end":26},"name":"FieldValue","qualname":"::expr::FieldValue","value":"FieldValue { attrs, member, colon_token, expr }","parent":null,"children":[{"krate":0,"index":6081},{"krate":0,"index":6082},{"krate":0,"index":6083},{"krate":0,"index":6084}],"decl_id":null,"docs":" A field-value pair in a struct literal.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6081},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":129530,"byte_end":129535,"line_start":667,"line_end":667,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::FieldValue::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6080},"children":[],"decl_id":null,"docs":" Attributes tagged on the field.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6082},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":129606,"byte_end":129612,"line_start":670,"line_end":670,"column_start":13,"column_end":19},"name":"member","qualname":"::expr::FieldValue::member","value":"expr::Member","parent":{"krate":0,"index":6080},"children":[],"decl_id":null,"docs":" Name or index of the field.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6083},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":129755,"byte_end":129766,"line_start":674,"line_end":674,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::expr::FieldValue::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":6080},"children":[],"decl_id":null,"docs":" The colon in `Struct { x: x }`. If written in shorthand like\n `Struct { x }`, there is no colon.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6084},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":129832,"byte_end":129836,"line_start":677,"line_end":677,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::FieldValue::expr","value":"expr::Expr","parent":{"krate":0,"index":6080},"children":[],"decl_id":null,"docs":" Value of the field.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6087},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":130048,"byte_end":130053,"line_start":686,"line_end":686,"column_start":16,"column_end":21},"name":"Label","qualname":"::expr::Label","value":"Label { name, colon_token }","parent":null,"children":[{"krate":0,"index":6088},{"krate":0,"index":6089}],"decl_id":null,"docs":" A lifetime labeling a `for`, `while`, or `loop`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6088},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":130068,"byte_end":130072,"line_start":687,"line_end":687,"column_start":13,"column_end":17},"name":"name","qualname":"::expr::Label::name","value":"lifetime::Lifetime","parent":{"krate":0,"index":6087},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6089},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":130096,"byte_end":130107,"line_start":688,"line_end":688,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::expr::Label::colon_token","value":"token::Colon","parent":{"krate":0,"index":6087},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6092},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":130318,"byte_end":130323,"line_start":697,"line_end":697,"column_start":16,"column_end":21},"name":"Block","qualname":"::expr::Block","value":"Block { brace_token, stmts }","parent":null,"children":[{"krate":0,"index":6093},{"krate":0,"index":6094}],"decl_id":null,"docs":" A braced block containing Rust statements.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6093},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":130338,"byte_end":130349,"line_start":698,"line_end":698,"column_start":13,"column_end":24},"name":"brace_token","qualname":"::expr::Block::brace_token","value":"token::Brace","parent":{"krate":0,"index":6092},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6094},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":130411,"byte_end":130416,"line_start":700,"line_end":700,"column_start":13,"column_end":18},"name":"stmts","qualname":"::expr::Block::stmts","value":"std::vec::Vec<expr::Stmt>","parent":{"krate":0,"index":6092},"children":[],"decl_id":null,"docs":" Statements in a block\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6098},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":130674,"byte_end":130679,"line_start":711,"line_end":711,"column_start":9,"column_end":14},"name":"Local","qualname":"::expr::Stmt::Local","value":"Stmt::Local(Local)","parent":{"krate":0,"index":6097},"children":[],"decl_id":null,"docs":" A local (let) binding.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6101},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":130729,"byte_end":130733,"line_start":714,"line_end":714,"column_start":9,"column_end":13},"name":"Item","qualname":"::expr::Stmt::Item","value":"Stmt::Item(Item)","parent":{"krate":0,"index":6097},"children":[],"decl_id":null,"docs":" An item definition.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6104},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":130795,"byte_end":130799,"line_start":717,"line_end":717,"column_start":9,"column_end":13},"name":"Expr","qualname":"::expr::Stmt::Expr","value":"Stmt::Expr(Expr)","parent":{"krate":0,"index":6097},"children":[],"decl_id":null,"docs":" Expr without trailing semicolon.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6107},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":130864,"byte_end":130868,"line_start":720,"line_end":720,"column_start":9,"column_end":13},"name":"Semi","qualname":"::expr::Stmt::Semi","value":"Stmt::Semi(Expr, crate::token::Semi)","parent":{"krate":0,"index":6097},"children":[],"decl_id":null,"docs":" Expression with trailing semicolon.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6097},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":130624,"byte_end":130628,"line_start":709,"line_end":709,"column_start":14,"column_end":18},"name":"Stmt","qualname":"::expr::Stmt","value":"Stmt::{Local, Item, Expr, Semi}","parent":null,"children":[{"krate":0,"index":6098},{"krate":0,"index":6101},{"krate":0,"index":6104},{"krate":0,"index":6107}],"decl_id":null,"docs":" A statement, usually ending in a semicolon.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6113},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":131092,"byte_end":131097,"line_start":729,"line_end":729,"column_start":16,"column_end":21},"name":"Local","qualname":"::expr::Local","value":"Local { attrs, let_token, pats, ty, init, semi_token }","parent":null,"children":[{"krate":0,"index":6114},{"krate":0,"index":6115},{"krate":0,"index":6116},{"krate":0,"index":6117},{"krate":0,"index":6118},{"krate":0,"index":6119}],"decl_id":null,"docs":" A local `let` binding: `let x: u64 = s.parse()?`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6114},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":131112,"byte_end":131117,"line_start":730,"line_end":730,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::Local::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6115},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":131147,"byte_end":131156,"line_start":731,"line_end":731,"column_start":13,"column_end":22},"name":"let_token","qualname":"::expr::Local::let_token","value":"token::Let","parent":{"krate":0,"index":6113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6116},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":131183,"byte_end":131187,"line_start":732,"line_end":732,"column_start":13,"column_end":17},"name":"pats","qualname":"::expr::Local::pats","value":"punctuated::Punctuated<expr::Pat, token::Or>","parent":{"krate":0,"index":6113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6117},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":131229,"byte_end":131231,"line_start":733,"line_end":733,"column_start":13,"column_end":15},"name":"ty","qualname":"::expr::Local::ty","value":"std::option::Option<(token::Colon, std::boxed::Box<ty::Type>)>","parent":{"krate":0,"index":6113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6118},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":131277,"byte_end":131281,"line_start":734,"line_end":734,"column_start":13,"column_end":17},"name":"init","qualname":"::expr::Local::init","value":"std::option::Option<(token::Eq, std::boxed::Box<expr::Expr>)>","parent":{"krate":0,"index":6113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6119},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":131327,"byte_end":131337,"line_start":735,"line_end":735,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::expr::Local::semi_token","value":"token::Semi","parent":{"krate":0,"index":6113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6149},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":132079,"byte_end":132083,"line_start":758,"line_end":758,"column_start":13,"column_end":17},"name":"Wild","qualname":"::expr::Pat::Wild","value":"Pat::Wild(PatWild)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" A pattern that matches any value: `_`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6152},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":132337,"byte_end":132342,"line_start":765,"line_end":765,"column_start":13,"column_end":18},"name":"Ident","qualname":"::expr::Pat::Ident","value":"Pat::Ident(PatIdent)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" A pattern that binds a new variable: `ref mut binding @ SUBPATTERN`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6155},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":132722,"byte_end":132728,"line_start":775,"line_end":775,"column_start":13,"column_end":19},"name":"Struct","qualname":"::expr::Pat::Struct","value":"Pat::Struct(PatStruct)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" A struct or struct variant pattern: `Variant { x, y, .. }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6158},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":133111,"byte_end":133122,"line_start":785,"line_end":785,"column_start":13,"column_end":24},"name":"TupleStruct","qualname":"::expr::Pat::TupleStruct","value":"Pat::TupleStruct(PatTupleStruct)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" A tuple struct or tuple variant pattern: `Variant(x, y, .., z)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6161},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":133688,"byte_end":133692,"line_start":799,"line_end":799,"column_start":13,"column_end":17},"name":"Path","qualname":"::expr::Pat::Path","value":"Pat::Path(PatPath)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" A path pattern like `Color::Red`, optionally qualified with a\n self-type.\n\n Unqualified path patterns can legally refer to variants, structs,\n constants or associated constants. Qualified path patterns like\n `<A>::B::C` and `<A as Trait>::B::C` can only legally refer to\n associated constants.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6164},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":133925,"byte_end":133930,"line_start":807,"line_end":807,"column_start":13,"column_end":18},"name":"Tuple","qualname":"::expr::Pat::Tuple","value":"Pat::Tuple(PatTuple)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" A tuple pattern: `(a, b)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6167},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":134335,"byte_end":134338,"line_start":818,"line_end":818,"column_start":13,"column_end":16},"name":"Box","qualname":"::expr::Pat::Box","value":"Pat::Box(PatBox)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" A box pattern: `box v`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6170},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":134593,"byte_end":134596,"line_start":826,"line_end":826,"column_start":13,"column_end":16},"name":"Ref","qualname":"::expr::Pat::Ref","value":"Pat::Ref(PatRef)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" A reference pattern: `&mut (first, second)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6173},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135016,"byte_end":135019,"line_start":838,"line_end":838,"column_start":13,"column_end":16},"name":"Lit","qualname":"::expr::Pat::Lit","value":"Pat::Lit(PatLit)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" A literal pattern: `0`.\n\n This holds an `Expr` rather than a `Lit` because negative numbers\n are represented as an `Expr::Unary`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6176},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135217,"byte_end":135222,"line_start":845,"line_end":845,"column_start":13,"column_end":18},"name":"Range","qualname":"::expr::Pat::Range","value":"Pat::Range(PatRange)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" A range pattern: `1..=2`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6179},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135518,"byte_end":135523,"line_start":854,"line_end":854,"column_start":13,"column_end":18},"name":"Slice","qualname":"::expr::Pat::Slice","value":"Pat::Slice(PatSlice)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" A dynamically sized slice pattern: `[a, b, i.., y, z]`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6182},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135982,"byte_end":135987,"line_start":866,"line_end":866,"column_start":13,"column_end":18},"name":"Macro","qualname":"::expr::Pat::Macro","value":"Pat::Macro(PatMacro)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" A macro in expression position.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6185},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":136207,"byte_end":136215,"line_start":873,"line_end":873,"column_start":13,"column_end":21},"name":"Verbatim","qualname":"::expr::Pat::Verbatim","value":"Pat::Verbatim(PatVerbatim)","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":" Tokens in pattern position not interpreted by Syn.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6148},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":131918,"byte_end":131921,"line_start":754,"line_end":754,"column_start":14,"column_end":17},"name":"Pat","qualname":"::expr::Pat","value":"Pat::{Wild, Ident, Struct, TupleStruct, Path, Tuple, Box, Ref, Lit, Range, Slice, Macro, Verbatim}","parent":null,"children":[{"krate":0,"index":6149},{"krate":0,"index":6152},{"krate":0,"index":6155},{"krate":0,"index":6158},{"krate":0,"index":6161},{"krate":0,"index":6164},{"krate":0,"index":6167},{"krate":0,"index":6170},{"krate":0,"index":6173},{"krate":0,"index":6176},{"krate":0,"index":6179},{"krate":0,"index":6182},{"krate":0,"index":6185}],"decl_id":null,"docs":" A pattern in a local binding, function signature, match expression, or\n various other places.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n\n # Syntax tree enum\n\n This type is a [syntax tree enum].\n\n [syntax tree enum]: enum.Expr.html#syntax-tree-enums\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6190},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":132084,"byte_end":132091,"line_start":758,"line_end":758,"column_start":18,"column_end":25},"name":"PatWild","qualname":"::expr::PatWild","value":"PatWild { underscore_token }","parent":null,"children":[{"krate":0,"index":6191}],"decl_id":null,"docs":" A pattern that matches any value: `_`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6191},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":132110,"byte_end":132126,"line_start":759,"line_end":759,"column_start":17,"column_end":33},"name":"underscore_token","qualname":"::expr::PatWild::underscore_token","value":"token::Underscore","parent":{"krate":0,"index":6190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6194},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":132343,"byte_end":132351,"line_start":765,"line_end":765,"column_start":19,"column_end":27},"name":"PatIdent","qualname":"::expr::PatIdent","value":"PatIdent { by_ref, mutability, ident, subpat }","parent":null,"children":[{"krate":0,"index":6195},{"krate":0,"index":6196},{"krate":0,"index":6197},{"krate":0,"index":6198}],"decl_id":null,"docs":" A pattern that binds a new variable: `ref mut binding @ SUBPATTERN`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6195},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":132370,"byte_end":132376,"line_start":766,"line_end":766,"column_start":17,"column_end":23},"name":"by_ref","qualname":"::expr::PatIdent::by_ref","value":"std::option::Option<token::Ref>","parent":{"krate":0,"index":6194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6196},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":132415,"byte_end":132425,"line_start":767,"line_end":767,"column_start":17,"column_end":27},"name":"mutability","qualname":"::expr::PatIdent::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":6194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6197},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":132464,"byte_end":132469,"line_start":768,"line_end":768,"column_start":17,"column_end":22},"name":"ident","qualname":"::expr::PatIdent::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6198},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":132494,"byte_end":132500,"line_start":769,"line_end":769,"column_start":17,"column_end":23},"name":"subpat","qualname":"::expr::PatIdent::subpat","value":"std::option::Option<(token::At, std::boxed::Box<expr::Pat>)>","parent":{"krate":0,"index":6194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6201},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":132729,"byte_end":132738,"line_start":775,"line_end":775,"column_start":20,"column_end":29},"name":"PatStruct","qualname":"::expr::PatStruct","value":"PatStruct { path, brace_token, fields, dot2_token }","parent":null,"children":[{"krate":0,"index":6202},{"krate":0,"index":6203},{"krate":0,"index":6204},{"krate":0,"index":6205}],"decl_id":null,"docs":" A struct or struct variant pattern: `Variant { x, y, .. }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6202},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":132757,"byte_end":132761,"line_start":776,"line_end":776,"column_start":17,"column_end":21},"name":"path","qualname":"::expr::PatStruct::path","value":"path::Path","parent":{"krate":0,"index":6201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6203},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":132785,"byte_end":132796,"line_start":777,"line_end":777,"column_start":17,"column_end":28},"name":"brace_token","qualname":"::expr::PatStruct::brace_token","value":"token::Brace","parent":{"krate":0,"index":6201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6204},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":132828,"byte_end":132834,"line_start":778,"line_end":778,"column_start":17,"column_end":23},"name":"fields","qualname":"::expr::PatStruct::fields","value":"punctuated::Punctuated<expr::FieldPat, token::Comma>","parent":{"krate":0,"index":6201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6205},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":132885,"byte_end":132895,"line_start":779,"line_end":779,"column_start":17,"column_end":27},"name":"dot2_token","qualname":"::expr::PatStruct::dot2_token","value":"std::option::Option<token::Dot2>","parent":{"krate":0,"index":6201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6208},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":133123,"byte_end":133137,"line_start":785,"line_end":785,"column_start":25,"column_end":39},"name":"PatTupleStruct","qualname":"::expr::PatTupleStruct","value":"PatTupleStruct { path, pat }","parent":null,"children":[{"krate":0,"index":6209},{"krate":0,"index":6210}],"decl_id":null,"docs":" A tuple struct or tuple variant pattern: `Variant(x, y, .., z)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6209},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":133156,"byte_end":133160,"line_start":786,"line_end":786,"column_start":17,"column_end":21},"name":"path","qualname":"::expr::PatTupleStruct::path","value":"path::Path","parent":{"krate":0,"index":6208},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6210},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":133184,"byte_end":133187,"line_start":787,"line_end":787,"column_start":17,"column_end":20},"name":"pat","qualname":"::expr::PatTupleStruct::pat","value":"expr::PatTuple","parent":{"krate":0,"index":6208},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6213},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":133693,"byte_end":133700,"line_start":799,"line_end":799,"column_start":18,"column_end":25},"name":"PatPath","qualname":"::expr::PatPath","value":"PatPath { qself, path }","parent":null,"children":[{"krate":0,"index":6214},{"krate":0,"index":6215}],"decl_id":null,"docs":" A path pattern like `Color::Red`, optionally qualified with a\n self-type.\n\n Unqualified path patterns can legally refer to variants, structs,\n constants or associated constants. Qualified path patterns like\n `<A>::B::C` and `<A as Trait>::B::C` can only legally refer to\n associated constants.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6214},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":133719,"byte_end":133724,"line_start":800,"line_end":800,"column_start":17,"column_end":22},"name":"qself","qualname":"::expr::PatPath::qself","value":"std::option::Option<path::QSelf>","parent":{"krate":0,"index":6213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6215},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":133757,"byte_end":133761,"line_start":801,"line_end":801,"column_start":17,"column_end":21},"name":"path","qualname":"::expr::PatPath::path","value":"path::Path","parent":{"krate":0,"index":6213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6218},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":133931,"byte_end":133939,"line_start":807,"line_end":807,"column_start":19,"column_end":27},"name":"PatTuple","qualname":"::expr::PatTuple","value":"PatTuple { paren_token, front, dot2_token, comma_token, back }","parent":null,"children":[{"krate":0,"index":6219},{"krate":0,"index":6220},{"krate":0,"index":6221},{"krate":0,"index":6222},{"krate":0,"index":6223}],"decl_id":null,"docs":" A tuple pattern: `(a, b)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6219},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":133958,"byte_end":133969,"line_start":808,"line_end":808,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::expr::PatTuple::paren_token","value":"token::Paren","parent":{"krate":0,"index":6218},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6220},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":134001,"byte_end":134006,"line_start":809,"line_end":809,"column_start":17,"column_end":22},"name":"front","qualname":"::expr::PatTuple::front","value":"punctuated::Punctuated<expr::Pat, token::Comma>","parent":{"krate":0,"index":6218},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6221},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":134052,"byte_end":134062,"line_start":810,"line_end":810,"column_start":17,"column_end":27},"name":"dot2_token","qualname":"::expr::PatTuple::dot2_token","value":"std::option::Option<token::Dot2>","parent":{"krate":0,"index":6218},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6222},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":134100,"byte_end":134111,"line_start":811,"line_end":811,"column_start":17,"column_end":28},"name":"comma_token","qualname":"::expr::PatTuple::comma_token","value":"std::option::Option<token::Comma>","parent":{"krate":0,"index":6218},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6223},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":134148,"byte_end":134152,"line_start":812,"line_end":812,"column_start":17,"column_end":21},"name":"back","qualname":"::expr::PatTuple::back","value":"punctuated::Punctuated<expr::Pat, token::Comma>","parent":{"krate":0,"index":6218},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6226},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":134339,"byte_end":134345,"line_start":818,"line_end":818,"column_start":17,"column_end":23},"name":"PatBox","qualname":"::expr::PatBox","value":"PatBox { box_token, pat }","parent":null,"children":[{"krate":0,"index":6227},{"krate":0,"index":6228}],"decl_id":null,"docs":" A box pattern: `box v`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6227},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":134364,"byte_end":134373,"line_start":819,"line_end":819,"column_start":17,"column_end":26},"name":"box_token","qualname":"::expr::PatBox::box_token","value":"token::Box","parent":{"krate":0,"index":6226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6228},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":134404,"byte_end":134407,"line_start":820,"line_end":820,"column_start":17,"column_end":20},"name":"pat","qualname":"::expr::PatBox::pat","value":"std::boxed::Box<expr::Pat>","parent":{"krate":0,"index":6226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6231},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":134597,"byte_end":134603,"line_start":826,"line_end":826,"column_start":17,"column_end":23},"name":"PatRef","qualname":"::expr::PatRef","value":"PatRef { and_token, mutability, pat }","parent":null,"children":[{"krate":0,"index":6232},{"krate":0,"index":6233},{"krate":0,"index":6234}],"decl_id":null,"docs":" A reference pattern: `&mut (first, second)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6232},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":134622,"byte_end":134631,"line_start":827,"line_end":827,"column_start":17,"column_end":26},"name":"and_token","qualname":"::expr::PatRef::and_token","value":"token::And","parent":{"krate":0,"index":6231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6233},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":134660,"byte_end":134670,"line_start":828,"line_end":828,"column_start":17,"column_end":27},"name":"mutability","qualname":"::expr::PatRef::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":6231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6234},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":134709,"byte_end":134712,"line_start":829,"line_end":829,"column_start":17,"column_end":20},"name":"pat","qualname":"::expr::PatRef::pat","value":"std::boxed::Box<expr::Pat>","parent":{"krate":0,"index":6231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6237},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135020,"byte_end":135026,"line_start":838,"line_end":838,"column_start":17,"column_end":23},"name":"PatLit","qualname":"::expr::PatLit","value":"PatLit { expr }","parent":null,"children":[{"krate":0,"index":6238}],"decl_id":null,"docs":" A literal pattern: `0`.\n\n This holds an `Expr` rather than a `Lit` because negative numbers\n are represented as an `Expr::Unary`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6238},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135045,"byte_end":135049,"line_start":839,"line_end":839,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::PatLit::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":6237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6241},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135223,"byte_end":135231,"line_start":845,"line_end":845,"column_start":19,"column_end":27},"name":"PatRange","qualname":"::expr::PatRange","value":"PatRange { lo, limits, hi }","parent":null,"children":[{"krate":0,"index":6242},{"krate":0,"index":6243},{"krate":0,"index":6244}],"decl_id":null,"docs":" A range pattern: `1..=2`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6242},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135250,"byte_end":135252,"line_start":846,"line_end":846,"column_start":17,"column_end":19},"name":"lo","qualname":"::expr::PatRange::lo","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":6241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6243},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135281,"byte_end":135287,"line_start":847,"line_end":847,"column_start":17,"column_end":23},"name":"limits","qualname":"::expr::PatRange::limits","value":"expr::RangeLimits","parent":{"krate":0,"index":6241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6244},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135318,"byte_end":135320,"line_start":848,"line_end":848,"column_start":17,"column_end":19},"name":"hi","qualname":"::expr::PatRange::hi","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":6241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6247},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135524,"byte_end":135532,"line_start":854,"line_end":854,"column_start":19,"column_end":27},"name":"PatSlice","qualname":"::expr::PatSlice","value":"PatSlice { bracket_token, front, middle, dot2_token, comma_token, back }","parent":null,"children":[{"krate":0,"index":6248},{"krate":0,"index":6249},{"krate":0,"index":6250},{"krate":0,"index":6251},{"krate":0,"index":6252},{"krate":0,"index":6253}],"decl_id":null,"docs":" A dynamically sized slice pattern: `[a, b, i.., y, z]`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6248},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135551,"byte_end":135564,"line_start":855,"line_end":855,"column_start":17,"column_end":30},"name":"bracket_token","qualname":"::expr::PatSlice::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":6247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6249},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135598,"byte_end":135603,"line_start":856,"line_end":856,"column_start":17,"column_end":22},"name":"front","qualname":"::expr::PatSlice::front","value":"punctuated::Punctuated<expr::Pat, token::Comma>","parent":{"krate":0,"index":6247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6250},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135649,"byte_end":135655,"line_start":857,"line_end":857,"column_start":17,"column_end":23},"name":"middle","qualname":"::expr::PatSlice::middle","value":"std::option::Option<std::boxed::Box<expr::Pat>>","parent":{"krate":0,"index":6247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6251},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135691,"byte_end":135701,"line_start":858,"line_end":858,"column_start":17,"column_end":27},"name":"dot2_token","qualname":"::expr::PatSlice::dot2_token","value":"std::option::Option<token::Dot2>","parent":{"krate":0,"index":6247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6252},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135739,"byte_end":135750,"line_start":859,"line_end":859,"column_start":17,"column_end":28},"name":"comma_token","qualname":"::expr::PatSlice::comma_token","value":"std::option::Option<token::Comma>","parent":{"krate":0,"index":6247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6253},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135787,"byte_end":135791,"line_start":860,"line_end":860,"column_start":17,"column_end":21},"name":"back","qualname":"::expr::PatSlice::back","value":"punctuated::Punctuated<expr::Pat, token::Comma>","parent":{"krate":0,"index":6247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6256},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":135988,"byte_end":135996,"line_start":866,"line_end":866,"column_start":19,"column_end":27},"name":"PatMacro","qualname":"::expr::PatMacro","value":"PatMacro { mac }","parent":null,"children":[{"krate":0,"index":6257}],"decl_id":null,"docs":" A macro in expression position.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6257},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":136015,"byte_end":136018,"line_start":867,"line_end":867,"column_start":17,"column_end":20},"name":"mac","qualname":"::expr::PatMacro::mac","value":"mac::Macro","parent":{"krate":0,"index":6256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6260},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":136216,"byte_end":136227,"line_start":873,"line_end":873,"column_start":22,"column_end":33},"name":"PatVerbatim","qualname":"::expr::PatVerbatim","value":"PatVerbatim { tts }","parent":null,"children":[{"krate":0,"index":6261}],"decl_id":null,"docs":" Tokens in pattern position not interpreted by Syn.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6261},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":136267,"byte_end":136270,"line_start":874,"line_end":874,"column_start":17,"column_end":20},"name":"tts","qualname":"::expr::PatVerbatim::tts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":6260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6266},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":137307,"byte_end":137310,"line_start":920,"line_end":920,"column_start":16,"column_end":19},"name":"Arm","qualname":"::expr::Arm","value":"Arm { attrs, leading_vert, pats, guard, fat_arrow_token, body, comma }","parent":null,"children":[{"krate":0,"index":6267},{"krate":0,"index":6268},{"krate":0,"index":6269},{"krate":0,"index":6270},{"krate":0,"index":6271},{"krate":0,"index":6272},{"krate":0,"index":6273}],"decl_id":null,"docs":" One arm of a `match` expression: `0...10 => { return true; }`.\n\n As in:\n\n ```edition2018\n # fn f() -> bool {\n #     let n = 0;\n match n {\n     0...10 => {\n         return true;\n     }\n     // ...\n     # _ => {}\n }\n #   false\n # }\n ```\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6267},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":137325,"byte_end":137330,"line_start":921,"line_end":921,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::Arm::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6268},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":137360,"byte_end":137372,"line_start":922,"line_end":922,"column_start":13,"column_end":25},"name":"leading_vert","qualname":"::expr::Arm::leading_vert","value":"std::option::Option<token::Or>","parent":{"krate":0,"index":6266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6269},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":137405,"byte_end":137409,"line_start":923,"line_end":923,"column_start":13,"column_end":17},"name":"pats","qualname":"::expr::Arm::pats","value":"punctuated::Punctuated<expr::Pat, token::Or>","parent":{"krate":0,"index":6266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6270},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":137451,"byte_end":137456,"line_start":924,"line_end":924,"column_start":13,"column_end":18},"name":"guard","qualname":"::expr::Arm::guard","value":"std::option::Option<(token::If, std::boxed::Box<expr::Expr>)>","parent":{"krate":0,"index":6266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6271},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":137503,"byte_end":137518,"line_start":925,"line_end":925,"column_start":13,"column_end":28},"name":"fat_arrow_token","qualname":"::expr::Arm::fat_arrow_token","value":"token::FatArrow","parent":{"krate":0,"index":6266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6272},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":137544,"byte_end":137548,"line_start":926,"line_end":926,"column_start":13,"column_end":17},"name":"body","qualname":"::expr::Arm::body","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":6266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6273},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":137573,"byte_end":137578,"line_start":927,"line_end":927,"column_start":13,"column_end":18},"name":"comma","qualname":"::expr::Arm::comma","value":"std::option::Option<token::Comma>","parent":{"krate":0,"index":6266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6277},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":137937,"byte_end":137945,"line_start":939,"line_end":939,"column_start":9,"column_end":17},"name":"HalfOpen","qualname":"::expr::RangeLimits::HalfOpen","value":"RangeLimits::HalfOpen(crate::token::Dot2)","parent":{"krate":0,"index":6276},"children":[],"decl_id":null,"docs":" Inclusive at the beginning, exclusive at the end.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6280},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":138015,"byte_end":138021,"line_start":941,"line_end":941,"column_start":9,"column_end":15},"name":"Closed","qualname":"::expr::RangeLimits::Closed","value":"RangeLimits::Closed(crate::token::DotDotEq)","parent":{"krate":0,"index":6276},"children":[],"decl_id":null,"docs":" Inclusive at the beginning and end.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6276},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":137853,"byte_end":137864,"line_start":937,"line_end":937,"column_start":14,"column_end":25},"name":"RangeLimits","qualname":"::expr::RangeLimits","value":"RangeLimits::{HalfOpen, Closed}","parent":null,"children":[{"krate":0,"index":6277},{"krate":0,"index":6280}],"decl_id":null,"docs":" Limit types of a range, inclusive or exclusive.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6286},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":138393,"byte_end":138401,"line_start":953,"line_end":953,"column_start":16,"column_end":24},"name":"FieldPat","qualname":"::expr::FieldPat","value":"FieldPat { attrs, member, colon_token, pat }","parent":null,"children":[{"krate":0,"index":6287},{"krate":0,"index":6288},{"krate":0,"index":6289},{"krate":0,"index":6290}],"decl_id":null,"docs":" A single field in a struct pattern.\n\n Patterns like the fields of Foo `{ x, ref y, ref mut z }` are treated\n the same as `x: x, y: ref y, z: ref mut z` but there is no colon token.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6287},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":138416,"byte_end":138421,"line_start":954,"line_end":954,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::FieldPat::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6286},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6288},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":138451,"byte_end":138457,"line_start":955,"line_end":955,"column_start":13,"column_end":19},"name":"member","qualname":"::expr::FieldPat::member","value":"expr::Member","parent":{"krate":0,"index":6286},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6289},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":138479,"byte_end":138490,"line_start":956,"line_end":956,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::expr::FieldPat::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":6286},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6290},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":138523,"byte_end":138526,"line_start":957,"line_end":957,"column_start":13,"column_end":16},"name":"pat","qualname":"::expr::FieldPat::pat","value":"std::boxed::Box<expr::Pat>","parent":{"krate":0,"index":6286},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":188746,"byte_end":188758,"line_start":2390,"line_end":2390,"column_start":16,"column_end":28},"name":"parse_within","qualname":"<Block>::parse_within","value":"fn (input: ParseStream) -> Result<Vec<Stmt>>","parent":null,"children":[],"decl_id":null,"docs":" Parse the body of a block as zero or more statements, possibly\n including one trailing expression.\n\n *This function is available if Syn is built with the `\"parsing\"`\n feature.*\n\n # Example\n\n ```edition2018\n use syn::{braced, token, Attribute, Block, Ident, Result, Stmt, Token};\n use syn::parse::{Parse, ParseStream};\n\n // Parse a function with no generics or parameter list.\n //\n //     fn playground {\n //         let mut x = 1;\n //         x += 1;\n //         println!(\"{}\", x);\n //     }\n struct MiniFunction {\n     attrs: Vec<Attribute>,\n     fn_token: Token![fn],\n     name: Ident,\n     brace_token: token::Brace,\n     stmts: Vec<Stmt>,\n }\n\n impl Parse for MiniFunction {\n     fn parse(input: ParseStream) -> Result<Self> {\n         let outer_attrs = input.call(Attribute::parse_outer)?;\n         let fn_token: Token![fn] = input.parse()?;\n         let name: Ident = input.parse()?;\n\n         let content;\n         let brace_token = braced!(content in input);\n         let inner_attrs = content.call(Attribute::parse_inner)?;\n         let stmts = content.call(Block::parse_within)?;\n\n         Ok(MiniFunction {\n             attrs: {\n                 let mut attrs = outer_attrs;\n                 attrs.extend(inner_attrs);\n                 attrs\n             },\n             fn_token: fn_token,\n             name: name,\n             brace_token: brace_token,\n             stmts: stmts,\n         })\n     }\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6394},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":236971,"byte_end":236979,"line_start":11,"line_end":11,"column_start":16,"column_end":24},"name":"Generics","qualname":"::generics::Generics","value":"Generics { lt_token, params, gt_token, where_clause }","parent":null,"children":[{"krate":0,"index":6395},{"krate":0,"index":6396},{"krate":0,"index":6397},{"krate":0,"index":6398}],"decl_id":null,"docs":" Lifetimes and type parameters attached to a declaration of a function,\n enum, trait, etc.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6395},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":236994,"byte_end":237002,"line_start":12,"line_end":12,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::generics::Generics::lt_token","value":"std::option::Option<token::Lt>","parent":{"krate":0,"index":6394},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6396},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":237035,"byte_end":237041,"line_start":13,"line_end":13,"column_start":13,"column_end":19},"name":"params","qualname":"::generics::Generics::params","value":"punctuated::Punctuated<generics::GenericParam, token::Comma>","parent":{"krate":0,"index":6394},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6397},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":237092,"byte_end":237100,"line_start":14,"line_end":14,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::generics::Generics::gt_token","value":"std::option::Option<token::Gt>","parent":{"krate":0,"index":6394},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6398},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":237133,"byte_end":237145,"line_start":15,"line_end":15,"column_start":13,"column_end":25},"name":"where_clause","qualname":"::generics::Generics::where_clause","value":"std::option::Option<generics::WhereClause>","parent":{"krate":0,"index":6394},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6410},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":237945,"byte_end":237949,"line_start":39,"line_end":39,"column_start":13,"column_end":17},"name":"Type","qualname":"::generics::GenericParam::Type","value":"GenericParam::Type(TypeParam)","parent":{"krate":0,"index":6409},"children":[],"decl_id":null,"docs":" A generic type parameter: `T: Into<String>`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6413},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238424,"byte_end":238432,"line_start":52,"line_end":52,"column_start":13,"column_end":21},"name":"Lifetime","qualname":"::generics::GenericParam::Lifetime","value":"GenericParam::Lifetime(LifetimeDef)","parent":{"krate":0,"index":6409},"children":[],"decl_id":null,"docs":" A lifetime definition: `'a: 'b + 'c + 'd`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6416},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238832,"byte_end":238837,"line_start":63,"line_end":63,"column_start":13,"column_end":18},"name":"Const","qualname":"::generics::GenericParam::Const","value":"GenericParam::Const(ConstParam)","parent":{"krate":0,"index":6409},"children":[],"decl_id":null,"docs":" A const generic parameter: `const LENGTH: usize`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6409},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":237743,"byte_end":237755,"line_start":34,"line_end":34,"column_start":14,"column_end":26},"name":"GenericParam","qualname":"::generics::GenericParam","value":"GenericParam::{Type, Lifetime, Const}","parent":null,"children":[{"krate":0,"index":6410},{"krate":0,"index":6413},{"krate":0,"index":6416}],"decl_id":null,"docs":" A generic type parameter, lifetime, or const generic: `T: Into<String>`,\n `'a: 'b`, `const LEN: usize`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n\n # Syntax tree enum\n\n This type is a [syntax tree enum].\n\n [syntax tree enum]: enum.Expr.html#syntax-tree-enums\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6421},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":237950,"byte_end":237959,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"name":"TypeParam","qualname":"::generics::TypeParam","value":"TypeParam { attrs, ident, colon_token, bounds, eq_token, default }","parent":null,"children":[{"krate":0,"index":6422},{"krate":0,"index":6423},{"krate":0,"index":6424},{"krate":0,"index":6425},{"krate":0,"index":6426},{"krate":0,"index":6427}],"decl_id":null,"docs":" A generic type parameter: `T: Into<String>`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6422},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":237978,"byte_end":237983,"line_start":40,"line_end":40,"column_start":17,"column_end":22},"name":"attrs","qualname":"::generics::TypeParam::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6421},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6423},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238017,"byte_end":238022,"line_start":41,"line_end":41,"column_start":17,"column_end":22},"name":"ident","qualname":"::generics::TypeParam::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6421},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6424},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238047,"byte_end":238058,"line_start":42,"line_end":42,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::generics::TypeParam::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":6421},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6425},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238095,"byte_end":238101,"line_start":43,"line_end":43,"column_start":17,"column_end":23},"name":"bounds","qualname":"::generics::TypeParam::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":6421},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6426},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238158,"byte_end":238166,"line_start":44,"line_end":44,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::generics::TypeParam::eq_token","value":"std::option::Option<token::Eq>","parent":{"krate":0,"index":6421},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6427},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238203,"byte_end":238210,"line_start":45,"line_end":45,"column_start":17,"column_end":24},"name":"default","qualname":"::generics::TypeParam::default","value":"std::option::Option<ty::Type>","parent":{"krate":0,"index":6421},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6430},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238433,"byte_end":238444,"line_start":52,"line_end":52,"column_start":22,"column_end":33},"name":"LifetimeDef","qualname":"::generics::LifetimeDef","value":"LifetimeDef { attrs, lifetime, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":6431},{"krate":0,"index":6432},{"krate":0,"index":6433},{"krate":0,"index":6434}],"decl_id":null,"docs":" A lifetime definition: `'a: 'b + 'c + 'd`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6431},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238463,"byte_end":238468,"line_start":53,"line_end":53,"column_start":17,"column_end":22},"name":"attrs","qualname":"::generics::LifetimeDef::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6432},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238502,"byte_end":238510,"line_start":54,"line_end":54,"column_start":17,"column_end":25},"name":"lifetime","qualname":"::generics::LifetimeDef::lifetime","value":"lifetime::Lifetime","parent":{"krate":0,"index":6430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6433},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238538,"byte_end":238549,"line_start":55,"line_end":55,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::generics::LifetimeDef::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":6430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6434},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238586,"byte_end":238592,"line_start":56,"line_end":56,"column_start":17,"column_end":23},"name":"bounds","qualname":"::generics::LifetimeDef::bounds","value":"punctuated::Punctuated<lifetime::Lifetime, token::Add>","parent":{"krate":0,"index":6430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6437},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238838,"byte_end":238848,"line_start":63,"line_end":63,"column_start":19,"column_end":29},"name":"ConstParam","qualname":"::generics::ConstParam","value":"ConstParam { attrs, const_token, ident, colon_token, ty, eq_token, default }","parent":null,"children":[{"krate":0,"index":6438},{"krate":0,"index":6439},{"krate":0,"index":6440},{"krate":0,"index":6441},{"krate":0,"index":6442},{"krate":0,"index":6443},{"krate":0,"index":6444}],"decl_id":null,"docs":" A const generic parameter: `const LENGTH: usize`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6438},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238867,"byte_end":238872,"line_start":64,"line_end":64,"column_start":17,"column_end":22},"name":"attrs","qualname":"::generics::ConstParam::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6439},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238906,"byte_end":238917,"line_start":65,"line_end":65,"column_start":17,"column_end":28},"name":"const_token","qualname":"::generics::ConstParam::const_token","value":"token::Const","parent":{"krate":0,"index":6437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6440},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238950,"byte_end":238955,"line_start":66,"line_end":66,"column_start":17,"column_end":22},"name":"ident","qualname":"::generics::ConstParam::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6441},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238980,"byte_end":238991,"line_start":67,"line_end":67,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::generics::ConstParam::colon_token","value":"token::Colon","parent":{"krate":0,"index":6437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6442},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239020,"byte_end":239022,"line_start":68,"line_end":68,"column_start":17,"column_end":19},"name":"ty","qualname":"::generics::ConstParam::ty","value":"ty::Type","parent":{"krate":0,"index":6437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6443},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239046,"byte_end":239054,"line_start":69,"line_end":69,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::generics::ConstParam::eq_token","value":"std::option::Option<token::Eq>","parent":{"krate":0,"index":6437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6444},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239091,"byte_end":239098,"line_start":70,"line_end":70,"column_start":17,"column_end":24},"name":"default","qualname":"::generics::ConstParam::default","value":"std::option::Option<expr::Expr>","parent":{"krate":0,"index":6437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239482,"byte_end":239493,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"type_params","qualname":"<Generics>::type_params","value":"fn (&self) -> TypeParams","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a\n   href=\"struct.TypeParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the type parameters in `self.params`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239898,"byte_end":239913,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"type_params_mut","qualname":"<Generics>::type_params_mut","value":"fn (&mut self) -> TypeParamsMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a\n   href=\"struct.TypeParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the type parameters in `self.params`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240336,"byte_end":240345,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"lifetimes","qualname":"<Generics>::lifetimes","value":"fn (&self) -> Lifetimes","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a\n   href=\"struct.LifetimeDef.html\"><code\n   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the lifetime parameters in `self.params`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240756,"byte_end":240769,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"lifetimes_mut","qualname":"<Generics>::lifetimes_mut","value":"fn (&mut self) -> LifetimesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a\n   href=\"struct.LifetimeDef.html\"><code\n   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the lifetime parameters in `self.params`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":241188,"byte_end":241200,"line_start":127,"line_end":127,"column_start":12,"column_end":24},"name":"const_params","qualname":"<Generics>::const_params","value":"fn (&self) -> ConstParams","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a\n   href=\"struct.ConstParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the constant parameters in `self.params`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":241613,"byte_end":241629,"line_start":138,"line_end":138,"column_start":12,"column_end":28},"name":"const_params_mut","qualname":"<Generics>::const_params_mut","value":"fn (&mut self) -> ConstParamsMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a\n   href=\"struct.ConstParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the constant parameters in `self.params`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":241807,"byte_end":241824,"line_start":143,"line_end":143,"column_start":12,"column_end":29},"name":"make_where_clause","qualname":"<Generics>::make_where_clause","value":"fn (&mut self) -> &mut WhereClause","parent":null,"children":[],"decl_id":null,"docs":" Initializes an empty `where`-clause if there is not one present already.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":242296,"byte_end":242306,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"TypeParams","qualname":"::generics::TypeParams","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":242732,"byte_end":242745,"line_start":176,"line_end":176,"column_start":12,"column_end":25},"name":"TypeParamsMut","qualname":"::generics::TypeParamsMut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":243185,"byte_end":243194,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"Lifetimes","qualname":"::generics::Lifetimes","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":243621,"byte_end":243633,"line_start":212,"line_end":212,"column_start":12,"column_end":24},"name":"LifetimesMut","qualname":"::generics::LifetimesMut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":244074,"byte_end":244085,"line_start":230,"line_end":230,"column_start":12,"column_end":23},"name":"ConstParams","qualname":"::generics::ConstParams","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":244516,"byte_end":244530,"line_start":248,"line_end":248,"column_start":12,"column_end":26},"name":"ConstParamsMut","qualname":"::generics::ConstParamsMut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6449},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245297,"byte_end":245309,"line_start":273,"line_end":273,"column_start":12,"column_end":24},"name":"ImplGenerics","qualname":"::generics::ImplGenerics","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned by `Generics::split_for_impl`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature and the `\"printing\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"printing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245131,"byte_end":245159,"line_start":270,"line_end":270,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":6456},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245663,"byte_end":245675,"line_start":282,"line_end":282,"column_start":12,"column_end":24},"name":"TypeGenerics","qualname":"::generics::TypeGenerics","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned by `Generics::split_for_impl`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature and the `\"printing\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"printing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245497,"byte_end":245525,"line_start":279,"line_end":279,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":6463},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246031,"byte_end":246040,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"Turbofish","qualname":"::generics::Turbofish","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned by `TypeGenerics::as_turbofish`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature and the `\"printing\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"printing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245865,"byte_end":245893,"line_start":288,"line_end":288,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246895,"byte_end":246909,"line_start":318,"line_end":318,"column_start":12,"column_end":26},"name":"split_for_impl","qualname":"<Generics>::split_for_impl","value":"fn (&self) -> (ImplGenerics, TypeGenerics, Option<&WhereClause>)","parent":null,"children":[],"decl_id":null,"docs":" Split a type's generics into the pieces required for impl'ing a trait\n for that type.\n\n ```edition2018\n # use proc_macro2::{Span, Ident};\n # use quote::quote;\n #\n # fn main() {\n #     let generics: syn::Generics = Default::default();\n #     let name = Ident::new(\"MyType\", Span::call_site());\n #\n let (impl_generics, ty_generics, where_clause) = generics.split_for_impl();\n quote! {\n     impl #impl_generics MyTrait for #name #ty_generics #where_clause {\n         // ...\n     }\n }\n #     ;\n # }\n ```\n\n *This method is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature and the `\"printing\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247390,"byte_end":247402,"line_start":333,"line_end":333,"column_start":12,"column_end":24},"name":"as_turbofish","qualname":"<TypeGenerics>::as_turbofish","value":"fn (&self) -> Turbofish","parent":null,"children":[],"decl_id":null,"docs":" Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.\n\n *This method is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature and the `\"printing\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6470},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247671,"byte_end":247685,"line_start":344,"line_end":344,"column_start":16,"column_end":30},"name":"BoundLifetimes","qualname":"::generics::BoundLifetimes","value":"BoundLifetimes { for_token, lt_token, lifetimes, gt_token }","parent":null,"children":[{"krate":0,"index":6471},{"krate":0,"index":6472},{"krate":0,"index":6473},{"krate":0,"index":6474}],"decl_id":null,"docs":" A set of bound lifetimes: `for<'a, 'b, 'c>`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6471},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247700,"byte_end":247709,"line_start":345,"line_end":345,"column_start":13,"column_end":22},"name":"for_token","qualname":"::generics::BoundLifetimes::for_token","value":"token::For","parent":{"krate":0,"index":6470},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6472},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247736,"byte_end":247744,"line_start":346,"line_end":346,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::generics::BoundLifetimes::lt_token","value":"token::Lt","parent":{"krate":0,"index":6470},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6473},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247769,"byte_end":247778,"line_start":347,"line_end":347,"column_start":13,"column_end":22},"name":"lifetimes","qualname":"::generics::BoundLifetimes::lifetimes","value":"punctuated::Punctuated<generics::LifetimeDef, token::Comma>","parent":{"krate":0,"index":6470},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6474},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247828,"byte_end":247836,"line_start":348,"line_end":348,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::generics::BoundLifetimes::gt_token","value":"token::Gt","parent":{"krate":0,"index":6470},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247888,"byte_end":247891,"line_start":353,"line_end":353,"column_start":12,"column_end":15},"name":"new","qualname":"<LifetimeDef>::new","value":"fn (lifetime: Lifetime) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6484},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":248618,"byte_end":248623,"line_start":382,"line_end":382,"column_start":13,"column_end":18},"name":"Trait","qualname":"::generics::TypeParamBound::Trait","value":"TypeParamBound::Trait(TraitBound)","parent":{"krate":0,"index":6483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6487},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":248649,"byte_end":248657,"line_start":383,"line_end":383,"column_start":13,"column_end":21},"name":"Lifetime","qualname":"::generics::TypeParamBound::Lifetime","value":"TypeParamBound::Lifetime(Lifetime)","parent":{"krate":0,"index":6483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6483},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":248589,"byte_end":248603,"line_start":381,"line_end":381,"column_start":14,"column_end":28},"name":"TypeParamBound","qualname":"::generics::TypeParamBound","value":"TypeParamBound::{Trait, Lifetime}","parent":null,"children":[{"krate":0,"index":6484},{"krate":0,"index":6487}],"decl_id":null,"docs":" A trait or lifetime used as a bound on a type parameter.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6494},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":248866,"byte_end":248876,"line_start":392,"line_end":392,"column_start":16,"column_end":26},"name":"TraitBound","qualname":"::generics::TraitBound","value":"TraitBound { paren_token, modifier, lifetimes, path }","parent":null,"children":[{"krate":0,"index":6495},{"krate":0,"index":6496},{"krate":0,"index":6497},{"krate":0,"index":6498}],"decl_id":null,"docs":" A trait used as a bound on a type parameter.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6495},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":248891,"byte_end":248902,"line_start":393,"line_end":393,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::generics::TraitBound::paren_token","value":"std::option::Option<token::Paren>","parent":{"krate":0,"index":6494},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6496},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":248938,"byte_end":248946,"line_start":394,"line_end":394,"column_start":13,"column_end":21},"name":"modifier","qualname":"::generics::TraitBound::modifier","value":"generics::TraitBoundModifier","parent":{"krate":0,"index":6494},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6497},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":249030,"byte_end":249039,"line_start":396,"line_end":396,"column_start":13,"column_end":22},"name":"lifetimes","qualname":"::generics::TraitBound::lifetimes","value":"std::option::Option<generics::BoundLifetimes>","parent":{"krate":0,"index":6494},"children":[],"decl_id":null,"docs":" The `for<'a>` in `for<'a> Foo<&'a T>`\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6498},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":249130,"byte_end":249134,"line_start":398,"line_end":398,"column_start":13,"column_end":17},"name":"path","qualname":"::generics::TraitBound::path","value":"path::Path","parent":{"krate":0,"index":6494},"children":[],"decl_id":null,"docs":" The `Foo<&'a T>` in `for<'a> Foo<&'a T>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6502},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":249456,"byte_end":249460,"line_start":410,"line_end":410,"column_start":9,"column_end":13},"name":"None","qualname":"::generics::TraitBoundModifier::None","value":"TraitBoundModifier::None","parent":{"krate":0,"index":6501},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6504},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":249470,"byte_end":249475,"line_start":411,"line_end":411,"column_start":9,"column_end":14},"name":"Maybe","qualname":"::generics::TraitBoundModifier::Maybe","value":"TraitBoundModifier::Maybe(crate::token::Question)","parent":{"krate":0,"index":6501},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6501},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":249427,"byte_end":249445,"line_start":409,"line_end":409,"column_start":14,"column_end":32},"name":"TraitBoundModifier","qualname":"::generics::TraitBoundModifier","value":"TraitBoundModifier::{None, Maybe}","parent":null,"children":[{"krate":0,"index":6502},{"krate":0,"index":6504}],"decl_id":null,"docs":" A modifier on a trait bound, currently only used for the `?` in\n `?Sized`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6510},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":249723,"byte_end":249734,"line_start":421,"line_end":421,"column_start":16,"column_end":27},"name":"WhereClause","qualname":"::generics::WhereClause","value":"WhereClause { where_token, predicates }","parent":null,"children":[{"krate":0,"index":6511},{"krate":0,"index":6512}],"decl_id":null,"docs":" A `where` clause in a definition: `where T: Deserialize<'de>, D:\n 'static`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6511},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":249749,"byte_end":249760,"line_start":422,"line_end":422,"column_start":13,"column_end":24},"name":"where_token","qualname":"::generics::WhereClause::where_token","value":"token::Where","parent":{"krate":0,"index":6510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6512},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":249789,"byte_end":249799,"line_start":423,"line_end":423,"column_start":13,"column_end":23},"name":"predicates","qualname":"::generics::WhereClause::predicates","value":"punctuated::Punctuated<generics::WherePredicate, token::Comma>","parent":{"krate":0,"index":6510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6522},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":250594,"byte_end":250598,"line_start":446,"line_end":446,"column_start":13,"column_end":17},"name":"Type","qualname":"::generics::WherePredicate::Type","value":"WherePredicate::Type(PredicateType)","parent":{"krate":0,"index":6521},"children":[],"decl_id":null,"docs":" A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6525},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251170,"byte_end":251178,"line_start":460,"line_end":460,"column_start":13,"column_end":21},"name":"Lifetime","qualname":"::generics::WherePredicate::Lifetime","value":"WherePredicate::Lifetime(PredicateLifetime)","parent":{"krate":0,"index":6521},"children":[],"decl_id":null,"docs":" A lifetime predicate in a `where` clause: `'a: 'b + 'c`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6528},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251544,"byte_end":251546,"line_start":470,"line_end":470,"column_start":13,"column_end":15},"name":"Eq","qualname":"::generics::WherePredicate::Eq","value":"WherePredicate::Eq(PredicateEq)","parent":{"krate":0,"index":6521},"children":[],"decl_id":null,"docs":" An equality predicate in a `where` clause (unsupported).\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6521},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":250367,"byte_end":250381,"line_start":441,"line_end":441,"column_start":14,"column_end":28},"name":"WherePredicate","qualname":"::generics::WherePredicate","value":"WherePredicate::{Type, Lifetime, Eq}","parent":null,"children":[{"krate":0,"index":6522},{"krate":0,"index":6525},{"krate":0,"index":6528}],"decl_id":null,"docs":" A single predicate in a `where` clause: `T: Deserialize<'de>`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n\n # Syntax tree enum\n\n This type is a [syntax tree enum].\n\n [syntax tree enum]: enum.Expr.html#syntax-tree-enums\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6533},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":250599,"byte_end":250612,"line_start":446,"line_end":446,"column_start":18,"column_end":31},"name":"PredicateType","qualname":"::generics::PredicateType","value":"PredicateType { lifetimes, bounded_ty, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":6534},{"krate":0,"index":6535},{"krate":0,"index":6536},{"krate":0,"index":6537}],"decl_id":null,"docs":" A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6534},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":250682,"byte_end":250691,"line_start":448,"line_end":448,"column_start":17,"column_end":26},"name":"lifetimes","qualname":"::generics::PredicateType::lifetimes","value":"std::option::Option<generics::BoundLifetimes>","parent":{"krate":0,"index":6533},"children":[],"decl_id":null,"docs":" Any lifetimes from a `for` binding\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6535},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":250772,"byte_end":250782,"line_start":450,"line_end":450,"column_start":17,"column_end":27},"name":"bounded_ty","qualname":"::generics::PredicateType::bounded_ty","value":"ty::Type","parent":{"krate":0,"index":6533},"children":[],"decl_id":null,"docs":" The type being bounded\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6536},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":250806,"byte_end":250817,"line_start":451,"line_end":451,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::generics::PredicateType::colon_token","value":"token::Colon","parent":{"krate":0,"index":6533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6537},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":250911,"byte_end":250917,"line_start":453,"line_end":453,"column_start":17,"column_end":23},"name":"bounds","qualname":"::generics::PredicateType::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":6533},"children":[],"decl_id":null,"docs":" Trait and lifetime bounds (`Clone+Send+'static`)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6540},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251179,"byte_end":251196,"line_start":460,"line_end":460,"column_start":22,"column_end":39},"name":"PredicateLifetime","qualname":"::generics::PredicateLifetime","value":"PredicateLifetime { lifetime, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":6541},{"krate":0,"index":6542},{"krate":0,"index":6543}],"decl_id":null,"docs":" A lifetime predicate in a `where` clause: `'a: 'b + 'c`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6541},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251215,"byte_end":251223,"line_start":461,"line_end":461,"column_start":17,"column_end":25},"name":"lifetime","qualname":"::generics::PredicateLifetime::lifetime","value":"lifetime::Lifetime","parent":{"krate":0,"index":6540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6542},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251251,"byte_end":251262,"line_start":462,"line_end":462,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::generics::PredicateLifetime::colon_token","value":"token::Colon","parent":{"krate":0,"index":6540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6543},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251291,"byte_end":251297,"line_start":463,"line_end":463,"column_start":17,"column_end":23},"name":"bounds","qualname":"::generics::PredicateLifetime::bounds","value":"punctuated::Punctuated<lifetime::Lifetime, token::Add>","parent":{"krate":0,"index":6540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6546},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251547,"byte_end":251558,"line_start":470,"line_end":470,"column_start":16,"column_end":27},"name":"PredicateEq","qualname":"::generics::PredicateEq","value":"PredicateEq { lhs_ty, eq_token, rhs_ty }","parent":null,"children":[{"krate":0,"index":6547},{"krate":0,"index":6548},{"krate":0,"index":6549}],"decl_id":null,"docs":" An equality predicate in a `where` clause (unsupported).\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6547},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251577,"byte_end":251583,"line_start":471,"line_end":471,"column_start":17,"column_end":23},"name":"lhs_ty","qualname":"::generics::PredicateEq::lhs_ty","value":"ty::Type","parent":{"krate":0,"index":6546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6548},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251607,"byte_end":251615,"line_start":472,"line_end":472,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::generics::PredicateEq::eq_token","value":"token::Eq","parent":{"krate":0,"index":6546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6549},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251644,"byte_end":251650,"line_start":473,"line_end":473,"column_start":17,"column_end":23},"name":"rhs_ty","qualname":"::generics::PredicateEq::rhs_ty","value":"ty::Type","parent":{"krate":0,"index":6546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6591},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":276129,"byte_end":276140,"line_start":29,"line_end":29,"column_start":13,"column_end":24},"name":"ExternCrate","qualname":"::item::Item::ExternCrate","value":"Item::ExternCrate(ItemExternCrate)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" An `extern crate` item: `extern crate serde`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6594},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":276624,"byte_end":276627,"line_start":42,"line_end":42,"column_start":13,"column_end":16},"name":"Use","qualname":"::item::Item::Use","value":"Item::Use(ItemUse)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" A use declaration: `use std::collections::HashMap`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6597},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277047,"byte_end":277053,"line_start":54,"line_end":54,"column_start":13,"column_end":19},"name":"Static","qualname":"::item::Item::Static","value":"Item::Static(ItemStatic)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" A static item: `static BIKE: Shed = Shed(42)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6600},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277616,"byte_end":277621,"line_start":70,"line_end":70,"column_start":13,"column_end":18},"name":"Const","qualname":"::item::Item::Const","value":"Item::Const(ItemConst)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" A constant item: `const MAX: u16 = 65535`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6603},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278173,"byte_end":278175,"line_start":86,"line_end":86,"column_start":13,"column_end":15},"name":"Fn","qualname":"::item::Item::Fn","value":"Item::Fn(ItemFn)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" A free-standing function: `fn process(n: usize) -> Result<()> { ...\n }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6606},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278730,"byte_end":278733,"line_start":101,"line_end":101,"column_start":13,"column_end":16},"name":"Mod","qualname":"::item::Item::Mod","value":"Item::Mod(ItemMod)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" A module or module declaration: `mod m` or `mod m { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6609},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":279164,"byte_end":279174,"line_start":113,"line_end":113,"column_start":13,"column_end":23},"name":"ForeignMod","qualname":"::item::Item::ForeignMod","value":"Item::ForeignMod(ItemForeignMod)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" A block of foreign items: `extern \"C\" { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6612},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":279536,"byte_end":279540,"line_start":123,"line_end":123,"column_start":13,"column_end":17},"name":"Type","qualname":"::item::Item::Type","value":"Item::Type(ItemType)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" A type alias: `type Result<T> = std::result::Result<T, MyError>`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6615},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280035,"byte_end":280046,"line_start":137,"line_end":137,"column_start":13,"column_end":24},"name":"Existential","qualname":"::item::Item::Existential","value":"Item::Existential(ItemExistential)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" An existential type: `existential type Iter: Iterator<Item = u8>`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6618},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280627,"byte_end":280633,"line_start":152,"line_end":152,"column_start":13,"column_end":19},"name":"Struct","qualname":"::item::Item::Struct","value":"Item::Struct(ItemStruct)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" A struct definition: `struct Foo<A> { x: A }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6621},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281092,"byte_end":281096,"line_start":165,"line_end":165,"column_start":13,"column_end":17},"name":"Enum","qualname":"::item::Item::Enum","value":"Item::Enum(ItemEnum)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6624},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281572,"byte_end":281577,"line_start":178,"line_end":178,"column_start":13,"column_end":18},"name":"Union","qualname":"::item::Item::Union","value":"Item::Union(ItemUnion)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" A union definition: `union Foo<A, B> { x: A, y: B }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6627},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281988,"byte_end":281993,"line_start":190,"line_end":190,"column_start":13,"column_end":18},"name":"Trait","qualname":"::item::Item::Trait","value":"Item::Trait(ItemTrait)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" A trait definition: `pub trait Iterator { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6630},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282678,"byte_end":282688,"line_start":207,"line_end":207,"column_start":13,"column_end":23},"name":"TraitAlias","qualname":"::item::Item::TraitAlias","value":"Item::TraitAlias(ItemTraitAlias)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" A trait alias: `pub trait SharableIterator = Iterator + Sync`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6633},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":283256,"byte_end":283260,"line_start":222,"line_end":222,"column_start":13,"column_end":17},"name":"Impl","qualname":"::item::Item::Impl","value":"Item::Impl(ItemImpl)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" An impl block providing trait or associated items: `impl<A> Trait\n for Data<A> { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6636},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":283961,"byte_end":283966,"line_start":239,"line_end":239,"column_start":13,"column_end":18},"name":"Macro","qualname":"::item::Item::Macro","value":"Item::Macro(ItemMacro)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" A macro invocation, which includes `macro_rules!` definitions.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6639},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":284390,"byte_end":284396,"line_start":250,"line_end":250,"column_start":13,"column_end":19},"name":"Macro2","qualname":"::item::Item::Macro2","value":"Item::Macro2(ItemMacro2)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" A 2.0-style declarative macro introduced by the `macro` keyword.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6642},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":284895,"byte_end":284903,"line_start":264,"line_end":264,"column_start":13,"column_end":21},"name":"Verbatim","qualname":"::item::Item::Verbatim","value":"Item::Verbatim(ItemVerbatim)","parent":{"krate":0,"index":6590},"children":[],"decl_id":null,"docs":" Tokens forming an item not interpreted by Syn.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6590},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":275960,"byte_end":275964,"line_start":25,"line_end":25,"column_start":14,"column_end":18},"name":"Item","qualname":"::item::Item","value":"Item::{ExternCrate, Use, Static, Const, Fn, Mod, ForeignMod, Type, Existential, Struct, Enum, Union, Trait, TraitAlias, Impl, Macro, Macro2, Verbatim}","parent":null,"children":[{"krate":0,"index":6591},{"krate":0,"index":6594},{"krate":0,"index":6597},{"krate":0,"index":6600},{"krate":0,"index":6603},{"krate":0,"index":6606},{"krate":0,"index":6609},{"krate":0,"index":6612},{"krate":0,"index":6615},{"krate":0,"index":6618},{"krate":0,"index":6621},{"krate":0,"index":6624},{"krate":0,"index":6627},{"krate":0,"index":6630},{"krate":0,"index":6633},{"krate":0,"index":6636},{"krate":0,"index":6639},{"krate":0,"index":6642}],"decl_id":null,"docs":" Things that can appear directly inside of a module or scope.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n\n # Syntax tree enum\n\n This type is a [syntax tree enum].\n\n [syntax tree enum]: enum.Expr.html#syntax-tree-enums\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6647},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":276141,"byte_end":276156,"line_start":29,"line_end":29,"column_start":25,"column_end":40},"name":"ItemExternCrate","qualname":"::item::ItemExternCrate","value":"ItemExternCrate { attrs, vis, extern_token, crate_token, ident, rename, semi_token }","parent":null,"children":[{"krate":0,"index":6648},{"krate":0,"index":6649},{"krate":0,"index":6650},{"krate":0,"index":6651},{"krate":0,"index":6652},{"krate":0,"index":6653},{"krate":0,"index":6654}],"decl_id":null,"docs":" An `extern crate` item: `extern crate serde`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6648},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":276175,"byte_end":276180,"line_start":30,"line_end":30,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ItemExternCrate::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6647},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6649},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":276214,"byte_end":276217,"line_start":31,"line_end":31,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ItemExternCrate::vis","value":"data::Visibility","parent":{"krate":0,"index":6647},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6650},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":276247,"byte_end":276259,"line_start":32,"line_end":32,"column_start":17,"column_end":29},"name":"extern_token","qualname":"::item::ItemExternCrate::extern_token","value":"token::Extern","parent":{"krate":0,"index":6647},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6651},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":276293,"byte_end":276304,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"name":"crate_token","qualname":"::item::ItemExternCrate::crate_token","value":"token::Crate","parent":{"krate":0,"index":6647},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6652},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":276337,"byte_end":276342,"line_start":34,"line_end":34,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ItemExternCrate::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6647},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6653},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":276367,"byte_end":276373,"line_start":35,"line_end":35,"column_start":17,"column_end":23},"name":"rename","qualname":"::item::ItemExternCrate::rename","value":"std::option::Option<(token::As, proc_macro2::Ident)>","parent":{"krate":0,"index":6647},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6654},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":276420,"byte_end":276430,"line_start":36,"line_end":36,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::ItemExternCrate::semi_token","value":"token::Semi","parent":{"krate":0,"index":6647},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6657},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":276628,"byte_end":276635,"line_start":42,"line_end":42,"column_start":17,"column_end":24},"name":"ItemUse","qualname":"::item::ItemUse","value":"ItemUse { attrs, vis, use_token, leading_colon, tree, semi_token }","parent":null,"children":[{"krate":0,"index":6658},{"krate":0,"index":6659},{"krate":0,"index":6660},{"krate":0,"index":6661},{"krate":0,"index":6662},{"krate":0,"index":6663}],"decl_id":null,"docs":" A use declaration: `use std::collections::HashMap`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6658},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":276654,"byte_end":276659,"line_start":43,"line_end":43,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ItemUse::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6657},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6659},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":276693,"byte_end":276696,"line_start":44,"line_end":44,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ItemUse::vis","value":"data::Visibility","parent":{"krate":0,"index":6657},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6660},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":276726,"byte_end":276735,"line_start":45,"line_end":45,"column_start":17,"column_end":26},"name":"use_token","qualname":"::item::ItemUse::use_token","value":"token::Use","parent":{"krate":0,"index":6657},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6661},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":276766,"byte_end":276779,"line_start":46,"line_end":46,"column_start":17,"column_end":30},"name":"leading_colon","qualname":"::item::ItemUse::leading_colon","value":"std::option::Option<token::Colon2>","parent":{"krate":0,"index":6657},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6662},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":276817,"byte_end":276821,"line_start":47,"line_end":47,"column_start":17,"column_end":21},"name":"tree","qualname":"::item::ItemUse::tree","value":"item::UseTree","parent":{"krate":0,"index":6657},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6663},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":276848,"byte_end":276858,"line_start":48,"line_end":48,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::ItemUse::semi_token","value":"token::Semi","parent":{"krate":0,"index":6657},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6666},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277054,"byte_end":277064,"line_start":54,"line_end":54,"column_start":20,"column_end":30},"name":"ItemStatic","qualname":"::item::ItemStatic","value":"ItemStatic { attrs, vis, static_token, mutability, ident, colon_token, ty, eq_token, expr, semi_token }","parent":null,"children":[{"krate":0,"index":6667},{"krate":0,"index":6668},{"krate":0,"index":6669},{"krate":0,"index":6670},{"krate":0,"index":6671},{"krate":0,"index":6672},{"krate":0,"index":6673},{"krate":0,"index":6674},{"krate":0,"index":6675},{"krate":0,"index":6676}],"decl_id":null,"docs":" A static item: `static BIKE: Shed = Shed(42)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6667},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277083,"byte_end":277088,"line_start":55,"line_end":55,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ItemStatic::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6668},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277122,"byte_end":277125,"line_start":56,"line_end":56,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ItemStatic::vis","value":"data::Visibility","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6669},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277155,"byte_end":277167,"line_start":57,"line_end":57,"column_start":17,"column_end":29},"name":"static_token","qualname":"::item::ItemStatic::static_token","value":"token::Static","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6670},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277201,"byte_end":277211,"line_start":58,"line_end":58,"column_start":17,"column_end":27},"name":"mutability","qualname":"::item::ItemStatic::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6671},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277250,"byte_end":277255,"line_start":59,"line_end":59,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ItemStatic::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6672},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277280,"byte_end":277291,"line_start":60,"line_end":60,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::item::ItemStatic::colon_token","value":"token::Colon","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6673},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277320,"byte_end":277322,"line_start":61,"line_end":61,"column_start":17,"column_end":19},"name":"ty","qualname":"::item::ItemStatic::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6674},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277351,"byte_end":277359,"line_start":62,"line_end":62,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::item::ItemStatic::eq_token","value":"token::Eq","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6675},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277388,"byte_end":277392,"line_start":63,"line_end":63,"column_start":17,"column_end":21},"name":"expr","qualname":"::item::ItemStatic::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6676},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277421,"byte_end":277431,"line_start":64,"line_end":64,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::ItemStatic::semi_token","value":"token::Semi","parent":{"krate":0,"index":6666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6679},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277622,"byte_end":277631,"line_start":70,"line_end":70,"column_start":19,"column_end":28},"name":"ItemConst","qualname":"::item::ItemConst","value":"ItemConst { attrs, vis, const_token, ident, colon_token, ty, eq_token, expr, semi_token }","parent":null,"children":[{"krate":0,"index":6680},{"krate":0,"index":6681},{"krate":0,"index":6682},{"krate":0,"index":6683},{"krate":0,"index":6684},{"krate":0,"index":6685},{"krate":0,"index":6686},{"krate":0,"index":6687},{"krate":0,"index":6688}],"decl_id":null,"docs":" A constant item: `const MAX: u16 = 65535`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6680},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277650,"byte_end":277655,"line_start":71,"line_end":71,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ItemConst::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6681},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277689,"byte_end":277692,"line_start":72,"line_end":72,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ItemConst::vis","value":"data::Visibility","parent":{"krate":0,"index":6679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6682},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277722,"byte_end":277733,"line_start":73,"line_end":73,"column_start":17,"column_end":28},"name":"const_token","qualname":"::item::ItemConst::const_token","value":"token::Const","parent":{"krate":0,"index":6679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6683},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277766,"byte_end":277771,"line_start":74,"line_end":74,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ItemConst::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6684},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277796,"byte_end":277807,"line_start":75,"line_end":75,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::item::ItemConst::colon_token","value":"token::Colon","parent":{"krate":0,"index":6679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6685},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277836,"byte_end":277838,"line_start":76,"line_end":76,"column_start":17,"column_end":19},"name":"ty","qualname":"::item::ItemConst::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":6679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6686},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277867,"byte_end":277875,"line_start":77,"line_end":77,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::item::ItemConst::eq_token","value":"token::Eq","parent":{"krate":0,"index":6679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6687},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277904,"byte_end":277908,"line_start":78,"line_end":78,"column_start":17,"column_end":21},"name":"expr","qualname":"::item::ItemConst::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":6679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6688},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":277937,"byte_end":277947,"line_start":79,"line_end":79,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::ItemConst::semi_token","value":"token::Semi","parent":{"krate":0,"index":6679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6691},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278176,"byte_end":278182,"line_start":86,"line_end":86,"column_start":16,"column_end":22},"name":"ItemFn","qualname":"::item::ItemFn","value":"ItemFn { attrs, vis, constness, asyncness, unsafety, abi, ident, decl, block }","parent":null,"children":[{"krate":0,"index":6692},{"krate":0,"index":6693},{"krate":0,"index":6694},{"krate":0,"index":6695},{"krate":0,"index":6696},{"krate":0,"index":6697},{"krate":0,"index":6698},{"krate":0,"index":6699},{"krate":0,"index":6700}],"decl_id":null,"docs":" A free-standing function: `fn process(n: usize) -> Result<()> { ...\n }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6692},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278201,"byte_end":278206,"line_start":87,"line_end":87,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ItemFn::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6693},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278240,"byte_end":278243,"line_start":88,"line_end":88,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ItemFn::vis","value":"data::Visibility","parent":{"krate":0,"index":6691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6694},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278273,"byte_end":278282,"line_start":89,"line_end":89,"column_start":17,"column_end":26},"name":"constness","qualname":"::item::ItemFn::constness","value":"std::option::Option<token::Const>","parent":{"krate":0,"index":6691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6695},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278323,"byte_end":278332,"line_start":90,"line_end":90,"column_start":17,"column_end":26},"name":"asyncness","qualname":"::item::ItemFn::asyncness","value":"std::option::Option<token::Async>","parent":{"krate":0,"index":6691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6696},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278373,"byte_end":278381,"line_start":91,"line_end":91,"column_start":17,"column_end":25},"name":"unsafety","qualname":"::item::ItemFn::unsafety","value":"std::option::Option<token::Unsafe>","parent":{"krate":0,"index":6691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6697},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278423,"byte_end":278426,"line_start":92,"line_end":92,"column_start":17,"column_end":20},"name":"abi","qualname":"::item::ItemFn::abi","value":"std::option::Option<ty::Abi>","parent":{"krate":0,"index":6691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6698},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278457,"byte_end":278462,"line_start":93,"line_end":93,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ItemFn::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6699},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278487,"byte_end":278491,"line_start":94,"line_end":94,"column_start":17,"column_end":21},"name":"decl","qualname":"::item::ItemFn::decl","value":"std::boxed::Box<item::FnDecl>","parent":{"krate":0,"index":6691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6700},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278522,"byte_end":278527,"line_start":95,"line_end":95,"column_start":17,"column_end":22},"name":"block","qualname":"::item::ItemFn::block","value":"std::boxed::Box<expr::Block>","parent":{"krate":0,"index":6691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6703},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278734,"byte_end":278741,"line_start":101,"line_end":101,"column_start":17,"column_end":24},"name":"ItemMod","qualname":"::item::ItemMod","value":"ItemMod { attrs, vis, mod_token, ident, content, semi }","parent":null,"children":[{"krate":0,"index":6704},{"krate":0,"index":6705},{"krate":0,"index":6706},{"krate":0,"index":6707},{"krate":0,"index":6708},{"krate":0,"index":6709}],"decl_id":null,"docs":" A module or module declaration: `mod m` or `mod m { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6704},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278760,"byte_end":278765,"line_start":102,"line_end":102,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ItemMod::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6703},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6705},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278799,"byte_end":278802,"line_start":103,"line_end":103,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ItemMod::vis","value":"data::Visibility","parent":{"krate":0,"index":6703},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6706},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278832,"byte_end":278841,"line_start":104,"line_end":104,"column_start":17,"column_end":26},"name":"mod_token","qualname":"::item::ItemMod::mod_token","value":"token::Mod","parent":{"krate":0,"index":6703},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6707},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278872,"byte_end":278877,"line_start":105,"line_end":105,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ItemMod::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6703},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6708},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278902,"byte_end":278909,"line_start":106,"line_end":106,"column_start":17,"column_end":24},"name":"content","qualname":"::item::ItemMod::content","value":"std::option::Option<(token::Brace, std::vec::Vec<item::Item>)>","parent":{"krate":0,"index":6703},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6709},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":278962,"byte_end":278966,"line_start":107,"line_end":107,"column_start":17,"column_end":21},"name":"semi","qualname":"::item::ItemMod::semi","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":6703},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6712},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":279175,"byte_end":279189,"line_start":113,"line_end":113,"column_start":24,"column_end":38},"name":"ItemForeignMod","qualname":"::item::ItemForeignMod","value":"ItemForeignMod { attrs, abi, brace_token, items }","parent":null,"children":[{"krate":0,"index":6713},{"krate":0,"index":6714},{"krate":0,"index":6715},{"krate":0,"index":6716}],"decl_id":null,"docs":" A block of foreign items: `extern \"C\" { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6713},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":279208,"byte_end":279213,"line_start":114,"line_end":114,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ItemForeignMod::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6714},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":279247,"byte_end":279250,"line_start":115,"line_end":115,"column_start":17,"column_end":20},"name":"abi","qualname":"::item::ItemForeignMod::abi","value":"ty::Abi","parent":{"krate":0,"index":6712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6715},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":279273,"byte_end":279284,"line_start":116,"line_end":116,"column_start":17,"column_end":28},"name":"brace_token","qualname":"::item::ItemForeignMod::brace_token","value":"token::Brace","parent":{"krate":0,"index":6712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6716},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":279316,"byte_end":279321,"line_start":117,"line_end":117,"column_start":17,"column_end":22},"name":"items","qualname":"::item::ItemForeignMod::items","value":"std::vec::Vec<item::ForeignItem>","parent":{"krate":0,"index":6712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6719},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":279541,"byte_end":279549,"line_start":123,"line_end":123,"column_start":18,"column_end":26},"name":"ItemType","qualname":"::item::ItemType","value":"ItemType { attrs, vis, type_token, ident, generics, eq_token, ty, semi_token }","parent":null,"children":[{"krate":0,"index":6720},{"krate":0,"index":6721},{"krate":0,"index":6722},{"krate":0,"index":6723},{"krate":0,"index":6724},{"krate":0,"index":6725},{"krate":0,"index":6726},{"krate":0,"index":6727}],"decl_id":null,"docs":" A type alias: `type Result<T> = std::result::Result<T, MyError>`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6720},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":279568,"byte_end":279573,"line_start":124,"line_end":124,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ItemType::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6721},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":279607,"byte_end":279610,"line_start":125,"line_end":125,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ItemType::vis","value":"data::Visibility","parent":{"krate":0,"index":6719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6722},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":279640,"byte_end":279650,"line_start":126,"line_end":126,"column_start":17,"column_end":27},"name":"type_token","qualname":"::item::ItemType::type_token","value":"token::Type","parent":{"krate":0,"index":6719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6723},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":279682,"byte_end":279687,"line_start":127,"line_end":127,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ItemType::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6724},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":279712,"byte_end":279720,"line_start":128,"line_end":128,"column_start":17,"column_end":25},"name":"generics","qualname":"::item::ItemType::generics","value":"generics::Generics","parent":{"krate":0,"index":6719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6725},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":279748,"byte_end":279756,"line_start":129,"line_end":129,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::item::ItemType::eq_token","value":"token::Eq","parent":{"krate":0,"index":6719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6726},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":279785,"byte_end":279787,"line_start":130,"line_end":130,"column_start":17,"column_end":19},"name":"ty","qualname":"::item::ItemType::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":6719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6727},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":279816,"byte_end":279826,"line_start":131,"line_end":131,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::ItemType::semi_token","value":"token::Semi","parent":{"krate":0,"index":6719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6730},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280047,"byte_end":280062,"line_start":137,"line_end":137,"column_start":25,"column_end":40},"name":"ItemExistential","qualname":"::item::ItemExistential","value":"ItemExistential { attrs, vis, existential_token, type_token, ident, generics, colon_token, bounds, semi_token }","parent":null,"children":[{"krate":0,"index":6731},{"krate":0,"index":6732},{"krate":0,"index":6733},{"krate":0,"index":6734},{"krate":0,"index":6735},{"krate":0,"index":6736},{"krate":0,"index":6737},{"krate":0,"index":6738},{"krate":0,"index":6739}],"decl_id":null,"docs":" An existential type: `existential type Iter: Iterator<Item = u8>`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6731},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280081,"byte_end":280086,"line_start":138,"line_end":138,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ItemExistential::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6732},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280120,"byte_end":280123,"line_start":139,"line_end":139,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ItemExistential::vis","value":"data::Visibility","parent":{"krate":0,"index":6730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6733},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280153,"byte_end":280170,"line_start":140,"line_end":140,"column_start":17,"column_end":34},"name":"existential_token","qualname":"::item::ItemExistential::existential_token","value":"token::Existential","parent":{"krate":0,"index":6730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6734},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280209,"byte_end":280219,"line_start":141,"line_end":141,"column_start":17,"column_end":27},"name":"type_token","qualname":"::item::ItemExistential::type_token","value":"token::Type","parent":{"krate":0,"index":6730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6735},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280251,"byte_end":280256,"line_start":142,"line_end":142,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ItemExistential::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6736},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280281,"byte_end":280289,"line_start":143,"line_end":143,"column_start":17,"column_end":25},"name":"generics","qualname":"::item::ItemExistential::generics","value":"generics::Generics","parent":{"krate":0,"index":6730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6737},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280317,"byte_end":280328,"line_start":144,"line_end":144,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::item::ItemExistential::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":6730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6738},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280365,"byte_end":280371,"line_start":145,"line_end":145,"column_start":17,"column_end":23},"name":"bounds","qualname":"::item::ItemExistential::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":6730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6739},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280428,"byte_end":280438,"line_start":146,"line_end":146,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::ItemExistential::semi_token","value":"token::Semi","parent":{"krate":0,"index":6730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6742},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280634,"byte_end":280644,"line_start":152,"line_end":152,"column_start":20,"column_end":30},"name":"ItemStruct","qualname":"::item::ItemStruct","value":"ItemStruct { attrs, vis, struct_token, ident, generics, fields, semi_token }","parent":null,"children":[{"krate":0,"index":6743},{"krate":0,"index":6744},{"krate":0,"index":6745},{"krate":0,"index":6746},{"krate":0,"index":6747},{"krate":0,"index":6748},{"krate":0,"index":6749}],"decl_id":null,"docs":" A struct definition: `struct Foo<A> { x: A }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6743},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280663,"byte_end":280668,"line_start":153,"line_end":153,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ItemStruct::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6744},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280702,"byte_end":280705,"line_start":154,"line_end":154,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ItemStruct::vis","value":"data::Visibility","parent":{"krate":0,"index":6742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6745},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280735,"byte_end":280747,"line_start":155,"line_end":155,"column_start":17,"column_end":29},"name":"struct_token","qualname":"::item::ItemStruct::struct_token","value":"token::Struct","parent":{"krate":0,"index":6742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6746},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280781,"byte_end":280786,"line_start":156,"line_end":156,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ItemStruct::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6747},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280811,"byte_end":280819,"line_start":157,"line_end":157,"column_start":17,"column_end":25},"name":"generics","qualname":"::item::ItemStruct::generics","value":"generics::Generics","parent":{"krate":0,"index":6742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6748},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280847,"byte_end":280853,"line_start":158,"line_end":158,"column_start":17,"column_end":23},"name":"fields","qualname":"::item::ItemStruct::fields","value":"data::Fields","parent":{"krate":0,"index":6742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6749},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":280879,"byte_end":280889,"line_start":159,"line_end":159,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::ItemStruct::semi_token","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":6742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6752},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281097,"byte_end":281105,"line_start":165,"line_end":165,"column_start":18,"column_end":26},"name":"ItemEnum","qualname":"::item::ItemEnum","value":"ItemEnum { attrs, vis, enum_token, ident, generics, brace_token, variants }","parent":null,"children":[{"krate":0,"index":6753},{"krate":0,"index":6754},{"krate":0,"index":6755},{"krate":0,"index":6756},{"krate":0,"index":6757},{"krate":0,"index":6758},{"krate":0,"index":6759}],"decl_id":null,"docs":" An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6753},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281124,"byte_end":281129,"line_start":166,"line_end":166,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ItemEnum::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6754},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281163,"byte_end":281166,"line_start":167,"line_end":167,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ItemEnum::vis","value":"data::Visibility","parent":{"krate":0,"index":6752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6755},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281196,"byte_end":281206,"line_start":168,"line_end":168,"column_start":17,"column_end":27},"name":"enum_token","qualname":"::item::ItemEnum::enum_token","value":"token::Enum","parent":{"krate":0,"index":6752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6756},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281238,"byte_end":281243,"line_start":169,"line_end":169,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ItemEnum::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6757},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281268,"byte_end":281276,"line_start":170,"line_end":170,"column_start":17,"column_end":25},"name":"generics","qualname":"::item::ItemEnum::generics","value":"generics::Generics","parent":{"krate":0,"index":6752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6758},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281304,"byte_end":281315,"line_start":171,"line_end":171,"column_start":17,"column_end":28},"name":"brace_token","qualname":"::item::ItemEnum::brace_token","value":"token::Brace","parent":{"krate":0,"index":6752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6759},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281347,"byte_end":281355,"line_start":172,"line_end":172,"column_start":17,"column_end":25},"name":"variants","qualname":"::item::ItemEnum::variants","value":"punctuated::Punctuated<data::Variant, token::Comma>","parent":{"krate":0,"index":6752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6762},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281578,"byte_end":281587,"line_start":178,"line_end":178,"column_start":19,"column_end":28},"name":"ItemUnion","qualname":"::item::ItemUnion","value":"ItemUnion { attrs, vis, union_token, ident, generics, fields }","parent":null,"children":[{"krate":0,"index":6763},{"krate":0,"index":6764},{"krate":0,"index":6765},{"krate":0,"index":6766},{"krate":0,"index":6767},{"krate":0,"index":6768}],"decl_id":null,"docs":" A union definition: `union Foo<A, B> { x: A, y: B }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6763},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281606,"byte_end":281611,"line_start":179,"line_end":179,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ItemUnion::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6764},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281645,"byte_end":281648,"line_start":180,"line_end":180,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ItemUnion::vis","value":"data::Visibility","parent":{"krate":0,"index":6762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6765},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281678,"byte_end":281689,"line_start":181,"line_end":181,"column_start":17,"column_end":28},"name":"union_token","qualname":"::item::ItemUnion::union_token","value":"token::Union","parent":{"krate":0,"index":6762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6766},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281722,"byte_end":281727,"line_start":182,"line_end":182,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ItemUnion::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6767},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281752,"byte_end":281760,"line_start":183,"line_end":183,"column_start":17,"column_end":25},"name":"generics","qualname":"::item::ItemUnion::generics","value":"generics::Generics","parent":{"krate":0,"index":6762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6768},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281788,"byte_end":281794,"line_start":184,"line_end":184,"column_start":17,"column_end":23},"name":"fields","qualname":"::item::ItemUnion::fields","value":"data::FieldsNamed","parent":{"krate":0,"index":6762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6771},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":281994,"byte_end":282003,"line_start":190,"line_end":190,"column_start":19,"column_end":28},"name":"ItemTrait","qualname":"::item::ItemTrait","value":"ItemTrait { attrs, vis, unsafety, auto_token, trait_token, ident, generics, colon_token, supertraits, brace_token, items }","parent":null,"children":[{"krate":0,"index":6772},{"krate":0,"index":6773},{"krate":0,"index":6774},{"krate":0,"index":6775},{"krate":0,"index":6776},{"krate":0,"index":6777},{"krate":0,"index":6778},{"krate":0,"index":6779},{"krate":0,"index":6780},{"krate":0,"index":6781},{"krate":0,"index":6782}],"decl_id":null,"docs":" A trait definition: `pub trait Iterator { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6772},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282022,"byte_end":282027,"line_start":191,"line_end":191,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ItemTrait::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6773},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282061,"byte_end":282064,"line_start":192,"line_end":192,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ItemTrait::vis","value":"data::Visibility","parent":{"krate":0,"index":6771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6774},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282094,"byte_end":282102,"line_start":193,"line_end":193,"column_start":17,"column_end":25},"name":"unsafety","qualname":"::item::ItemTrait::unsafety","value":"std::option::Option<token::Unsafe>","parent":{"krate":0,"index":6771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6775},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282144,"byte_end":282154,"line_start":194,"line_end":194,"column_start":17,"column_end":27},"name":"auto_token","qualname":"::item::ItemTrait::auto_token","value":"std::option::Option<token::Auto>","parent":{"krate":0,"index":6771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6776},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282194,"byte_end":282205,"line_start":195,"line_end":195,"column_start":17,"column_end":28},"name":"trait_token","qualname":"::item::ItemTrait::trait_token","value":"token::Trait","parent":{"krate":0,"index":6771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6777},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282238,"byte_end":282243,"line_start":196,"line_end":196,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ItemTrait::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6778},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282268,"byte_end":282276,"line_start":197,"line_end":197,"column_start":17,"column_end":25},"name":"generics","qualname":"::item::ItemTrait::generics","value":"generics::Generics","parent":{"krate":0,"index":6771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6779},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282304,"byte_end":282315,"line_start":198,"line_end":198,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::item::ItemTrait::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":6771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6780},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282352,"byte_end":282363,"line_start":199,"line_end":199,"column_start":17,"column_end":28},"name":"supertraits","qualname":"::item::ItemTrait::supertraits","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":6771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6781},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282420,"byte_end":282431,"line_start":200,"line_end":200,"column_start":17,"column_end":28},"name":"brace_token","qualname":"::item::ItemTrait::brace_token","value":"token::Brace","parent":{"krate":0,"index":6771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6782},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282463,"byte_end":282468,"line_start":201,"line_end":201,"column_start":17,"column_end":22},"name":"items","qualname":"::item::ItemTrait::items","value":"std::vec::Vec<item::TraitItem>","parent":{"krate":0,"index":6771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6785},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282689,"byte_end":282703,"line_start":207,"line_end":207,"column_start":24,"column_end":38},"name":"ItemTraitAlias","qualname":"::item::ItemTraitAlias","value":"ItemTraitAlias { attrs, vis, trait_token, ident, generics, eq_token, bounds, semi_token }","parent":null,"children":[{"krate":0,"index":6786},{"krate":0,"index":6787},{"krate":0,"index":6788},{"krate":0,"index":6789},{"krate":0,"index":6790},{"krate":0,"index":6791},{"krate":0,"index":6792},{"krate":0,"index":6793}],"decl_id":null,"docs":" A trait alias: `pub trait SharableIterator = Iterator + Sync`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6786},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282722,"byte_end":282727,"line_start":208,"line_end":208,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ItemTraitAlias::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6787},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282761,"byte_end":282764,"line_start":209,"line_end":209,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ItemTraitAlias::vis","value":"data::Visibility","parent":{"krate":0,"index":6785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6788},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282794,"byte_end":282805,"line_start":210,"line_end":210,"column_start":17,"column_end":28},"name":"trait_token","qualname":"::item::ItemTraitAlias::trait_token","value":"token::Trait","parent":{"krate":0,"index":6785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6789},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282838,"byte_end":282843,"line_start":211,"line_end":211,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ItemTraitAlias::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6790},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282868,"byte_end":282876,"line_start":212,"line_end":212,"column_start":17,"column_end":25},"name":"generics","qualname":"::item::ItemTraitAlias::generics","value":"generics::Generics","parent":{"krate":0,"index":6785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6791},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282904,"byte_end":282912,"line_start":213,"line_end":213,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::item::ItemTraitAlias::eq_token","value":"token::Eq","parent":{"krate":0,"index":6785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6792},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":282941,"byte_end":282947,"line_start":214,"line_end":214,"column_start":17,"column_end":23},"name":"bounds","qualname":"::item::ItemTraitAlias::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":6785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6793},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":283004,"byte_end":283014,"line_start":215,"line_end":215,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::ItemTraitAlias::semi_token","value":"token::Semi","parent":{"krate":0,"index":6785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6796},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":283261,"byte_end":283269,"line_start":222,"line_end":222,"column_start":18,"column_end":26},"name":"ItemImpl","qualname":"::item::ItemImpl","value":"ItemImpl { attrs, defaultness, unsafety, impl_token, generics, trait_, self_ty, brace_token, items }","parent":null,"children":[{"krate":0,"index":6797},{"krate":0,"index":6798},{"krate":0,"index":6799},{"krate":0,"index":6800},{"krate":0,"index":6801},{"krate":0,"index":6802},{"krate":0,"index":6803},{"krate":0,"index":6804},{"krate":0,"index":6805}],"decl_id":null,"docs":" An impl block providing trait or associated items: `impl<A> Trait\n for Data<A> { ... }`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6797},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":283288,"byte_end":283293,"line_start":223,"line_end":223,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ItemImpl::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6798},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":283327,"byte_end":283338,"line_start":224,"line_end":224,"column_start":17,"column_end":28},"name":"defaultness","qualname":"::item::ItemImpl::defaultness","value":"std::option::Option<token::Default>","parent":{"krate":0,"index":6796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6799},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":283381,"byte_end":283389,"line_start":225,"line_end":225,"column_start":17,"column_end":25},"name":"unsafety","qualname":"::item::ItemImpl::unsafety","value":"std::option::Option<token::Unsafe>","parent":{"krate":0,"index":6796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6800},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":283431,"byte_end":283441,"line_start":226,"line_end":226,"column_start":17,"column_end":27},"name":"impl_token","qualname":"::item::ItemImpl::impl_token","value":"token::Impl","parent":{"krate":0,"index":6796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6801},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":283473,"byte_end":283481,"line_start":227,"line_end":227,"column_start":17,"column_end":25},"name":"generics","qualname":"::item::ItemImpl::generics","value":"generics::Generics","parent":{"krate":0,"index":6796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6802},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":283553,"byte_end":283559,"line_start":229,"line_end":229,"column_start":17,"column_end":23},"name":"trait_","qualname":"::item::ItemImpl::trait_","value":"std::option::Option<(std::option::Option<token::Bang>, path::Path, token::For)>","parent":{"krate":0,"index":6796},"children":[],"decl_id":null,"docs":" Trait this impl implements.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6803},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":283668,"byte_end":283675,"line_start":231,"line_end":231,"column_start":17,"column_end":24},"name":"self_ty","qualname":"::item::ItemImpl::self_ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":6796},"children":[],"decl_id":null,"docs":" The Self type of the impl.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6804},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":283704,"byte_end":283715,"line_start":232,"line_end":232,"column_start":17,"column_end":28},"name":"brace_token","qualname":"::item::ItemImpl::brace_token","value":"token::Brace","parent":{"krate":0,"index":6796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6805},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":283747,"byte_end":283752,"line_start":233,"line_end":233,"column_start":17,"column_end":22},"name":"items","qualname":"::item::ItemImpl::items","value":"std::vec::Vec<item::ImplItem>","parent":{"krate":0,"index":6796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6808},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":283967,"byte_end":283976,"line_start":239,"line_end":239,"column_start":19,"column_end":28},"name":"ItemMacro","qualname":"::item::ItemMacro","value":"ItemMacro { attrs, ident, mac, semi_token }","parent":null,"children":[{"krate":0,"index":6809},{"krate":0,"index":6810},{"krate":0,"index":6811},{"krate":0,"index":6812}],"decl_id":null,"docs":" A macro invocation, which includes `macro_rules!` definitions.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6809},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":283995,"byte_end":284000,"line_start":240,"line_end":240,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ItemMacro::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6808},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6810},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":284099,"byte_end":284104,"line_start":242,"line_end":242,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ItemMacro::ident","value":"std::option::Option<proc_macro2::Ident>","parent":{"krate":0,"index":6808},"children":[],"decl_id":null,"docs":" The `example` in `macro_rules! example { ... }`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6811},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":284137,"byte_end":284140,"line_start":243,"line_end":243,"column_start":17,"column_end":20},"name":"mac","qualname":"::item::ItemMacro::mac","value":"mac::Macro","parent":{"krate":0,"index":6808},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6812},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":284165,"byte_end":284175,"line_start":244,"line_end":244,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::ItemMacro::semi_token","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":6808},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6815},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":284397,"byte_end":284407,"line_start":250,"line_end":250,"column_start":20,"column_end":30},"name":"ItemMacro2","qualname":"::item::ItemMacro2","value":"ItemMacro2 { attrs, vis, macro_token, ident, paren_token, args, brace_token, body }","parent":null,"children":[{"krate":0,"index":6816},{"krate":0,"index":6817},{"krate":0,"index":6818},{"krate":0,"index":6819},{"krate":0,"index":6820},{"krate":0,"index":6821},{"krate":0,"index":6822},{"krate":0,"index":6823}],"decl_id":null,"docs":" A 2.0-style declarative macro introduced by the `macro` keyword.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6816},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":284447,"byte_end":284452,"line_start":251,"line_end":251,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ItemMacro2::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6817},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":284486,"byte_end":284489,"line_start":252,"line_end":252,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ItemMacro2::vis","value":"data::Visibility","parent":{"krate":0,"index":6815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6818},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":284519,"byte_end":284530,"line_start":253,"line_end":253,"column_start":17,"column_end":28},"name":"macro_token","qualname":"::item::ItemMacro2::macro_token","value":"token::Macro","parent":{"krate":0,"index":6815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6819},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":284563,"byte_end":284568,"line_start":254,"line_end":254,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ItemMacro2::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6820},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":284593,"byte_end":284604,"line_start":255,"line_end":255,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::item::ItemMacro2::paren_token","value":"token::Paren","parent":{"krate":0,"index":6815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6821},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":284629,"byte_end":284633,"line_start":256,"line_end":256,"column_start":17,"column_end":21},"name":"args","qualname":"::item::ItemMacro2::args","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":6815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6822},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":284664,"byte_end":284675,"line_start":257,"line_end":257,"column_start":17,"column_end":28},"name":"brace_token","qualname":"::item::ItemMacro2::brace_token","value":"token::Brace","parent":{"krate":0,"index":6815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6823},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":284700,"byte_end":284704,"line_start":258,"line_end":258,"column_start":17,"column_end":21},"name":"body","qualname":"::item::ItemMacro2::body","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":6815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6826},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":284904,"byte_end":284916,"line_start":264,"line_end":264,"column_start":22,"column_end":34},"name":"ItemVerbatim","qualname":"::item::ItemVerbatim","value":"ItemVerbatim { tts }","parent":null,"children":[{"krate":0,"index":6827}],"decl_id":null,"docs":" Tokens forming an item not interpreted by Syn.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6827},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":284956,"byte_end":284959,"line_start":265,"line_end":265,"column_start":17,"column_end":20},"name":"tts","qualname":"::item::ItemVerbatim::tts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":6826},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6843},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":288302,"byte_end":288306,"line_start":374,"line_end":374,"column_start":13,"column_end":17},"name":"Path","qualname":"::item::UseTree::Path","value":"UseTree::Path(UsePath)","parent":{"krate":0,"index":6842},"children":[],"decl_id":null,"docs":" A path prefix of imports in a `use` item: `std::...`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6846},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":288605,"byte_end":288609,"line_start":383,"line_end":383,"column_start":13,"column_end":17},"name":"Name","qualname":"::item::UseTree::Name","value":"UseTree::Name(UseName)","parent":{"krate":0,"index":6842},"children":[],"decl_id":null,"docs":" An identifier imported by a `use` item: `HashMap`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6849},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":288845,"byte_end":288851,"line_start":390,"line_end":390,"column_start":13,"column_end":19},"name":"Rename","qualname":"::item::UseTree::Rename","value":"UseTree::Rename(UseRename)","parent":{"krate":0,"index":6842},"children":[],"decl_id":null,"docs":" An renamed identifier imported by a `use` item: `HashMap as Map`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6852},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":289128,"byte_end":289132,"line_start":399,"line_end":399,"column_start":13,"column_end":17},"name":"Glob","qualname":"::item::UseTree::Glob","value":"UseTree::Glob(UseGlob)","parent":{"krate":0,"index":6842},"children":[],"decl_id":null,"docs":" A glob import in a `use` item: `*`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6855},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":289367,"byte_end":289372,"line_start":406,"line_end":406,"column_start":13,"column_end":18},"name":"Group","qualname":"::item::UseTree::Group","value":"UseTree::Group(UseGroup)","parent":{"krate":0,"index":6842},"children":[],"decl_id":null,"docs":" A braced group of imports in a `use` item: `{A, B, C}`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6842},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":288122,"byte_end":288129,"line_start":370,"line_end":370,"column_start":14,"column_end":21},"name":"UseTree","qualname":"::item::UseTree","value":"UseTree::{Path, Name, Rename, Glob, Group}","parent":null,"children":[{"krate":0,"index":6843},{"krate":0,"index":6846},{"krate":0,"index":6849},{"krate":0,"index":6852},{"krate":0,"index":6855}],"decl_id":null,"docs":" A suffix of an import tree in a `use` item: `Type as Renamed` or `*`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n\n # Syntax tree enum\n\n This type is a [syntax tree enum].\n\n [syntax tree enum]: enum.Expr.html#syntax-tree-enums\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6860},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":288307,"byte_end":288314,"line_start":374,"line_end":374,"column_start":18,"column_end":25},"name":"UsePath","qualname":"::item::UsePath","value":"UsePath { ident, colon2_token, tree }","parent":null,"children":[{"krate":0,"index":6861},{"krate":0,"index":6862},{"krate":0,"index":6863}],"decl_id":null,"docs":" A path prefix of imports in a `use` item: `std::...`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6861},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":288333,"byte_end":288338,"line_start":375,"line_end":375,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::UsePath::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6862},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":288363,"byte_end":288375,"line_start":376,"line_end":376,"column_start":17,"column_end":29},"name":"colon2_token","qualname":"::item::UsePath::colon2_token","value":"token::Colon2","parent":{"krate":0,"index":6860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6863},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":288405,"byte_end":288409,"line_start":377,"line_end":377,"column_start":17,"column_end":21},"name":"tree","qualname":"::item::UsePath::tree","value":"std::boxed::Box<item::UseTree>","parent":{"krate":0,"index":6860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6866},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":288610,"byte_end":288617,"line_start":383,"line_end":383,"column_start":18,"column_end":25},"name":"UseName","qualname":"::item::UseName","value":"UseName { ident }","parent":null,"children":[{"krate":0,"index":6867}],"decl_id":null,"docs":" An identifier imported by a `use` item: `HashMap`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6867},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":288636,"byte_end":288641,"line_start":384,"line_end":384,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::UseName::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6870},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":288852,"byte_end":288861,"line_start":390,"line_end":390,"column_start":20,"column_end":29},"name":"UseRename","qualname":"::item::UseRename","value":"UseRename { ident, as_token, rename }","parent":null,"children":[{"krate":0,"index":6871},{"krate":0,"index":6872},{"krate":0,"index":6873}],"decl_id":null,"docs":" An renamed identifier imported by a `use` item: `HashMap as Map`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6871},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":288880,"byte_end":288885,"line_start":391,"line_end":391,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::UseRename::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6872},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":288910,"byte_end":288918,"line_start":392,"line_end":392,"column_start":17,"column_end":25},"name":"as_token","qualname":"::item::UseRename::as_token","value":"token::As","parent":{"krate":0,"index":6870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6873},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":288948,"byte_end":288954,"line_start":393,"line_end":393,"column_start":17,"column_end":23},"name":"rename","qualname":"::item::UseRename::rename","value":"proc_macro2::Ident","parent":{"krate":0,"index":6870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6876},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":289133,"byte_end":289140,"line_start":399,"line_end":399,"column_start":18,"column_end":25},"name":"UseGlob","qualname":"::item::UseGlob","value":"UseGlob { star_token }","parent":null,"children":[{"krate":0,"index":6877}],"decl_id":null,"docs":" A glob import in a `use` item: `*`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6877},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":289159,"byte_end":289169,"line_start":400,"line_end":400,"column_start":17,"column_end":27},"name":"star_token","qualname":"::item::UseGlob::star_token","value":"token::Star","parent":{"krate":0,"index":6876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6880},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":289373,"byte_end":289381,"line_start":406,"line_end":406,"column_start":19,"column_end":27},"name":"UseGroup","qualname":"::item::UseGroup","value":"UseGroup { brace_token, items }","parent":null,"children":[{"krate":0,"index":6881},{"krate":0,"index":6882}],"decl_id":null,"docs":" A braced group of imports in a `use` item: `{A, B, C}`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6881},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":289400,"byte_end":289411,"line_start":407,"line_end":407,"column_start":17,"column_end":28},"name":"brace_token","qualname":"::item::UseGroup::brace_token","value":"token::Brace","parent":{"krate":0,"index":6880},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6882},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":289443,"byte_end":289448,"line_start":408,"line_end":408,"column_start":17,"column_end":22},"name":"items","qualname":"::item::UseGroup::items","value":"punctuated::Punctuated<item::UseTree, token::Comma>","parent":{"krate":0,"index":6880},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6898},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":290141,"byte_end":290143,"line_start":430,"line_end":430,"column_start":13,"column_end":15},"name":"Fn","qualname":"::item::ForeignItem::Fn","value":"ForeignItem::Fn(ForeignItemFn)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" A foreign function in an `extern` block.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6901},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":290527,"byte_end":290533,"line_start":441,"line_end":441,"column_start":13,"column_end":19},"name":"Static","qualname":"::item::ForeignItem::Static","value":"ForeignItem::Static(ForeignItemStatic)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" A foreign static item in an `extern` block: `static ext: u8`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6904},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":291040,"byte_end":291044,"line_start":455,"line_end":455,"column_start":13,"column_end":17},"name":"Type","qualname":"::item::ForeignItem::Type","value":"ForeignItem::Type(ForeignItemType)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" A foreign type in an `extern` block: `type void`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6907},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":291418,"byte_end":291423,"line_start":466,"line_end":466,"column_start":13,"column_end":18},"name":"Macro","qualname":"::item::ForeignItem::Macro","value":"ForeignItem::Macro(ForeignItemMacro)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" A macro invocation within an extern block.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6910},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":291738,"byte_end":291746,"line_start":475,"line_end":475,"column_start":13,"column_end":21},"name":"Verbatim","qualname":"::item::ForeignItem::Verbatim","value":"ForeignItem::Verbatim(ForeignItemVerbatim)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" Tokens in an `extern` block not interpreted by Syn.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6897},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":289970,"byte_end":289981,"line_start":426,"line_end":426,"column_start":14,"column_end":25},"name":"ForeignItem","qualname":"::item::ForeignItem","value":"ForeignItem::{Fn, Static, Type, Macro, Verbatim}","parent":null,"children":[{"krate":0,"index":6898},{"krate":0,"index":6901},{"krate":0,"index":6904},{"krate":0,"index":6907},{"krate":0,"index":6910}],"decl_id":null,"docs":" An item within an `extern` block.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n\n # Syntax tree enum\n\n This type is a [syntax tree enum].\n\n [syntax tree enum]: enum.Expr.html#syntax-tree-enums\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6915},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":290144,"byte_end":290157,"line_start":430,"line_end":430,"column_start":16,"column_end":29},"name":"ForeignItemFn","qualname":"::item::ForeignItemFn","value":"ForeignItemFn { attrs, vis, ident, decl, semi_token }","parent":null,"children":[{"krate":0,"index":6916},{"krate":0,"index":6917},{"krate":0,"index":6918},{"krate":0,"index":6919},{"krate":0,"index":6920}],"decl_id":null,"docs":" A foreign function in an `extern` block.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6916},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":290176,"byte_end":290181,"line_start":431,"line_end":431,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ForeignItemFn::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6915},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6917},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":290215,"byte_end":290218,"line_start":432,"line_end":432,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ForeignItemFn::vis","value":"data::Visibility","parent":{"krate":0,"index":6915},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6918},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":290248,"byte_end":290253,"line_start":433,"line_end":433,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ForeignItemFn::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6915},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6919},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":290278,"byte_end":290282,"line_start":434,"line_end":434,"column_start":17,"column_end":21},"name":"decl","qualname":"::item::ForeignItemFn::decl","value":"std::boxed::Box<item::FnDecl>","parent":{"krate":0,"index":6915},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6920},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":290313,"byte_end":290323,"line_start":435,"line_end":435,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::ForeignItemFn::semi_token","value":"token::Semi","parent":{"krate":0,"index":6915},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6923},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":290534,"byte_end":290551,"line_start":441,"line_end":441,"column_start":20,"column_end":37},"name":"ForeignItemStatic","qualname":"::item::ForeignItemStatic","value":"ForeignItemStatic { attrs, vis, static_token, mutability, ident, colon_token, ty, semi_token }","parent":null,"children":[{"krate":0,"index":6924},{"krate":0,"index":6925},{"krate":0,"index":6926},{"krate":0,"index":6927},{"krate":0,"index":6928},{"krate":0,"index":6929},{"krate":0,"index":6930},{"krate":0,"index":6931}],"decl_id":null,"docs":" A foreign static item in an `extern` block: `static ext: u8`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6924},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":290570,"byte_end":290575,"line_start":442,"line_end":442,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ForeignItemStatic::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6925},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":290609,"byte_end":290612,"line_start":443,"line_end":443,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ForeignItemStatic::vis","value":"data::Visibility","parent":{"krate":0,"index":6923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6926},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":290642,"byte_end":290654,"line_start":444,"line_end":444,"column_start":17,"column_end":29},"name":"static_token","qualname":"::item::ForeignItemStatic::static_token","value":"token::Static","parent":{"krate":0,"index":6923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6927},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":290688,"byte_end":290698,"line_start":445,"line_end":445,"column_start":17,"column_end":27},"name":"mutability","qualname":"::item::ForeignItemStatic::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":6923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6928},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":290737,"byte_end":290742,"line_start":446,"line_end":446,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ForeignItemStatic::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6929},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":290767,"byte_end":290778,"line_start":447,"line_end":447,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::item::ForeignItemStatic::colon_token","value":"token::Colon","parent":{"krate":0,"index":6923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6930},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":290807,"byte_end":290809,"line_start":448,"line_end":448,"column_start":17,"column_end":19},"name":"ty","qualname":"::item::ForeignItemStatic::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":6923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6931},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":290838,"byte_end":290848,"line_start":449,"line_end":449,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::ForeignItemStatic::semi_token","value":"token::Semi","parent":{"krate":0,"index":6923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6934},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":291045,"byte_end":291060,"line_start":455,"line_end":455,"column_start":18,"column_end":33},"name":"ForeignItemType","qualname":"::item::ForeignItemType","value":"ForeignItemType { attrs, vis, type_token, ident, semi_token }","parent":null,"children":[{"krate":0,"index":6935},{"krate":0,"index":6936},{"krate":0,"index":6937},{"krate":0,"index":6938},{"krate":0,"index":6939}],"decl_id":null,"docs":" A foreign type in an `extern` block: `type void`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6935},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":291079,"byte_end":291084,"line_start":456,"line_end":456,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ForeignItemType::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6936},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":291118,"byte_end":291121,"line_start":457,"line_end":457,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ForeignItemType::vis","value":"data::Visibility","parent":{"krate":0,"index":6934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6937},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":291151,"byte_end":291161,"line_start":458,"line_end":458,"column_start":17,"column_end":27},"name":"type_token","qualname":"::item::ForeignItemType::type_token","value":"token::Type","parent":{"krate":0,"index":6934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6938},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":291193,"byte_end":291198,"line_start":459,"line_end":459,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ForeignItemType::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6939},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":291223,"byte_end":291233,"line_start":460,"line_end":460,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::ForeignItemType::semi_token","value":"token::Semi","parent":{"krate":0,"index":6934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6942},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":291424,"byte_end":291440,"line_start":466,"line_end":466,"column_start":19,"column_end":35},"name":"ForeignItemMacro","qualname":"::item::ForeignItemMacro","value":"ForeignItemMacro { attrs, mac, semi_token }","parent":null,"children":[{"krate":0,"index":6943},{"krate":0,"index":6944},{"krate":0,"index":6945}],"decl_id":null,"docs":" A macro invocation within an extern block.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6943},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":291459,"byte_end":291464,"line_start":467,"line_end":467,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ForeignItemMacro::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6944},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":291498,"byte_end":291501,"line_start":468,"line_end":468,"column_start":17,"column_end":20},"name":"mac","qualname":"::item::ForeignItemMacro::mac","value":"mac::Macro","parent":{"krate":0,"index":6942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6945},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":291526,"byte_end":291536,"line_start":469,"line_end":469,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::ForeignItemMacro::semi_token","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":6942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6948},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":291747,"byte_end":291766,"line_start":475,"line_end":475,"column_start":22,"column_end":41},"name":"ForeignItemVerbatim","qualname":"::item::ForeignItemVerbatim","value":"ForeignItemVerbatim { tts }","parent":null,"children":[{"krate":0,"index":6949}],"decl_id":null,"docs":" Tokens in an `extern` block not interpreted by Syn.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6949},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":291806,"byte_end":291809,"line_start":476,"line_end":476,"column_start":17,"column_end":20},"name":"tts","qualname":"::item::ForeignItemVerbatim::tts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":6948},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6965},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":292980,"byte_end":292985,"line_start":518,"line_end":518,"column_start":13,"column_end":18},"name":"Const","qualname":"::item::TraitItem::Const","value":"TraitItem::Const(TraitItemConst)","parent":{"krate":0,"index":6964},"children":[],"decl_id":null,"docs":" An associated constant within the definition of a trait.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6968},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293451,"byte_end":293457,"line_start":531,"line_end":531,"column_start":13,"column_end":19},"name":"Method","qualname":"::item::TraitItem::Method","value":"TraitItem::Method(TraitItemMethod)","parent":{"krate":0,"index":6964},"children":[],"decl_id":null,"docs":" A trait method within the definition of a trait.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6971},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293816,"byte_end":293820,"line_start":541,"line_end":541,"column_start":13,"column_end":17},"name":"Type","qualname":"::item::TraitItem::Type","value":"TraitItem::Type(TraitItemType)","parent":{"krate":0,"index":6964},"children":[],"decl_id":null,"docs":" An associated type within the definition of a trait.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6974},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":294368,"byte_end":294373,"line_start":555,"line_end":555,"column_start":13,"column_end":18},"name":"Macro","qualname":"::item::TraitItem::Macro","value":"TraitItem::Macro(TraitItemMacro)","parent":{"krate":0,"index":6964},"children":[],"decl_id":null,"docs":" A macro invocation within the definition of a trait.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6977},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":294698,"byte_end":294706,"line_start":564,"line_end":564,"column_start":13,"column_end":21},"name":"Verbatim","qualname":"::item::TraitItem::Verbatim","value":"TraitItem::Verbatim(TraitItemVerbatim)","parent":{"krate":0,"index":6964},"children":[],"decl_id":null,"docs":" Tokens within the definition of a trait not interpreted by Syn.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6964},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":292795,"byte_end":292804,"line_start":514,"line_end":514,"column_start":14,"column_end":23},"name":"TraitItem","qualname":"::item::TraitItem","value":"TraitItem::{Const, Method, Type, Macro, Verbatim}","parent":null,"children":[{"krate":0,"index":6965},{"krate":0,"index":6968},{"krate":0,"index":6971},{"krate":0,"index":6974},{"krate":0,"index":6977}],"decl_id":null,"docs":" An item declaration within the definition of a trait.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n\n # Syntax tree enum\n\n This type is a [syntax tree enum].\n\n [syntax tree enum]: enum.Expr.html#syntax-tree-enums\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6982},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":292986,"byte_end":293000,"line_start":518,"line_end":518,"column_start":19,"column_end":33},"name":"TraitItemConst","qualname":"::item::TraitItemConst","value":"TraitItemConst { attrs, const_token, ident, colon_token, ty, default, semi_token }","parent":null,"children":[{"krate":0,"index":6983},{"krate":0,"index":6984},{"krate":0,"index":6985},{"krate":0,"index":6986},{"krate":0,"index":6987},{"krate":0,"index":6988},{"krate":0,"index":6989}],"decl_id":null,"docs":" An associated constant within the definition of a trait.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6983},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293019,"byte_end":293024,"line_start":519,"line_end":519,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::TraitItemConst::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6984},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293058,"byte_end":293069,"line_start":520,"line_end":520,"column_start":17,"column_end":28},"name":"const_token","qualname":"::item::TraitItemConst::const_token","value":"token::Const","parent":{"krate":0,"index":6982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6985},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293102,"byte_end":293107,"line_start":521,"line_end":521,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::TraitItemConst::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6986},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293132,"byte_end":293143,"line_start":522,"line_end":522,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::item::TraitItemConst::colon_token","value":"token::Colon","parent":{"krate":0,"index":6982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6987},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293172,"byte_end":293174,"line_start":523,"line_end":523,"column_start":17,"column_end":19},"name":"ty","qualname":"::item::TraitItemConst::ty","value":"ty::Type","parent":{"krate":0,"index":6982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6988},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293198,"byte_end":293205,"line_start":524,"line_end":524,"column_start":17,"column_end":24},"name":"default","qualname":"::item::TraitItemConst::default","value":"std::option::Option<(token::Eq, expr::Expr)>","parent":{"krate":0,"index":6982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6989},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293250,"byte_end":293260,"line_start":525,"line_end":525,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::TraitItemConst::semi_token","value":"token::Semi","parent":{"krate":0,"index":6982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6992},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293458,"byte_end":293473,"line_start":531,"line_end":531,"column_start":20,"column_end":35},"name":"TraitItemMethod","qualname":"::item::TraitItemMethod","value":"TraitItemMethod { attrs, sig, default, semi_token }","parent":null,"children":[{"krate":0,"index":6993},{"krate":0,"index":6994},{"krate":0,"index":6995},{"krate":0,"index":6996}],"decl_id":null,"docs":" A trait method within the definition of a trait.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6993},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293492,"byte_end":293497,"line_start":532,"line_end":532,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::TraitItemMethod::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6992},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6994},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293531,"byte_end":293534,"line_start":533,"line_end":533,"column_start":17,"column_end":20},"name":"sig","qualname":"::item::TraitItemMethod::sig","value":"item::MethodSig","parent":{"krate":0,"index":6992},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6995},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293563,"byte_end":293570,"line_start":534,"line_end":534,"column_start":17,"column_end":24},"name":"default","qualname":"::item::TraitItemMethod::default","value":"std::option::Option<expr::Block>","parent":{"krate":0,"index":6992},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6996},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293603,"byte_end":293613,"line_start":535,"line_end":535,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::TraitItemMethod::semi_token","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":6992},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6999},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293821,"byte_end":293834,"line_start":541,"line_end":541,"column_start":18,"column_end":31},"name":"TraitItemType","qualname":"::item::TraitItemType","value":"TraitItemType { attrs, type_token, ident, generics, colon_token, bounds, default, semi_token }","parent":null,"children":[{"krate":0,"index":7000},{"krate":0,"index":7001},{"krate":0,"index":7002},{"krate":0,"index":7003},{"krate":0,"index":7004},{"krate":0,"index":7005},{"krate":0,"index":7006},{"krate":0,"index":7007}],"decl_id":null,"docs":" An associated type within the definition of a trait.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7000},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293853,"byte_end":293858,"line_start":542,"line_end":542,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::TraitItemType::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7001},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293892,"byte_end":293902,"line_start":543,"line_end":543,"column_start":17,"column_end":27},"name":"type_token","qualname":"::item::TraitItemType::type_token","value":"token::Type","parent":{"krate":0,"index":6999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7002},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293934,"byte_end":293939,"line_start":544,"line_end":544,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::TraitItemType::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7003},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":293964,"byte_end":293972,"line_start":545,"line_end":545,"column_start":17,"column_end":25},"name":"generics","qualname":"::item::TraitItemType::generics","value":"generics::Generics","parent":{"krate":0,"index":6999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7004},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":294000,"byte_end":294011,"line_start":546,"line_end":546,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::item::TraitItemType::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":6999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7005},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":294048,"byte_end":294054,"line_start":547,"line_end":547,"column_start":17,"column_end":23},"name":"bounds","qualname":"::item::TraitItemType::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":6999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7006},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":294111,"byte_end":294118,"line_start":548,"line_end":548,"column_start":17,"column_end":24},"name":"default","qualname":"::item::TraitItemType::default","value":"std::option::Option<(token::Eq, ty::Type)>","parent":{"krate":0,"index":6999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7007},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":294163,"byte_end":294173,"line_start":549,"line_end":549,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::TraitItemType::semi_token","value":"token::Semi","parent":{"krate":0,"index":6999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7010},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":294374,"byte_end":294388,"line_start":555,"line_end":555,"column_start":19,"column_end":33},"name":"TraitItemMacro","qualname":"::item::TraitItemMacro","value":"TraitItemMacro { attrs, mac, semi_token }","parent":null,"children":[{"krate":0,"index":7011},{"krate":0,"index":7012},{"krate":0,"index":7013}],"decl_id":null,"docs":" A macro invocation within the definition of a trait.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7011},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":294407,"byte_end":294412,"line_start":556,"line_end":556,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::TraitItemMacro::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":7010},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7012},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":294446,"byte_end":294449,"line_start":557,"line_end":557,"column_start":17,"column_end":20},"name":"mac","qualname":"::item::TraitItemMacro::mac","value":"mac::Macro","parent":{"krate":0,"index":7010},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7013},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":294474,"byte_end":294484,"line_start":558,"line_end":558,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::TraitItemMacro::semi_token","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":7010},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7016},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":294707,"byte_end":294724,"line_start":564,"line_end":564,"column_start":22,"column_end":39},"name":"TraitItemVerbatim","qualname":"::item::TraitItemVerbatim","value":"TraitItemVerbatim { tts }","parent":null,"children":[{"krate":0,"index":7017}],"decl_id":null,"docs":" Tokens within the definition of a trait not interpreted by Syn.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7017},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":294764,"byte_end":294767,"line_start":565,"line_end":565,"column_start":17,"column_end":20},"name":"tts","qualname":"::item::TraitItemVerbatim::tts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":7016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7035},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":295895,"byte_end":295900,"line_start":607,"line_end":607,"column_start":13,"column_end":18},"name":"Const","qualname":"::item::ImplItem::Const","value":"ImplItem::Const(ImplItemConst)","parent":{"krate":0,"index":7034},"children":[],"decl_id":null,"docs":" An associated constant within an impl block.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7038},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296447,"byte_end":296453,"line_start":623,"line_end":623,"column_start":13,"column_end":19},"name":"Method","qualname":"::item::ImplItem::Method","value":"ImplItem::Method(ImplItemMethod)","parent":{"krate":0,"index":7034},"children":[],"decl_id":null,"docs":" A method within an impl block.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7041},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296829,"byte_end":296833,"line_start":634,"line_end":634,"column_start":13,"column_end":17},"name":"Type","qualname":"::item::ImplItem::Type","value":"ImplItem::Type(ImplItemType)","parent":{"krate":0,"index":7034},"children":[],"decl_id":null,"docs":" An associated type within an impl block.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7044},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297356,"byte_end":297367,"line_start":649,"line_end":649,"column_start":13,"column_end":24},"name":"Existential","qualname":"::item::ImplItem::Existential","value":"ImplItem::Existential(ImplItemExistential)","parent":{"krate":0,"index":7034},"children":[],"decl_id":null,"docs":" An existential type within an impl block.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7047},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297913,"byte_end":297918,"line_start":663,"line_end":663,"column_start":13,"column_end":18},"name":"Macro","qualname":"::item::ImplItem::Macro","value":"ImplItem::Macro(ImplItemMacro)","parent":{"krate":0,"index":7034},"children":[],"decl_id":null,"docs":" A macro invocation within an impl block.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7050},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":298230,"byte_end":298238,"line_start":672,"line_end":672,"column_start":13,"column_end":21},"name":"Verbatim","qualname":"::item::ImplItem::Verbatim","value":"ImplItem::Verbatim(ImplItemVerbatim)","parent":{"krate":0,"index":7034},"children":[],"decl_id":null,"docs":" Tokens within an impl block not interpreted by Syn.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7034},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":295723,"byte_end":295731,"line_start":603,"line_end":603,"column_start":14,"column_end":22},"name":"ImplItem","qualname":"::item::ImplItem","value":"ImplItem::{Const, Method, Type, Existential, Macro, Verbatim}","parent":null,"children":[{"krate":0,"index":7035},{"krate":0,"index":7038},{"krate":0,"index":7041},{"krate":0,"index":7044},{"krate":0,"index":7047},{"krate":0,"index":7050}],"decl_id":null,"docs":" An item within an impl block.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n\n # Syntax tree enum\n\n This type is a [syntax tree enum].\n\n [syntax tree enum]: enum.Expr.html#syntax-tree-enums\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7055},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":295901,"byte_end":295914,"line_start":607,"line_end":607,"column_start":19,"column_end":32},"name":"ImplItemConst","qualname":"::item::ImplItemConst","value":"ImplItemConst { attrs, vis, defaultness, const_token, ident, colon_token, ty, eq_token, expr, semi_token }","parent":null,"children":[{"krate":0,"index":7056},{"krate":0,"index":7057},{"krate":0,"index":7058},{"krate":0,"index":7059},{"krate":0,"index":7060},{"krate":0,"index":7061},{"krate":0,"index":7062},{"krate":0,"index":7063},{"krate":0,"index":7064},{"krate":0,"index":7065}],"decl_id":null,"docs":" An associated constant within an impl block.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7056},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":295933,"byte_end":295938,"line_start":608,"line_end":608,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ImplItemConst::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":7055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7057},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":295972,"byte_end":295975,"line_start":609,"line_end":609,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ImplItemConst::vis","value":"data::Visibility","parent":{"krate":0,"index":7055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7058},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296005,"byte_end":296016,"line_start":610,"line_end":610,"column_start":17,"column_end":28},"name":"defaultness","qualname":"::item::ImplItemConst::defaultness","value":"std::option::Option<token::Default>","parent":{"krate":0,"index":7055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7059},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296059,"byte_end":296070,"line_start":611,"line_end":611,"column_start":17,"column_end":28},"name":"const_token","qualname":"::item::ImplItemConst::const_token","value":"token::Const","parent":{"krate":0,"index":7055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7060},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296103,"byte_end":296108,"line_start":612,"line_end":612,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ImplItemConst::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":7055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7061},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296133,"byte_end":296144,"line_start":613,"line_end":613,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::item::ImplItemConst::colon_token","value":"token::Colon","parent":{"krate":0,"index":7055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7062},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296173,"byte_end":296175,"line_start":614,"line_end":614,"column_start":17,"column_end":19},"name":"ty","qualname":"::item::ImplItemConst::ty","value":"ty::Type","parent":{"krate":0,"index":7055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7063},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296199,"byte_end":296207,"line_start":615,"line_end":615,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::item::ImplItemConst::eq_token","value":"token::Eq","parent":{"krate":0,"index":7055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7064},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296236,"byte_end":296240,"line_start":616,"line_end":616,"column_start":17,"column_end":21},"name":"expr","qualname":"::item::ImplItemConst::expr","value":"expr::Expr","parent":{"krate":0,"index":7055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7065},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296264,"byte_end":296274,"line_start":617,"line_end":617,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::ImplItemConst::semi_token","value":"token::Semi","parent":{"krate":0,"index":7055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7068},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296454,"byte_end":296468,"line_start":623,"line_end":623,"column_start":20,"column_end":34},"name":"ImplItemMethod","qualname":"::item::ImplItemMethod","value":"ImplItemMethod { attrs, vis, defaultness, sig, block }","parent":null,"children":[{"krate":0,"index":7069},{"krate":0,"index":7070},{"krate":0,"index":7071},{"krate":0,"index":7072},{"krate":0,"index":7073}],"decl_id":null,"docs":" A method within an impl block.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7069},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296487,"byte_end":296492,"line_start":624,"line_end":624,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ImplItemMethod::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":7068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7070},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296526,"byte_end":296529,"line_start":625,"line_end":625,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ImplItemMethod::vis","value":"data::Visibility","parent":{"krate":0,"index":7068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7071},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296559,"byte_end":296570,"line_start":626,"line_end":626,"column_start":17,"column_end":28},"name":"defaultness","qualname":"::item::ImplItemMethod::defaultness","value":"std::option::Option<token::Default>","parent":{"krate":0,"index":7068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7072},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296613,"byte_end":296616,"line_start":627,"line_end":627,"column_start":17,"column_end":20},"name":"sig","qualname":"::item::ImplItemMethod::sig","value":"item::MethodSig","parent":{"krate":0,"index":7068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7073},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296645,"byte_end":296650,"line_start":628,"line_end":628,"column_start":17,"column_end":22},"name":"block","qualname":"::item::ImplItemMethod::block","value":"expr::Block","parent":{"krate":0,"index":7068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7076},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296834,"byte_end":296846,"line_start":634,"line_end":634,"column_start":18,"column_end":30},"name":"ImplItemType","qualname":"::item::ImplItemType","value":"ImplItemType { attrs, vis, defaultness, type_token, ident, generics, eq_token, ty, semi_token }","parent":null,"children":[{"krate":0,"index":7077},{"krate":0,"index":7078},{"krate":0,"index":7079},{"krate":0,"index":7080},{"krate":0,"index":7081},{"krate":0,"index":7082},{"krate":0,"index":7083},{"krate":0,"index":7084},{"krate":0,"index":7085}],"decl_id":null,"docs":" An associated type within an impl block.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7077},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296865,"byte_end":296870,"line_start":635,"line_end":635,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ImplItemType::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":7076},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7078},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296904,"byte_end":296907,"line_start":636,"line_end":636,"column_start":17,"column_end":20},"name":"vis","qualname":"::item::ImplItemType::vis","value":"data::Visibility","parent":{"krate":0,"index":7076},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7079},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296937,"byte_end":296948,"line_start":637,"line_end":637,"column_start":17,"column_end":28},"name":"defaultness","qualname":"::item::ImplItemType::defaultness","value":"std::option::Option<token::Default>","parent":{"krate":0,"index":7076},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7080},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":296991,"byte_end":297001,"line_start":638,"line_end":638,"column_start":17,"column_end":27},"name":"type_token","qualname":"::item::ImplItemType::type_token","value":"token::Type","parent":{"krate":0,"index":7076},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7081},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297033,"byte_end":297038,"line_start":639,"line_end":639,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ImplItemType::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":7076},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7082},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297063,"byte_end":297071,"line_start":640,"line_end":640,"column_start":17,"column_end":25},"name":"generics","qualname":"::item::ImplItemType::generics","value":"generics::Generics","parent":{"krate":0,"index":7076},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7083},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297099,"byte_end":297107,"line_start":641,"line_end":641,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::item::ImplItemType::eq_token","value":"token::Eq","parent":{"krate":0,"index":7076},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7084},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297136,"byte_end":297138,"line_start":642,"line_end":642,"column_start":17,"column_end":19},"name":"ty","qualname":"::item::ImplItemType::ty","value":"ty::Type","parent":{"krate":0,"index":7076},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7085},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297162,"byte_end":297172,"line_start":643,"line_end":643,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::ImplItemType::semi_token","value":"token::Semi","parent":{"krate":0,"index":7076},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7088},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297368,"byte_end":297387,"line_start":649,"line_end":649,"column_start":25,"column_end":44},"name":"ImplItemExistential","qualname":"::item::ImplItemExistential","value":"ImplItemExistential { attrs, existential_token, type_token, ident, generics, colon_token, bounds, semi_token }","parent":null,"children":[{"krate":0,"index":7089},{"krate":0,"index":7090},{"krate":0,"index":7091},{"krate":0,"index":7092},{"krate":0,"index":7093},{"krate":0,"index":7094},{"krate":0,"index":7095},{"krate":0,"index":7096}],"decl_id":null,"docs":" An existential type within an impl block.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7089},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297406,"byte_end":297411,"line_start":650,"line_end":650,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ImplItemExistential::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":7088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7090},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297445,"byte_end":297462,"line_start":651,"line_end":651,"column_start":17,"column_end":34},"name":"existential_token","qualname":"::item::ImplItemExistential::existential_token","value":"token::Existential","parent":{"krate":0,"index":7088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7091},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297501,"byte_end":297511,"line_start":652,"line_end":652,"column_start":17,"column_end":27},"name":"type_token","qualname":"::item::ImplItemExistential::type_token","value":"token::Type","parent":{"krate":0,"index":7088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7092},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297543,"byte_end":297548,"line_start":653,"line_end":653,"column_start":17,"column_end":22},"name":"ident","qualname":"::item::ImplItemExistential::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":7088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7093},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297573,"byte_end":297581,"line_start":654,"line_end":654,"column_start":17,"column_end":25},"name":"generics","qualname":"::item::ImplItemExistential::generics","value":"generics::Generics","parent":{"krate":0,"index":7088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7094},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297609,"byte_end":297620,"line_start":655,"line_end":655,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::item::ImplItemExistential::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":7088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7095},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297657,"byte_end":297663,"line_start":656,"line_end":656,"column_start":17,"column_end":23},"name":"bounds","qualname":"::item::ImplItemExistential::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":7088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7096},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297720,"byte_end":297730,"line_start":657,"line_end":657,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::ImplItemExistential::semi_token","value":"token::Semi","parent":{"krate":0,"index":7088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7099},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297919,"byte_end":297932,"line_start":663,"line_end":663,"column_start":19,"column_end":32},"name":"ImplItemMacro","qualname":"::item::ImplItemMacro","value":"ImplItemMacro { attrs, mac, semi_token }","parent":null,"children":[{"krate":0,"index":7100},{"krate":0,"index":7101},{"krate":0,"index":7102}],"decl_id":null,"docs":" A macro invocation within an impl block.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7100},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297951,"byte_end":297956,"line_start":664,"line_end":664,"column_start":17,"column_end":22},"name":"attrs","qualname":"::item::ImplItemMacro::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":7099},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7101},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":297990,"byte_end":297993,"line_start":665,"line_end":665,"column_start":17,"column_end":20},"name":"mac","qualname":"::item::ImplItemMacro::mac","value":"mac::Macro","parent":{"krate":0,"index":7099},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7102},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":298018,"byte_end":298028,"line_start":666,"line_end":666,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::item::ImplItemMacro::semi_token","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":7099},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7105},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":298239,"byte_end":298255,"line_start":672,"line_end":672,"column_start":22,"column_end":38},"name":"ImplItemVerbatim","qualname":"::item::ImplItemVerbatim","value":"ImplItemVerbatim { tts }","parent":null,"children":[{"krate":0,"index":7106}],"decl_id":null,"docs":" Tokens within an impl block not interpreted by Syn.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7106},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":298295,"byte_end":298298,"line_start":673,"line_end":673,"column_start":17,"column_end":20},"name":"tts","qualname":"::item::ImplItemVerbatim::tts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":7105},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7111},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":298999,"byte_end":299008,"line_start":703,"line_end":703,"column_start":16,"column_end":25},"name":"MethodSig","qualname":"::item::MethodSig","value":"MethodSig { constness, asyncness, unsafety, abi, ident, decl }","parent":null,"children":[{"krate":0,"index":7112},{"krate":0,"index":7113},{"krate":0,"index":7114},{"krate":0,"index":7115},{"krate":0,"index":7116},{"krate":0,"index":7117}],"decl_id":null,"docs":" A method's signature in a trait or implementation: `unsafe fn\n initialize(&self)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7112},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":299023,"byte_end":299032,"line_start":704,"line_end":704,"column_start":13,"column_end":22},"name":"constness","qualname":"::item::MethodSig::constness","value":"std::option::Option<token::Const>","parent":{"krate":0,"index":7111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7113},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":299069,"byte_end":299078,"line_start":705,"line_end":705,"column_start":13,"column_end":22},"name":"asyncness","qualname":"::item::MethodSig::asyncness","value":"std::option::Option<token::Async>","parent":{"krate":0,"index":7111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7114},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":299115,"byte_end":299123,"line_start":706,"line_end":706,"column_start":13,"column_end":21},"name":"unsafety","qualname":"::item::MethodSig::unsafety","value":"std::option::Option<token::Unsafe>","parent":{"krate":0,"index":7111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7115},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":299161,"byte_end":299164,"line_start":707,"line_end":707,"column_start":13,"column_end":16},"name":"abi","qualname":"::item::MethodSig::abi","value":"std::option::Option<ty::Abi>","parent":{"krate":0,"index":7111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7116},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":299191,"byte_end":299196,"line_start":708,"line_end":708,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::MethodSig::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":7111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7117},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":299217,"byte_end":299221,"line_start":709,"line_end":709,"column_start":13,"column_end":17},"name":"decl","qualname":"::item::MethodSig::decl","value":"item::FnDecl","parent":{"krate":0,"index":7111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7120},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":299423,"byte_end":299429,"line_start":717,"line_end":717,"column_start":16,"column_end":22},"name":"FnDecl","qualname":"::item::FnDecl","value":"FnDecl { fn_token, generics, paren_token, inputs, variadic, output }","parent":null,"children":[{"krate":0,"index":7121},{"krate":0,"index":7122},{"krate":0,"index":7123},{"krate":0,"index":7124},{"krate":0,"index":7125},{"krate":0,"index":7126}],"decl_id":null,"docs":" Header of a function declaration, without including the body.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7121},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":299444,"byte_end":299452,"line_start":718,"line_end":718,"column_start":13,"column_end":21},"name":"fn_token","qualname":"::item::FnDecl::fn_token","value":"token::Fn","parent":{"krate":0,"index":7120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7122},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":299478,"byte_end":299486,"line_start":719,"line_end":719,"column_start":13,"column_end":21},"name":"generics","qualname":"::item::FnDecl::generics","value":"generics::Generics","parent":{"krate":0,"index":7120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7123},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":299510,"byte_end":299521,"line_start":720,"line_end":720,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::item::FnDecl::paren_token","value":"token::Paren","parent":{"krate":0,"index":7120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7124},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":299549,"byte_end":299555,"line_start":721,"line_end":721,"column_start":13,"column_end":19},"name":"inputs","qualname":"::item::FnDecl::inputs","value":"punctuated::Punctuated<item::FnArg, token::Comma>","parent":{"krate":0,"index":7120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7125},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":299599,"byte_end":299607,"line_start":722,"line_end":722,"column_start":13,"column_end":21},"name":"variadic","qualname":"::item::FnDecl::variadic","value":"std::option::Option<token::Dot3>","parent":{"krate":0,"index":7120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7126},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":299642,"byte_end":299648,"line_start":723,"line_end":723,"column_start":13,"column_end":19},"name":"output","qualname":"::item::FnDecl::output","value":"ty::ReturnType","parent":{"krate":0,"index":7120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7140},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":300389,"byte_end":300396,"line_start":745,"line_end":745,"column_start":13,"column_end":20},"name":"SelfRef","qualname":"::item::FnArg::SelfRef","value":"FnArg::SelfRef(ArgSelfRef)","parent":{"krate":0,"index":7139},"children":[],"decl_id":null,"docs":" Self captured by reference in a function signature: `&self` or `&mut\n self`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7143},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":300794,"byte_end":300803,"line_start":756,"line_end":756,"column_start":13,"column_end":22},"name":"SelfValue","qualname":"::item::FnArg::SelfValue","value":"FnArg::SelfValue(ArgSelf)","parent":{"krate":0,"index":7139},"children":[],"decl_id":null,"docs":" Self captured by value in a function signature: `self` or `mut\n self`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7146},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":301096,"byte_end":301104,"line_start":764,"line_end":764,"column_start":13,"column_end":21},"name":"Captured","qualname":"::item::FnArg::Captured","value":"FnArg::Captured(ArgCaptured)","parent":{"krate":0,"index":7139},"children":[],"decl_id":null,"docs":" An explicitly typed pattern captured by a function signature.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7149},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":301315,"byte_end":301323,"line_start":771,"line_end":771,"column_start":13,"column_end":21},"name":"Inferred","qualname":"::item::FnArg::Inferred","value":"FnArg::Inferred(Pat)","parent":{"krate":0,"index":7139},"children":[],"decl_id":null,"docs":" A pattern whose type is inferred captured by a function signature.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7152},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":301411,"byte_end":301418,"line_start":773,"line_end":773,"column_start":13,"column_end":20},"name":"Ignored","qualname":"::item::FnArg::Ignored","value":"FnArg::Ignored(Type)","parent":{"krate":0,"index":7139},"children":[],"decl_id":null,"docs":" A type not bound to any pattern in a function signature.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7139},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":300177,"byte_end":300182,"line_start":740,"line_end":740,"column_start":14,"column_end":19},"name":"FnArg","qualname":"::item::FnArg","value":"FnArg::{SelfRef, SelfValue, Captured, Inferred, Ignored}","parent":null,"children":[{"krate":0,"index":7140},{"krate":0,"index":7143},{"krate":0,"index":7146},{"krate":0,"index":7149},{"krate":0,"index":7152}],"decl_id":null,"docs":" An argument in a function signature: the `n: usize` in `fn f(n: usize)`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n\n # Syntax tree enum\n\n This type is a [syntax tree enum].\n\n [syntax tree enum]: enum.Expr.html#syntax-tree-enums\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7157},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":300397,"byte_end":300407,"line_start":745,"line_end":745,"column_start":21,"column_end":31},"name":"ArgSelfRef","qualname":"::item::ArgSelfRef","value":"ArgSelfRef { and_token, lifetime, mutability, self_token }","parent":null,"children":[{"krate":0,"index":7158},{"krate":0,"index":7159},{"krate":0,"index":7160},{"krate":0,"index":7161}],"decl_id":null,"docs":" Self captured by reference in a function signature: `&self` or `&mut\n self`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7158},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":300426,"byte_end":300435,"line_start":746,"line_end":746,"column_start":17,"column_end":26},"name":"and_token","qualname":"::item::ArgSelfRef::and_token","value":"token::And","parent":{"krate":0,"index":7157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7159},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":300464,"byte_end":300472,"line_start":747,"line_end":747,"column_start":17,"column_end":25},"name":"lifetime","qualname":"::item::ArgSelfRef::lifetime","value":"std::option::Option<lifetime::Lifetime>","parent":{"krate":0,"index":7157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7160},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":300508,"byte_end":300518,"line_start":748,"line_end":748,"column_start":17,"column_end":27},"name":"mutability","qualname":"::item::ArgSelfRef::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":7157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7161},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":300557,"byte_end":300567,"line_start":749,"line_end":749,"column_start":17,"column_end":27},"name":"self_token","qualname":"::item::ArgSelfRef::self_token","value":"token::SelfValue","parent":{"krate":0,"index":7157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7164},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":300804,"byte_end":300811,"line_start":756,"line_end":756,"column_start":23,"column_end":30},"name":"ArgSelf","qualname":"::item::ArgSelf","value":"ArgSelf { mutability, self_token }","parent":null,"children":[{"krate":0,"index":7165},{"krate":0,"index":7166}],"decl_id":null,"docs":" Self captured by value in a function signature: `self` or `mut\n self`.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7165},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":300830,"byte_end":300840,"line_start":757,"line_end":757,"column_start":17,"column_end":27},"name":"mutability","qualname":"::item::ArgSelf::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":7164},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7166},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":300879,"byte_end":300889,"line_start":758,"line_end":758,"column_start":17,"column_end":27},"name":"self_token","qualname":"::item::ArgSelf::self_token","value":"token::SelfValue","parent":{"krate":0,"index":7164},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7169},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":301105,"byte_end":301116,"line_start":764,"line_end":764,"column_start":22,"column_end":33},"name":"ArgCaptured","qualname":"::item::ArgCaptured","value":"ArgCaptured { pat, colon_token, ty }","parent":null,"children":[{"krate":0,"index":7170},{"krate":0,"index":7171},{"krate":0,"index":7172}],"decl_id":null,"docs":" An explicitly typed pattern captured by a function signature.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7170},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":301135,"byte_end":301138,"line_start":765,"line_end":765,"column_start":17,"column_end":20},"name":"pat","qualname":"::item::ArgCaptured::pat","value":"expr::Pat","parent":{"krate":0,"index":7169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7171},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":301161,"byte_end":301172,"line_start":766,"line_end":766,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::item::ArgCaptured::colon_token","value":"token::Colon","parent":{"krate":0,"index":7169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7172},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":301201,"byte_end":301203,"line_start":767,"line_end":767,"column_start":17,"column_end":19},"name":"ty","qualname":"::item::ArgCaptured::ty","value":"ty::Type","parent":{"krate":0,"index":7169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7177},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\file.rs","byte_start":376880,"byte_end":376884,"line_start":70,"line_end":70,"column_start":16,"column_end":20},"name":"File","qualname":"::file::File","value":"File { shebang, attrs, items }","parent":null,"children":[{"krate":0,"index":7178},{"krate":0,"index":7179},{"krate":0,"index":7180}],"decl_id":null,"docs":" A complete file of Rust source code.\n\n *This type is available if Syn is built with the `\"full\"` feature.*\n\n # Example\n\n Parse a Rust source file into a `syn::File` and print out a debug\n representation of the syntax tree.\n\n ```edition2018\n use std::env;\n use std::fs::File;\n use std::io::Read;\n use std::process;\n\n fn main() {\n # }\n #\n # fn fake_main() {\n     let mut args = env::args();\n     let _ = args.next(); // executable name\n\n     let filename = match (args.next(), args.next()) {\n         (Some(filename), None) => filename,\n         _ => {\n             eprintln!(\"Usage: dump-syntax path/to/filename.rs\");\n             process::exit(1);\n         }\n     };\n\n     let mut file = File::open(&filename).expect(\"Unable to open file\");\n\n     let mut src = String::new();\n     file.read_to_string(&mut src).expect(\"Unable to read file\");\n\n     let syntax = syn::parse_file(&src).expect(\"Unable to parse file\");\n     println!(\"{:#?}\", syntax);\n }\n ```\n\n Running with its own source code as input, this program prints output\n that begins with:\n\n ```text\n File {\n     shebang: None,\n     attrs: [],\n     items: [\n         ExternCrate(\n             ItemExternCrate {\n                 attrs: [],\n                 vis: Inherited,\n                 extern_token: Extern,\n                 crate_token: Crate,\n                 ident: Ident {\n                     term: Term(\n                         \"syn\"\n                     ),\n                     span: Span\n                 },\n                 rename: None,\n                 semi_token: Semi\n             }\n         ),\n ...\n ```\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7178},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\file.rs","byte_start":376899,"byte_end":376906,"line_start":71,"line_end":71,"column_start":13,"column_end":20},"name":"shebang","qualname":"::file::File::shebang","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":7177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7179},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\file.rs","byte_start":376936,"byte_end":376941,"line_start":72,"line_end":72,"column_start":13,"column_end":18},"name":"attrs","qualname":"::file::File::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":7177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7180},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\file.rs","byte_start":376971,"byte_end":376976,"line_start":73,"line_end":73,"column_start":13,"column_end":18},"name":"items","qualname":"::file::File::items","value":"std::vec::Vec<item::Item>","parent":{"krate":0,"index":7177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7183},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":378693,"byte_end":378701,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"Lifetime","qualname":"::lifetime::Lifetime","value":"Lifetime { apostrophe, ident }","parent":null,"children":[{"krate":0,"index":7184},{"krate":0,"index":7185}],"decl_id":null,"docs":" A Rust lifetime: `'a`.\n\n Lifetime names must conform to the following rules:\n\n - Must start with an apostrophe.\n - Must not consist of just an apostrophe: `'`.\n - Character after the apostrophe must be `_` or a Unicode code point with\n   the XID_Start property.\n - All following characters must be Unicode code points with the XID_Continue\n   property.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7184},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":378712,"byte_end":378722,"line_start":27,"line_end":27,"column_start":9,"column_end":19},"name":"apostrophe","qualname":"::lifetime::Lifetime::apostrophe","value":"proc_macro2::Span","parent":{"krate":0,"index":7183},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7185},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":378738,"byte_end":378743,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"name":"ident","qualname":"::lifetime::Lifetime::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":7183},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":379118,"byte_end":379121,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<Lifetime>::new","value":"fn (symbol: &str, span: Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":" # Panics\n\n Panics if the lifetime does not conform to the bulleted rules above.\n\n # Invocation\n\n ```edition2018\n # use proc_macro2::Span;\n # use syn::Lifetime;\n #\n # fn f() -> Lifetime {\n Lifetime::new(\"'a\", Span::call_site())\n # }\n ```\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":380842,"byte_end":380850,"line_start":119,"line_end":119,"column_start":8,"column_end":16},"name":"Lifetime","qualname":"::lifetime::Lifetime","value":"fn (marker: lookahead::TokenMarker) -> Lifetime","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":380767,"byte_end":380794,"line_start":116,"line_end":116,"column_start":1,"column_end":28}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":380810,"byte_end":380834,"line_start":118,"line_end":118,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7205},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":382829,"byte_end":382832,"line_start":39,"line_end":39,"column_start":13,"column_end":16},"name":"Str","qualname":"::lit::Lit::Str","value":"Lit::Str(LitStr)","parent":{"krate":0,"index":7204},"children":[],"decl_id":null,"docs":" A UTF-8 string literal: `\"foo\"`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7208},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":383079,"byte_end":383086,"line_start":47,"line_end":47,"column_start":13,"column_end":20},"name":"ByteStr","qualname":"::lit::Lit::ByteStr","value":"Lit::ByteStr(LitByteStr)","parent":{"krate":0,"index":7204},"children":[],"decl_id":null,"docs":" A byte string literal: `b\"foo\"`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7211},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":383328,"byte_end":383332,"line_start":55,"line_end":55,"column_start":13,"column_end":17},"name":"Byte","qualname":"::lit::Lit::Byte","value":"Lit::Byte(LitByte)","parent":{"krate":0,"index":7204},"children":[],"decl_id":null,"docs":" A byte literal: `b'f'`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7214},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":383575,"byte_end":383579,"line_start":63,"line_end":63,"column_start":13,"column_end":17},"name":"Char","qualname":"::lit::Lit::Char","value":"Lit::Char(LitChar)","parent":{"krate":0,"index":7204},"children":[],"decl_id":null,"docs":" A character literal: `'a'`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7217},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":383944,"byte_end":383947,"line_start":74,"line_end":74,"column_start":13,"column_end":16},"name":"Int","qualname":"::lit::Lit::Int","value":"Lit::Int(LitInt)","parent":{"krate":0,"index":7204},"children":[],"decl_id":null,"docs":" An integer literal: `1` or `1u16`.\n\n Holds up to 64 bits of data. Use `LitVerbatim` for any larger\n integer literal.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7220},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":384277,"byte_end":384282,"line_start":84,"line_end":84,"column_start":13,"column_end":18},"name":"Float","qualname":"::lit::Lit::Float","value":"Lit::Float(LitFloat)","parent":{"krate":0,"index":7204},"children":[],"decl_id":null,"docs":" A floating point literal: `1f64` or `1.0e10f64`.\n\n Must be finite. May not be infinte or NaN.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7223},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":384536,"byte_end":384540,"line_start":92,"line_end":92,"column_start":13,"column_end":17},"name":"Bool","qualname":"::lit::Lit::Bool","value":"Lit::Bool(LitBool)","parent":{"krate":0,"index":7204},"children":[],"decl_id":null,"docs":" A boolean literal: `true` or `false`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7226},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":384903,"byte_end":384911,"line_start":102,"line_end":102,"column_start":13,"column_end":21},"name":"Verbatim","qualname":"::lit::Lit::Verbatim","value":"Lit::Verbatim(LitVerbatim)","parent":{"krate":0,"index":7204},"children":[],"decl_id":null,"docs":" A raw token literal not interpreted by Syn, possibly because it\n represents an integer larger than 64 bits.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7204},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":382648,"byte_end":382651,"line_start":34,"line_end":34,"column_start":14,"column_end":17},"name":"Lit","qualname":"::lit::Lit","value":"Lit::{Str, ByteStr, Byte, Char, Int, Float, Bool, Verbatim}","parent":null,"children":[{"krate":0,"index":7205},{"krate":0,"index":7208},{"krate":0,"index":7211},{"krate":0,"index":7214},{"krate":0,"index":7217},{"krate":0,"index":7220},{"krate":0,"index":7223},{"krate":0,"index":7226}],"decl_id":null,"docs":" A Rust literal such as a string or integer or boolean.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n\n # Syntax tree enum\n\n This type is a [syntax tree enum].\n\n [syntax tree enum]: enum.Expr.html#syntax-tree-enums\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7231},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":382833,"byte_end":382839,"line_start":39,"line_end":39,"column_start":17,"column_end":23},"name":"LitStr","qualname":"::lit::LitStr","value":"LitStr {  }","parent":null,"children":[{"krate":0,"index":7232}],"decl_id":null,"docs":" A UTF-8 string literal: `\"foo\"`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7235},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":383087,"byte_end":383097,"line_start":47,"line_end":47,"column_start":21,"column_end":31},"name":"LitByteStr","qualname":"::lit::LitByteStr","value":"LitByteStr {  }","parent":null,"children":[{"krate":0,"index":7236}],"decl_id":null,"docs":" A byte string literal: `b\"foo\"`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7239},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":383333,"byte_end":383340,"line_start":55,"line_end":55,"column_start":18,"column_end":25},"name":"LitByte","qualname":"::lit::LitByte","value":"LitByte {  }","parent":null,"children":[{"krate":0,"index":7240}],"decl_id":null,"docs":" A byte literal: `b'f'`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7243},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":383580,"byte_end":383587,"line_start":63,"line_end":63,"column_start":18,"column_end":25},"name":"LitChar","qualname":"::lit::LitChar","value":"LitChar {  }","parent":null,"children":[{"krate":0,"index":7244}],"decl_id":null,"docs":" A character literal: `'a'`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7247},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":383948,"byte_end":383954,"line_start":74,"line_end":74,"column_start":17,"column_end":23},"name":"LitInt","qualname":"::lit::LitInt","value":"LitInt {  }","parent":null,"children":[{"krate":0,"index":7248}],"decl_id":null,"docs":" An integer literal: `1` or `1u16`.\n\n Holds up to 64 bits of data. Use `LitVerbatim` for any larger\n integer literal.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7251},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":384283,"byte_end":384291,"line_start":84,"line_end":84,"column_start":19,"column_end":27},"name":"LitFloat","qualname":"::lit::LitFloat","value":"LitFloat {  }","parent":null,"children":[{"krate":0,"index":7252}],"decl_id":null,"docs":" A floating point literal: `1f64` or `1.0e10f64`.\n\n Must be finite. May not be infinte or NaN.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7255},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":384541,"byte_end":384548,"line_start":92,"line_end":92,"column_start":18,"column_end":25},"name":"LitBool","qualname":"::lit::LitBool","value":"LitBool { value, span }","parent":null,"children":[{"krate":0,"index":7256},{"krate":0,"index":7257}],"decl_id":null,"docs":" A boolean literal: `true` or `false`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7256},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":384588,"byte_end":384593,"line_start":93,"line_end":93,"column_start":17,"column_end":22},"name":"value","qualname":"::lit::LitBool::value","value":"bool","parent":{"krate":0,"index":7255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7257},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":384617,"byte_end":384621,"line_start":94,"line_end":94,"column_start":17,"column_end":21},"name":"span","qualname":"::lit::LitBool::span","value":"proc_macro2::Span","parent":{"krate":0,"index":7255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7260},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":384912,"byte_end":384923,"line_start":102,"line_end":102,"column_start":22,"column_end":33},"name":"LitVerbatim","qualname":"::lit::LitVerbatim","value":"LitVerbatim { token }","parent":null,"children":[{"krate":0,"index":7261}],"decl_id":null,"docs":" A raw token literal not interpreted by Syn, possibly because it\n represents an integer larger than 64 bits.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7261},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":384963,"byte_end":384968,"line_start":103,"line_end":103,"column_start":17,"column_end":22},"name":"token","qualname":"::lit::LitVerbatim::token","value":"proc_macro2::Literal","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":385025,"byte_end":385028,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<LitStr>::new","value":"fn (value: &str, span: Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":385186,"byte_end":385191,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"value","qualname":"<LitStr>::value","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":386391,"byte_end":386396,"line_start":151,"line_end":151,"column_start":12,"column_end":17},"name":"parse","qualname":"<LitStr>::parse","value":"fn <T> (&self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse a syntax tree node from the content of this string literal.\n\n All spans in the syntax tree will point to the span of this `LitStr`.\n\n # Example\n\n ```edition2018\n use proc_macro2::Span;\n use syn::{Attribute, Error, Ident, Lit, Meta, MetaNameValue, Path, Result};\n\n // Parses the path from an attribute that looks like:\n //\n //     #[path = \"a::b::c\"]\n //\n // or returns `None` if the input is some other attribute.\n fn get_path(attr: &Attribute) -> Result<Option<Path>> {\n     if !attr.path.is_ident(\"path\") {\n         return Ok(None);\n     }\n\n     match attr.parse_meta()? {\n         Meta::NameValue(MetaNameValue { lit: Lit::Str(lit_str), .. }) => {\n             lit_str.parse().map(Some)\n         }\n         _ => {\n             let message = \"expected #[path = \\\"...\\\"]\";\n             Err(Error::new_spanned(attr, message))\n         }\n     }\n }\n ```\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":386352,"byte_end":386379,"line_start":150,"line_end":150,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":387290,"byte_end":387300,"line_start":180,"line_end":180,"column_start":12,"column_end":22},"name":"parse_with","qualname":"<LitStr>::parse_with","value":"fn <F> (&self, parser: F) -> Result<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Invoke parser on the content of this string literal.\n\n All spans in the syntax tree will point to the span of this `LitStr`.\n\n # Example\n\n ```edition2018\n # use proc_macro2::Span;\n # use syn::{LitStr, Result};\n #\n # fn main() -> Result<()> {\n #     let lit_str = LitStr::new(\"a::b::c\", Span::call_site());\n #\n #     const IGNORE: &str = stringify! {\n let lit_str: LitStr = /* ... */;\n #     };\n\n // Parse a string literal like \"a::b::c\" into a Path, not allowing\n // generic arguments on any of the path segments.\n let basic_path = lit_str.parse_with(syn::Path::parse_mod_style)?;\n #\n #     Ok(())\n # }\n ```\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":387251,"byte_end":387278,"line_start":179,"line_end":179,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":388472,"byte_end":388476,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"name":"span","qualname":"<LitStr>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":388538,"byte_end":388546,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitStr>::set_span","value":"fn (&mut self, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":388644,"byte_end":388647,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"new","qualname":"<LitByteStr>::new","value":"fn (value: &[u8], span: Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":388821,"byte_end":388826,"line_start":228,"line_end":228,"column_start":12,"column_end":17},"name":"value","qualname":"<LitByteStr>::value","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":388924,"byte_end":388928,"line_start":232,"line_end":232,"column_start":12,"column_end":16},"name":"span","qualname":"<LitByteStr>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":388990,"byte_end":388998,"line_start":236,"line_end":236,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitByteStr>::set_span","value":"fn (&mut self, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":389093,"byte_end":389096,"line_start":242,"line_end":242,"column_start":12,"column_end":15},"name":"new","qualname":"<LitByte>::new","value":"fn (value: u8, span: Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":389264,"byte_end":389269,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"name":"value","qualname":"<LitByte>::value","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":389358,"byte_end":389362,"line_start":252,"line_end":252,"column_start":12,"column_end":16},"name":"span","qualname":"<LitByte>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":389424,"byte_end":389432,"line_start":256,"line_end":256,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitByte>::set_span","value":"fn (&mut self, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":389527,"byte_end":389530,"line_start":262,"line_end":262,"column_start":12,"column_end":15},"name":"new","qualname":"<LitChar>::new","value":"fn (value: char, span: Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":389698,"byte_end":389703,"line_start":268,"line_end":268,"column_start":12,"column_end":17},"name":"value","qualname":"<LitChar>::value","value":"fn (&self) -> char","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":389794,"byte_end":389798,"line_start":272,"line_end":272,"column_start":12,"column_end":16},"name":"span","qualname":"<LitChar>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":389860,"byte_end":389868,"line_start":276,"line_end":276,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitChar>::set_span","value":"fn (&mut self, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":389962,"byte_end":389965,"line_start":282,"line_end":282,"column_start":12,"column_end":15},"name":"new","qualname":"<LitInt>::new","value":"fn (value: u64, suffix: IntSuffix, span: Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":391035,"byte_end":391040,"line_start":302,"line_end":302,"column_start":12,"column_end":17},"name":"value","qualname":"<LitInt>::value","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":391138,"byte_end":391144,"line_start":306,"line_end":306,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitInt>::suffix","value":"fn (&self) -> IntSuffix","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":391841,"byte_end":391845,"line_start":329,"line_end":329,"column_start":12,"column_end":16},"name":"span","qualname":"<LitInt>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":391907,"byte_end":391915,"line_start":333,"line_end":333,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitInt>::set_span","value":"fn (&mut self, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":392011,"byte_end":392014,"line_start":339,"line_end":339,"column_start":12,"column_end":15},"name":"new","qualname":"<LitFloat>::new","value":"fn (value: f64, suffix: FloatSuffix, span: Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":392398,"byte_end":392403,"line_start":349,"line_end":349,"column_start":12,"column_end":17},"name":"value","qualname":"<LitFloat>::value","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":392494,"byte_end":392500,"line_start":353,"line_end":353,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitFloat>::suffix","value":"fn (&self) -> FloatSuffix","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":392792,"byte_end":392796,"line_start":363,"line_end":363,"column_start":12,"column_end":16},"name":"span","qualname":"<LitFloat>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":392858,"byte_end":392866,"line_start":367,"line_end":367,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitFloat>::set_span","value":"fn (&mut self, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393768,"byte_end":393772,"line_start":404,"line_end":404,"column_start":12,"column_end":16},"name":"span","qualname":"<LitVerbatim>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393834,"byte_end":393842,"line_start":408,"line_end":408,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitVerbatim>::set_span","value":"fn (&mut self, span: Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7266},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393929,"byte_end":393935,"line_start":413,"line_end":413,"column_start":19,"column_end":25},"name":"LitStr","qualname":"::lit::LitStr","value":"fn (marker: lookahead::TokenMarker) -> LitStr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393546,"byte_end":393573,"line_start":394,"line_end":394,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393605,"byte_end":393629,"line_start":396,"line_end":396,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":7267},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393963,"byte_end":393973,"line_start":414,"line_end":414,"column_start":19,"column_end":29},"name":"LitByteStr","qualname":"::lit::LitByteStr","value":"fn (marker: lookahead::TokenMarker) -> LitByteStr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393546,"byte_end":393573,"line_start":394,"line_end":394,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393605,"byte_end":393629,"line_start":396,"line_end":396,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":7268},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394001,"byte_end":394008,"line_start":415,"line_end":415,"column_start":19,"column_end":26},"name":"LitByte","qualname":"::lit::LitByte","value":"fn (marker: lookahead::TokenMarker) -> LitByte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393546,"byte_end":393573,"line_start":394,"line_end":394,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393605,"byte_end":393629,"line_start":396,"line_end":396,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":7269},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394036,"byte_end":394043,"line_start":416,"line_end":416,"column_start":19,"column_end":26},"name":"LitChar","qualname":"::lit::LitChar","value":"fn (marker: lookahead::TokenMarker) -> LitChar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393546,"byte_end":393573,"line_start":394,"line_end":394,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393605,"byte_end":393629,"line_start":396,"line_end":396,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":7270},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394071,"byte_end":394077,"line_start":417,"line_end":417,"column_start":19,"column_end":25},"name":"LitInt","qualname":"::lit::LitInt","value":"fn (marker: lookahead::TokenMarker) -> LitInt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393546,"byte_end":393573,"line_start":394,"line_end":394,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393605,"byte_end":393629,"line_start":396,"line_end":396,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":7271},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394105,"byte_end":394113,"line_start":418,"line_end":418,"column_start":19,"column_end":27},"name":"LitFloat","qualname":"::lit::LitFloat","value":"fn (marker: lookahead::TokenMarker) -> LitFloat","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393546,"byte_end":393573,"line_start":394,"line_end":394,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393605,"byte_end":393629,"line_start":396,"line_end":396,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":7272},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394141,"byte_end":394148,"line_start":419,"line_end":419,"column_start":19,"column_end":26},"name":"LitBool","qualname":"::lit::LitBool","value":"fn (marker: lookahead::TokenMarker) -> LitBool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393546,"byte_end":393573,"line_start":394,"line_end":394,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393605,"byte_end":393629,"line_start":396,"line_end":396,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":7273},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394176,"byte_end":394187,"line_start":420,"line_end":420,"column_start":19,"column_end":30},"name":"LitVerbatim","qualname":"::lit::LitVerbatim","value":"fn (marker: lookahead::TokenMarker) -> LitVerbatim","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393546,"byte_end":393573,"line_start":394,"line_end":394,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393605,"byte_end":393629,"line_start":396,"line_end":396,"column_start":9,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7275},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394507,"byte_end":394513,"line_start":430,"line_end":430,"column_start":9,"column_end":15},"name":"Cooked","qualname":"::lit::StrStyle::Cooked","value":"StrStyle::Cooked","parent":{"krate":0,"index":7274},"children":[],"decl_id":null,"docs":" An ordinary string like `\"data\"`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7277},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394648,"byte_end":394651,"line_start":434,"line_end":434,"column_start":9,"column_end":12},"name":"Raw","qualname":"::lit::StrStyle::Raw","value":"StrStyle::Raw(usize)","parent":{"krate":0,"index":7274},"children":[],"decl_id":null,"docs":" A raw string like `r##\"data\"##`.\n\n The unsigned integer is the number of `#` symbols used.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7274},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394432,"byte_end":394440,"line_start":428,"line_end":428,"column_start":14,"column_end":22},"name":"StrStyle","qualname":"::lit::StrStyle","value":"StrStyle::{Cooked, Raw}","parent":null,"children":[{"krate":0,"index":7275},{"krate":0,"index":7277}],"decl_id":null,"docs":" The style of a string literal, either plain quoted or a raw string like\n `r##\"data\"##`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7283},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394905,"byte_end":394907,"line_start":444,"line_end":444,"column_start":9,"column_end":11},"name":"I8","qualname":"::lit::IntSuffix::I8","value":"IntSuffix::I8","parent":{"krate":0,"index":7282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7285},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394917,"byte_end":394920,"line_start":445,"line_end":445,"column_start":9,"column_end":12},"name":"I16","qualname":"::lit::IntSuffix::I16","value":"IntSuffix::I16","parent":{"krate":0,"index":7282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7287},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394930,"byte_end":394933,"line_start":446,"line_end":446,"column_start":9,"column_end":12},"name":"I32","qualname":"::lit::IntSuffix::I32","value":"IntSuffix::I32","parent":{"krate":0,"index":7282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7289},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394943,"byte_end":394946,"line_start":447,"line_end":447,"column_start":9,"column_end":12},"name":"I64","qualname":"::lit::IntSuffix::I64","value":"IntSuffix::I64","parent":{"krate":0,"index":7282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7291},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394956,"byte_end":394960,"line_start":448,"line_end":448,"column_start":9,"column_end":13},"name":"I128","qualname":"::lit::IntSuffix::I128","value":"IntSuffix::I128","parent":{"krate":0,"index":7282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7293},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394970,"byte_end":394975,"line_start":449,"line_end":449,"column_start":9,"column_end":14},"name":"Isize","qualname":"::lit::IntSuffix::Isize","value":"IntSuffix::Isize","parent":{"krate":0,"index":7282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7295},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394985,"byte_end":394987,"line_start":450,"line_end":450,"column_start":9,"column_end":11},"name":"U8","qualname":"::lit::IntSuffix::U8","value":"IntSuffix::U8","parent":{"krate":0,"index":7282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7297},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394997,"byte_end":395000,"line_start":451,"line_end":451,"column_start":9,"column_end":12},"name":"U16","qualname":"::lit::IntSuffix::U16","value":"IntSuffix::U16","parent":{"krate":0,"index":7282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7299},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":395010,"byte_end":395013,"line_start":452,"line_end":452,"column_start":9,"column_end":12},"name":"U32","qualname":"::lit::IntSuffix::U32","value":"IntSuffix::U32","parent":{"krate":0,"index":7282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7301},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":395023,"byte_end":395026,"line_start":453,"line_end":453,"column_start":9,"column_end":12},"name":"U64","qualname":"::lit::IntSuffix::U64","value":"IntSuffix::U64","parent":{"krate":0,"index":7282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7303},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":395036,"byte_end":395040,"line_start":454,"line_end":454,"column_start":9,"column_end":13},"name":"U128","qualname":"::lit::IntSuffix::U128","value":"IntSuffix::U128","parent":{"krate":0,"index":7282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7305},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":395050,"byte_end":395055,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"name":"Usize","qualname":"::lit::IntSuffix::Usize","value":"IntSuffix::Usize","parent":{"krate":0,"index":7282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7307},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":395065,"byte_end":395069,"line_start":456,"line_end":456,"column_start":9,"column_end":13},"name":"None","qualname":"::lit::IntSuffix::None","value":"IntSuffix::None","parent":{"krate":0,"index":7282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7282},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":394875,"byte_end":394884,"line_start":443,"line_end":443,"column_start":14,"column_end":23},"name":"IntSuffix","qualname":"::lit::IntSuffix","value":"IntSuffix::{I8, I16, I32, I64, I128, Isize, U8, U16, U32, U64, U128, Usize, None}","parent":null,"children":[{"krate":0,"index":7283},{"krate":0,"index":7285},{"krate":0,"index":7287},{"krate":0,"index":7289},{"krate":0,"index":7291},{"krate":0,"index":7293},{"krate":0,"index":7295},{"krate":0,"index":7297},{"krate":0,"index":7299},{"krate":0,"index":7301},{"krate":0,"index":7303},{"krate":0,"index":7305},{"krate":0,"index":7307}],"decl_id":null,"docs":" The suffix on an integer literal if any, like the `u8` in `127u8`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7312},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":395334,"byte_end":395337,"line_start":467,"line_end":467,"column_start":9,"column_end":12},"name":"F32","qualname":"::lit::FloatSuffix::F32","value":"FloatSuffix::F32","parent":{"krate":0,"index":7311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7314},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":395347,"byte_end":395350,"line_start":468,"line_end":468,"column_start":9,"column_end":12},"name":"F64","qualname":"::lit::FloatSuffix::F64","value":"FloatSuffix::F64","parent":{"krate":0,"index":7311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7316},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":395360,"byte_end":395364,"line_start":469,"line_end":469,"column_start":9,"column_end":13},"name":"None","qualname":"::lit::FloatSuffix::None","value":"FloatSuffix::None","parent":{"krate":0,"index":7311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7311},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":395302,"byte_end":395313,"line_start":466,"line_end":466,"column_start":14,"column_end":25},"name":"FloatSuffix","qualname":"::lit::FloatSuffix","value":"FloatSuffix::{F32, F64, None}","parent":null,"children":[{"krate":0,"index":7312},{"krate":0,"index":7314},{"krate":0,"index":7316}],"decl_id":null,"docs":" The suffix on a floating point literal if any, like the `f32` in\n `1.0f32`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1253},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":395450,"byte_end":395453,"line_start":476,"line_end":476,"column_start":8,"column_end":11},"name":"Lit","qualname":"::lit::Lit","value":"fn (marker: lookahead::TokenMarker) -> Lit","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":395375,"byte_end":395402,"line_start":473,"line_end":473,"column_start":1,"column_end":28}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":395418,"byte_end":395442,"line_start":475,"line_end":475,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":400568,"byte_end":400571,"line_start":655,"line_end":655,"column_start":16,"column_end":19},"name":"new","qualname":"<Lit>::new","value":"fn (token: Literal) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Interpret a Syn literal from a proc-macro2 literal.\n\n Not all proc-macro2 literals are valid Syn literals. In particular,\n doc comments are considered by proc-macro2 to be literals but in Syn\n they are [`Attribute`].\n\n [`Attribute`]: crate::Attribute\n\n # Panics\n\n Panics if the input is a doc comment literal.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7320},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":415737,"byte_end":415742,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Macro","qualname":"::mac::Macro","value":"Macro { path, bang_token, delimiter, tts }","parent":null,"children":[{"krate":0,"index":7321},{"krate":0,"index":7322},{"krate":0,"index":7323},{"krate":0,"index":7324}],"decl_id":null,"docs":" A macro invocation: `println!(\"{}\", mac)`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7321},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":415778,"byte_end":415782,"line_start":20,"line_end":20,"column_start":13,"column_end":17},"name":"path","qualname":"::mac::Macro::path","value":"path::Path","parent":{"krate":0,"index":7320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7322},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":415802,"byte_end":415812,"line_start":21,"line_end":21,"column_start":13,"column_end":23},"name":"bang_token","qualname":"::mac::Macro::bang_token","value":"token::Bang","parent":{"krate":0,"index":7320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7323},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":415837,"byte_end":415846,"line_start":22,"line_end":22,"column_start":13,"column_end":22},"name":"delimiter","qualname":"::mac::Macro::delimiter","value":"mac::MacroDelimiter","parent":{"krate":0,"index":7320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7324},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":415876,"byte_end":415879,"line_start":23,"line_end":23,"column_start":13,"column_end":16},"name":"tts","qualname":"::mac::Macro::tts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":7320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7328},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":416150,"byte_end":416155,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"Paren","qualname":"::mac::MacroDelimiter::Paren","value":"MacroDelimiter::Paren(Paren)","parent":{"krate":0,"index":7327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7331},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":416172,"byte_end":416177,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"name":"Brace","qualname":"::mac::MacroDelimiter::Brace","value":"MacroDelimiter::Brace(Brace)","parent":{"krate":0,"index":7327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7334},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":416194,"byte_end":416201,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"name":"Bracket","qualname":"::mac::MacroDelimiter::Bracket","value":"MacroDelimiter::Bracket(Bracket)","parent":{"krate":0,"index":7327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7327},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":416125,"byte_end":416139,"line_start":32,"line_end":32,"column_start":14,"column_end":28},"name":"MacroDelimiter","qualname":"::mac::MacroDelimiter","value":"MacroDelimiter::{Paren, Brace, Bracket}","parent":null,"children":[{"krate":0,"index":7328},{"krate":0,"index":7331},{"krate":0,"index":7334}],"decl_id":null,"docs":" A grouping token that surrounds a macro body: `m!(...)` or `m!{...}` or `m![...]`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":420461,"byte_end":420471,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"parse_body","qualname":"<Macro>::parse_body","value":"fn <T> (&self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse the tokens within the macro invocation's delimiters into a syntax\n tree.\n\n This is equivalent to `syn::parse2::<T>(mac.tts)` except that it\n produces a more useful span when `tts` is empty.\n\n # Example\n\n ```edition2018\n use syn::{parse_quote, Expr, ExprLit, Ident, Lit, LitStr, Macro, Token};\n use syn::ext::IdentExt;\n use syn::parse::{Error, Parse, ParseStream, Result};\n use syn::punctuated::Punctuated;\n\n // The arguments expected by libcore's format_args macro, and as a\n // result most other formatting and printing macros like println.\n //\n //     println!(\"{} is {number:.prec$}\", \"x\", prec=5, number=0.01)\n struct FormatArgs {\n     format_string: Expr,\n     positional_args: Vec<Expr>,\n     named_args: Vec<(Ident, Expr)>,\n }\n\n impl Parse for FormatArgs {\n     fn parse(input: ParseStream) -> Result<Self> {\n         let format_string: Expr;\n         let mut positional_args = Vec::new();\n         let mut named_args = Vec::new();\n\n         format_string = input.parse()?;\n         while !input.is_empty() {\n             input.parse::<Token![,]>()?;\n             if input.is_empty() {\n                 break;\n             }\n             if input.peek(Ident::peek_any) && input.peek2(Token![=]) {\n                 while !input.is_empty() {\n                     let name: Ident = input.call(Ident::parse_any)?;\n                     input.parse::<Token![=]>()?;\n                     let value: Expr = input.parse()?;\n                     named_args.push((name, value));\n                     if input.is_empty() {\n                         break;\n                     }\n                     input.parse::<Token![,]>()?;\n                 }\n                 break;\n             }\n             positional_args.push(input.parse()?);\n         }\n\n         Ok(FormatArgs {\n             format_string,\n             positional_args,\n             named_args,\n         })\n     }\n }\n\n // Extract the first argument, the format string literal, from an\n // invocation of a formatting or printing macro.\n fn get_format_string(m: &Macro) -> Result<LitStr> {\n     let args: FormatArgs = m.parse_body()?;\n     match args.format_string {\n         Expr::Lit(ExprLit { lit: Lit::Str(lit), .. }) => Ok(lit),\n         other => {\n             // First argument was not a string literal expression.\n             // Maybe something like: println!(concat!(...), ...)\n             Err(Error::new_spanned(other, \"format string must be a string literal\"))\n         }\n     }\n }\n\n fn main() {\n     let invocation = parse_quote! {\n         println!(\"{:?}\", Instant::now())\n     };\n     let lit = get_format_string(&invocation).unwrap();\n     assert_eq!(lit.value(), \"{:?}\");\n }\n ```\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":420422,"byte_end":420449,"line_start":157,"line_end":157,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":420691,"byte_end":420706,"line_start":165,"line_end":165,"column_start":12,"column_end":27},"name":"parse_body_with","qualname":"<Macro>::parse_body_with","value":"fn <F> (&self, parser: F) -> Result<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Parse the tokens within the macro invocation's delimiters using the\n given parser.\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":420652,"byte_end":420679,"line_start":164,"line_end":164,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7339},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":423457,"byte_end":423468,"line_start":8,"line_end":8,"column_start":16,"column_end":27},"name":"DeriveInput","qualname":"::derive::DeriveInput","value":"DeriveInput { attrs, vis, ident, generics, data }","parent":null,"children":[{"krate":0,"index":7340},{"krate":0,"index":7341},{"krate":0,"index":7342},{"krate":0,"index":7343},{"krate":0,"index":7344}],"decl_id":null,"docs":" Data structure sent to a `proc_macro_derive` macro.\n\n *This type is available if Syn is built with the `\"derive\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7340},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":423542,"byte_end":423547,"line_start":10,"line_end":10,"column_start":13,"column_end":18},"name":"attrs","qualname":"::derive::DeriveInput::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":7339},"children":[],"decl_id":null,"docs":" Attributes tagged on the whole struct or enum.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7341},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":423624,"byte_end":423627,"line_start":13,"line_end":13,"column_start":13,"column_end":16},"name":"vis","qualname":"::derive::DeriveInput::vis","value":"data::Visibility","parent":{"krate":0,"index":7339},"children":[],"decl_id":null,"docs":" Visibility of the struct or enum.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7342},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":423694,"byte_end":423699,"line_start":16,"line_end":16,"column_start":13,"column_end":18},"name":"ident","qualname":"::derive::DeriveInput::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":7339},"children":[],"decl_id":null,"docs":" Name of the struct or enum.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7343},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":423779,"byte_end":423787,"line_start":19,"line_end":19,"column_start":13,"column_end":21},"name":"generics","qualname":"::derive::DeriveInput::generics","value":"generics::Generics","parent":{"krate":0,"index":7339},"children":[],"decl_id":null,"docs":" Generics required to complete the definition.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7344},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":423856,"byte_end":423860,"line_start":22,"line_end":22,"column_start":13,"column_end":17},"name":"data","qualname":"::derive::DeriveInput::data","value":"derive::Data","parent":{"krate":0,"index":7339},"children":[],"decl_id":null,"docs":" Data within the struct or enum.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7354},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":424551,"byte_end":424557,"line_start":44,"line_end":44,"column_start":13,"column_end":19},"name":"Struct","qualname":"::derive::Data::Struct","value":"Data::Struct(DataStruct)","parent":{"krate":0,"index":7353},"children":[],"decl_id":null,"docs":" A struct input to a `proc_macro_derive` macro.\n\n *This type is available if Syn is built with the `\"derive\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7357},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":424885,"byte_end":424889,"line_start":54,"line_end":54,"column_start":13,"column_end":17},"name":"Enum","qualname":"::derive::Data::Enum","value":"Data::Enum(DataEnum)","parent":{"krate":0,"index":7353},"children":[],"decl_id":null,"docs":" An enum input to a `proc_macro_derive` macro.\n\n *This type is available if Syn is built with the `\"derive\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7360},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":425240,"byte_end":425245,"line_start":64,"line_end":64,"column_start":13,"column_end":18},"name":"Union","qualname":"::derive::Data::Union","value":"Data::Union(DataUnion)","parent":{"krate":0,"index":7353},"children":[],"decl_id":null,"docs":" A tagged union input to a `proc_macro_derive` macro.\n\n *This type is available if Syn is built with the `\"derive\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7353},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":424367,"byte_end":424371,"line_start":39,"line_end":39,"column_start":14,"column_end":18},"name":"Data","qualname":"::derive::Data","value":"Data::{Struct, Enum, Union}","parent":null,"children":[{"krate":0,"index":7354},{"krate":0,"index":7357},{"krate":0,"index":7360}],"decl_id":null,"docs":" The storage of a struct, enum or union data structure.\n\n *This type is available if Syn is built with the `\"derive\"` feature.*\n\n # Syntax tree enum\n\n This type is a [syntax tree enum].\n\n [syntax tree enum]: enum.Expr.html#syntax-tree-enums\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7365},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":424558,"byte_end":424568,"line_start":44,"line_end":44,"column_start":20,"column_end":30},"name":"DataStruct","qualname":"::derive::DataStruct","value":"DataStruct { struct_token, fields, semi_token }","parent":null,"children":[{"krate":0,"index":7366},{"krate":0,"index":7367},{"krate":0,"index":7368}],"decl_id":null,"docs":" A struct input to a `proc_macro_derive` macro.\n\n *This type is available if Syn is built with the `\"derive\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7366},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":424587,"byte_end":424599,"line_start":45,"line_end":45,"column_start":17,"column_end":29},"name":"struct_token","qualname":"::derive::DataStruct::struct_token","value":"token::Struct","parent":{"krate":0,"index":7365},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7367},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":424633,"byte_end":424639,"line_start":46,"line_end":46,"column_start":17,"column_end":23},"name":"fields","qualname":"::derive::DataStruct::fields","value":"data::Fields","parent":{"krate":0,"index":7365},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7368},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":424665,"byte_end":424675,"line_start":47,"line_end":47,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::derive::DataStruct::semi_token","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":7365},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7371},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":424890,"byte_end":424898,"line_start":54,"line_end":54,"column_start":18,"column_end":26},"name":"DataEnum","qualname":"::derive::DataEnum","value":"DataEnum { enum_token, brace_token, variants }","parent":null,"children":[{"krate":0,"index":7372},{"krate":0,"index":7373},{"krate":0,"index":7374}],"decl_id":null,"docs":" An enum input to a `proc_macro_derive` macro.\n\n *This type is available if Syn is built with the `\"derive\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7372},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":424917,"byte_end":424927,"line_start":55,"line_end":55,"column_start":17,"column_end":27},"name":"enum_token","qualname":"::derive::DataEnum::enum_token","value":"token::Enum","parent":{"krate":0,"index":7371},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7373},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":424959,"byte_end":424970,"line_start":56,"line_end":56,"column_start":17,"column_end":28},"name":"brace_token","qualname":"::derive::DataEnum::brace_token","value":"token::Brace","parent":{"krate":0,"index":7371},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7374},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":425002,"byte_end":425010,"line_start":57,"line_end":57,"column_start":17,"column_end":25},"name":"variants","qualname":"::derive::DataEnum::variants","value":"punctuated::Punctuated<data::Variant, token::Comma>","parent":{"krate":0,"index":7371},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7377},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":425246,"byte_end":425255,"line_start":64,"line_end":64,"column_start":19,"column_end":28},"name":"DataUnion","qualname":"::derive::DataUnion","value":"DataUnion { union_token, fields }","parent":null,"children":[{"krate":0,"index":7378},{"krate":0,"index":7379}],"decl_id":null,"docs":" A tagged union input to a `proc_macro_derive` macro.\n\n *This type is available if Syn is built with the `\"derive\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7378},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":425274,"byte_end":425285,"line_start":65,"line_end":65,"column_start":17,"column_end":28},"name":"union_token","qualname":"::derive::DataUnion::union_token","value":"token::Union","parent":{"krate":0,"index":7377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7379},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":425318,"byte_end":425324,"line_start":66,"line_end":66,"column_start":17,"column_end":23},"name":"fields","qualname":"::derive::DataUnion::fields","value":"data::FieldsNamed","parent":{"krate":0,"index":7377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7383},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":432413,"byte_end":432416,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"Add","qualname":"::op::BinOp::Add","value":"BinOp::Add(crate::token::Add)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `+` operator (addition)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7386},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":432480,"byte_end":432483,"line_start":11,"line_end":11,"column_start":9,"column_end":12},"name":"Sub","qualname":"::op::BinOp::Sub","value":"BinOp::Sub(crate::token::Sub)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `-` operator (subtraction)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7389},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":432550,"byte_end":432553,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"Mul","qualname":"::op::BinOp::Mul","value":"BinOp::Mul(crate::token::Star)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `*` operator (multiplication)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7392},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":432614,"byte_end":432617,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"name":"Div","qualname":"::op::BinOp::Div","value":"BinOp::Div(crate::token::Div)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `/` operator (division)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7395},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":432677,"byte_end":432680,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"name":"Rem","qualname":"::op::BinOp::Rem","value":"BinOp::Rem(crate::token::Rem)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `%` operator (modulus)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7398},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":432745,"byte_end":432748,"line_start":19,"line_end":19,"column_start":9,"column_end":12},"name":"And","qualname":"::op::BinOp::And","value":"BinOp::And(crate::token::AndAnd)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `&&` operator (logical and)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7401},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":432813,"byte_end":432815,"line_start":21,"line_end":21,"column_start":9,"column_end":11},"name":"Or","qualname":"::op::BinOp::Or","value":"BinOp::Or(crate::token::OrOr)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `||` operator (logical or)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7404},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":432880,"byte_end":432886,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"name":"BitXor","qualname":"::op::BinOp::BitXor","value":"BinOp::BitXor(crate::token::Caret)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `^` operator (bitwise xor)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7407},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":432950,"byte_end":432956,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"name":"BitAnd","qualname":"::op::BinOp::BitAnd","value":"BinOp::BitAnd(crate::token::And)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `&` operator (bitwise and)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7410},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":433019,"byte_end":433024,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"name":"BitOr","qualname":"::op::BinOp::BitOr","value":"BinOp::BitOr(crate::token::Or)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `|` operator (bitwise or)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7413},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":433088,"byte_end":433091,"line_start":29,"line_end":29,"column_start":9,"column_end":12},"name":"Shl","qualname":"::op::BinOp::Shl","value":"BinOp::Shl(crate::token::Shl)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `<<` operator (shift left)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7416},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":433157,"byte_end":433160,"line_start":31,"line_end":31,"column_start":9,"column_end":12},"name":"Shr","qualname":"::op::BinOp::Shr","value":"BinOp::Shr(crate::token::Shr)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `>>` operator (shift right)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7419},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":433223,"byte_end":433225,"line_start":33,"line_end":33,"column_start":9,"column_end":11},"name":"Eq","qualname":"::op::BinOp::Eq","value":"BinOp::Eq(crate::token::EqEq)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `==` operator (equality)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7422},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":433288,"byte_end":433290,"line_start":35,"line_end":35,"column_start":9,"column_end":11},"name":"Lt","qualname":"::op::BinOp::Lt","value":"BinOp::Lt(crate::token::Lt)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `<` operator (less than)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7425},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":433365,"byte_end":433367,"line_start":37,"line_end":37,"column_start":9,"column_end":11},"name":"Le","qualname":"::op::BinOp::Le","value":"BinOp::Le(crate::token::Le)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `<=` operator (less than or equal to)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7428},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":433434,"byte_end":433436,"line_start":39,"line_end":39,"column_start":9,"column_end":11},"name":"Ne","qualname":"::op::BinOp::Ne","value":"BinOp::Ne(crate::token::Ne)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `!=` operator (not equal to)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7431},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":433515,"byte_end":433517,"line_start":41,"line_end":41,"column_start":9,"column_end":11},"name":"Ge","qualname":"::op::BinOp::Ge","value":"BinOp::Ge(crate::token::Ge)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `>=` operator (greater than or equal to)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7434},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":433583,"byte_end":433585,"line_start":43,"line_end":43,"column_start":9,"column_end":11},"name":"Gt","qualname":"::op::BinOp::Gt","value":"BinOp::Gt(crate::token::Gt)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `>` operator (greater than)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7437},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":433636,"byte_end":433641,"line_start":45,"line_end":45,"column_start":9,"column_end":14},"name":"AddEq","qualname":"::op::BinOp::AddEq","value":"BinOp::AddEq(crate::token::AddEq)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `+=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7440},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":433693,"byte_end":433698,"line_start":47,"line_end":47,"column_start":9,"column_end":14},"name":"SubEq","qualname":"::op::BinOp::SubEq","value":"BinOp::SubEq(crate::token::SubEq)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `-=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7443},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":433750,"byte_end":433755,"line_start":49,"line_end":49,"column_start":9,"column_end":14},"name":"MulEq","qualname":"::op::BinOp::MulEq","value":"BinOp::MulEq(crate::token::MulEq)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `*=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7446},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":433807,"byte_end":433812,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"name":"DivEq","qualname":"::op::BinOp::DivEq","value":"BinOp::DivEq(crate::token::DivEq)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `/=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7449},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":433864,"byte_end":433869,"line_start":53,"line_end":53,"column_start":9,"column_end":14},"name":"RemEq","qualname":"::op::BinOp::RemEq","value":"BinOp::RemEq(crate::token::RemEq)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `%=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7452},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":433921,"byte_end":433929,"line_start":55,"line_end":55,"column_start":9,"column_end":17},"name":"BitXorEq","qualname":"::op::BinOp::BitXorEq","value":"BinOp::BitXorEq(crate::token::CaretEq)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `^=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7455},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":433981,"byte_end":433989,"line_start":57,"line_end":57,"column_start":9,"column_end":17},"name":"BitAndEq","qualname":"::op::BinOp::BitAndEq","value":"BinOp::BitAndEq(crate::token::AndEq)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `&=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7458},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":434041,"byte_end":434048,"line_start":59,"line_end":59,"column_start":9,"column_end":16},"name":"BitOrEq","qualname":"::op::BinOp::BitOrEq","value":"BinOp::BitOrEq(crate::token::OrEq)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `|=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7461},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":434101,"byte_end":434106,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"name":"ShlEq","qualname":"::op::BinOp::ShlEq","value":"BinOp::ShlEq(crate::token::ShlEq)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `<<=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7464},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":434160,"byte_end":434165,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"name":"ShrEq","qualname":"::op::BinOp::ShrEq","value":"BinOp::ShrEq(crate::token::ShrEq)","parent":{"krate":0,"index":7382},"children":[],"decl_id":null,"docs":" The `>>=` operator\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7382},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":432357,"byte_end":432362,"line_start":7,"line_end":7,"column_start":14,"column_end":19},"name":"BinOp","qualname":"::op::BinOp","value":"BinOp::{Add, Sub, Mul, Div, Rem, And, Or, BitXor, BitAnd, BitOr, Shl, Shr, Eq, Lt, Le, Ne, Ge, Gt, AddEq, SubEq, MulEq, DivEq, RemEq, BitXorEq, BitAndEq, BitOrEq, ShlEq, ShrEq}","parent":null,"children":[{"krate":0,"index":7383},{"krate":0,"index":7386},{"krate":0,"index":7389},{"krate":0,"index":7392},{"krate":0,"index":7395},{"krate":0,"index":7398},{"krate":0,"index":7401},{"krate":0,"index":7404},{"krate":0,"index":7407},{"krate":0,"index":7410},{"krate":0,"index":7413},{"krate":0,"index":7416},{"krate":0,"index":7419},{"krate":0,"index":7422},{"krate":0,"index":7425},{"krate":0,"index":7428},{"krate":0,"index":7431},{"krate":0,"index":7434},{"krate":0,"index":7437},{"krate":0,"index":7440},{"krate":0,"index":7443},{"krate":0,"index":7446},{"krate":0,"index":7449},{"krate":0,"index":7452},{"krate":0,"index":7455},{"krate":0,"index":7458},{"krate":0,"index":7461},{"krate":0,"index":7464}],"decl_id":null,"docs":" A binary operator: `+`, `+=`, `&`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7471},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":434478,"byte_end":434483,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"name":"Deref","qualname":"::op::UnOp::Deref","value":"UnOp::Deref(crate::token::Star)","parent":{"krate":0,"index":7470},"children":[],"decl_id":null,"docs":" The `*` operator for dereferencing\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7474},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":434555,"byte_end":434558,"line_start":77,"line_end":77,"column_start":9,"column_end":12},"name":"Not","qualname":"::op::UnOp::Not","value":"UnOp::Not(crate::token::Bang)","parent":{"krate":0,"index":7470},"children":[],"decl_id":null,"docs":" The `!` operator for logical inversion\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7477},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":434621,"byte_end":434624,"line_start":79,"line_end":79,"column_start":9,"column_end":12},"name":"Neg","qualname":"::op::UnOp::Neg","value":"UnOp::Neg(crate::token::Sub)","parent":{"krate":0,"index":7470},"children":[],"decl_id":null,"docs":" The `-` operator for negation\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7470},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":434416,"byte_end":434420,"line_start":73,"line_end":73,"column_start":14,"column_end":18},"name":"UnOp","qualname":"::op::UnOp","value":"UnOp::{Deref, Not, Neg}","parent":null,"children":[{"krate":0,"index":7471},{"krate":0,"index":7474},{"krate":0,"index":7477}],"decl_id":null,"docs":" A unary operator: `*`, `!`, `-`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7514},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":441336,"byte_end":441341,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"name":"Slice","qualname":"::ty::Type::Slice","value":"Type::Slice(TypeSlice)","parent":{"krate":0,"index":7513},"children":[],"decl_id":null,"docs":" A dynamically sized slice type: `[T]`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7517},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":441624,"byte_end":441629,"line_start":37,"line_end":37,"column_start":13,"column_end":18},"name":"Array","qualname":"::ty::Type::Array","value":"Type::Array(TypeArray)","parent":{"krate":0,"index":7513},"children":[],"decl_id":null,"docs":" A fixed size array type: `[T; n]`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7520},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":441987,"byte_end":441990,"line_start":48,"line_end":48,"column_start":13,"column_end":16},"name":"Ptr","qualname":"::ty::Type::Ptr","value":"Type::Ptr(TypePtr)","parent":{"krate":0,"index":7513},"children":[],"decl_id":null,"docs":" A raw pointer type: `*const T` or `*mut T`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7523},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":442371,"byte_end":442380,"line_start":59,"line_end":59,"column_start":13,"column_end":22},"name":"Reference","qualname":"::ty::Type::Reference","value":"Type::Reference(TypeReference)","parent":{"krate":0,"index":7513},"children":[],"decl_id":null,"docs":" A reference type: `&'a T` or `&'a mut T`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7526},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":442759,"byte_end":442765,"line_start":70,"line_end":70,"column_start":13,"column_end":19},"name":"BareFn","qualname":"::ty::Type::BareFn","value":"Type::BareFn(TypeBareFn)","parent":{"krate":0,"index":7513},"children":[],"decl_id":null,"docs":" A bare function type: `fn(usize) -> bool`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7529},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":443312,"byte_end":443317,"line_start":85,"line_end":85,"column_start":13,"column_end":18},"name":"Never","qualname":"::ty::Type::Never","value":"Type::Never(TypeNever)","parent":{"krate":0,"index":7513},"children":[],"decl_id":null,"docs":" The never type: `!`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7532},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":443559,"byte_end":443564,"line_start":93,"line_end":93,"column_start":13,"column_end":18},"name":"Tuple","qualname":"::ty::Type::Tuple","value":"Type::Tuple(TypeTuple)","parent":{"krate":0,"index":7513},"children":[],"decl_id":null,"docs":" A tuple type: `(A, B, C, String)`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7535},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":444022,"byte_end":444026,"line_start":105,"line_end":105,"column_start":13,"column_end":17},"name":"Path","qualname":"::ty::Type::Path","value":"Type::Path(TypePath)","parent":{"krate":0,"index":7513},"children":[],"decl_id":null,"docs":" A path like `std::slice::Iter`, optionally qualified with a\n self-type as in `<Vec<T> as SomeTrait>::Associated`.\n\n Type arguments are stored in the Path itself.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7538},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":444358,"byte_end":444369,"line_start":115,"line_end":115,"column_start":13,"column_end":24},"name":"TraitObject","qualname":"::ty::Type::TraitObject","value":"Type::TraitObject(TypeTraitObject)","parent":{"krate":0,"index":7513},"children":[],"decl_id":null,"docs":" A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a\n trait or a lifetime.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7541},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":444746,"byte_end":444755,"line_start":125,"line_end":125,"column_start":13,"column_end":22},"name":"ImplTrait","qualname":"::ty::Type::ImplTrait","value":"Type::ImplTrait(TypeImplTrait)","parent":{"krate":0,"index":7513},"children":[],"decl_id":null,"docs":" An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or\n a lifetime.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7544},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":445083,"byte_end":445088,"line_start":134,"line_end":134,"column_start":13,"column_end":18},"name":"Paren","qualname":"::ty::Type::Paren","value":"Type::Paren(TypeParen)","parent":{"krate":0,"index":7513},"children":[],"decl_id":null,"docs":" A parenthesized type equivalent to the inner type.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7547},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":445378,"byte_end":445383,"line_start":143,"line_end":143,"column_start":13,"column_end":18},"name":"Group","qualname":"::ty::Type::Group","value":"Type::Group(TypeGroup)","parent":{"krate":0,"index":7513},"children":[],"decl_id":null,"docs":" A type contained within invisible delimiters.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7550},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":445691,"byte_end":445696,"line_start":152,"line_end":152,"column_start":13,"column_end":18},"name":"Infer","qualname":"::ty::Type::Infer","value":"Type::Infer(TypeInfer)","parent":{"krate":0,"index":7513},"children":[],"decl_id":null,"docs":" Indication that a type should be inferred by the compiler: `_`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7553},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":445939,"byte_end":445944,"line_start":160,"line_end":160,"column_start":13,"column_end":18},"name":"Macro","qualname":"::ty::Type::Macro","value":"Type::Macro(TypeMacro)","parent":{"krate":0,"index":7513},"children":[],"decl_id":null,"docs":" A macro in the type position.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7556},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":446188,"byte_end":446196,"line_start":168,"line_end":168,"column_start":13,"column_end":21},"name":"Verbatim","qualname":"::ty::Type::Verbatim","value":"Type::Verbatim(TypeVerbatim)","parent":{"krate":0,"index":7513},"children":[],"decl_id":null,"docs":" Tokens in type position not interpreted by Syn.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7513},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":441148,"byte_end":441152,"line_start":23,"line_end":23,"column_start":14,"column_end":18},"name":"Type","qualname":"::ty::Type","value":"Type::{Slice, Array, Ptr, Reference, BareFn, Never, Tuple, Path, TraitObject, ImplTrait, Paren, Group, Infer, Macro, Verbatim}","parent":null,"children":[{"krate":0,"index":7514},{"krate":0,"index":7517},{"krate":0,"index":7520},{"krate":0,"index":7523},{"krate":0,"index":7526},{"krate":0,"index":7529},{"krate":0,"index":7532},{"krate":0,"index":7535},{"krate":0,"index":7538},{"krate":0,"index":7541},{"krate":0,"index":7544},{"krate":0,"index":7547},{"krate":0,"index":7550},{"krate":0,"index":7553},{"krate":0,"index":7556}],"decl_id":null,"docs":" The possible types that a Rust value could have.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n\n # Syntax tree enum\n\n This type is a [syntax tree enum].\n\n [syntax tree enum]: enum.Expr.html#syntax-tree-enums\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7561},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":441342,"byte_end":441351,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"name":"TypeSlice","qualname":"::ty::TypeSlice","value":"TypeSlice { bracket_token, elem }","parent":null,"children":[{"krate":0,"index":7562},{"krate":0,"index":7563}],"decl_id":null,"docs":" A dynamically sized slice type: `[T]`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7562},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":441370,"byte_end":441383,"line_start":29,"line_end":29,"column_start":17,"column_end":30},"name":"bracket_token","qualname":"::ty::TypeSlice::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7563},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":441417,"byte_end":441421,"line_start":30,"line_end":30,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypeSlice::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7566},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":441630,"byte_end":441639,"line_start":37,"line_end":37,"column_start":19,"column_end":28},"name":"TypeArray","qualname":"::ty::TypeArray","value":"TypeArray { bracket_token, elem, semi_token, len }","parent":null,"children":[{"krate":0,"index":7567},{"krate":0,"index":7568},{"krate":0,"index":7569},{"krate":0,"index":7570}],"decl_id":null,"docs":" A fixed size array type: `[T; n]`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7567},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":441658,"byte_end":441671,"line_start":38,"line_end":38,"column_start":17,"column_end":30},"name":"bracket_token","qualname":"::ty::TypeArray::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":7566},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7568},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":441705,"byte_end":441709,"line_start":39,"line_end":39,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypeArray::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":7566},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7569},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":441738,"byte_end":441748,"line_start":40,"line_end":40,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::ty::TypeArray::semi_token","value":"token::Semi","parent":{"krate":0,"index":7566},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7570},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":441777,"byte_end":441780,"line_start":41,"line_end":41,"column_start":17,"column_end":20},"name":"len","qualname":"::ty::TypeArray::len","value":"expr::Expr","parent":{"krate":0,"index":7566},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7573},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":441991,"byte_end":441998,"line_start":48,"line_end":48,"column_start":17,"column_end":24},"name":"TypePtr","qualname":"::ty::TypePtr","value":"TypePtr { star_token, const_token, mutability, elem }","parent":null,"children":[{"krate":0,"index":7574},{"krate":0,"index":7575},{"krate":0,"index":7576},{"krate":0,"index":7577}],"decl_id":null,"docs":" A raw pointer type: `*const T` or `*mut T`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7574},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":442017,"byte_end":442027,"line_start":49,"line_end":49,"column_start":17,"column_end":27},"name":"star_token","qualname":"::ty::TypePtr::star_token","value":"token::Star","parent":{"krate":0,"index":7573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7575},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":442056,"byte_end":442067,"line_start":50,"line_end":50,"column_start":17,"column_end":28},"name":"const_token","qualname":"::ty::TypePtr::const_token","value":"std::option::Option<token::Const>","parent":{"krate":0,"index":7573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7576},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":442108,"byte_end":442118,"line_start":51,"line_end":51,"column_start":17,"column_end":27},"name":"mutability","qualname":"::ty::TypePtr::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":7573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7577},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":442157,"byte_end":442161,"line_start":52,"line_end":52,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypePtr::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":7573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7580},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":442381,"byte_end":442394,"line_start":59,"line_end":59,"column_start":23,"column_end":36},"name":"TypeReference","qualname":"::ty::TypeReference","value":"TypeReference { and_token, lifetime, mutability, elem }","parent":null,"children":[{"krate":0,"index":7581},{"krate":0,"index":7582},{"krate":0,"index":7583},{"krate":0,"index":7584}],"decl_id":null,"docs":" A reference type: `&'a T` or `&'a mut T`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7581},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":442413,"byte_end":442422,"line_start":60,"line_end":60,"column_start":17,"column_end":26},"name":"and_token","qualname":"::ty::TypeReference::and_token","value":"token::And","parent":{"krate":0,"index":7580},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7582},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":442451,"byte_end":442459,"line_start":61,"line_end":61,"column_start":17,"column_end":25},"name":"lifetime","qualname":"::ty::TypeReference::lifetime","value":"std::option::Option<lifetime::Lifetime>","parent":{"krate":0,"index":7580},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7583},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":442495,"byte_end":442505,"line_start":62,"line_end":62,"column_start":17,"column_end":27},"name":"mutability","qualname":"::ty::TypeReference::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":7580},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7584},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":442544,"byte_end":442548,"line_start":63,"line_end":63,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypeReference::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":7580},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7587},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":442766,"byte_end":442776,"line_start":70,"line_end":70,"column_start":20,"column_end":30},"name":"TypeBareFn","qualname":"::ty::TypeBareFn","value":"TypeBareFn { lifetimes, unsafety, abi, fn_token, paren_token, inputs, variadic, output }","parent":null,"children":[{"krate":0,"index":7588},{"krate":0,"index":7589},{"krate":0,"index":7590},{"krate":0,"index":7591},{"krate":0,"index":7592},{"krate":0,"index":7593},{"krate":0,"index":7594},{"krate":0,"index":7595}],"decl_id":null,"docs":" A bare function type: `fn(usize) -> bool`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7588},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":442795,"byte_end":442804,"line_start":71,"line_end":71,"column_start":17,"column_end":26},"name":"lifetimes","qualname":"::ty::TypeBareFn::lifetimes","value":"std::option::Option<generics::BoundLifetimes>","parent":{"krate":0,"index":7587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7589},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":442846,"byte_end":442854,"line_start":72,"line_end":72,"column_start":17,"column_end":25},"name":"unsafety","qualname":"::ty::TypeBareFn::unsafety","value":"std::option::Option<token::Unsafe>","parent":{"krate":0,"index":7587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7590},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":442896,"byte_end":442899,"line_start":73,"line_end":73,"column_start":17,"column_end":20},"name":"abi","qualname":"::ty::TypeBareFn::abi","value":"std::option::Option<ty::Abi>","parent":{"krate":0,"index":7587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7591},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":442930,"byte_end":442938,"line_start":74,"line_end":74,"column_start":17,"column_end":25},"name":"fn_token","qualname":"::ty::TypeBareFn::fn_token","value":"token::Fn","parent":{"krate":0,"index":7587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7592},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":442968,"byte_end":442979,"line_start":75,"line_end":75,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::ty::TypeBareFn::paren_token","value":"token::Paren","parent":{"krate":0,"index":7587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7593},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":443011,"byte_end":443017,"line_start":76,"line_end":76,"column_start":17,"column_end":23},"name":"inputs","qualname":"::ty::TypeBareFn::inputs","value":"punctuated::Punctuated<ty::BareFnArg, token::Comma>","parent":{"krate":0,"index":7587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7594},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":443069,"byte_end":443077,"line_start":77,"line_end":77,"column_start":17,"column_end":25},"name":"variadic","qualname":"::ty::TypeBareFn::variadic","value":"std::option::Option<token::Dot3>","parent":{"krate":0,"index":7587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7595},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":443116,"byte_end":443122,"line_start":78,"line_end":78,"column_start":17,"column_end":23},"name":"output","qualname":"::ty::TypeBareFn::output","value":"ty::ReturnType","parent":{"krate":0,"index":7587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7598},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":443318,"byte_end":443327,"line_start":85,"line_end":85,"column_start":19,"column_end":28},"name":"TypeNever","qualname":"::ty::TypeNever","value":"TypeNever { bang_token }","parent":null,"children":[{"krate":0,"index":7599}],"decl_id":null,"docs":" The never type: `!`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7599},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":443346,"byte_end":443356,"line_start":86,"line_end":86,"column_start":17,"column_end":27},"name":"bang_token","qualname":"::ty::TypeNever::bang_token","value":"token::Bang","parent":{"krate":0,"index":7598},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7602},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":443565,"byte_end":443574,"line_start":93,"line_end":93,"column_start":19,"column_end":28},"name":"TypeTuple","qualname":"::ty::TypeTuple","value":"TypeTuple { paren_token, elems }","parent":null,"children":[{"krate":0,"index":7603},{"krate":0,"index":7604}],"decl_id":null,"docs":" A tuple type: `(A, B, C, String)`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7603},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":443593,"byte_end":443604,"line_start":94,"line_end":94,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::ty::TypeTuple::paren_token","value":"token::Paren","parent":{"krate":0,"index":7602},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7604},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":443636,"byte_end":443641,"line_start":95,"line_end":95,"column_start":17,"column_end":22},"name":"elems","qualname":"::ty::TypeTuple::elems","value":"punctuated::Punctuated<ty::Type, token::Comma>","parent":{"krate":0,"index":7602},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7607},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":444027,"byte_end":444035,"line_start":105,"line_end":105,"column_start":18,"column_end":26},"name":"TypePath","qualname":"::ty::TypePath","value":"TypePath { qself, path }","parent":null,"children":[{"krate":0,"index":7608},{"krate":0,"index":7609}],"decl_id":null,"docs":" A path like `std::slice::Iter`, optionally qualified with a\n self-type as in `<Vec<T> as SomeTrait>::Associated`.\n\n Type arguments are stored in the Path itself.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7608},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":444054,"byte_end":444059,"line_start":106,"line_end":106,"column_start":17,"column_end":22},"name":"qself","qualname":"::ty::TypePath::qself","value":"std::option::Option<path::QSelf>","parent":{"krate":0,"index":7607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7609},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":444092,"byte_end":444096,"line_start":107,"line_end":107,"column_start":17,"column_end":21},"name":"path","qualname":"::ty::TypePath::path","value":"path::Path","parent":{"krate":0,"index":7607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7612},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":444370,"byte_end":444385,"line_start":115,"line_end":115,"column_start":25,"column_end":40},"name":"TypeTraitObject","qualname":"::ty::TypeTraitObject","value":"TypeTraitObject { dyn_token, bounds }","parent":null,"children":[{"krate":0,"index":7613},{"krate":0,"index":7614}],"decl_id":null,"docs":" A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a\n trait or a lifetime.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7613},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":444404,"byte_end":444413,"line_start":116,"line_end":116,"column_start":17,"column_end":26},"name":"dyn_token","qualname":"::ty::TypeTraitObject::dyn_token","value":"std::option::Option<token::Dyn>","parent":{"krate":0,"index":7612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7614},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":444452,"byte_end":444458,"line_start":117,"line_end":117,"column_start":17,"column_end":23},"name":"bounds","qualname":"::ty::TypeTraitObject::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":7612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7617},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":444756,"byte_end":444769,"line_start":125,"line_end":125,"column_start":23,"column_end":36},"name":"TypeImplTrait","qualname":"::ty::TypeImplTrait","value":"TypeImplTrait { impl_token, bounds }","parent":null,"children":[{"krate":0,"index":7618},{"krate":0,"index":7619}],"decl_id":null,"docs":" An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or\n a lifetime.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7618},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":444788,"byte_end":444798,"line_start":126,"line_end":126,"column_start":17,"column_end":27},"name":"impl_token","qualname":"::ty::TypeImplTrait::impl_token","value":"token::Impl","parent":{"krate":0,"index":7617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7619},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":444830,"byte_end":444836,"line_start":127,"line_end":127,"column_start":17,"column_end":23},"name":"bounds","qualname":"::ty::TypeImplTrait::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":7617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7622},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":445089,"byte_end":445098,"line_start":134,"line_end":134,"column_start":19,"column_end":28},"name":"TypeParen","qualname":"::ty::TypeParen","value":"TypeParen { paren_token, elem }","parent":null,"children":[{"krate":0,"index":7623},{"krate":0,"index":7624}],"decl_id":null,"docs":" A parenthesized type equivalent to the inner type.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7623},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":445117,"byte_end":445128,"line_start":135,"line_end":135,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::ty::TypeParen::paren_token","value":"token::Paren","parent":{"krate":0,"index":7622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7624},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":445160,"byte_end":445164,"line_start":136,"line_end":136,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypeParen::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":7622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7627},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":445384,"byte_end":445393,"line_start":143,"line_end":143,"column_start":19,"column_end":28},"name":"TypeGroup","qualname":"::ty::TypeGroup","value":"TypeGroup { group_token, elem }","parent":null,"children":[{"krate":0,"index":7628},{"krate":0,"index":7629}],"decl_id":null,"docs":" A type contained within invisible delimiters.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7628},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":445412,"byte_end":445423,"line_start":144,"line_end":144,"column_start":17,"column_end":28},"name":"group_token","qualname":"::ty::TypeGroup::group_token","value":"token::Group","parent":{"krate":0,"index":7627},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7629},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":445455,"byte_end":445459,"line_start":145,"line_end":145,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypeGroup::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":7627},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7632},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":445697,"byte_end":445706,"line_start":152,"line_end":152,"column_start":19,"column_end":28},"name":"TypeInfer","qualname":"::ty::TypeInfer","value":"TypeInfer { underscore_token }","parent":null,"children":[{"krate":0,"index":7633}],"decl_id":null,"docs":" Indication that a type should be inferred by the compiler: `_`.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7633},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":445725,"byte_end":445741,"line_start":153,"line_end":153,"column_start":17,"column_end":33},"name":"underscore_token","qualname":"::ty::TypeInfer::underscore_token","value":"token::Underscore","parent":{"krate":0,"index":7632},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7636},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":445945,"byte_end":445954,"line_start":160,"line_end":160,"column_start":19,"column_end":28},"name":"TypeMacro","qualname":"::ty::TypeMacro","value":"TypeMacro { mac }","parent":null,"children":[{"krate":0,"index":7637}],"decl_id":null,"docs":" A macro in the type position.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7637},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":445973,"byte_end":445976,"line_start":161,"line_end":161,"column_start":17,"column_end":20},"name":"mac","qualname":"::ty::TypeMacro::mac","value":"mac::Macro","parent":{"krate":0,"index":7636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7640},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":446197,"byte_end":446209,"line_start":168,"line_end":168,"column_start":22,"column_end":34},"name":"TypeVerbatim","qualname":"::ty::TypeVerbatim","value":"TypeVerbatim { tts }","parent":null,"children":[{"krate":0,"index":7641}],"decl_id":null,"docs":" Tokens in type position not interpreted by Syn.\n\n *This type is available if Syn is built with the `\"derive\"` or\n `\"full\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7641},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":446249,"byte_end":446252,"line_start":169,"line_end":169,"column_start":17,"column_end":20},"name":"tts","qualname":"::ty::TypeVerbatim::tts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":7640},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7646},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":446923,"byte_end":446926,"line_start":199,"line_end":199,"column_start":16,"column_end":19},"name":"Abi","qualname":"::ty::Abi","value":"Abi { extern_token, name }","parent":null,"children":[{"krate":0,"index":7647},{"krate":0,"index":7648}],"decl_id":null,"docs":" The binary interface of a function: `extern \"C\"`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7647},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":446941,"byte_end":446953,"line_start":200,"line_end":200,"column_start":13,"column_end":25},"name":"extern_token","qualname":"::ty::Abi::extern_token","value":"token::Extern","parent":{"krate":0,"index":7646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7648},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":446983,"byte_end":446987,"line_start":201,"line_end":201,"column_start":13,"column_end":17},"name":"name","qualname":"::ty::Abi::name","value":"std::option::Option<lit::LitStr>","parent":{"krate":0,"index":7646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7651},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":447225,"byte_end":447234,"line_start":210,"line_end":210,"column_start":16,"column_end":25},"name":"BareFnArg","qualname":"::ty::BareFnArg","value":"BareFnArg { name, ty }","parent":null,"children":[{"krate":0,"index":7652},{"krate":0,"index":7653}],"decl_id":null,"docs":" An argument in a function type: the `usize` in `fn(usize) -> bool`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7652},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":447249,"byte_end":447253,"line_start":211,"line_end":211,"column_start":13,"column_end":17},"name":"name","qualname":"::ty::BareFnArg::name","value":"std::option::Option<(ty::BareFnArgName, token::Colon)>","parent":{"krate":0,"index":7651},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7653},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":447303,"byte_end":447305,"line_start":212,"line_end":212,"column_start":13,"column_end":15},"name":"ty","qualname":"::ty::BareFnArg::ty","value":"ty::Type","parent":{"krate":0,"index":7651},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7657},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":447587,"byte_end":447592,"line_start":223,"line_end":223,"column_start":9,"column_end":14},"name":"Named","qualname":"::ty::BareFnArgName::Named","value":"BareFnArgName::Named(Ident)","parent":{"krate":0,"index":7656},"children":[],"decl_id":null,"docs":" Argument given a name.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7660},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":447666,"byte_end":447670,"line_start":225,"line_end":225,"column_start":9,"column_end":13},"name":"Wild","qualname":"::ty::BareFnArgName::Wild","value":"BareFnArgName::Wild(crate::token::Underscore)","parent":{"krate":0,"index":7656},"children":[],"decl_id":null,"docs":" Argument not given a name, matched with `_`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7656},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":447528,"byte_end":447541,"line_start":221,"line_end":221,"column_start":14,"column_end":27},"name":"BareFnArgName","qualname":"::ty::BareFnArgName","value":"BareFnArgName::{Named, Wild}","parent":null,"children":[{"krate":0,"index":7657},{"krate":0,"index":7660}],"decl_id":null,"docs":" Name of an argument in a function type: the `n` in `fn(n: usize)`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7666},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":448021,"byte_end":448028,"line_start":238,"line_end":238,"column_start":9,"column_end":16},"name":"Default","qualname":"::ty::ReturnType::Default","value":"ReturnType::Default","parent":{"krate":0,"index":7665},"children":[],"decl_id":null,"docs":" Return type is not specified.\n\n Functions default to `()` and closures default to type inference.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7668},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":448081,"byte_end":448085,"line_start":240,"line_end":240,"column_start":9,"column_end":13},"name":"Type","qualname":"::ty::ReturnType::Type","value":"ReturnType::Type(crate::token::RArrow, Box<Type>)","parent":{"krate":0,"index":7665},"children":[],"decl_id":null,"docs":" A particular type is returned.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7665},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":447868,"byte_end":447878,"line_start":234,"line_end":234,"column_start":14,"column_end":24},"name":"ReturnType","qualname":"::ty::ReturnType","value":"ReturnType::{Default, Type}","parent":null,"children":[{"krate":0,"index":7666},{"krate":0,"index":7668}],"decl_id":null,"docs":" Return type of a function signature.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":448689,"byte_end":448701,"line_start":263,"line_end":263,"column_start":16,"column_end":28},"name":"without_plus","qualname":"<Type>::without_plus","value":"fn (input: ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" In some positions, types may not contain the `+` character, to\n disambiguate them. For example in the expression `1 as T`, T may not\n contain a `+` character.\n\n This parser does not allow a `+`, while the default parser does.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":463336,"byte_end":463348,"line_start":652,"line_end":652,"column_start":16,"column_end":28},"name":"without_plus","qualname":"<ReturnType>::without_plus","value":"fn (input: ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":463451,"byte_end":463456,"line_start":656,"line_end":656,"column_start":16,"column_end":21},"name":"parse","qualname":"<ReturnType>::parse","value":"fn (input: ParseStream, allow_plus: bool) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":464373,"byte_end":464385,"line_start":689,"line_end":689,"column_start":16,"column_end":28},"name":"without_plus","qualname":"<TypeTraitObject>::without_plus","value":"fn (input: ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":464559,"byte_end":464564,"line_start":694,"line_end":694,"column_start":16,"column_end":21},"name":"parse","qualname":"<TypeTraitObject>::parse","value":"fn (input: ParseStream, allow_plus: bool) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7674},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":474159,"byte_end":474163,"line_start":9,"line_end":9,"column_start":16,"column_end":20},"name":"Path","qualname":"::path::Path","value":"Path { leading_colon, segments }","parent":null,"children":[{"krate":0,"index":7675},{"krate":0,"index":7676}],"decl_id":null,"docs":" A path at which a named item is exported: `std::collections::HashMap`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7675},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":474178,"byte_end":474191,"line_start":10,"line_end":10,"column_start":13,"column_end":26},"name":"leading_colon","qualname":"::path::Path::leading_colon","value":"std::option::Option<token::Colon2>","parent":{"krate":0,"index":7674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7676},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":474225,"byte_end":474233,"line_start":11,"line_end":11,"column_start":13,"column_end":21},"name":"segments","qualname":"::path::Path::segments","value":"punctuated::Punctuated<path::PathSegment, token::Colon2>","parent":{"krate":0,"index":7674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7679},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":474774,"byte_end":474785,"line_start":34,"line_end":34,"column_start":16,"column_end":27},"name":"PathSegment","qualname":"::path::PathSegment","value":"PathSegment { ident, arguments }","parent":null,"children":[{"krate":0,"index":7680},{"krate":0,"index":7681}],"decl_id":null,"docs":" A segment of a path together with any path arguments on that segment.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7680},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":474800,"byte_end":474805,"line_start":35,"line_end":35,"column_start":13,"column_end":18},"name":"ident","qualname":"::path::PathSegment::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":7679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7681},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":474826,"byte_end":474835,"line_start":36,"line_end":36,"column_start":13,"column_end":22},"name":"arguments","qualname":"::path::PathSegment::arguments","value":"path::PathArguments","parent":{"krate":0,"index":7679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7685},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":475478,"byte_end":475482,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"name":"None","qualname":"::path::PathArguments::None","value":"PathArguments::None","parent":{"krate":0,"index":7684},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7687},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":475548,"byte_end":475562,"line_start":68,"line_end":68,"column_start":9,"column_end":23},"name":"AngleBracketed","qualname":"::path::PathArguments::AngleBracketed","value":"PathArguments::AngleBracketed(AngleBracketedGenericArguments)","parent":{"krate":0,"index":7684},"children":[],"decl_id":null,"docs":" The `<'a, T>` in `std::slice::iter<'a, T>`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7690},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":475654,"byte_end":475667,"line_start":70,"line_end":70,"column_start":9,"column_end":22},"name":"Parenthesized","qualname":"::path::PathArguments::Parenthesized","value":"PathArguments::Parenthesized(ParenthesizedGenericArguments)","parent":{"krate":0,"index":7684},"children":[],"decl_id":null,"docs":" The `(A, B) -> C` in `Fn(A, B) -> C`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7684},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":475454,"byte_end":475467,"line_start":65,"line_end":65,"column_start":14,"column_end":27},"name":"PathArguments","qualname":"::path::PathArguments","value":"PathArguments::{None, AngleBracketed, Parenthesized}","parent":null,"children":[{"krate":0,"index":7685},{"krate":0,"index":7687},{"krate":0,"index":7690}],"decl_id":null,"docs":" Angle bracketed or parenthesized arguments of a path segment.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n\n ## Angle bracketed\n\n The `<'a, T>` in `std::slice::iter<'a, T>`.\n\n ## Parenthesized\n\n The `(A, B) -> C` in `Fn(A, B) -> C`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":475838,"byte_end":475846,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<PathArguments>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7696},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":476581,"byte_end":476589,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"name":"Lifetime","qualname":"::path::GenericArgument::Lifetime","value":"GenericArgument::Lifetime(Lifetime)","parent":{"krate":0,"index":7695},"children":[],"decl_id":null,"docs":" A lifetime argument.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7699},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":476638,"byte_end":476642,"line_start":107,"line_end":107,"column_start":9,"column_end":13},"name":"Type","qualname":"::path::GenericArgument::Type","value":"GenericArgument::Type(Type)","parent":{"krate":0,"index":7695},"children":[],"decl_id":null,"docs":" A type argument.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7702},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":476779,"byte_end":476786,"line_start":110,"line_end":110,"column_start":9,"column_end":16},"name":"Binding","qualname":"::path::GenericArgument::Binding","value":"GenericArgument::Binding(Binding)","parent":{"krate":0,"index":7695},"children":[],"decl_id":null,"docs":" A binding (equality constraint) on an associated type: the `Item =\n u8` in `Iterator<Item = u8>`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7705},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":476870,"byte_end":476880,"line_start":112,"line_end":112,"column_start":9,"column_end":19},"name":"Constraint","qualname":"::path::GenericArgument::Constraint","value":"GenericArgument::Constraint(Constraint)","parent":{"krate":0,"index":7695},"children":[],"decl_id":null,"docs":" An associated type bound: `Iterator<Item: Display>`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7708},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":477104,"byte_end":477109,"line_start":117,"line_end":117,"column_start":9,"column_end":14},"name":"Const","qualname":"::path::GenericArgument::Const","value":"GenericArgument::Const(Expr)","parent":{"krate":0,"index":7695},"children":[],"decl_id":null,"docs":" A const expression. Must be inside of a block.\n\n NOTE: Identity expressions are represented as Type arguments, as\n they are indistinguishable syntactically.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7695},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":476522,"byte_end":476537,"line_start":103,"line_end":103,"column_start":14,"column_end":29},"name":"GenericArgument","qualname":"::path::GenericArgument","value":"GenericArgument::{Lifetime, Type, Binding, Constraint, Const}","parent":null,"children":[{"krate":0,"index":7696},{"krate":0,"index":7699},{"krate":0,"index":7702},{"krate":0,"index":7705},{"krate":0,"index":7708}],"decl_id":null,"docs":" An individual generic argument, like `'a`, `T`, or `Item = T`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7713},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":477355,"byte_end":477385,"line_start":127,"line_end":127,"column_start":16,"column_end":46},"name":"AngleBracketedGenericArguments","qualname":"::path::AngleBracketedGenericArguments","value":"AngleBracketedGenericArguments { colon2_token, lt_token, args, gt_token }","parent":null,"children":[{"krate":0,"index":7714},{"krate":0,"index":7715},{"krate":0,"index":7716},{"krate":0,"index":7717}],"decl_id":null,"docs":" Angle bracketed arguments of a path segment: the `<K, V>` in `HashMap<K,\n V>`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7714},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":477400,"byte_end":477412,"line_start":128,"line_end":128,"column_start":13,"column_end":25},"name":"colon2_token","qualname":"::path::AngleBracketedGenericArguments::colon2_token","value":"std::option::Option<token::Colon2>","parent":{"krate":0,"index":7713},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7715},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":477446,"byte_end":477454,"line_start":129,"line_end":129,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::path::AngleBracketedGenericArguments::lt_token","value":"token::Lt","parent":{"krate":0,"index":7713},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7716},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":477479,"byte_end":477483,"line_start":130,"line_end":130,"column_start":13,"column_end":17},"name":"args","qualname":"::path::AngleBracketedGenericArguments::args","value":"punctuated::Punctuated<path::GenericArgument, token::Comma>","parent":{"krate":0,"index":7713},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7717},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":477537,"byte_end":477545,"line_start":131,"line_end":131,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::path::AngleBracketedGenericArguments::gt_token","value":"token::Gt","parent":{"krate":0,"index":7713},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7720},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":477778,"byte_end":477785,"line_start":140,"line_end":140,"column_start":16,"column_end":23},"name":"Binding","qualname":"::path::Binding","value":"Binding { ident, eq_token, ty }","parent":null,"children":[{"krate":0,"index":7721},{"krate":0,"index":7722},{"krate":0,"index":7723}],"decl_id":null,"docs":" A binding (equality constraint) on an associated type: `Item = u8`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7721},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":477800,"byte_end":477805,"line_start":141,"line_end":141,"column_start":13,"column_end":18},"name":"ident","qualname":"::path::Binding::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":7720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7722},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":477826,"byte_end":477834,"line_start":142,"line_end":142,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::path::Binding::eq_token","value":"token::Eq","parent":{"krate":0,"index":7720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7723},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":477859,"byte_end":477861,"line_start":143,"line_end":143,"column_start":13,"column_end":15},"name":"ty","qualname":"::path::Binding::ty","value":"ty::Type","parent":{"krate":0,"index":7720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7726},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":478074,"byte_end":478084,"line_start":152,"line_end":152,"column_start":16,"column_end":26},"name":"Constraint","qualname":"::path::Constraint","value":"Constraint { ident, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":7727},{"krate":0,"index":7728},{"krate":0,"index":7729}],"decl_id":null,"docs":" An associated type bound: `Iterator<Item: Display>`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7727},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":478099,"byte_end":478104,"line_start":153,"line_end":153,"column_start":13,"column_end":18},"name":"ident","qualname":"::path::Constraint::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":7726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7728},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":478125,"byte_end":478136,"line_start":154,"line_end":154,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::path::Constraint::colon_token","value":"token::Colon","parent":{"krate":0,"index":7726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7729},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":478161,"byte_end":478167,"line_start":155,"line_end":155,"column_start":13,"column_end":19},"name":"bounds","qualname":"::path::Constraint::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":7726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7732},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":478443,"byte_end":478472,"line_start":165,"line_end":165,"column_start":16,"column_end":45},"name":"ParenthesizedGenericArguments","qualname":"::path::ParenthesizedGenericArguments","value":"ParenthesizedGenericArguments { paren_token, inputs, output }","parent":null,"children":[{"krate":0,"index":7733},{"krate":0,"index":7734},{"krate":0,"index":7735}],"decl_id":null,"docs":" Arguments of a function path segment: the `(A, B) -> C` in `Fn(A,B) ->\n C`.\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7733},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":478487,"byte_end":478498,"line_start":166,"line_end":166,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::path::ParenthesizedGenericArguments::paren_token","value":"token::Paren","parent":{"krate":0,"index":7732},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7734},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":478547,"byte_end":478553,"line_start":168,"line_end":168,"column_start":13,"column_end":19},"name":"inputs","qualname":"::path::ParenthesizedGenericArguments::inputs","value":"punctuated::Punctuated<ty::Type, token::Comma>","parent":{"krate":0,"index":7732},"children":[],"decl_id":null,"docs":" `(A, B)`\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7735},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":478612,"byte_end":478618,"line_start":170,"line_end":170,"column_start":13,"column_end":19},"name":"output","qualname":"::path::ParenthesizedGenericArguments::output","value":"ty::ReturnType","parent":{"krate":0,"index":7732},"children":[],"decl_id":null,"docs":" `C`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7738},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":479325,"byte_end":479330,"line_start":194,"line_end":194,"column_start":16,"column_end":21},"name":"QSelf","qualname":"::path::QSelf","value":"QSelf { lt_token, ty, position, as_token, gt_token }","parent":null,"children":[{"krate":0,"index":7739},{"krate":0,"index":7740},{"krate":0,"index":7741},{"krate":0,"index":7742},{"krate":0,"index":7743}],"decl_id":null,"docs":" The explicit Self type in a qualified path: the `T` in `<T as\n Display>::fmt`.\n\n The actual path, including the trait and the associated item, is stored\n separately. The `position` field represents the index of the associated\n item qualified with this Self type.\n\n ```text\n <Vec<T> as a::b::Trait>::AssociatedItem\n  ^~~~~~    ~~~~~~~~~~~~~~^\n  ty        position = 3\n\n <Vec<T>>::AssociatedItem\n  ^~~~~~   ^\n  ty       position = 0\n ```\n\n *This type is available if Syn is built with the `\"derive\"` or `\"full\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7739},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":479345,"byte_end":479353,"line_start":195,"line_end":195,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::path::QSelf::lt_token","value":"token::Lt","parent":{"krate":0,"index":7738},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7740},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":479378,"byte_end":479380,"line_start":196,"line_end":196,"column_start":13,"column_end":15},"name":"ty","qualname":"::path::QSelf::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":7738},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7741},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":479405,"byte_end":479413,"line_start":197,"line_end":197,"column_start":13,"column_end":21},"name":"position","qualname":"::path::QSelf::position","value":"usize","parent":{"krate":0,"index":7738},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7742},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":479434,"byte_end":479442,"line_start":198,"line_end":198,"column_start":13,"column_end":21},"name":"as_token","qualname":"::path::QSelf::as_token","value":"std::option::Option<token::As>","parent":{"krate":0,"index":7738},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7743},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":479476,"byte_end":479484,"line_start":199,"line_end":199,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::path::QSelf::gt_token","value":"token::Gt","parent":{"krate":0,"index":7738},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":485714,"byte_end":485729,"line_start":392,"line_end":392,"column_start":16,"column_end":31},"name":"parse_mod_style","qualname":"<Path>::parse_mod_style","value":"fn (input: ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `Path` containing no path arguments on any of its segments.\n\n *This function is available if Syn is built with the `\"parsing\"`\n feature.*\n\n # Example\n\n ```edition2018\n use syn::{Path, Result, Token};\n use syn::parse::{Parse, ParseStream};\n\n // A simplified single `use` statement like:\n //\n //     use std::collections::HashMap;\n //\n // Note that generic parameters are not allowed in a `use` statement\n // so the following must not be accepted.\n //\n //     use a::<b>::c;\n struct SingleUse {\n     use_token: Token![use],\n     path: Path,\n }\n\n impl Parse for SingleUse {\n     fn parse(input: ParseStream) -> Result<Self> {\n         Ok(SingleUse {\n             use_token: input.parse()?,\n             path: input.call(Path::parse_mod_style)?,\n         })\n     }\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":487675,"byte_end":487683,"line_start":438,"line_end":438,"column_start":16,"column_end":24},"name":"is_ident","qualname":"<Path>::is_ident","value":"fn <I> (&self, ident: I) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether this is a path of length 1 equal to the given\n ident.\n\n For them to compare equal, it must be the case that:\n\n - the path has no leading colon,\n - the number of path segments is 1,\n - the first path segment has no angle bracketed or parenthesized\n   path arguments\n - and the ident of the first path segment is equal to the given one.\n\n *This function is available if Syn is built with the `\"parsing\"`\n feature.*\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1649},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::buffer","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","parent":null,"children":[{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1682},{"krate":0,"index":1684},{"krate":0,"index":7746},{"krate":0,"index":7765},{"krate":0,"index":7762},{"krate":0,"index":7757},{"krate":0,"index":7759},{"krate":0,"index":7751},{"krate":0,"index":7753},{"krate":0,"index":1689},{"krate":0,"index":1710}],"decl_id":null,"docs":" A stably addressed token buffer supporting efficient traversal based on a\n cheaply copyable cursor.\n\n *This module is available if Syn is built with the `\"parsing\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14938,"byte_end":14965,"line_start":409,"line_end":409,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1682},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":498944,"byte_end":498955,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"TokenBuffer","qualname":"::buffer::TokenBuffer","value":"TokenBuffer {  }","parent":null,"children":[{"krate":0,"index":1683}],"decl_id":null,"docs":" A buffer that can be efficiently traversed multiple times, unlike\n `TokenStream` which requires a deep copy in order to traverse more than\n once.\n\n *This type is available if Syn is built with the `\"parsing\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":501794,"byte_end":501797,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<TokenBuffer>::new","value":"fn (stream: pm::TokenStream) -> TokenBuffer","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TokenBuffer` containing all the tokens from the input\n `TokenStream`.\n\n *This method is available if Syn is built with both the `\"parsing\"` and\n `\"proc-macro\"` features.*\n","sig":null,"attributes":[{"value":"cfg(all\n      (not\n       (all\n        (target_arch = \"wasm32\", any\n         (target_os = \"unknown\", target_os = \"wasi\"))), feature =\n       \"proc-macro\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":501643,"byte_end":501782,"line_start":104,"line_end":107,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":501988,"byte_end":501992,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"new2","qualname":"<TokenBuffer>::new2","value":"fn (stream: TokenStream) -> TokenBuffer","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TokenBuffer` containing all the tokens from the input\n `TokenStream`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":502219,"byte_end":502224,"line_start":120,"line_end":120,"column_start":12,"column_end":17},"name":"begin","qualname":"<TokenBuffer>::begin","value":"fn (&self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Creates a cursor referencing the first token in the buffer and able to\n traverse until the end of the buffer.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7746},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":502965,"byte_end":502971,"line_start":139,"line_end":139,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::buffer::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":7748},{"krate":0,"index":7749},{"krate":0,"index":7750}],"decl_id":null,"docs":" A cheaply copyable cursor into a `TokenBuffer`.\n\n This cursor holds a shared reference into the immutable data which is used\n internally to represent a `TokenStream`, and can be efficiently manipulated\n and copied around.\n\n An empty `Cursor` can be created directly, or one may create a `TokenBuffer`\n object and get a cursor to its first token with `begin()`.\n\n Two cursors are equal if they have the same location in the same input\n stream, and have the same scope.\n\n *This type is available if Syn is built with the `\"parsing\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":503477,"byte_end":503482,"line_start":152,"line_end":152,"column_start":12,"column_end":17},"name":"empty","qualname":"<Cursor>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a cursor referencing a static empty TokenStream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":506330,"byte_end":506333,"line_start":226,"line_end":226,"column_start":12,"column_end":15},"name":"eof","qualname":"<Cursor>::eof","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the cursor is currently pointing at the end of its valid\n scope.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":506309,"byte_end":506318,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":506613,"byte_end":506618,"line_start":233,"line_end":233,"column_start":12,"column_end":17},"name":"group","qualname":"<Cursor>::group","value":"fn (mut self, delim: Delimiter) -> Option<(Cursor<'a>, Span, Cursor<'a>)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `Group` with the given delimiter, returns\n a cursor into that group and one pointing to the next `TokenTree`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":507353,"byte_end":507358,"line_start":252,"line_end":252,"column_start":12,"column_end":17},"name":"ident","qualname":"<Cursor>::ident","value":"fn (mut self) -> Option<(Ident, Cursor<'a>)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `Ident`, returns it along with a cursor\n pointing at the next `TokenTree`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":507719,"byte_end":507724,"line_start":262,"line_end":262,"column_start":12,"column_end":17},"name":"punct","qualname":"<Cursor>::punct","value":"fn (mut self) -> Option<(Punct, Cursor<'a>)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at an `Punct`, returns it along with a cursor\n pointing at the next `TokenTree`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":508134,"byte_end":508141,"line_start":274,"line_end":274,"column_start":12,"column_end":19},"name":"literal","qualname":"<Cursor>::literal","value":"fn (mut self) -> Option<(Literal, Cursor<'a>)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `Literal`, return it along with a cursor\n pointing at the next `TokenTree`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":508504,"byte_end":508512,"line_start":284,"line_end":284,"column_start":12,"column_end":20},"name":"lifetime","qualname":"<Cursor>::lifetime","value":"fn (mut self) -> Option<(Lifetime, Cursor<'a>)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `Lifetime`, returns it along with a\n cursor pointing at the next `TokenTree`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":509293,"byte_end":509305,"line_start":306,"line_end":306,"column_start":12,"column_end":24},"name":"token_stream","qualname":"<Cursor>::token_stream","value":"fn (self) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Copies all remaining tokens visible from this cursor into a\n `TokenStream`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":509933,"byte_end":509943,"line_start":323,"line_end":323,"column_start":12,"column_end":22},"name":"token_tree","qualname":"<Cursor>::token_tree","value":"fn (self) -> Option<(TokenTree, Cursor<'a>)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `TokenTree`, returns it along with a\n cursor pointing at the next `TokenTree`.\n\n Returns `None` if the cursor has reached the end of its stream.\n\n This method does not treat `None`-delimited groups as transparent, and\n will return a `Group(None, ..)` if the cursor is looking at one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":510527,"byte_end":510531,"line_start":339,"line_end":339,"column_start":12,"column_end":16},"name":"span","qualname":"<Cursor>::span","value":"fn (self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span` of the current token, or `Span::call_site()` if this\n cursor points to eof.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","parent":null,"children":[{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1725},{"krate":0,"index":1729},{"krate":0,"index":1731},{"krate":0,"index":1734},{"krate":0,"index":1735}],"decl_id":null,"docs":" Extension traits to provide parsing methods on foreign types.\n\n *This module is available if Syn is built with the `\"parsing\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14982,"byte_end":15009,"line_start":411,"line_end":411,"column_start":1,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":1721},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":512178,"byte_end":512186,"line_start":24,"line_end":24,"column_start":11,"column_end":19},"name":"IdentExt","qualname":"::ext::IdentExt","value":"IdentExt: Sized + private::Sealed","parent":null,"children":[{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724}],"decl_id":null,"docs":" Additional methods for `Ident` not provided by proc-macro2 or libproc_macro.\n\n This trait is sealed and cannot be implemented for types outside of Syn. It\n is implemented only for `proc_macro2::Ident`.\n\n *This trait is available if Syn is built with the `\"parsing\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":513075,"byte_end":513084,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"parse_any","qualname":"::ext::IdentExt::parse_any","value":"fn (input: ParseStream) -> Result<Self>","parent":{"krate":0,"index":1721},"children":[],"decl_id":null,"docs":" Parses any identifier including keywords.\n\n This is useful when parsing macro input which allows Rust keywords as\n identifiers.\n\n # Example\n\n ```edition2018\n use syn::{Error, Ident, Result, Token};\n use syn::ext::IdentExt;\n use syn::parse::ParseStream;\n\n mod kw {\n     syn::custom_keyword!(name);\n }\n\n // Parses input that looks like `name = NAME` where `NAME` can be\n // any identifier.\n //\n // Examples:\n //\n //     name = anything\n //     name = impl\n fn parse_dsl(input: ParseStream) -> Result<Ident> {\n     input.parse::<kw::name>()?;\n     input.parse::<Token![=]>()?;\n     let name = input.call(Ident::parse_any)?;\n     Ok(name)\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":513453,"byte_end":513461,"line_start":64,"line_end":64,"column_start":11,"column_end":19},"name":"peek_any","qualname":"::ext::IdentExt::peek_any","value":"private::PeekFn","parent":{"krate":0,"index":1721},"children":[],"decl_id":null,"docs":" Peeks any identifier including keywords. Usage:\n `input.peek(Ident::peek_any)`\n\n This is different from `input.peek(Ident)` which only returns true in\n the case of an ident which is not a Rust keyword.\n","sig":null,"attributes":[{"value":"cfg(syn_can_use_associated_constants)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":513365,"byte_end":513405,"line_start":62,"line_end":62,"column_start":5,"column_end":45}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":513410,"byte_end":513442,"line_start":63,"line_end":63,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":514566,"byte_end":514571,"line_start":93,"line_end":93,"column_start":8,"column_end":13},"name":"unraw","qualname":"::ext::IdentExt::unraw","value":"fn (&self) -> Ident","parent":{"krate":0,"index":1721},"children":[],"decl_id":null,"docs":" Strips the raw marker `r#`, if any, from the beginning of an ident.\n\n   - unraw(`x`) = `x`\n   - unraw(`move`) = `move`\n   - unraw(`r#move`) = `move`\n\n # Example\n\n In the case of interop with other languages like Python that have a\n different set of keywords than Rust, we might come across macro input\n that involves raw identifiers to refer to ordinary variables in the\n other language with a name that happens to be a Rust keyword.\n\n The function below appends an identifier from the caller's input onto a\n fixed prefix. Without using `unraw()`, this would tend to produce\n invalid identifiers like `__pyo3_get_r#move`.\n\n ```edition2018\n use proc_macro2::Span;\n use syn::Ident;\n use syn::ext::IdentExt;\n\n fn ident_for_getter(variable: &Ident) -> Ident {\n     let getter = format!(\"__pyo3_get_{}\", variable.unraw());\n     Ident::new(&getter, Span::call_site())\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1737},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":515554,"byte_end":515560,"line_start":136,"line_end":136,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::ext::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7767},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":515682,"byte_end":515688,"line_start":142,"line_end":142,"column_start":16,"column_end":22},"name":"PeekFn","qualname":"::ext::private::PeekFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(syn_can_use_associated_constants)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":515599,"byte_end":515639,"line_start":140,"line_end":140,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1739},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":515750,"byte_end":515758,"line_start":144,"line_end":144,"column_start":16,"column_end":24},"name":"IdentAny","qualname":"::ext::private::IdentAny","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(syn_can_use_associated_constants)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":515694,"byte_end":515734,"line_start":143,"line_end":143,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":1741},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"punctuated","qualname":"::punctuated","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":7772},{"krate":0,"index":7777},{"krate":0,"index":1757},{"krate":0,"index":1789},{"krate":0,"index":1794},{"krate":0,"index":1799},{"krate":0,"index":1804},{"krate":0,"index":1809},{"krate":0,"index":1817},{"krate":0,"index":1824},{"krate":0,"index":1831},{"krate":0,"index":1835},{"krate":0,"index":1841},{"krate":0,"index":1849},{"krate":0,"index":1854},{"krate":0,"index":1859},{"krate":0,"index":1865},{"krate":0,"index":1873},{"krate":0,"index":7781},{"krate":0,"index":7786},{"krate":0,"index":1878},{"krate":0,"index":1885},{"krate":0,"index":7790},{"krate":0,"index":7795},{"krate":0,"index":1889},{"krate":0,"index":1894},{"krate":0,"index":1898},{"krate":0,"index":1902},{"krate":0,"index":1906},{"krate":0,"index":1912},{"krate":0,"index":1916},{"krate":0,"index":1920},{"krate":0,"index":1925},{"krate":0,"index":1929},{"krate":0,"index":1937},{"krate":0,"index":1942},{"krate":0,"index":1947},{"krate":0,"index":1952},{"krate":0,"index":1956},{"krate":0,"index":1962},{"krate":0,"index":1966},{"krate":0,"index":1971},{"krate":0,"index":1975},{"krate":0,"index":1983},{"krate":0,"index":7799},{"krate":0,"index":7809},{"krate":0,"index":1988},{"krate":0,"index":1997},{"krate":0,"index":2002},{"krate":0,"index":2006}],"decl_id":null,"docs":" A punctuated sequence of syntax tree nodes separated by punctuation.\n\n Lots of things in Rust are punctuated sequences.\n\n - The fields of a struct are `Punctuated<Field, Token![,]>`.\n - The segments of a path are `Punctuated<PathSegment, Token![::]>`.\n - The bounds on a generic parameter are `Punctuated<TypeParamBound,\n   Token![+]>`.\n - The arguments to a function call are `Punctuated<Expr, Token![,]>`.\n\n This module provides a common representation for these punctuated sequences\n in the form of the [`Punctuated<T, P>`] type. We store a vector of pairs of\n syntax tree node + punctuation, where every node in the sequence is followed\n by punctuation except for possibly the final one.\n\n [`Punctuated<T, P>`]: struct.Punctuated.html\n\n ```text\n a_function_call(arg1, arg2, arg3);\n                 ^^^^^ ~~~~~ ^^^^\n ```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7772},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":517450,"byte_end":517460,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"Punctuated","qualname":"::punctuated::Punctuated","value":"Punctuated {  }","parent":null,"children":[{"krate":0,"index":7775},{"krate":0,"index":7776}],"decl_id":null,"docs":" A punctuated sequence of syntax tree nodes of type `T` separated by\n punctuation of type `P`.\n\n Refer to the [module documentation] for details about punctuated sequences.\n\n [module documentation]: self\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":517609,"byte_end":517612,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<Punctuated<T, P>>::new","value":"fn () -> Punctuated<T, P>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty punctuated sequence.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":517868,"byte_end":517876,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Punctuated<T, P>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether this punctuated sequence is empty, meaning it\n contains no syntax tree nodes or punctuation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":518149,"byte_end":518152,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"len","qualname":"<Punctuated<T, P>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of syntax tree nodes in this punctuated sequence.\n\n This is the number of nodes of type `T`, not counting the punctuation of\n type `P`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":518316,"byte_end":518321,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"first","qualname":"<Punctuated<T, P>>::first","value":"fn (&self) -> Option<Pair<&T, &P>>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the first punctuated pair in this sequence.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":518460,"byte_end":518464,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"last","qualname":"<Punctuated<T, P>>::last","value":"fn (&self) -> Option<Pair<&T, &P>>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the last punctuated pair in this sequence.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":518815,"byte_end":518823,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Punctuated<T, P>>::last_mut","value":"fn (&mut self) -> Option<Pair<&mut T, &mut P>>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the last punctuated pair in this sequence.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":519209,"byte_end":519213,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"iter","qualname":"<Punctuated<T, P>>::iter","value":"fn (&self) -> Iter<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over borrowed syntax tree nodes of type `&T`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":519542,"byte_end":519550,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Punctuated<T, P>>::iter_mut","value":"fn (&mut self) -> IterMut<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over mutably borrowed syntax tree nodes of type\n `&mut T`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":519903,"byte_end":519908,"line_start":127,"line_end":127,"column_start":12,"column_end":17},"name":"pairs","qualname":"<Punctuated<T, P>>::pairs","value":"fn (&self) -> Pairs<T, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the contents of this sequence as borrowed\n punctuated pairs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":520191,"byte_end":520200,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"pairs_mut","qualname":"<Punctuated<T, P>>::pairs_mut","value":"fn (&mut self) -> PairsMut<T, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the contents of this sequence as mutably\n borrowed punctuated pairs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":520486,"byte_end":520496,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"into_pairs","qualname":"<Punctuated<T, P>>::into_pairs","value":"fn (self) -> IntoPairs<T, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the contents of this sequence as owned\n punctuated pairs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":521121,"byte_end":521131,"line_start":164,"line_end":164,"column_start":12,"column_end":22},"name":"push_value","qualname":"<Punctuated<T, P>>::push_value","value":"fn (&mut self, value: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends a syntax tree node onto the end of this punctuated sequence. The\n sequence must previously have a trailing punctuation.\n\n Use [`push`] instead if the punctuated sequence may or may not already\n have trailing punctuation.\n\n [`push`]: Punctuated::push\n\n # Panics\n\n Panics if the sequence does not already have a trailing punctuation when\n this method is called.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":521547,"byte_end":521557,"line_start":176,"line_end":176,"column_start":12,"column_end":22},"name":"push_punct","qualname":"<Punctuated<T, P>>::push_punct","value":"fn (&mut self, punctuation: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends a trailing punctuation onto the end of this punctuated sequence.\n The sequence must be non-empty and must not already have trailing\n punctuation.\n\n # Panics\n\n Panics if the sequence is empty or already has a trailing punctuation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":521841,"byte_end":521844,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"pop","qualname":"<Punctuated<T, P>>::pop","value":"fn (&mut self) -> Option<Pair<T, P>>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last punctuated pair from this sequence, or `None` if the\n sequence is empty.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":522170,"byte_end":522184,"line_start":194,"line_end":194,"column_start":12,"column_end":26},"name":"trailing_punct","qualname":"<Punctuated<T, P>>::trailing_punct","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether this punctuated sequence ends with a trailing\n punctuation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":522455,"byte_end":522472,"line_start":202,"line_end":202,"column_start":12,"column_end":29},"name":"empty_or_trailing","qualname":"<Punctuated<T, P>>::empty_or_trailing","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if either this `Punctuated` is empty, or it has a trailing\n punctuation.\n\n Equivalent to `punctuated.is_empty() || punctuated.trailing_punct()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":522819,"byte_end":522823,"line_start":211,"line_end":211,"column_start":12,"column_end":16},"name":"push","qualname":"<Punctuated<T, P>>::push","value":"fn (&mut self, value: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends a syntax tree node onto the end of this punctuated sequence.\n\n If there is not a trailing punctuation in this sequence when this method\n is called, the default value of punctuation type `P` is inserted before\n the given value of type `T`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":523223,"byte_end":523229,"line_start":227,"line_end":227,"column_start":12,"column_end":18},"name":"insert","qualname":"<Punctuated<T, P>>::insert","value":"fn (&mut self, index: usize, value: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts an element at position `index`.\n\n # Panics\n\n Panics if `index` is greater than the number of elements previously in\n this punctuated sequence.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":523922,"byte_end":523938,"line_start":249,"line_end":249,"column_start":12,"column_end":28},"name":"parse_terminated","qualname":"<Punctuated<T, P>>::parse_terminated","value":"fn (input: ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parses zero or more occurrences of `T` separated by punctuation of type\n `P`, with optional trailing punctuation.\n\n Parsing continues until the end of this parse stream. The entire content\n of this parse stream must consist of `T` and `P`.\n\n *This function is available if Syn is built with the `\"parsing\"`\n feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":523883,"byte_end":523910,"line_start":248,"line_end":248,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":524576,"byte_end":524597,"line_start":269,"line_end":269,"column_start":12,"column_end":33},"name":"parse_terminated_with","qualname":"<Punctuated<T, P>>::parse_terminated_with","value":"fn (input: ParseStream, parser: fn(ParseStream) -> Result<T>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parses zero or more occurrences of `T` using the given parse function,\n separated by punctuation of type `P`, with optional trailing\n punctuation.\n\n Like [`parse_terminated`], the entire content of this stream is expected\n to be parsed.\n\n [`parse_terminated`]: Punctuated::parse_terminated\n\n *This function is available if Syn is built with the `\"parsing\"`\n feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":524537,"byte_end":524564,"line_start":268,"line_end":268,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":525670,"byte_end":525694,"line_start":305,"line_end":305,"column_start":12,"column_end":36},"name":"parse_separated_nonempty","qualname":"<Punctuated<T, P>>::parse_separated_nonempty","value":"fn (input: ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parses one or more occurrences of `T` separated by punctuation of type\n `P`, not accepting trailing punctuation.\n\n Parsing continues as long as punctuation `P` is present at the head of\n the stream. This method returns upon parsing a `T` and observing that it\n is not followed by a `P`, even if there are remaining tokens in the\n stream.\n\n *This function is available if Syn is built with the `\"parsing\"`\n feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":525631,"byte_end":525658,"line_start":304,"line_end":304,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":526381,"byte_end":526410,"line_start":325,"line_end":325,"column_start":12,"column_end":41},"name":"parse_separated_nonempty_with","qualname":"<Punctuated<T, P>>::parse_separated_nonempty_with","value":"fn (input: ParseStream, parser: fn(ParseStream) -> Result<T>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parses one or more occurrences of `T` using the given parse function,\n separated by punctuation of type `P`, not accepting trailing\n punctuation.\n\n Like [`parse_separated_nonempty`], may complete early without parsing\n the entire content of this stream.\n\n [`parse_separated_nonempty`]: Punctuated::parse_separated_nonempty\n\n *This function is available if Syn is built with the `\"parsing\"`\n feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":526342,"byte_end":526369,"line_start":324,"line_end":324,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1835},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":529672,"byte_end":529677,"line_start":457,"line_end":457,"column_start":12,"column_end":17},"name":"Pairs","qualname":"::punctuated::Pairs","value":"Pairs {  }","parent":null,"children":[{"krate":0,"index":1839},{"krate":0,"index":1840}],"decl_id":null,"docs":" An iterator over borrowed pairs of type `Pair<&T, &P>`.\n\n Refer to the [module documentation] for details about punctuated sequences.\n\n [module documentation]: self\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1859},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":530623,"byte_end":530631,"line_start":494,"line_end":494,"column_start":12,"column_end":20},"name":"PairsMut","qualname":"::punctuated::PairsMut","value":"PairsMut {  }","parent":null,"children":[{"krate":0,"index":1863},{"krate":0,"index":1864}],"decl_id":null,"docs":" An iterator over mutably borrowed pairs of type `Pair<&mut T, &mut P>`.\n\n Refer to the [module documentation] for details about punctuated sequences.\n\n [module documentation]: self\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7781},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":531393,"byte_end":531402,"line_start":522,"line_end":522,"column_start":12,"column_end":21},"name":"IntoPairs","qualname":"::punctuated::IntoPairs","value":"IntoPairs {  }","parent":null,"children":[{"krate":0,"index":7784},{"krate":0,"index":7785}],"decl_id":null,"docs":" An iterator over owned pairs of type `Pair<T, P>`.\n\n Refer to the [module documentation] for details about punctuated sequences.\n\n [module documentation]: self\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7790},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":532080,"byte_end":532088,"line_start":550,"line_end":550,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::punctuated::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":7793},{"krate":0,"index":7794}],"decl_id":null,"docs":" An iterator over owned values of type `T`.\n\n Refer to the [module documentation] for details about punctuated sequences.\n\n [module documentation]: self\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1898},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":532662,"byte_end":532666,"line_start":576,"line_end":576,"column_start":12,"column_end":16},"name":"Iter","qualname":"::punctuated::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1901}],"decl_id":null,"docs":" An iterator over borrowed values of type `&T`.\n\n Refer to the [module documentation] for details about punctuated sequences.\n\n [module documentation]: self\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1952},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":534853,"byte_end":534860,"line_start":665,"line_end":665,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::punctuated::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":1955}],"decl_id":null,"docs":" An iterator over mutably borrowed values of type `&mut T`.\n\n Refer to the [module documentation] for details about punctuated sequences.\n\n [module documentation]: self\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7802},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":536240,"byte_end":536250,"line_start":722,"line_end":722,"column_start":5,"column_end":15},"name":"Punctuated","qualname":"::punctuated::Pair::Punctuated","value":"Pair::Punctuated(T, P)","parent":{"krate":0,"index":7799},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7806},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":536262,"byte_end":536265,"line_start":723,"line_end":723,"column_start":5,"column_end":8},"name":"End","qualname":"::punctuated::Pair::End","value":"Pair::End(T)","parent":{"krate":0,"index":7799},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7799},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":536223,"byte_end":536227,"line_start":721,"line_end":721,"column_start":10,"column_end":14},"name":"Pair","qualname":"::punctuated::Pair","value":"Pair::{Punctuated, End}","parent":null,"children":[{"krate":0,"index":7802},{"krate":0,"index":7806}],"decl_id":null,"docs":" A single syntax tree node of type `T` followed by its trailing punctuation\n of type `P` if any.\n\n Refer to the [module documentation] for details about punctuated sequences.\n\n [module documentation]: self\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":536419,"byte_end":536429,"line_start":729,"line_end":729,"column_start":12,"column_end":22},"name":"into_value","qualname":"<Pair<T, P>>::into_value","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extracts the syntax tree node from this punctuated pair, discarding the\n following punctuation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":536612,"byte_end":536617,"line_start":736,"line_end":736,"column_start":12,"column_end":17},"name":"value","qualname":"<Pair<T, P>>::value","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Borrows the syntax tree node from this punctuated pair.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":536819,"byte_end":536828,"line_start":743,"line_end":743,"column_start":12,"column_end":21},"name":"value_mut","qualname":"<Pair<T, P>>::value_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the syntax tree node from this punctuated pair.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":537113,"byte_end":537118,"line_start":751,"line_end":751,"column_start":12,"column_end":17},"name":"punct","qualname":"<Pair<T, P>>::punct","value":"fn (&self) -> Option<&P>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the punctuation from this punctuated pair, unless this pair is\n the final one and there is no trailing punctuation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":537384,"byte_end":537387,"line_start":760,"line_end":760,"column_start":12,"column_end":15},"name":"new","qualname":"<Pair<T, P>>::new","value":"fn (t: T, d: Option<P>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a punctuated pair out of a syntax tree node and an optional\n following punctuation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":537658,"byte_end":537668,"line_start":769,"line_end":769,"column_start":12,"column_end":22},"name":"into_tuple","qualname":"<Pair<T, P>>::into_tuple","value":"fn (self) -> (T, Option<P>)","parent":null,"children":[],"decl_id":null,"docs":" Produces this punctuated pair as a tuple of syntax tree node and\n optional following punctuation.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2020},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parse_quote","qualname":"::parse_quote","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","parent":null,"children":[{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2031},{"krate":0,"index":2033},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2040},{"krate":0,"index":2042}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":15184,"byte_end":15211,"line_start":418,"line_end":418,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":2029},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":542358,"byte_end":542363,"line_start":104,"line_end":104,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse_quote::parse","value":"fn <T> (token_stream: TokenStream) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2031},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":542592,"byte_end":542602,"line_start":114,"line_end":114,"column_start":11,"column_end":21},"name":"ParseQuote","qualname":"::parse_quote::ParseQuote","value":"ParseQuote: Sized","parent":null,"children":[{"krate":0,"index":2032}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":542619,"byte_end":542624,"line_start":115,"line_end":115,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse_quote::ParseQuote::parse","value":"fn (input: ParseStream) -> Result<Self>","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2046},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parse_macro_input","qualname":"::parse_macro_input","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","parent":null,"children":[{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2056},{"krate":0,"index":2058},{"krate":0,"index":2061},{"krate":0,"index":2062}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all\n      (not\n       (all\n        (target_arch = \"wasm32\", any\n         (target_os = \"unknown\", target_os = \"wasi\"))), feature = \"parsing\",\n       feature = \"proc-macro\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":15306,"byte_end":15458,"line_start":423,"line_end":427,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":2054},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":545304,"byte_end":545309,"line_start":65,"line_end":65,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse_macro_input::parse","value":"fn <T> (token_stream: TokenStream) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":545452,"byte_end":545467,"line_start":71,"line_end":71,"column_start":11,"column_end":26},"name":"ParseMacroInput","qualname":"::parse_macro_input::ParseMacroInput","value":"ParseMacroInput: Sized","parent":null,"children":[{"krate":0,"index":2057}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":545484,"byte_end":545489,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse_macro_input::ParseMacroInput::parse","value":"fn (input: ParseStream) -> Result<Self>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spanned","qualname":"::spanned","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","parent":null,"children":[{"krate":0,"index":2065},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2071},{"krate":0,"index":2076},{"krate":0,"index":2079}],"decl_id":null,"docs":" A trait that can provide the `Span` of the complete contents of a syntax\n tree node.\n\n *This module is available if Syn is built with both the `\"parsing\"` and\n `\"printing\"` features.*\n\n # Example\n\n Suppose in a procedural macro we have a [`Type`] that we want to assert\n implements the [`Sync`] trait. Maybe this is the type of one of the fields\n of a struct for which we are deriving a trait implementation, and we need to\n be able to pass a reference to one of those fields across threads.\n\n [`Type`]: ../enum.Type.html\n [`Sync`]: https://doc.rust-lang.org/std/marker/trait.Sync.html\n\n If the field type does *not* implement `Sync` as required, we want the\n compiler to report an error pointing out exactly which type it was.\n\n The following macro code takes a variable `ty` of type `Type` and produces a\n static assertion that `Sync` is implemented for that type.\n\n ```edition2018\n # extern crate proc_macro;\n #\n use proc_macro::TokenStream;\n use proc_macro2::Span;\n use quote::quote_spanned;\n use syn::Type;\n use syn::spanned::Spanned;\n\n # const IGNORE_TOKENS: &str = stringify! {\n #[proc_macro_derive(MyMacro)]\n # };\n pub fn my_macro(input: TokenStream) -> TokenStream {\n     # let ty = get_a_type();\n     /* ... */\n\n     let assert_sync = quote_spanned! {ty.span()=>\n         struct _AssertSync where #ty: Sync;\n     };\n\n     /* ... */\n     # input\n }\n #\n # fn get_a_type() -> Type {\n #     unimplemented!()\n # }\n ```\n\n By inserting this `assert_sync` fragment into the output code generated by\n our macro, the user's code will fail to compile if `ty` does not implement\n `Sync`. The errors they would see look like the following.\n\n ```text\n error[E0277]: the trait bound `*const i32: std::marker::Sync` is not satisfied\n   --> src/main.rs:10:21\n    |\n 10 |     bad_field: *const i32,\n    |                ^^^^^^^^^^ `*const i32` cannot be shared between threads safely\n ```\n\n In this technique, using the `Type`'s span for the error message makes the\n error appear in the correct place underlining the right type.\n","sig":null,"attributes":[{"value":"cfg(all (feature = \"parsing\", feature = \"printing\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":15502,"byte_end":15556,"line_start":431,"line_end":431,"column_start":1,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":2069},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":549218,"byte_end":549225,"line_start":85,"line_end":85,"column_start":11,"column_end":18},"name":"Spanned","qualname":"::spanned::Spanned","value":"Spanned: private::Sealed","parent":null,"children":[{"krate":0,"index":2070}],"decl_id":null,"docs":" A trait that can provide the `Span` of the complete contents of a syntax\n tree node.\n\n This trait is automatically implemented for all types that implement\n [`ToTokens`] from the `quote` crate. It is sealed and cannot be implemented\n outside of the Syn crate other than by implementing `ToTokens`.\n\n [`ToTokens`]: quote::ToTokens\n\n See the [module documentation] for an example.\n\n [module documentation]: self\n\n *This trait is available if Syn is built with both the `\"parsing\"` and\n `\"printing\"` features.*\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":549458,"byte_end":549462,"line_start":90,"line_end":90,"column_start":8,"column_end":12},"name":"span","qualname":"::spanned::Spanned::span","value":"fn (&self) -> Span","parent":{"krate":0,"index":2069},"children":[],"decl_id":null,"docs":" Returns a `Span` covering the complete contents of this syntax tree\n node, or [`Span::call_site()`] if this node is empty.\n\n [`Span::call_site()`]: proc_macro2::Span::call_site\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":549535,"byte_end":549541,"line_start":95,"line_end":95,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::spanned::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2082},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"visit","qualname":"::gen::visit","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","parent":null,"children":[{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2288},{"krate":0,"index":2291},{"krate":0,"index":2294},{"krate":0,"index":2297},{"krate":0,"index":2300},{"krate":0,"index":2303},{"krate":0,"index":2306},{"krate":0,"index":2309},{"krate":0,"index":2312},{"krate":0,"index":2315},{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":2324},{"krate":0,"index":2327},{"krate":0,"index":2330},{"krate":0,"index":2333},{"krate":0,"index":2336},{"krate":0,"index":2339},{"krate":0,"index":2342},{"krate":0,"index":2345},{"krate":0,"index":2348},{"krate":0,"index":2351},{"krate":0,"index":2354},{"krate":0,"index":2357},{"krate":0,"index":2360},{"krate":0,"index":2363},{"krate":0,"index":2366},{"krate":0,"index":2369},{"krate":0,"index":2372},{"krate":0,"index":2375},{"krate":0,"index":2378},{"krate":0,"index":2381},{"krate":0,"index":2384},{"krate":0,"index":2387},{"krate":0,"index":2390},{"krate":0,"index":2393},{"krate":0,"index":2396},{"krate":0,"index":2399},{"krate":0,"index":2402},{"krate":0,"index":2405},{"krate":0,"index":2408},{"krate":0,"index":2411},{"krate":0,"index":2414},{"krate":0,"index":2417},{"krate":0,"index":2420},{"krate":0,"index":2423},{"krate":0,"index":2426},{"krate":0,"index":2429},{"krate":0,"index":2432},{"krate":0,"index":2435},{"krate":0,"index":2438},{"krate":0,"index":2441},{"krate":0,"index":2444},{"krate":0,"index":2447},{"krate":0,"index":2450},{"krate":0,"index":2453},{"krate":0,"index":2456},{"krate":0,"index":2459},{"krate":0,"index":2462},{"krate":0,"index":2465},{"krate":0,"index":2468},{"krate":0,"index":2471},{"krate":0,"index":2474},{"krate":0,"index":2477},{"krate":0,"index":2480},{"krate":0,"index":2483},{"krate":0,"index":2486},{"krate":0,"index":2489},{"krate":0,"index":2492},{"krate":0,"index":2495},{"krate":0,"index":2498},{"krate":0,"index":2501},{"krate":0,"index":2504},{"krate":0,"index":2507},{"krate":0,"index":2510},{"krate":0,"index":2513},{"krate":0,"index":2516},{"krate":0,"index":2519},{"krate":0,"index":2522},{"krate":0,"index":2525},{"krate":0,"index":2528},{"krate":0,"index":2531},{"krate":0,"index":2534},{"krate":0,"index":2537},{"krate":0,"index":2540},{"krate":0,"index":2543},{"krate":0,"index":2546},{"krate":0,"index":2549},{"krate":0,"index":2552},{"krate":0,"index":2555},{"krate":0,"index":2558},{"krate":0,"index":2561},{"krate":0,"index":2564},{"krate":0,"index":2567},{"krate":0,"index":2570},{"krate":0,"index":2573},{"krate":0,"index":2576},{"krate":0,"index":2579},{"krate":0,"index":2582},{"krate":0,"index":2585},{"krate":0,"index":2588},{"krate":0,"index":2591},{"krate":0,"index":2594},{"krate":0,"index":2597},{"krate":0,"index":2600},{"krate":0,"index":2603},{"krate":0,"index":2606},{"krate":0,"index":2609},{"krate":0,"index":2612},{"krate":0,"index":2615},{"krate":0,"index":2618},{"krate":0,"index":2621},{"krate":0,"index":2624},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2636},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2645},{"krate":0,"index":2648},{"krate":0,"index":2651},{"krate":0,"index":2654},{"krate":0,"index":2657},{"krate":0,"index":2660},{"krate":0,"index":2663},{"krate":0,"index":2666},{"krate":0,"index":2669},{"krate":0,"index":2672},{"krate":0,"index":2675},{"krate":0,"index":2678},{"krate":0,"index":2681},{"krate":0,"index":2684},{"krate":0,"index":2687},{"krate":0,"index":2690},{"krate":0,"index":2693},{"krate":0,"index":2696},{"krate":0,"index":2699},{"krate":0,"index":2702},{"krate":0,"index":2705},{"krate":0,"index":2708},{"krate":0,"index":2711},{"krate":0,"index":2714},{"krate":0,"index":2717},{"krate":0,"index":2720},{"krate":0,"index":2723},{"krate":0,"index":2726},{"krate":0,"index":2729},{"krate":0,"index":2732},{"krate":0,"index":2735},{"krate":0,"index":2738},{"krate":0,"index":2741},{"krate":0,"index":2744},{"krate":0,"index":2747},{"krate":0,"index":2750},{"krate":0,"index":2753},{"krate":0,"index":2756},{"krate":0,"index":2759},{"krate":0,"index":2762},{"krate":0,"index":2765},{"krate":0,"index":2768},{"krate":0,"index":2771},{"krate":0,"index":2774},{"krate":0,"index":2777},{"krate":0,"index":2780},{"krate":0,"index":2783},{"krate":0,"index":2786},{"krate":0,"index":2789},{"krate":0,"index":2792},{"krate":0,"index":2795},{"krate":0,"index":2798},{"krate":0,"index":2801},{"krate":0,"index":2804},{"krate":0,"index":2807},{"krate":0,"index":2810},{"krate":0,"index":2813},{"krate":0,"index":2816},{"krate":0,"index":2819},{"krate":0,"index":2822},{"krate":0,"index":2825},{"krate":0,"index":2828},{"krate":0,"index":2831},{"krate":0,"index":2834},{"krate":0,"index":2837},{"krate":0,"index":2840},{"krate":0,"index":2843},{"krate":0,"index":2846},{"krate":0,"index":2849},{"krate":0,"index":2852},{"krate":0,"index":2855},{"krate":0,"index":2858},{"krate":0,"index":2861},{"krate":0,"index":2864},{"krate":0,"index":2867},{"krate":0,"index":2870},{"krate":0,"index":2873},{"krate":0,"index":2876}],"decl_id":null,"docs":" Syntax tree traversal to walk a shared borrow of a syntax tree.\n\n Each method of the [`Visit`] trait is a hook that can be overridden to\n customize the behavior when visiting the corresponding type of node. By\n default, every method recursively visits the substructure of the input\n by invoking the right visitor method of each of its fields.\n\n [`Visit`]: visit::Visit\n\n ```edition2018\n # use syn::{Attribute, BinOp, Expr, ExprBinary};\n #\n pub trait Visit<'ast> {\n     /* ... */\n\n     fn visit_expr_binary(&mut self, node: &'ast ExprBinary) {\n         for attr in &node.attrs {\n             self.visit_attribute(attr);\n         }\n         self.visit_expr(&*node.left);\n         self.visit_bin_op(&node.op);\n         self.visit_expr(&*node.right);\n     }\n\n     /* ... */\n     # fn visit_attribute(&mut self, node: &'ast Attribute);\n     # fn visit_expr(&mut self, node: &'ast Expr);\n     # fn visit_bin_op(&mut self, node: &'ast BinOp);\n }\n ```\n\n *This module is available if Syn is built with the `\"visit\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"visit\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":16831,"byte_end":16856,"line_start":467,"line_end":467,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":551635,"byte_end":551640,"line_start":34,"line_end":34,"column_start":11,"column_end":16},"name":"Visit","qualname":"::gen::visit::Visit","value":"Visit<'ast>","parent":null,"children":[{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2251},{"krate":0,"index":2252},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2258},{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287}],"decl_id":null,"docs":" Syntax tree traversal to walk a shared borrow of a syntax tree.\n\n See the [module documentation] for details.\n\n [module documentation]: self\n\n *This trait is available if Syn is built with the `\"visit\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":551710,"byte_end":551719,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"visit_abi","qualname":"::gen::visit::Visit::visit_abi","value":"fn (&mut self, i: &'ast Abi) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":551653,"byte_end":551702,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":551841,"byte_end":551880,"line_start":40,"line_end":40,"column_start":8,"column_end":47},"name":"visit_angle_bracketed_generic_arguments","qualname":"::gen::visit::Visit::visit_angle_bracketed_generic_arguments","value":"fn (&mut self, i: &'ast AngleBracketedGenericArguments) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":551784,"byte_end":551833,"line_start":39,"line_end":39,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":552034,"byte_end":552052,"line_start":44,"line_end":44,"column_start":8,"column_end":26},"name":"visit_arg_captured","qualname":"::gen::visit::Visit::visit_arg_captured","value":"fn (&mut self, i: &'ast ArgCaptured) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":552002,"byte_end":552026,"line_start":43,"line_end":43,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":552166,"byte_end":552180,"line_start":48,"line_end":48,"column_start":8,"column_end":22},"name":"visit_arg_self","qualname":"::gen::visit::Visit::visit_arg_self","value":"fn (&mut self, i: &'ast ArgSelf) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":552134,"byte_end":552158,"line_start":47,"line_end":47,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":552286,"byte_end":552304,"line_start":52,"line_end":52,"column_start":8,"column_end":26},"name":"visit_arg_self_ref","qualname":"::gen::visit::Visit::visit_arg_self_ref","value":"fn (&mut self, i: &'ast ArgSelfRef) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":552254,"byte_end":552278,"line_start":51,"line_end":51,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":552417,"byte_end":552426,"line_start":56,"line_end":56,"column_start":8,"column_end":17},"name":"visit_arm","qualname":"::gen::visit::Visit::visit_arm","value":"fn (&mut self, i: &'ast Arm) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":552385,"byte_end":552409,"line_start":55,"line_end":55,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":552548,"byte_end":552564,"line_start":60,"line_end":60,"column_start":8,"column_end":24},"name":"visit_attr_style","qualname":"::gen::visit::Visit::visit_attr_style","value":"fn (&mut self, i: &'ast AttrStyle) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":552491,"byte_end":552540,"line_start":59,"line_end":59,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":552699,"byte_end":552714,"line_start":64,"line_end":64,"column_start":8,"column_end":23},"name":"visit_attribute","qualname":"::gen::visit::Visit::visit_attribute","value":"fn (&mut self, i: &'ast Attribute) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":552642,"byte_end":552691,"line_start":63,"line_end":63,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":552848,"byte_end":552865,"line_start":68,"line_end":68,"column_start":8,"column_end":25},"name":"visit_bare_fn_arg","qualname":"::gen::visit::Visit::visit_bare_fn_arg","value":"fn (&mut self, i: &'ast BareFnArg) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":552791,"byte_end":552840,"line_start":67,"line_end":67,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":553001,"byte_end":553023,"line_start":72,"line_end":72,"column_start":8,"column_end":30},"name":"visit_bare_fn_arg_name","qualname":"::gen::visit::Visit::visit_bare_fn_arg_name","value":"fn (&mut self, i: &'ast BareFnArgName) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":552944,"byte_end":552993,"line_start":71,"line_end":71,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":553168,"byte_end":553180,"line_start":76,"line_end":76,"column_start":8,"column_end":20},"name":"visit_bin_op","qualname":"::gen::visit::Visit::visit_bin_op","value":"fn (&mut self, i: &'ast BinOp) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":553111,"byte_end":553160,"line_start":75,"line_end":75,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":553307,"byte_end":553320,"line_start":80,"line_end":80,"column_start":8,"column_end":21},"name":"visit_binding","qualname":"::gen::visit::Visit::visit_binding","value":"fn (&mut self, i: &'ast Binding) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":553250,"byte_end":553299,"line_start":79,"line_end":79,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":553425,"byte_end":553436,"line_start":84,"line_end":84,"column_start":8,"column_end":19},"name":"visit_block","qualname":"::gen::visit::Visit::visit_block","value":"fn (&mut self, i: &'ast Block) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":553393,"byte_end":553417,"line_start":83,"line_end":83,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":553562,"byte_end":553583,"line_start":88,"line_end":88,"column_start":8,"column_end":29},"name":"visit_bound_lifetimes","qualname":"::gen::visit::Visit::visit_bound_lifetimes","value":"fn (&mut self, i: &'ast BoundLifetimes) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":553505,"byte_end":553554,"line_start":87,"line_end":87,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":553728,"byte_end":553745,"line_start":92,"line_end":92,"column_start":8,"column_end":25},"name":"visit_const_param","qualname":"::gen::visit::Visit::visit_const_param","value":"fn (&mut self, i: &'ast ConstParam) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":553671,"byte_end":553720,"line_start":91,"line_end":91,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":553882,"byte_end":553898,"line_start":96,"line_end":96,"column_start":8,"column_end":24},"name":"visit_constraint","qualname":"::gen::visit::Visit::visit_constraint","value":"fn (&mut self, i: &'ast Constraint) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":553825,"byte_end":553874,"line_start":95,"line_end":95,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":554011,"byte_end":554021,"line_start":100,"line_end":100,"column_start":8,"column_end":18},"name":"visit_data","qualname":"::gen::visit::Visit::visit_data","value":"fn (&mut self, i: &'ast Data) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":553977,"byte_end":554003,"line_start":99,"line_end":99,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":554122,"byte_end":554137,"line_start":104,"line_end":104,"column_start":8,"column_end":23},"name":"visit_data_enum","qualname":"::gen::visit::Visit::visit_data_enum","value":"fn (&mut self, i: &'ast DataEnum) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":554088,"byte_end":554114,"line_start":103,"line_end":103,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":554247,"byte_end":554264,"line_start":108,"line_end":108,"column_start":8,"column_end":25},"name":"visit_data_struct","qualname":"::gen::visit::Visit::visit_data_struct","value":"fn (&mut self, i: &'ast DataStruct) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":554213,"byte_end":554239,"line_start":107,"line_end":107,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":554378,"byte_end":554394,"line_start":112,"line_end":112,"column_start":8,"column_end":24},"name":"visit_data_union","qualname":"::gen::visit::Visit::visit_data_union","value":"fn (&mut self, i: &'ast DataUnion) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":554344,"byte_end":554370,"line_start":111,"line_end":111,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":554506,"byte_end":554524,"line_start":116,"line_end":116,"column_start":8,"column_end":26},"name":"visit_derive_input","qualname":"::gen::visit::Visit::visit_derive_input","value":"fn (&mut self, i: &'ast DeriveInput) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":554472,"byte_end":554498,"line_start":115,"line_end":115,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":554663,"byte_end":554673,"line_start":120,"line_end":120,"column_start":8,"column_end":18},"name":"visit_expr","qualname":"::gen::visit::Visit::visit_expr","value":"fn (&mut self, i: &'ast Expr) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":554606,"byte_end":554655,"line_start":119,"line_end":119,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":554772,"byte_end":554788,"line_start":124,"line_end":124,"column_start":8,"column_end":24},"name":"visit_expr_array","qualname":"::gen::visit::Visit::visit_expr_array","value":"fn (&mut self, i: &'ast ExprArray) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":554740,"byte_end":554764,"line_start":123,"line_end":123,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":554898,"byte_end":554915,"line_start":128,"line_end":128,"column_start":8,"column_end":25},"name":"visit_expr_assign","qualname":"::gen::visit::Visit::visit_expr_assign","value":"fn (&mut self, i: &'ast ExprAssign) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":554866,"byte_end":554890,"line_start":127,"line_end":127,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":555027,"byte_end":555047,"line_start":132,"line_end":132,"column_start":8,"column_end":28},"name":"visit_expr_assign_op","qualname":"::gen::visit::Visit::visit_expr_assign_op","value":"fn (&mut self, i: &'ast ExprAssignOp) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":554995,"byte_end":555019,"line_start":131,"line_end":131,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":555164,"byte_end":555180,"line_start":136,"line_end":136,"column_start":8,"column_end":24},"name":"visit_expr_async","qualname":"::gen::visit::Visit::visit_expr_async","value":"fn (&mut self, i: &'ast ExprAsync) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":555132,"byte_end":555156,"line_start":135,"line_end":135,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":555315,"byte_end":555332,"line_start":140,"line_end":140,"column_start":8,"column_end":25},"name":"visit_expr_binary","qualname":"::gen::visit::Visit::visit_expr_binary","value":"fn (&mut self, i: &'ast ExprBinary) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":555258,"byte_end":555307,"line_start":139,"line_end":139,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":555444,"byte_end":555460,"line_start":144,"line_end":144,"column_start":8,"column_end":24},"name":"visit_expr_block","qualname":"::gen::visit::Visit::visit_expr_block","value":"fn (&mut self, i: &'ast ExprBlock) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":555412,"byte_end":555436,"line_start":143,"line_end":143,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":555570,"byte_end":555584,"line_start":148,"line_end":148,"column_start":8,"column_end":22},"name":"visit_expr_box","qualname":"::gen::visit::Visit::visit_expr_box","value":"fn (&mut self, i: &'ast ExprBox) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":555538,"byte_end":555562,"line_start":147,"line_end":147,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":555690,"byte_end":555706,"line_start":152,"line_end":152,"column_start":8,"column_end":24},"name":"visit_expr_break","qualname":"::gen::visit::Visit::visit_expr_break","value":"fn (&mut self, i: &'ast ExprBreak) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":555658,"byte_end":555682,"line_start":151,"line_end":151,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":555841,"byte_end":555856,"line_start":156,"line_end":156,"column_start":8,"column_end":23},"name":"visit_expr_call","qualname":"::gen::visit::Visit::visit_expr_call","value":"fn (&mut self, i: &'ast ExprCall) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":555784,"byte_end":555833,"line_start":155,"line_end":155,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":555989,"byte_end":556004,"line_start":160,"line_end":160,"column_start":8,"column_end":23},"name":"visit_expr_cast","qualname":"::gen::visit::Visit::visit_expr_cast","value":"fn (&mut self, i: &'ast ExprCast) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":555932,"byte_end":555981,"line_start":159,"line_end":159,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":556112,"byte_end":556130,"line_start":164,"line_end":164,"column_start":8,"column_end":26},"name":"visit_expr_closure","qualname":"::gen::visit::Visit::visit_expr_closure","value":"fn (&mut self, i: &'ast ExprClosure) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":556080,"byte_end":556104,"line_start":163,"line_end":163,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2124},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":556244,"byte_end":556263,"line_start":168,"line_end":168,"column_start":8,"column_end":27},"name":"visit_expr_continue","qualname":"::gen::visit::Visit::visit_expr_continue","value":"fn (&mut self, i: &'ast ExprContinue) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":556212,"byte_end":556236,"line_start":167,"line_end":167,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":556404,"byte_end":556420,"line_start":172,"line_end":172,"column_start":8,"column_end":24},"name":"visit_expr_field","qualname":"::gen::visit::Visit::visit_expr_field","value":"fn (&mut self, i: &'ast ExprField) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":556347,"byte_end":556396,"line_start":171,"line_end":171,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":556530,"byte_end":556549,"line_start":176,"line_end":176,"column_start":8,"column_end":27},"name":"visit_expr_for_loop","qualname":"::gen::visit::Visit::visit_expr_for_loop","value":"fn (&mut self, i: &'ast ExprForLoop) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":556498,"byte_end":556522,"line_start":175,"line_end":175,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":556664,"byte_end":556680,"line_start":180,"line_end":180,"column_start":8,"column_end":24},"name":"visit_expr_group","qualname":"::gen::visit::Visit::visit_expr_group","value":"fn (&mut self, i: &'ast ExprGroup) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":556632,"byte_end":556656,"line_start":179,"line_end":179,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":556790,"byte_end":556803,"line_start":184,"line_end":184,"column_start":8,"column_end":21},"name":"visit_expr_if","qualname":"::gen::visit::Visit::visit_expr_if","value":"fn (&mut self, i: &'ast ExprIf) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":556758,"byte_end":556782,"line_start":183,"line_end":183,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":556907,"byte_end":556926,"line_start":188,"line_end":188,"column_start":8,"column_end":27},"name":"visit_expr_in_place","qualname":"::gen::visit::Visit::visit_expr_in_place","value":"fn (&mut self, i: &'ast ExprInPlace) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":556875,"byte_end":556899,"line_start":187,"line_end":187,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":557066,"byte_end":557082,"line_start":192,"line_end":192,"column_start":8,"column_end":24},"name":"visit_expr_index","qualname":"::gen::visit::Visit::visit_expr_index","value":"fn (&mut self, i: &'ast ExprIndex) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":557009,"byte_end":557058,"line_start":191,"line_end":191,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":557192,"byte_end":557206,"line_start":196,"line_end":196,"column_start":8,"column_end":22},"name":"visit_expr_let","qualname":"::gen::visit::Visit::visit_expr_let","value":"fn (&mut self, i: &'ast ExprLet) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":557160,"byte_end":557184,"line_start":195,"line_end":195,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":557337,"byte_end":557351,"line_start":200,"line_end":200,"column_start":8,"column_end":22},"name":"visit_expr_lit","qualname":"::gen::visit::Visit::visit_expr_lit","value":"fn (&mut self, i: &'ast ExprLit) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":557280,"byte_end":557329,"line_start":199,"line_end":199,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":557457,"byte_end":557472,"line_start":204,"line_end":204,"column_start":8,"column_end":23},"name":"visit_expr_loop","qualname":"::gen::visit::Visit::visit_expr_loop","value":"fn (&mut self, i: &'ast ExprLoop) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":557425,"byte_end":557449,"line_start":203,"line_end":203,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":557580,"byte_end":557596,"line_start":208,"line_end":208,"column_start":8,"column_end":24},"name":"visit_expr_macro","qualname":"::gen::visit::Visit::visit_expr_macro","value":"fn (&mut self, i: &'ast ExprMacro) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":557548,"byte_end":557572,"line_start":207,"line_end":207,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":557706,"byte_end":557722,"line_start":212,"line_end":212,"column_start":8,"column_end":24},"name":"visit_expr_match","qualname":"::gen::visit::Visit::visit_expr_match","value":"fn (&mut self, i: &'ast ExprMatch) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":557674,"byte_end":557698,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":557832,"byte_end":557854,"line_start":216,"line_end":216,"column_start":8,"column_end":30},"name":"visit_expr_method_call","qualname":"::gen::visit::Visit::visit_expr_method_call","value":"fn (&mut self, i: &'ast ExprMethodCall) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":557800,"byte_end":557824,"line_start":215,"line_end":215,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":558000,"byte_end":558016,"line_start":220,"line_end":220,"column_start":8,"column_end":24},"name":"visit_expr_paren","qualname":"::gen::visit::Visit::visit_expr_paren","value":"fn (&mut self, i: &'ast ExprParen) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":557943,"byte_end":557992,"line_start":219,"line_end":219,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":558151,"byte_end":558166,"line_start":224,"line_end":224,"column_start":8,"column_end":23},"name":"visit_expr_path","qualname":"::gen::visit::Visit::visit_expr_path","value":"fn (&mut self, i: &'ast ExprPath) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":558094,"byte_end":558143,"line_start":223,"line_end":223,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2139},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":558274,"byte_end":558290,"line_start":228,"line_end":228,"column_start":8,"column_end":24},"name":"visit_expr_range","qualname":"::gen::visit::Visit::visit_expr_range","value":"fn (&mut self, i: &'ast ExprRange) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":558242,"byte_end":558266,"line_start":227,"line_end":227,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":558400,"byte_end":558420,"line_start":232,"line_end":232,"column_start":8,"column_end":28},"name":"visit_expr_reference","qualname":"::gen::visit::Visit::visit_expr_reference","value":"fn (&mut self, i: &'ast ExprReference) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":558368,"byte_end":558392,"line_start":231,"line_end":231,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":558538,"byte_end":558555,"line_start":236,"line_end":236,"column_start":8,"column_end":25},"name":"visit_expr_repeat","qualname":"::gen::visit::Visit::visit_expr_repeat","value":"fn (&mut self, i: &'ast ExprRepeat) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":558506,"byte_end":558530,"line_start":235,"line_end":235,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2142},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":558667,"byte_end":558684,"line_start":240,"line_end":240,"column_start":8,"column_end":25},"name":"visit_expr_return","qualname":"::gen::visit::Visit::visit_expr_return","value":"fn (&mut self, i: &'ast ExprReturn) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":558635,"byte_end":558659,"line_start":239,"line_end":239,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2143},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":558796,"byte_end":558813,"line_start":244,"line_end":244,"column_start":8,"column_end":25},"name":"visit_expr_struct","qualname":"::gen::visit::Visit::visit_expr_struct","value":"fn (&mut self, i: &'ast ExprStruct) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":558764,"byte_end":558788,"line_start":243,"line_end":243,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":558925,"byte_end":558939,"line_start":248,"line_end":248,"column_start":8,"column_end":22},"name":"visit_expr_try","qualname":"::gen::visit::Visit::visit_expr_try","value":"fn (&mut self, i: &'ast ExprTry) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":558893,"byte_end":558917,"line_start":247,"line_end":247,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2145},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":559045,"byte_end":559065,"line_start":252,"line_end":252,"column_start":8,"column_end":28},"name":"visit_expr_try_block","qualname":"::gen::visit::Visit::visit_expr_try_block","value":"fn (&mut self, i: &'ast ExprTryBlock) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":559013,"byte_end":559037,"line_start":251,"line_end":251,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":559182,"byte_end":559198,"line_start":256,"line_end":256,"column_start":8,"column_end":24},"name":"visit_expr_tuple","qualname":"::gen::visit::Visit::visit_expr_tuple","value":"fn (&mut self, i: &'ast ExprTuple) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":559150,"byte_end":559174,"line_start":255,"line_end":255,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2147},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":559308,"byte_end":559323,"line_start":260,"line_end":260,"column_start":8,"column_end":23},"name":"visit_expr_type","qualname":"::gen::visit::Visit::visit_expr_type","value":"fn (&mut self, i: &'ast ExprType) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":559276,"byte_end":559300,"line_start":259,"line_end":259,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":559456,"byte_end":559472,"line_start":264,"line_end":264,"column_start":8,"column_end":24},"name":"visit_expr_unary","qualname":"::gen::visit::Visit::visit_expr_unary","value":"fn (&mut self, i: &'ast ExprUnary) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":559399,"byte_end":559448,"line_start":263,"line_end":263,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":559582,"byte_end":559599,"line_start":268,"line_end":268,"column_start":8,"column_end":25},"name":"visit_expr_unsafe","qualname":"::gen::visit::Visit::visit_expr_unsafe","value":"fn (&mut self, i: &'ast ExprUnsafe) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":559550,"byte_end":559574,"line_start":267,"line_end":267,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":559736,"byte_end":559755,"line_start":272,"line_end":272,"column_start":8,"column_end":27},"name":"visit_expr_verbatim","qualname":"::gen::visit::Visit::visit_expr_verbatim","value":"fn (&mut self, i: &'ast ExprVerbatim) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":559679,"byte_end":559728,"line_start":271,"line_end":271,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":559871,"byte_end":559887,"line_start":276,"line_end":276,"column_start":8,"column_end":24},"name":"visit_expr_while","qualname":"::gen::visit::Visit::visit_expr_while","value":"fn (&mut self, i: &'ast ExprWhile) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":559839,"byte_end":559863,"line_start":275,"line_end":275,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":559997,"byte_end":560013,"line_start":280,"line_end":280,"column_start":8,"column_end":24},"name":"visit_expr_yield","qualname":"::gen::visit::Visit::visit_expr_yield","value":"fn (&mut self, i: &'ast ExprYield) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":559965,"byte_end":559989,"line_start":279,"line_end":279,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":560148,"byte_end":560159,"line_start":284,"line_end":284,"column_start":8,"column_end":19},"name":"visit_field","qualname":"::gen::visit::Visit::visit_field","value":"fn (&mut self, i: &'ast Field) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":560091,"byte_end":560140,"line_start":283,"line_end":283,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":560260,"byte_end":560275,"line_start":288,"line_end":288,"column_start":8,"column_end":23},"name":"visit_field_pat","qualname":"::gen::visit::Visit::visit_field_pat","value":"fn (&mut self, i: &'ast FieldPat) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":560228,"byte_end":560252,"line_start":287,"line_end":287,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2155},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":560383,"byte_end":560400,"line_start":292,"line_end":292,"column_start":8,"column_end":25},"name":"visit_field_value","qualname":"::gen::visit::Visit::visit_field_value","value":"fn (&mut self, i: &'ast FieldValue) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":560351,"byte_end":560375,"line_start":291,"line_end":291,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":560537,"byte_end":560549,"line_start":296,"line_end":296,"column_start":8,"column_end":20},"name":"visit_fields","qualname":"::gen::visit::Visit::visit_fields","value":"fn (&mut self, i: &'ast Fields) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":560480,"byte_end":560529,"line_start":295,"line_end":295,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":560677,"byte_end":560695,"line_start":300,"line_end":300,"column_start":8,"column_end":26},"name":"visit_fields_named","qualname":"::gen::visit::Visit::visit_fields_named","value":"fn (&mut self, i: &'ast FieldsNamed) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":560620,"byte_end":560669,"line_start":299,"line_end":299,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":560834,"byte_end":560854,"line_start":304,"line_end":304,"column_start":8,"column_end":28},"name":"visit_fields_unnamed","qualname":"::gen::visit::Visit::visit_fields_unnamed","value":"fn (&mut self, i: &'ast FieldsUnnamed) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":560777,"byte_end":560826,"line_start":303,"line_end":303,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":560972,"byte_end":560982,"line_start":308,"line_end":308,"column_start":8,"column_end":18},"name":"visit_file","qualname":"::gen::visit::Visit::visit_file","value":"fn (&mut self, i: &'ast File) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":560940,"byte_end":560964,"line_start":307,"line_end":307,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":561081,"byte_end":561093,"line_start":312,"line_end":312,"column_start":8,"column_end":20},"name":"visit_fn_arg","qualname":"::gen::visit::Visit::visit_fn_arg","value":"fn (&mut self, i: &'ast FnArg) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":561049,"byte_end":561073,"line_start":311,"line_end":311,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":561195,"byte_end":561208,"line_start":316,"line_end":316,"column_start":8,"column_end":21},"name":"visit_fn_decl","qualname":"::gen::visit::Visit::visit_fn_decl","value":"fn (&mut self, i: &'ast FnDecl) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":561163,"byte_end":561187,"line_start":315,"line_end":315,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":561312,"byte_end":561330,"line_start":320,"line_end":320,"column_start":8,"column_end":26},"name":"visit_foreign_item","qualname":"::gen::visit::Visit::visit_foreign_item","value":"fn (&mut self, i: &'ast ForeignItem) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":561280,"byte_end":561304,"line_start":319,"line_end":319,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":561444,"byte_end":561465,"line_start":324,"line_end":324,"column_start":8,"column_end":29},"name":"visit_foreign_item_fn","qualname":"::gen::visit::Visit::visit_foreign_item_fn","value":"fn (&mut self, i: &'ast ForeignItemFn) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":561412,"byte_end":561436,"line_start":323,"line_end":323,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":561584,"byte_end":561608,"line_start":328,"line_end":328,"column_start":8,"column_end":32},"name":"visit_foreign_item_macro","qualname":"::gen::visit::Visit::visit_foreign_item_macro","value":"fn (&mut self, i: &'ast ForeignItemMacro) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":561552,"byte_end":561576,"line_start":327,"line_end":327,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":561733,"byte_end":561758,"line_start":332,"line_end":332,"column_start":8,"column_end":33},"name":"visit_foreign_item_static","qualname":"::gen::visit::Visit::visit_foreign_item_static","value":"fn (&mut self, i: &'ast ForeignItemStatic) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":561701,"byte_end":561725,"line_start":331,"line_end":331,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":561885,"byte_end":561908,"line_start":336,"line_end":336,"column_start":8,"column_end":31},"name":"visit_foreign_item_type","qualname":"::gen::visit::Visit::visit_foreign_item_type","value":"fn (&mut self, i: &'ast ForeignItemType) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":561853,"byte_end":561877,"line_start":335,"line_end":335,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":562031,"byte_end":562058,"line_start":340,"line_end":340,"column_start":8,"column_end":35},"name":"visit_foreign_item_verbatim","qualname":"::gen::visit::Visit::visit_foreign_item_verbatim","value":"fn (&mut self, i: &'ast ForeignItemVerbatim) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":561999,"byte_end":562023,"line_start":339,"line_end":339,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":562214,"byte_end":562236,"line_start":344,"line_end":344,"column_start":8,"column_end":30},"name":"visit_generic_argument","qualname":"::gen::visit::Visit::visit_generic_argument","value":"fn (&mut self, i: &'ast GenericArgument) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":562157,"byte_end":562206,"line_start":343,"line_end":343,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2169},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":562358,"byte_end":562387,"line_start":348,"line_end":348,"column_start":8,"column_end":37},"name":"visit_generic_method_argument","qualname":"::gen::visit::Visit::visit_generic_method_argument","value":"fn (&mut self, i: &'ast GenericMethodArgument) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":562326,"byte_end":562350,"line_start":347,"line_end":347,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2170},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":562547,"byte_end":562566,"line_start":352,"line_end":352,"column_start":8,"column_end":27},"name":"visit_generic_param","qualname":"::gen::visit::Visit::visit_generic_param","value":"fn (&mut self, i: &'ast GenericParam) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":562490,"byte_end":562539,"line_start":351,"line_end":351,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":562707,"byte_end":562721,"line_start":356,"line_end":356,"column_start":8,"column_end":22},"name":"visit_generics","qualname":"::gen::visit::Visit::visit_generics","value":"fn (&mut self, i: &'ast Generics) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":562650,"byte_end":562699,"line_start":355,"line_end":355,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":562828,"byte_end":562843,"line_start":360,"line_end":360,"column_start":8,"column_end":23},"name":"visit_impl_item","qualname":"::gen::visit::Visit::visit_impl_item","value":"fn (&mut self, i: &'ast ImplItem) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":562796,"byte_end":562820,"line_start":359,"line_end":359,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":562951,"byte_end":562972,"line_start":364,"line_end":364,"column_start":8,"column_end":29},"name":"visit_impl_item_const","qualname":"::gen::visit::Visit::visit_impl_item_const","value":"fn (&mut self, i: &'ast ImplItemConst) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":562919,"byte_end":562943,"line_start":363,"line_end":363,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":563091,"byte_end":563118,"line_start":368,"line_end":368,"column_start":8,"column_end":35},"name":"visit_impl_item_existential","qualname":"::gen::visit::Visit::visit_impl_item_existential","value":"fn (&mut self, i: &'ast ImplItemExistential) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":563059,"byte_end":563083,"line_start":367,"line_end":367,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2175},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":563249,"byte_end":563270,"line_start":372,"line_end":372,"column_start":8,"column_end":29},"name":"visit_impl_item_macro","qualname":"::gen::visit::Visit::visit_impl_item_macro","value":"fn (&mut self, i: &'ast ImplItemMacro) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":563217,"byte_end":563241,"line_start":371,"line_end":371,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":563389,"byte_end":563411,"line_start":376,"line_end":376,"column_start":8,"column_end":30},"name":"visit_impl_item_method","qualname":"::gen::visit::Visit::visit_impl_item_method","value":"fn (&mut self, i: &'ast ImplItemMethod) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":563357,"byte_end":563381,"line_start":375,"line_end":375,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2177},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":563532,"byte_end":563552,"line_start":380,"line_end":380,"column_start":8,"column_end":28},"name":"visit_impl_item_type","qualname":"::gen::visit::Visit::visit_impl_item_type","value":"fn (&mut self, i: &'ast ImplItemType) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":563500,"byte_end":563524,"line_start":379,"line_end":379,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":563669,"byte_end":563693,"line_start":384,"line_end":384,"column_start":8,"column_end":32},"name":"visit_impl_item_verbatim","qualname":"::gen::visit::Visit::visit_impl_item_verbatim","value":"fn (&mut self, i: &'ast ImplItemVerbatim) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":563637,"byte_end":563661,"line_start":383,"line_end":383,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2179},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":563843,"byte_end":563854,"line_start":388,"line_end":388,"column_start":8,"column_end":19},"name":"visit_index","qualname":"::gen::visit::Visit::visit_index","value":"fn (&mut self, i: &'ast Index) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":563786,"byte_end":563835,"line_start":387,"line_end":387,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":563955,"byte_end":563965,"line_start":392,"line_end":392,"column_start":8,"column_end":18},"name":"visit_item","qualname":"::gen::visit::Visit::visit_item","value":"fn (&mut self, i: &'ast Item) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":563923,"byte_end":563947,"line_start":391,"line_end":391,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2181},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":564064,"byte_end":564080,"line_start":396,"line_end":396,"column_start":8,"column_end":24},"name":"visit_item_const","qualname":"::gen::visit::Visit::visit_item_const","value":"fn (&mut self, i: &'ast ItemConst) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":564032,"byte_end":564056,"line_start":395,"line_end":395,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":564190,"byte_end":564205,"line_start":400,"line_end":400,"column_start":8,"column_end":23},"name":"visit_item_enum","qualname":"::gen::visit::Visit::visit_item_enum","value":"fn (&mut self, i: &'ast ItemEnum) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":564158,"byte_end":564182,"line_start":399,"line_end":399,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2183},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":564313,"byte_end":564335,"line_start":404,"line_end":404,"column_start":8,"column_end":30},"name":"visit_item_existential","qualname":"::gen::visit::Visit::visit_item_existential","value":"fn (&mut self, i: &'ast ItemExistential) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":564281,"byte_end":564305,"line_start":403,"line_end":403,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":564457,"byte_end":564480,"line_start":408,"line_end":408,"column_start":8,"column_end":31},"name":"visit_item_extern_crate","qualname":"::gen::visit::Visit::visit_item_extern_crate","value":"fn (&mut self, i: &'ast ItemExternCrate) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":564425,"byte_end":564449,"line_start":407,"line_end":407,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2185},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":564603,"byte_end":564616,"line_start":412,"line_end":412,"column_start":8,"column_end":21},"name":"visit_item_fn","qualname":"::gen::visit::Visit::visit_item_fn","value":"fn (&mut self, i: &'ast ItemFn) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":564571,"byte_end":564595,"line_start":411,"line_end":411,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2186},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":564720,"byte_end":564742,"line_start":416,"line_end":416,"column_start":8,"column_end":30},"name":"visit_item_foreign_mod","qualname":"::gen::visit::Visit::visit_item_foreign_mod","value":"fn (&mut self, i: &'ast ItemForeignMod) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":564688,"byte_end":564712,"line_start":415,"line_end":415,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":564863,"byte_end":564878,"line_start":420,"line_end":420,"column_start":8,"column_end":23},"name":"visit_item_impl","qualname":"::gen::visit::Visit::visit_item_impl","value":"fn (&mut self, i: &'ast ItemImpl) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":564831,"byte_end":564855,"line_start":419,"line_end":419,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":564986,"byte_end":565002,"line_start":424,"line_end":424,"column_start":8,"column_end":24},"name":"visit_item_macro","qualname":"::gen::visit::Visit::visit_item_macro","value":"fn (&mut self, i: &'ast ItemMacro) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":564954,"byte_end":564978,"line_start":423,"line_end":423,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":565112,"byte_end":565129,"line_start":428,"line_end":428,"column_start":8,"column_end":25},"name":"visit_item_macro2","qualname":"::gen::visit::Visit::visit_item_macro2","value":"fn (&mut self, i: &'ast ItemMacro2) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":565080,"byte_end":565104,"line_start":427,"line_end":427,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":565241,"byte_end":565255,"line_start":432,"line_end":432,"column_start":8,"column_end":22},"name":"visit_item_mod","qualname":"::gen::visit::Visit::visit_item_mod","value":"fn (&mut self, i: &'ast ItemMod) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":565209,"byte_end":565233,"line_start":431,"line_end":431,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":565361,"byte_end":565378,"line_start":436,"line_end":436,"column_start":8,"column_end":25},"name":"visit_item_static","qualname":"::gen::visit::Visit::visit_item_static","value":"fn (&mut self, i: &'ast ItemStatic) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":565329,"byte_end":565353,"line_start":435,"line_end":435,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":565490,"byte_end":565507,"line_start":440,"line_end":440,"column_start":8,"column_end":25},"name":"visit_item_struct","qualname":"::gen::visit::Visit::visit_item_struct","value":"fn (&mut self, i: &'ast ItemStruct) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":565458,"byte_end":565482,"line_start":439,"line_end":439,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":565619,"byte_end":565635,"line_start":444,"line_end":444,"column_start":8,"column_end":24},"name":"visit_item_trait","qualname":"::gen::visit::Visit::visit_item_trait","value":"fn (&mut self, i: &'ast ItemTrait) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":565587,"byte_end":565611,"line_start":443,"line_end":443,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":565745,"byte_end":565767,"line_start":448,"line_end":448,"column_start":8,"column_end":30},"name":"visit_item_trait_alias","qualname":"::gen::visit::Visit::visit_item_trait_alias","value":"fn (&mut self, i: &'ast ItemTraitAlias) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":565713,"byte_end":565737,"line_start":447,"line_end":447,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":565888,"byte_end":565903,"line_start":452,"line_end":452,"column_start":8,"column_end":23},"name":"visit_item_type","qualname":"::gen::visit::Visit::visit_item_type","value":"fn (&mut self, i: &'ast ItemType) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":565856,"byte_end":565880,"line_start":451,"line_end":451,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2196},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":566011,"byte_end":566027,"line_start":456,"line_end":456,"column_start":8,"column_end":24},"name":"visit_item_union","qualname":"::gen::visit::Visit::visit_item_union","value":"fn (&mut self, i: &'ast ItemUnion) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":565979,"byte_end":566003,"line_start":455,"line_end":455,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":566137,"byte_end":566151,"line_start":460,"line_end":460,"column_start":8,"column_end":22},"name":"visit_item_use","qualname":"::gen::visit::Visit::visit_item_use","value":"fn (&mut self, i: &'ast ItemUse) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":566105,"byte_end":566129,"line_start":459,"line_end":459,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":566257,"byte_end":566276,"line_start":464,"line_end":464,"column_start":8,"column_end":27},"name":"visit_item_verbatim","qualname":"::gen::visit::Visit::visit_item_verbatim","value":"fn (&mut self, i: &'ast ItemVerbatim) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":566225,"byte_end":566249,"line_start":463,"line_end":463,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":566392,"byte_end":566403,"line_start":468,"line_end":468,"column_start":8,"column_end":19},"name":"visit_label","qualname":"::gen::visit::Visit::visit_label","value":"fn (&mut self, i: &'ast Label) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":566360,"byte_end":566384,"line_start":467,"line_end":467,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":566475,"byte_end":566489,"line_start":471,"line_end":471,"column_start":8,"column_end":22},"name":"visit_lifetime","qualname":"::gen::visit::Visit::visit_lifetime","value":"fn (&mut self, i: &'ast Lifetime) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":566621,"byte_end":566639,"line_start":475,"line_end":475,"column_start":8,"column_end":26},"name":"visit_lifetime_def","qualname":"::gen::visit::Visit::visit_lifetime_def","value":"fn (&mut self, i: &'ast LifetimeDef) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":566564,"byte_end":566613,"line_start":474,"line_end":474,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":566778,"byte_end":566787,"line_start":479,"line_end":479,"column_start":8,"column_end":17},"name":"visit_lit","qualname":"::gen::visit::Visit::visit_lit","value":"fn (&mut self, i: &'ast Lit) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":566721,"byte_end":566770,"line_start":478,"line_end":478,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":566909,"byte_end":566923,"line_start":483,"line_end":483,"column_start":8,"column_end":22},"name":"visit_lit_bool","qualname":"::gen::visit::Visit::visit_lit_bool","value":"fn (&mut self, i: &'ast LitBool) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":566852,"byte_end":566901,"line_start":482,"line_end":482,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":567054,"byte_end":567068,"line_start":487,"line_end":487,"column_start":8,"column_end":22},"name":"visit_lit_byte","qualname":"::gen::visit::Visit::visit_lit_byte","value":"fn (&mut self, i: &'ast LitByte) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":566997,"byte_end":567046,"line_start":486,"line_end":486,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":567199,"byte_end":567217,"line_start":491,"line_end":491,"column_start":8,"column_end":26},"name":"visit_lit_byte_str","qualname":"::gen::visit::Visit::visit_lit_byte_str","value":"fn (&mut self, i: &'ast LitByteStr) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":567142,"byte_end":567191,"line_start":490,"line_end":490,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2206},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":567355,"byte_end":567369,"line_start":495,"line_end":495,"column_start":8,"column_end":22},"name":"visit_lit_char","qualname":"::gen::visit::Visit::visit_lit_char","value":"fn (&mut self, i: &'ast LitChar) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":567298,"byte_end":567347,"line_start":494,"line_end":494,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":567500,"byte_end":567515,"line_start":499,"line_end":499,"column_start":8,"column_end":23},"name":"visit_lit_float","qualname":"::gen::visit::Visit::visit_lit_float","value":"fn (&mut self, i: &'ast LitFloat) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":567443,"byte_end":567492,"line_start":498,"line_end":498,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2208},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":567648,"byte_end":567661,"line_start":503,"line_end":503,"column_start":8,"column_end":21},"name":"visit_lit_int","qualname":"::gen::visit::Visit::visit_lit_int","value":"fn (&mut self, i: &'ast LitInt) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":567591,"byte_end":567640,"line_start":502,"line_end":502,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":567790,"byte_end":567803,"line_start":507,"line_end":507,"column_start":8,"column_end":21},"name":"visit_lit_str","qualname":"::gen::visit::Visit::visit_lit_str","value":"fn (&mut self, i: &'ast LitStr) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":567733,"byte_end":567782,"line_start":506,"line_end":506,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":567932,"byte_end":567950,"line_start":511,"line_end":511,"column_start":8,"column_end":26},"name":"visit_lit_verbatim","qualname":"::gen::visit::Visit::visit_lit_verbatim","value":"fn (&mut self, i: &'ast LitVerbatim) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":567875,"byte_end":567924,"line_start":510,"line_end":510,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2211},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":568064,"byte_end":568075,"line_start":515,"line_end":515,"column_start":8,"column_end":19},"name":"visit_local","qualname":"::gen::visit::Visit::visit_local","value":"fn (&mut self, i: &'ast Local) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":568032,"byte_end":568056,"line_start":514,"line_end":514,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2212},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":568201,"byte_end":568212,"line_start":519,"line_end":519,"column_start":8,"column_end":19},"name":"visit_macro","qualname":"::gen::visit::Visit::visit_macro","value":"fn (&mut self, i: &'ast Macro) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":568144,"byte_end":568193,"line_start":518,"line_end":518,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":568338,"byte_end":568359,"line_start":523,"line_end":523,"column_start":8,"column_end":29},"name":"visit_macro_delimiter","qualname":"::gen::visit::Visit::visit_macro_delimiter","value":"fn (&mut self, i: &'ast MacroDelimiter) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":568281,"byte_end":568330,"line_start":522,"line_end":522,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2214},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":568504,"byte_end":568516,"line_start":527,"line_end":527,"column_start":8,"column_end":20},"name":"visit_member","qualname":"::gen::visit::Visit::visit_member","value":"fn (&mut self, i: &'ast Member) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":568447,"byte_end":568496,"line_start":526,"line_end":526,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":568644,"byte_end":568654,"line_start":531,"line_end":531,"column_start":8,"column_end":18},"name":"visit_meta","qualname":"::gen::visit::Visit::visit_meta","value":"fn (&mut self, i: &'ast Meta) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":568587,"byte_end":568636,"line_start":530,"line_end":530,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":568778,"byte_end":568793,"line_start":535,"line_end":535,"column_start":8,"column_end":23},"name":"visit_meta_list","qualname":"::gen::visit::Visit::visit_meta_list","value":"fn (&mut self, i: &'ast MetaList) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":568721,"byte_end":568770,"line_start":534,"line_end":534,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":568926,"byte_end":568947,"line_start":539,"line_end":539,"column_start":8,"column_end":29},"name":"visit_meta_name_value","qualname":"::gen::visit::Visit::visit_meta_name_value","value":"fn (&mut self, i: &'ast MetaNameValue) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":568869,"byte_end":568918,"line_start":538,"line_end":538,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":569066,"byte_end":569082,"line_start":543,"line_end":543,"column_start":8,"column_end":24},"name":"visit_method_sig","qualname":"::gen::visit::Visit::visit_method_sig","value":"fn (&mut self, i: &'ast MethodSig) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":569034,"byte_end":569058,"line_start":542,"line_end":542,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":569192,"byte_end":569214,"line_start":547,"line_end":547,"column_start":8,"column_end":30},"name":"visit_method_turbofish","qualname":"::gen::visit::Visit::visit_method_turbofish","value":"fn (&mut self, i: &'ast MethodTurbofish) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":569160,"byte_end":569184,"line_start":546,"line_end":546,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":569361,"byte_end":569378,"line_start":551,"line_end":551,"column_start":8,"column_end":25},"name":"visit_nested_meta","qualname":"::gen::visit::Visit::visit_nested_meta","value":"fn (&mut self, i: &'ast NestedMeta) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":569304,"byte_end":569353,"line_start":550,"line_end":550,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":569515,"byte_end":569552,"line_start":555,"line_end":555,"column_start":8,"column_end":45},"name":"visit_parenthesized_generic_arguments","qualname":"::gen::visit::Visit::visit_parenthesized_generic_arguments","value":"fn (&mut self, i: &'ast ParenthesizedGenericArguments) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":569458,"byte_end":569507,"line_start":554,"line_end":554,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":569703,"byte_end":569712,"line_start":559,"line_end":559,"column_start":8,"column_end":17},"name":"visit_pat","qualname":"::gen::visit::Visit::visit_pat","value":"fn (&mut self, i: &'ast Pat) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":569671,"byte_end":569695,"line_start":558,"line_end":558,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":569809,"byte_end":569822,"line_start":563,"line_end":563,"column_start":8,"column_end":21},"name":"visit_pat_box","qualname":"::gen::visit::Visit::visit_pat_box","value":"fn (&mut self, i: &'ast PatBox) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":569777,"byte_end":569801,"line_start":562,"line_end":562,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2224},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":569926,"byte_end":569941,"line_start":567,"line_end":567,"column_start":8,"column_end":23},"name":"visit_pat_ident","qualname":"::gen::visit::Visit::visit_pat_ident","value":"fn (&mut self, i: &'ast PatIdent) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":569894,"byte_end":569918,"line_start":566,"line_end":566,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":570049,"byte_end":570062,"line_start":571,"line_end":571,"column_start":8,"column_end":21},"name":"visit_pat_lit","qualname":"::gen::visit::Visit::visit_pat_lit","value":"fn (&mut self, i: &'ast PatLit) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":570017,"byte_end":570041,"line_start":570,"line_end":570,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2226},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":570166,"byte_end":570181,"line_start":575,"line_end":575,"column_start":8,"column_end":23},"name":"visit_pat_macro","qualname":"::gen::visit::Visit::visit_pat_macro","value":"fn (&mut self, i: &'ast PatMacro) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":570134,"byte_end":570158,"line_start":574,"line_end":574,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":570289,"byte_end":570303,"line_start":579,"line_end":579,"column_start":8,"column_end":22},"name":"visit_pat_path","qualname":"::gen::visit::Visit::visit_pat_path","value":"fn (&mut self, i: &'ast PatPath) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":570257,"byte_end":570281,"line_start":578,"line_end":578,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2228},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":570409,"byte_end":570424,"line_start":583,"line_end":583,"column_start":8,"column_end":23},"name":"visit_pat_range","qualname":"::gen::visit::Visit::visit_pat_range","value":"fn (&mut self, i: &'ast PatRange) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":570377,"byte_end":570401,"line_start":582,"line_end":582,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":570532,"byte_end":570545,"line_start":587,"line_end":587,"column_start":8,"column_end":21},"name":"visit_pat_ref","qualname":"::gen::visit::Visit::visit_pat_ref","value":"fn (&mut self, i: &'ast PatRef) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":570500,"byte_end":570524,"line_start":586,"line_end":586,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":570649,"byte_end":570664,"line_start":591,"line_end":591,"column_start":8,"column_end":23},"name":"visit_pat_slice","qualname":"::gen::visit::Visit::visit_pat_slice","value":"fn (&mut self, i: &'ast PatSlice) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":570617,"byte_end":570641,"line_start":590,"line_end":590,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":570772,"byte_end":570788,"line_start":595,"line_end":595,"column_start":8,"column_end":24},"name":"visit_pat_struct","qualname":"::gen::visit::Visit::visit_pat_struct","value":"fn (&mut self, i: &'ast PatStruct) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":570740,"byte_end":570764,"line_start":594,"line_end":594,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":570898,"byte_end":570913,"line_start":599,"line_end":599,"column_start":8,"column_end":23},"name":"visit_pat_tuple","qualname":"::gen::visit::Visit::visit_pat_tuple","value":"fn (&mut self, i: &'ast PatTuple) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":570866,"byte_end":570890,"line_start":598,"line_end":598,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":571021,"byte_end":571043,"line_start":603,"line_end":603,"column_start":8,"column_end":30},"name":"visit_pat_tuple_struct","qualname":"::gen::visit::Visit::visit_pat_tuple_struct","value":"fn (&mut self, i: &'ast PatTupleStruct) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":570989,"byte_end":571013,"line_start":602,"line_end":602,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":571164,"byte_end":571182,"line_start":607,"line_end":607,"column_start":8,"column_end":26},"name":"visit_pat_verbatim","qualname":"::gen::visit::Visit::visit_pat_verbatim","value":"fn (&mut self, i: &'ast PatVerbatim) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":571132,"byte_end":571156,"line_start":606,"line_end":606,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":571296,"byte_end":571310,"line_start":611,"line_end":611,"column_start":8,"column_end":22},"name":"visit_pat_wild","qualname":"::gen::visit::Visit::visit_pat_wild","value":"fn (&mut self, i: &'ast PatWild) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":571264,"byte_end":571288,"line_start":610,"line_end":610,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":571441,"byte_end":571451,"line_start":615,"line_end":615,"column_start":8,"column_end":18},"name":"visit_path","qualname":"::gen::visit::Visit::visit_path","value":"fn (&mut self, i: &'ast Path) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":571384,"byte_end":571433,"line_start":614,"line_end":614,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":571575,"byte_end":571595,"line_start":619,"line_end":619,"column_start":8,"column_end":28},"name":"visit_path_arguments","qualname":"::gen::visit::Visit::visit_path_arguments","value":"fn (&mut self, i: &'ast PathArguments) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":571518,"byte_end":571567,"line_start":618,"line_end":618,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":571738,"byte_end":571756,"line_start":623,"line_end":623,"column_start":8,"column_end":26},"name":"visit_path_segment","qualname":"::gen::visit::Visit::visit_path_segment","value":"fn (&mut self, i: &'ast PathSegment) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":571681,"byte_end":571730,"line_start":622,"line_end":622,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":571895,"byte_end":571913,"line_start":627,"line_end":627,"column_start":8,"column_end":26},"name":"visit_predicate_eq","qualname":"::gen::visit::Visit::visit_predicate_eq","value":"fn (&mut self, i: &'ast PredicateEq) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":571838,"byte_end":571887,"line_start":626,"line_end":626,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":572052,"byte_end":572076,"line_start":631,"line_end":631,"column_start":8,"column_end":32},"name":"visit_predicate_lifetime","qualname":"::gen::visit::Visit::visit_predicate_lifetime","value":"fn (&mut self, i: &'ast PredicateLifetime) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":571995,"byte_end":572044,"line_start":630,"line_end":630,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":572227,"byte_end":572247,"line_start":635,"line_end":635,"column_start":8,"column_end":28},"name":"visit_predicate_type","qualname":"::gen::visit::Visit::visit_predicate_type","value":"fn (&mut self, i: &'ast PredicateType) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":572170,"byte_end":572219,"line_start":634,"line_end":634,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":572390,"byte_end":572401,"line_start":639,"line_end":639,"column_start":8,"column_end":19},"name":"visit_qself","qualname":"::gen::visit::Visit::visit_qself","value":"fn (&mut self, i: &'ast QSelf) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":572333,"byte_end":572382,"line_start":638,"line_end":638,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":572502,"byte_end":572520,"line_start":643,"line_end":643,"column_start":8,"column_end":26},"name":"visit_range_limits","qualname":"::gen::visit::Visit::visit_range_limits","value":"fn (&mut self, i: &'ast RangeLimits) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":572470,"byte_end":572494,"line_start":642,"line_end":642,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":572659,"byte_end":572676,"line_start":647,"line_end":647,"column_start":8,"column_end":25},"name":"visit_return_type","qualname":"::gen::visit::Visit::visit_return_type","value":"fn (&mut self, i: &'ast ReturnType) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":572602,"byte_end":572651,"line_start":646,"line_end":646,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":572788,"byte_end":572798,"line_start":651,"line_end":651,"column_start":8,"column_end":18},"name":"visit_stmt","qualname":"::gen::visit::Visit::visit_stmt","value":"fn (&mut self, i: &'ast Stmt) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":572756,"byte_end":572780,"line_start":650,"line_end":650,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":572922,"byte_end":572939,"line_start":655,"line_end":655,"column_start":8,"column_end":25},"name":"visit_trait_bound","qualname":"::gen::visit::Visit::visit_trait_bound","value":"fn (&mut self, i: &'ast TraitBound) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":572865,"byte_end":572914,"line_start":654,"line_end":654,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2247},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":573076,"byte_end":573102,"line_start":659,"line_end":659,"column_start":8,"column_end":34},"name":"visit_trait_bound_modifier","qualname":"::gen::visit::Visit::visit_trait_bound_modifier","value":"fn (&mut self, i: &'ast TraitBoundModifier) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":573019,"byte_end":573068,"line_start":658,"line_end":658,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":573231,"byte_end":573247,"line_start":663,"line_end":663,"column_start":8,"column_end":24},"name":"visit_trait_item","qualname":"::gen::visit::Visit::visit_trait_item","value":"fn (&mut self, i: &'ast TraitItem) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":573199,"byte_end":573223,"line_start":662,"line_end":662,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":573357,"byte_end":573379,"line_start":667,"line_end":667,"column_start":8,"column_end":30},"name":"visit_trait_item_const","qualname":"::gen::visit::Visit::visit_trait_item_const","value":"fn (&mut self, i: &'ast TraitItemConst) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":573325,"byte_end":573349,"line_start":666,"line_end":666,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":573500,"byte_end":573522,"line_start":671,"line_end":671,"column_start":8,"column_end":30},"name":"visit_trait_item_macro","qualname":"::gen::visit::Visit::visit_trait_item_macro","value":"fn (&mut self, i: &'ast TraitItemMacro) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":573468,"byte_end":573492,"line_start":670,"line_end":670,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2251},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":573643,"byte_end":573666,"line_start":675,"line_end":675,"column_start":8,"column_end":31},"name":"visit_trait_item_method","qualname":"::gen::visit::Visit::visit_trait_item_method","value":"fn (&mut self, i: &'ast TraitItemMethod) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":573611,"byte_end":573635,"line_start":674,"line_end":674,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2252},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":573789,"byte_end":573810,"line_start":679,"line_end":679,"column_start":8,"column_end":29},"name":"visit_trait_item_type","qualname":"::gen::visit::Visit::visit_trait_item_type","value":"fn (&mut self, i: &'ast TraitItemType) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":573757,"byte_end":573781,"line_start":678,"line_end":678,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2253},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":573929,"byte_end":573954,"line_start":683,"line_end":683,"column_start":8,"column_end":33},"name":"visit_trait_item_verbatim","qualname":"::gen::visit::Visit::visit_trait_item_verbatim","value":"fn (&mut self, i: &'ast TraitItemVerbatim) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":573897,"byte_end":573921,"line_start":682,"line_end":682,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":574106,"byte_end":574116,"line_start":687,"line_end":687,"column_start":8,"column_end":18},"name":"visit_type","qualname":"::gen::visit::Visit::visit_type","value":"fn (&mut self, i: &'ast Type) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":574049,"byte_end":574098,"line_start":686,"line_end":686,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2255},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":574240,"byte_end":574256,"line_start":691,"line_end":691,"column_start":8,"column_end":24},"name":"visit_type_array","qualname":"::gen::visit::Visit::visit_type_array","value":"fn (&mut self, i: &'ast TypeArray) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":574183,"byte_end":574232,"line_start":690,"line_end":690,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":574391,"byte_end":574409,"line_start":695,"line_end":695,"column_start":8,"column_end":26},"name":"visit_type_bare_fn","qualname":"::gen::visit::Visit::visit_type_bare_fn","value":"fn (&mut self, i: &'ast TypeBareFn) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":574334,"byte_end":574383,"line_start":694,"line_end":694,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":574547,"byte_end":574563,"line_start":699,"line_end":699,"column_start":8,"column_end":24},"name":"visit_type_group","qualname":"::gen::visit::Visit::visit_type_group","value":"fn (&mut self, i: &'ast TypeGroup) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":574490,"byte_end":574539,"line_start":698,"line_end":698,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2258},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":574698,"byte_end":574719,"line_start":703,"line_end":703,"column_start":8,"column_end":29},"name":"visit_type_impl_trait","qualname":"::gen::visit::Visit::visit_type_impl_trait","value":"fn (&mut self, i: &'ast TypeImplTrait) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":574641,"byte_end":574690,"line_start":702,"line_end":702,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2259},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":574863,"byte_end":574879,"line_start":707,"line_end":707,"column_start":8,"column_end":24},"name":"visit_type_infer","qualname":"::gen::visit::Visit::visit_type_infer","value":"fn (&mut self, i: &'ast TypeInfer) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":574806,"byte_end":574855,"line_start":706,"line_end":706,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2260},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":575014,"byte_end":575030,"line_start":711,"line_end":711,"column_start":8,"column_end":24},"name":"visit_type_macro","qualname":"::gen::visit::Visit::visit_type_macro","value":"fn (&mut self, i: &'ast TypeMacro) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":574957,"byte_end":575006,"line_start":710,"line_end":710,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":575165,"byte_end":575181,"line_start":715,"line_end":715,"column_start":8,"column_end":24},"name":"visit_type_never","qualname":"::gen::visit::Visit::visit_type_never","value":"fn (&mut self, i: &'ast TypeNever) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":575108,"byte_end":575157,"line_start":714,"line_end":714,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":575316,"byte_end":575332,"line_start":719,"line_end":719,"column_start":8,"column_end":24},"name":"visit_type_param","qualname":"::gen::visit::Visit::visit_type_param","value":"fn (&mut self, i: &'ast TypeParam) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":575259,"byte_end":575308,"line_start":718,"line_end":718,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":575467,"byte_end":575489,"line_start":723,"line_end":723,"column_start":8,"column_end":30},"name":"visit_type_param_bound","qualname":"::gen::visit::Visit::visit_type_param_bound","value":"fn (&mut self, i: &'ast TypeParamBound) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":575410,"byte_end":575459,"line_start":722,"line_end":722,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":575635,"byte_end":575651,"line_start":727,"line_end":727,"column_start":8,"column_end":24},"name":"visit_type_paren","qualname":"::gen::visit::Visit::visit_type_paren","value":"fn (&mut self, i: &'ast TypeParen) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":575578,"byte_end":575627,"line_start":726,"line_end":726,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":575786,"byte_end":575801,"line_start":731,"line_end":731,"column_start":8,"column_end":23},"name":"visit_type_path","qualname":"::gen::visit::Visit::visit_type_path","value":"fn (&mut self, i: &'ast TypePath) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":575729,"byte_end":575778,"line_start":730,"line_end":730,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":575934,"byte_end":575948,"line_start":735,"line_end":735,"column_start":8,"column_end":22},"name":"visit_type_ptr","qualname":"::gen::visit::Visit::visit_type_ptr","value":"fn (&mut self, i: &'ast TypePtr) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":575877,"byte_end":575926,"line_start":734,"line_end":734,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2267},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":576079,"byte_end":576099,"line_start":739,"line_end":739,"column_start":8,"column_end":28},"name":"visit_type_reference","qualname":"::gen::visit::Visit::visit_type_reference","value":"fn (&mut self, i: &'ast TypeReference) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":576022,"byte_end":576071,"line_start":738,"line_end":738,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2268},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":576242,"byte_end":576258,"line_start":743,"line_end":743,"column_start":8,"column_end":24},"name":"visit_type_slice","qualname":"::gen::visit::Visit::visit_type_slice","value":"fn (&mut self, i: &'ast TypeSlice) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":576185,"byte_end":576234,"line_start":742,"line_end":742,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2269},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":576393,"byte_end":576416,"line_start":747,"line_end":747,"column_start":8,"column_end":31},"name":"visit_type_trait_object","qualname":"::gen::visit::Visit::visit_type_trait_object","value":"fn (&mut self, i: &'ast TypeTraitObject) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":576336,"byte_end":576385,"line_start":746,"line_end":746,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":576564,"byte_end":576580,"line_start":751,"line_end":751,"column_start":8,"column_end":24},"name":"visit_type_tuple","qualname":"::gen::visit::Visit::visit_type_tuple","value":"fn (&mut self, i: &'ast TypeTuple) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":576507,"byte_end":576556,"line_start":750,"line_end":750,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":576715,"byte_end":576734,"line_start":755,"line_end":755,"column_start":8,"column_end":27},"name":"visit_type_verbatim","qualname":"::gen::visit::Visit::visit_type_verbatim","value":"fn (&mut self, i: &'ast TypeVerbatim) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":576658,"byte_end":576707,"line_start":754,"line_end":754,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":576875,"byte_end":576886,"line_start":759,"line_end":759,"column_start":8,"column_end":19},"name":"visit_un_op","qualname":"::gen::visit::Visit::visit_un_op","value":"fn (&mut self, i: &'ast UnOp) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":576818,"byte_end":576867,"line_start":758,"line_end":758,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":576986,"byte_end":577000,"line_start":763,"line_end":763,"column_start":8,"column_end":22},"name":"visit_use_glob","qualname":"::gen::visit::Visit::visit_use_glob","value":"fn (&mut self, i: &'ast UseGlob) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":576954,"byte_end":576978,"line_start":762,"line_end":762,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2274},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":577106,"byte_end":577121,"line_start":767,"line_end":767,"column_start":8,"column_end":23},"name":"visit_use_group","qualname":"::gen::visit::Visit::visit_use_group","value":"fn (&mut self, i: &'ast UseGroup) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":577074,"byte_end":577098,"line_start":766,"line_end":766,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2275},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":577229,"byte_end":577243,"line_start":771,"line_end":771,"column_start":8,"column_end":22},"name":"visit_use_name","qualname":"::gen::visit::Visit::visit_use_name","value":"fn (&mut self, i: &'ast UseName) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":577197,"byte_end":577221,"line_start":770,"line_end":770,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2276},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":577349,"byte_end":577363,"line_start":775,"line_end":775,"column_start":8,"column_end":22},"name":"visit_use_path","qualname":"::gen::visit::Visit::visit_use_path","value":"fn (&mut self, i: &'ast UsePath) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":577317,"byte_end":577341,"line_start":774,"line_end":774,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2277},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":577469,"byte_end":577485,"line_start":779,"line_end":779,"column_start":8,"column_end":24},"name":"visit_use_rename","qualname":"::gen::visit::Visit::visit_use_rename","value":"fn (&mut self, i: &'ast UseRename) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":577437,"byte_end":577461,"line_start":778,"line_end":778,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2278},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":577595,"byte_end":577609,"line_start":783,"line_end":783,"column_start":8,"column_end":22},"name":"visit_use_tree","qualname":"::gen::visit::Visit::visit_use_tree","value":"fn (&mut self, i: &'ast UseTree) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":577563,"byte_end":577587,"line_start":782,"line_end":782,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2279},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":577740,"byte_end":577753,"line_start":787,"line_end":787,"column_start":8,"column_end":21},"name":"visit_variant","qualname":"::gen::visit::Visit::visit_variant","value":"fn (&mut self, i: &'ast Variant) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":577683,"byte_end":577732,"line_start":786,"line_end":786,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2280},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":577883,"byte_end":577898,"line_start":791,"line_end":791,"column_start":8,"column_end":23},"name":"visit_vis_crate","qualname":"::gen::visit::Visit::visit_vis_crate","value":"fn (&mut self, i: &'ast VisCrate) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":577826,"byte_end":577875,"line_start":790,"line_end":790,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2281},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":578031,"byte_end":578047,"line_start":795,"line_end":795,"column_start":8,"column_end":24},"name":"visit_vis_public","qualname":"::gen::visit::Visit::visit_vis_public","value":"fn (&mut self, i: &'ast VisPublic) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":577974,"byte_end":578023,"line_start":794,"line_end":794,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":578182,"byte_end":578202,"line_start":799,"line_end":799,"column_start":8,"column_end":28},"name":"visit_vis_restricted","qualname":"::gen::visit::Visit::visit_vis_restricted","value":"fn (&mut self, i: &'ast VisRestricted) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":578125,"byte_end":578174,"line_start":798,"line_end":798,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":578345,"byte_end":578361,"line_start":803,"line_end":803,"column_start":8,"column_end":24},"name":"visit_visibility","qualname":"::gen::visit::Visit::visit_visibility","value":"fn (&mut self, i: &'ast Visibility) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":578288,"byte_end":578337,"line_start":802,"line_end":802,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":578497,"byte_end":578515,"line_start":807,"line_end":807,"column_start":8,"column_end":26},"name":"visit_where_clause","qualname":"::gen::visit::Visit::visit_where_clause","value":"fn (&mut self, i: &'ast WhereClause) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":578440,"byte_end":578489,"line_start":806,"line_end":806,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":578654,"byte_end":578675,"line_start":811,"line_end":811,"column_start":8,"column_end":29},"name":"visit_where_predicate","qualname":"::gen::visit::Visit::visit_where_predicate","value":"fn (&mut self, i: &'ast WherePredicate) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":578597,"byte_end":578646,"line_start":810,"line_end":810,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":578766,"byte_end":578776,"line_start":814,"line_end":814,"column_start":8,"column_end":18},"name":"visit_span","qualname":"::gen::visit::Visit::visit_span","value":"fn (&mut self, i: &'ast Span) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2287},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":578846,"byte_end":578857,"line_start":817,"line_end":817,"column_start":8,"column_end":19},"name":"visit_ident","qualname":"::gen::visit::Visit::visit_ident","value":"fn (&mut self, i: &'ast Ident) -> ()","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2288},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":578981,"byte_end":578990,"line_start":822,"line_end":822,"column_start":8,"column_end":17},"name":"visit_abi","qualname":"::gen::visit::visit_abi","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Abi) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":578924,"byte_end":578973,"line_start":821,"line_end":821,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2291},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":579246,"byte_end":579285,"line_start":829,"line_end":829,"column_start":8,"column_end":47},"name":"visit_angle_bracketed_generic_arguments","qualname":"::gen::visit::visit_angle_bracketed_generic_arguments","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast AngleBracketedGenericArguments) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":579189,"byte_end":579238,"line_start":828,"line_end":828,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2294},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":579739,"byte_end":579757,"line_start":844,"line_end":844,"column_start":8,"column_end":26},"name":"visit_arg_captured","qualname":"::gen::visit::visit_arg_captured","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ArgCaptured) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":579707,"byte_end":579731,"line_start":843,"line_end":843,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2297},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":579984,"byte_end":579998,"line_start":850,"line_end":850,"column_start":8,"column_end":22},"name":"visit_arg_self","qualname":"::gen::visit::visit_arg_self","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ArgSelf) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":579952,"byte_end":579976,"line_start":849,"line_end":849,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2300},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":580244,"byte_end":580262,"line_start":857,"line_end":857,"column_start":8,"column_end":26},"name":"visit_arg_self_ref","qualname":"::gen::visit::visit_arg_self_ref","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ArgSelfRef) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":580212,"byte_end":580236,"line_start":856,"line_end":856,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2303},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":580644,"byte_end":580653,"line_start":868,"line_end":868,"column_start":8,"column_end":17},"name":"visit_arm","qualname":"::gen::visit::visit_arm","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Arm) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":580612,"byte_end":580636,"line_start":867,"line_end":867,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2306},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":581361,"byte_end":581377,"line_start":890,"line_end":890,"column_start":8,"column_end":24},"name":"visit_attr_style","qualname":"::gen::visit::visit_attr_style","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast AttrStyle) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":581304,"byte_end":581353,"line_start":889,"line_end":889,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2309},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":581674,"byte_end":581689,"line_start":899,"line_end":899,"column_start":8,"column_end":23},"name":"visit_attribute","qualname":"::gen::visit::visit_attribute","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Attribute) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":581617,"byte_end":581666,"line_start":898,"line_end":898,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2312},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":582022,"byte_end":582039,"line_start":907,"line_end":907,"column_start":8,"column_end":25},"name":"visit_bare_fn_arg","qualname":"::gen::visit::visit_bare_fn_arg","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast BareFnArg) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":581965,"byte_end":582014,"line_start":906,"line_end":906,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2315},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":582345,"byte_end":582367,"line_start":915,"line_end":915,"column_start":8,"column_end":30},"name":"visit_bare_fn_arg_name","qualname":"::gen::visit::visit_bare_fn_arg_name","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast BareFnArgName) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":582288,"byte_end":582337,"line_start":914,"line_end":914,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2318},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":582757,"byte_end":582769,"line_start":929,"line_end":929,"column_start":8,"column_end":20},"name":"visit_bin_op","qualname":"::gen::visit::visit_bin_op","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast BinOp) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":582700,"byte_end":582749,"line_start":928,"line_end":928,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2321},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":585916,"byte_end":585929,"line_start":1018,"line_end":1018,"column_start":8,"column_end":21},"name":"visit_binding","qualname":"::gen::visit::visit_binding","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Binding) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":585859,"byte_end":585908,"line_start":1017,"line_end":1017,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2324},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":586153,"byte_end":586164,"line_start":1024,"line_end":1024,"column_start":8,"column_end":19},"name":"visit_block","qualname":"::gen::visit::visit_block","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":586121,"byte_end":586145,"line_start":1023,"line_end":1023,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2327},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":586407,"byte_end":586428,"line_start":1031,"line_end":1031,"column_start":8,"column_end":29},"name":"visit_bound_lifetimes","qualname":"::gen::visit::visit_bound_lifetimes","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast BoundLifetimes) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":586350,"byte_end":586399,"line_start":1030,"line_end":1030,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2330},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":586847,"byte_end":586864,"line_start":1044,"line_end":1044,"column_start":8,"column_end":25},"name":"visit_const_param","qualname":"::gen::visit::visit_const_param","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ConstParam) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":586790,"byte_end":586839,"line_start":1043,"line_end":1043,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2333},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":587407,"byte_end":587423,"line_start":1060,"line_end":1060,"column_start":8,"column_end":24},"name":"visit_constraint","qualname":"::gen::visit::visit_constraint","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Constraint) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":587350,"byte_end":587399,"line_start":1059,"line_end":1059,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":587747,"byte_end":587757,"line_start":1069,"line_end":1069,"column_start":8,"column_end":18},"name":"visit_data","qualname":"::gen::visit::visit_data","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Data) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":587713,"byte_end":587739,"line_start":1068,"line_end":1068,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":2339},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":588189,"byte_end":588204,"line_start":1083,"line_end":1083,"column_start":8,"column_end":23},"name":"visit_data_enum","qualname":"::gen::visit::visit_data_enum","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast DataEnum) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":588155,"byte_end":588181,"line_start":1082,"line_end":1082,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":2342},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":588531,"byte_end":588548,"line_start":1092,"line_end":1092,"column_start":8,"column_end":25},"name":"visit_data_struct","qualname":"::gen::visit::visit_data_struct","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast DataStruct) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":588497,"byte_end":588523,"line_start":1091,"line_end":1091,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":2345},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":588841,"byte_end":588857,"line_start":1100,"line_end":1100,"column_start":8,"column_end":24},"name":"visit_data_union","qualname":"::gen::visit::visit_data_union","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast DataUnion) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":588807,"byte_end":588833,"line_start":1099,"line_end":1099,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":2348},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":589062,"byte_end":589080,"line_start":1105,"line_end":1105,"column_start":8,"column_end":26},"name":"visit_derive_input","qualname":"::gen::visit::visit_derive_input","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast DeriveInput) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":589028,"byte_end":589054,"line_start":1104,"line_end":1104,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":2351},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":589438,"byte_end":589448,"line_start":1115,"line_end":1115,"column_start":8,"column_end":18},"name":"visit_expr","qualname":"::gen::visit::visit_expr","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Expr) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":589381,"byte_end":589430,"line_start":1114,"line_end":1114,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2354},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":593901,"byte_end":593917,"line_start":1240,"line_end":1240,"column_start":8,"column_end":24},"name":"visit_expr_array","qualname":"::gen::visit::visit_expr_array","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprArray) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":593869,"byte_end":593893,"line_start":1239,"line_end":1239,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2357},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":594258,"byte_end":594275,"line_start":1251,"line_end":1251,"column_start":8,"column_end":25},"name":"visit_expr_assign","qualname":"::gen::visit::visit_expr_assign","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprAssign) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":594226,"byte_end":594250,"line_start":1250,"line_end":1250,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2360},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":594574,"byte_end":594594,"line_start":1260,"line_end":1260,"column_start":8,"column_end":28},"name":"visit_expr_assign_op","qualname":"::gen::visit::visit_expr_assign_op","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprAssignOp) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":594542,"byte_end":594566,"line_start":1259,"line_end":1259,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2363},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":594892,"byte_end":594908,"line_start":1272,"line_end":1272,"column_start":8,"column_end":24},"name":"visit_expr_async","qualname":"::gen::visit::visit_expr_async","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprAsync) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":594860,"byte_end":594884,"line_start":1271,"line_end":1271,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2366},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":595285,"byte_end":595302,"line_start":1283,"line_end":1283,"column_start":8,"column_end":25},"name":"visit_expr_binary","qualname":"::gen::visit::visit_expr_binary","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprBinary) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":595228,"byte_end":595277,"line_start":1282,"line_end":1282,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2369},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":595587,"byte_end":595603,"line_start":1292,"line_end":1292,"column_start":8,"column_end":24},"name":"visit_expr_block","qualname":"::gen::visit::visit_expr_block","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprBlock) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":595555,"byte_end":595579,"line_start":1291,"line_end":1291,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2372},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":595893,"byte_end":595907,"line_start":1302,"line_end":1302,"column_start":8,"column_end":22},"name":"visit_expr_box","qualname":"::gen::visit::visit_expr_box","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprBox) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":595861,"byte_end":595885,"line_start":1301,"line_end":1301,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2375},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":596166,"byte_end":596182,"line_start":1310,"line_end":1310,"column_start":8,"column_end":24},"name":"visit_expr_break","qualname":"::gen::visit::visit_expr_break","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprBreak) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":596134,"byte_end":596158,"line_start":1309,"line_end":1309,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2378},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":596592,"byte_end":596607,"line_start":1323,"line_end":1323,"column_start":8,"column_end":23},"name":"visit_expr_call","qualname":"::gen::visit::visit_expr_call","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprCall) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":596535,"byte_end":596584,"line_start":1322,"line_end":1322,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2381},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":597005,"byte_end":597020,"line_start":1335,"line_end":1335,"column_start":8,"column_end":23},"name":"visit_expr_cast","qualname":"::gen::visit::visit_expr_cast","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprCast) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":596948,"byte_end":596997,"line_start":1334,"line_end":1334,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2384},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":597313,"byte_end":597331,"line_start":1344,"line_end":1344,"column_start":8,"column_end":26},"name":"visit_expr_closure","qualname":"::gen::visit::visit_expr_closure","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprClosure) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":597281,"byte_end":597305,"line_start":1343,"line_end":1343,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2387},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":598073,"byte_end":598092,"line_start":1367,"line_end":1367,"column_start":8,"column_end":27},"name":"visit_expr_continue","qualname":"::gen::visit::visit_expr_continue","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprContinue) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":598041,"byte_end":598065,"line_start":1366,"line_end":1366,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2390},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":598441,"byte_end":598457,"line_start":1380,"line_end":1380,"column_start":8,"column_end":24},"name":"visit_expr_field","qualname":"::gen::visit::visit_expr_field","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprField) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":598384,"byte_end":598433,"line_start":1379,"line_end":1379,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2393},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":598758,"byte_end":598777,"line_start":1389,"line_end":1389,"column_start":8,"column_end":27},"name":"visit_expr_for_loop","qualname":"::gen::visit::visit_expr_for_loop","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprForLoop) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":598726,"byte_end":598750,"line_start":1388,"line_end":1388,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2396},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":599235,"byte_end":599251,"line_start":1403,"line_end":1403,"column_start":8,"column_end":24},"name":"visit_expr_group","qualname":"::gen::visit::visit_expr_group","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprGroup) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":599203,"byte_end":599227,"line_start":1402,"line_end":1402,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2399},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":599514,"byte_end":599527,"line_start":1411,"line_end":1411,"column_start":8,"column_end":21},"name":"visit_expr_if","qualname":"::gen::visit::visit_expr_if","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprIf) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":599482,"byte_end":599506,"line_start":1410,"line_end":1410,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2402},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":599963,"byte_end":599982,"line_start":1424,"line_end":1424,"column_start":8,"column_end":27},"name":"visit_expr_in_place","qualname":"::gen::visit::visit_expr_in_place","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprInPlace) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":599931,"byte_end":599955,"line_start":1423,"line_end":1423,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2405},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":600311,"byte_end":600327,"line_start":1433,"line_end":1433,"column_start":8,"column_end":24},"name":"visit_expr_index","qualname":"::gen::visit::visit_expr_index","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprIndex) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":600254,"byte_end":600303,"line_start":1432,"line_end":1432,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2408},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":600629,"byte_end":600643,"line_start":1442,"line_end":1442,"column_start":8,"column_end":22},"name":"visit_expr_let","qualname":"::gen::visit::visit_expr_let","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprLet) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":600597,"byte_end":600621,"line_start":1441,"line_end":1441,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2411},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":601086,"byte_end":601100,"line_start":1455,"line_end":1455,"column_start":8,"column_end":22},"name":"visit_expr_lit","qualname":"::gen::visit::visit_expr_lit","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprLit) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":601029,"byte_end":601078,"line_start":1454,"line_end":1454,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2414},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":601307,"byte_end":601322,"line_start":1462,"line_end":1462,"column_start":8,"column_end":23},"name":"visit_expr_loop","qualname":"::gen::visit::visit_expr_loop","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprLoop) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":601275,"byte_end":601299,"line_start":1461,"line_end":1461,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2417},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":601660,"byte_end":601676,"line_start":1473,"line_end":1473,"column_start":8,"column_end":24},"name":"visit_expr_macro","qualname":"::gen::visit::visit_expr_macro","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprMacro) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":601628,"byte_end":601652,"line_start":1472,"line_end":1472,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2420},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":601887,"byte_end":601903,"line_start":1480,"line_end":1480,"column_start":8,"column_end":24},"name":"visit_expr_match","qualname":"::gen::visit::visit_expr_match","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprMatch) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":601855,"byte_end":601879,"line_start":1479,"line_end":1479,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2423},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":602279,"byte_end":602301,"line_start":1492,"line_end":1492,"column_start":8,"column_end":30},"name":"visit_expr_method_call","qualname":"::gen::visit::visit_expr_method_call","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprMethodCall) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":602247,"byte_end":602271,"line_start":1491,"line_end":1491,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2426},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":602900,"byte_end":602916,"line_start":1512,"line_end":1512,"column_start":8,"column_end":24},"name":"visit_expr_paren","qualname":"::gen::visit::visit_expr_paren","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprParen) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":602843,"byte_end":602892,"line_start":1511,"line_end":1511,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2429},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":603204,"byte_end":603219,"line_start":1520,"line_end":1520,"column_start":8,"column_end":23},"name":"visit_expr_path","qualname":"::gen::visit::visit_expr_path","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprPath) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":603147,"byte_end":603196,"line_start":1519,"line_end":1519,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2432},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":603506,"byte_end":603522,"line_start":1530,"line_end":1530,"column_start":8,"column_end":24},"name":"visit_expr_range","qualname":"::gen::visit::visit_expr_range","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprRange) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":603474,"byte_end":603498,"line_start":1529,"line_end":1529,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2435},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":603897,"byte_end":603917,"line_start":1543,"line_end":1543,"column_start":8,"column_end":28},"name":"visit_expr_reference","qualname":"::gen::visit::visit_expr_reference","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprReference) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":603865,"byte_end":603889,"line_start":1542,"line_end":1542,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2438},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":604285,"byte_end":604302,"line_start":1557,"line_end":1557,"column_start":8,"column_end":25},"name":"visit_expr_repeat","qualname":"::gen::visit::visit_expr_repeat","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprRepeat) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":604253,"byte_end":604277,"line_start":1556,"line_end":1556,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2441},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":604654,"byte_end":604671,"line_start":1567,"line_end":1567,"column_start":8,"column_end":25},"name":"visit_expr_return","qualname":"::gen::visit::visit_expr_return","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprReturn) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":604622,"byte_end":604646,"line_start":1566,"line_end":1566,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2444},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":604978,"byte_end":604995,"line_start":1577,"line_end":1577,"column_start":8,"column_end":25},"name":"visit_expr_struct","qualname":"::gen::visit::visit_expr_struct","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprStruct) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":604946,"byte_end":604970,"line_start":1576,"line_end":1576,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2447},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":605548,"byte_end":605562,"line_start":1595,"line_end":1595,"column_start":8,"column_end":22},"name":"visit_expr_try","qualname":"::gen::visit::visit_expr_try","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprTry) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":605516,"byte_end":605540,"line_start":1594,"line_end":1594,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2450},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":605827,"byte_end":605847,"line_start":1603,"line_end":1603,"column_start":8,"column_end":28},"name":"visit_expr_try_block","qualname":"::gen::visit::visit_expr_try_block","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprTryBlock) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":605795,"byte_end":605819,"line_start":1602,"line_end":1602,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2453},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":606123,"byte_end":606139,"line_start":1614,"line_end":1614,"column_start":8,"column_end":24},"name":"visit_expr_tuple","qualname":"::gen::visit::visit_expr_tuple","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprTuple) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":606091,"byte_end":606115,"line_start":1613,"line_end":1613,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2456},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":606478,"byte_end":606493,"line_start":1625,"line_end":1625,"column_start":8,"column_end":23},"name":"visit_expr_type","qualname":"::gen::visit::visit_expr_type","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprType) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":606446,"byte_end":606470,"line_start":1624,"line_end":1624,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2459},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":606815,"byte_end":606831,"line_start":1634,"line_end":1634,"column_start":8,"column_end":24},"name":"visit_expr_unary","qualname":"::gen::visit::visit_expr_unary","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprUnary) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":606758,"byte_end":606807,"line_start":1633,"line_end":1633,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2462},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":607077,"byte_end":607094,"line_start":1642,"line_end":1642,"column_start":8,"column_end":25},"name":"visit_expr_unsafe","qualname":"::gen::visit::visit_expr_unsafe","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprUnsafe) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":607045,"byte_end":607069,"line_start":1641,"line_end":1641,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2465},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":607385,"byte_end":607404,"line_start":1650,"line_end":1650,"column_start":8,"column_end":27},"name":"visit_expr_verbatim","qualname":"::gen::visit::visit_expr_verbatim","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprVerbatim) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":607328,"byte_end":607377,"line_start":1649,"line_end":1649,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2468},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":607544,"byte_end":607560,"line_start":1657,"line_end":1657,"column_start":8,"column_end":24},"name":"visit_expr_while","qualname":"::gen::visit::visit_expr_while","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprWhile) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":607512,"byte_end":607536,"line_start":1656,"line_end":1656,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2471},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":607936,"byte_end":607952,"line_start":1669,"line_end":1669,"column_start":8,"column_end":24},"name":"visit_expr_yield","qualname":"::gen::visit::visit_expr_yield","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ExprYield) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":607904,"byte_end":607928,"line_start":1668,"line_end":1668,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2474},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":608282,"byte_end":608293,"line_start":1679,"line_end":1679,"column_start":8,"column_end":19},"name":"visit_field","qualname":"::gen::visit::visit_field","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Field) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":608225,"byte_end":608274,"line_start":1678,"line_end":1678,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2477},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":608708,"byte_end":608723,"line_start":1693,"line_end":1693,"column_start":8,"column_end":23},"name":"visit_field_pat","qualname":"::gen::visit::visit_field_pat","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast FieldPat) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":608676,"byte_end":608700,"line_start":1692,"line_end":1692,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2480},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":609064,"byte_end":609081,"line_start":1704,"line_end":1704,"column_start":8,"column_end":25},"name":"visit_field_value","qualname":"::gen::visit::visit_field_value","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast FieldValue) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":609032,"byte_end":609056,"line_start":1703,"line_end":1703,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2483},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":609450,"byte_end":609462,"line_start":1715,"line_end":1715,"column_start":8,"column_end":20},"name":"visit_fields","qualname":"::gen::visit::visit_fields","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Fields) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":609393,"byte_end":609442,"line_start":1714,"line_end":1714,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2486},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":609856,"byte_end":609874,"line_start":1727,"line_end":1727,"column_start":8,"column_end":26},"name":"visit_fields_named","qualname":"::gen::visit::visit_fields_named","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast FieldsNamed) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":609799,"byte_end":609848,"line_start":1726,"line_end":1726,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2489},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":610172,"byte_end":610192,"line_start":1735,"line_end":1735,"column_start":8,"column_end":28},"name":"visit_fields_unnamed","qualname":"::gen::visit::visit_fields_unnamed","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast FieldsUnnamed) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":610115,"byte_end":610164,"line_start":1734,"line_end":1734,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2492},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":610480,"byte_end":610490,"line_start":1746,"line_end":1746,"column_start":8,"column_end":18},"name":"visit_file","qualname":"::gen::visit::visit_file","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast File) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":610448,"byte_end":610472,"line_start":1745,"line_end":1745,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2495},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":610748,"byte_end":610760,"line_start":1756,"line_end":1756,"column_start":8,"column_end":20},"name":"visit_fn_arg","qualname":"::gen::visit::visit_fn_arg","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast FnArg) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":610716,"byte_end":610740,"line_start":1755,"line_end":1755,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2498},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":611403,"byte_end":611416,"line_start":1776,"line_end":1776,"column_start":8,"column_end":21},"name":"visit_fn_decl","qualname":"::gen::visit::visit_fn_decl","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast FnDecl) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":611371,"byte_end":611395,"line_start":1775,"line_end":1775,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2501},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":611911,"byte_end":611929,"line_start":1790,"line_end":1790,"column_start":8,"column_end":26},"name":"visit_foreign_item","qualname":"::gen::visit::visit_foreign_item","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ForeignItem) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":611879,"byte_end":611903,"line_start":1789,"line_end":1789,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2504},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":612645,"byte_end":612666,"line_start":1810,"line_end":1810,"column_start":8,"column_end":29},"name":"visit_foreign_item_fn","qualname":"::gen::visit::visit_foreign_item_fn","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ForeignItemFn) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":612613,"byte_end":612637,"line_start":1809,"line_end":1809,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2507},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":613024,"byte_end":613048,"line_start":1823,"line_end":1823,"column_start":8,"column_end":32},"name":"visit_foreign_item_macro","qualname":"::gen::visit::visit_foreign_item_macro","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ForeignItemMacro) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":612992,"byte_end":613016,"line_start":1822,"line_end":1822,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2510},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":613369,"byte_end":613394,"line_start":1836,"line_end":1836,"column_start":8,"column_end":33},"name":"visit_foreign_item_static","qualname":"::gen::visit::visit_foreign_item_static","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ForeignItemStatic) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":613337,"byte_end":613361,"line_start":1835,"line_end":1835,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2513},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":613946,"byte_end":613969,"line_start":1854,"line_end":1854,"column_start":8,"column_end":31},"name":"visit_foreign_item_type","qualname":"::gen::visit::visit_foreign_item_type","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ForeignItemType) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":613914,"byte_end":613938,"line_start":1853,"line_end":1853,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2516},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":614340,"byte_end":614367,"line_start":1867,"line_end":1867,"column_start":8,"column_end":35},"name":"visit_foreign_item_verbatim","qualname":"::gen::visit::visit_foreign_item_verbatim","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ForeignItemVerbatim) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":614308,"byte_end":614332,"line_start":1866,"line_end":1866,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2519},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":614539,"byte_end":614561,"line_start":1874,"line_end":1874,"column_start":8,"column_end":30},"name":"visit_generic_argument","qualname":"::gen::visit::visit_generic_argument","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast GenericArgument) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":614482,"byte_end":614531,"line_start":1873,"line_end":1873,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2522},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":615264,"byte_end":615293,"line_start":1897,"line_end":1897,"column_start":8,"column_end":37},"name":"visit_generic_method_argument","qualname":"::gen::visit::visit_generic_method_argument","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast GenericMethodArgument) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":615232,"byte_end":615256,"line_start":1896,"line_end":1896,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2525},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":615695,"byte_end":615714,"line_start":1911,"line_end":1911,"column_start":8,"column_end":27},"name":"visit_generic_param","qualname":"::gen::visit::visit_generic_param","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast GenericParam) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":615638,"byte_end":615687,"line_start":1910,"line_end":1910,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2528},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":616217,"byte_end":616231,"line_start":1928,"line_end":1928,"column_start":8,"column_end":22},"name":"visit_generics","qualname":"::gen::visit::visit_generics","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Generics) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":616160,"byte_end":616209,"line_start":1927,"line_end":1927,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2531},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":616730,"byte_end":616745,"line_start":1944,"line_end":1944,"column_start":8,"column_end":23},"name":"visit_impl_item","qualname":"::gen::visit::visit_impl_item","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ImplItem) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":616698,"byte_end":616722,"line_start":1943,"line_end":1943,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2534},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":617557,"byte_end":617578,"line_start":1967,"line_end":1967,"column_start":8,"column_end":29},"name":"visit_impl_item_const","qualname":"::gen::visit::visit_impl_item_const","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ImplItemConst) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":617525,"byte_end":617549,"line_start":1966,"line_end":1966,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2537},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":618209,"byte_end":618236,"line_start":1987,"line_end":1987,"column_start":8,"column_end":35},"name":"visit_impl_item_existential","qualname":"::gen::visit::visit_impl_item_existential","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ImplItemExistential) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":618177,"byte_end":618201,"line_start":1986,"line_end":1986,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2540},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":618889,"byte_end":618910,"line_start":2008,"line_end":2008,"column_start":8,"column_end":29},"name":"visit_impl_item_macro","qualname":"::gen::visit::visit_impl_item_macro","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ImplItemMacro) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":618857,"byte_end":618881,"line_start":2007,"line_end":2007,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2543},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":619228,"byte_end":619250,"line_start":2021,"line_end":2021,"column_start":8,"column_end":30},"name":"visit_impl_item_method","qualname":"::gen::visit::visit_impl_item_method","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ImplItemMethod) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":619196,"byte_end":619220,"line_start":2020,"line_end":2020,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2546},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":619651,"byte_end":619671,"line_start":2036,"line_end":2036,"column_start":8,"column_end":28},"name":"visit_impl_item_type","qualname":"::gen::visit::visit_impl_item_type","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ImplItemType) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":619619,"byte_end":619643,"line_start":2035,"line_end":2035,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2549},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":620256,"byte_end":620280,"line_start":2055,"line_end":2055,"column_start":8,"column_end":32},"name":"visit_impl_item_verbatim","qualname":"::gen::visit::visit_impl_item_verbatim","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ImplItemVerbatim) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":620224,"byte_end":620248,"line_start":2054,"line_end":2054,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2552},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":620449,"byte_end":620460,"line_start":2062,"line_end":2062,"column_start":8,"column_end":19},"name":"visit_index","qualname":"::gen::visit::visit_index","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Index) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":620392,"byte_end":620441,"line_start":2061,"line_end":2061,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2555},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":620619,"byte_end":620629,"line_start":2067,"line_end":2067,"column_start":8,"column_end":18},"name":"visit_item","qualname":"::gen::visit::visit_item","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Item) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":620587,"byte_end":620611,"line_start":2066,"line_end":2066,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2558},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":622628,"byte_end":622644,"line_start":2126,"line_end":2126,"column_start":8,"column_end":24},"name":"visit_item_const","qualname":"::gen::visit::visit_item_const","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemConst) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":622596,"byte_end":622620,"line_start":2125,"line_end":2125,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2561},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":623170,"byte_end":623185,"line_start":2140,"line_end":2140,"column_start":8,"column_end":23},"name":"visit_item_enum","qualname":"::gen::visit::visit_item_enum","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemEnum) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":623138,"byte_end":623162,"line_start":2139,"line_end":2139,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2564},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":623699,"byte_end":623721,"line_start":2155,"line_end":2155,"column_start":8,"column_end":30},"name":"visit_item_existential","qualname":"::gen::visit::visit_item_existential","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemExistential) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":623667,"byte_end":623691,"line_start":2154,"line_end":2154,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2567},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":624410,"byte_end":624433,"line_start":2177,"line_end":2177,"column_start":8,"column_end":31},"name":"visit_item_extern_crate","qualname":"::gen::visit::visit_item_extern_crate","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemExternCrate) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":624378,"byte_end":624402,"line_start":2176,"line_end":2176,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2570},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":624988,"byte_end":625001,"line_start":2195,"line_end":2195,"column_start":8,"column_end":21},"name":"visit_item_fn","qualname":"::gen::visit::visit_item_fn","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemFn) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":624956,"byte_end":624980,"line_start":2194,"line_end":2194,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2573},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":625670,"byte_end":625692,"line_start":2217,"line_end":2217,"column_start":8,"column_end":30},"name":"visit_item_foreign_mod","qualname":"::gen::visit::visit_item_foreign_mod","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemForeignMod) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":625638,"byte_end":625662,"line_start":2216,"line_end":2216,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2576},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":626040,"byte_end":626055,"line_start":2231,"line_end":2231,"column_start":8,"column_end":23},"name":"visit_item_impl","qualname":"::gen::visit::visit_item_impl","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemImpl) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":626008,"byte_end":626032,"line_start":2230,"line_end":2230,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2579},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":626890,"byte_end":626906,"line_start":2257,"line_end":2257,"column_start":8,"column_end":24},"name":"visit_item_macro","qualname":"::gen::visit::visit_item_macro","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemMacro) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":626858,"byte_end":626882,"line_start":2256,"line_end":2256,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2582},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":627286,"byte_end":627303,"line_start":2270,"line_end":2270,"column_start":8,"column_end":25},"name":"visit_item_macro2","qualname":"::gen::visit::visit_item_macro2","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemMacro2) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":627254,"byte_end":627278,"line_start":2269,"line_end":2269,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2585},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":627750,"byte_end":627764,"line_start":2283,"line_end":2283,"column_start":8,"column_end":22},"name":"visit_item_mod","qualname":"::gen::visit::visit_item_mod","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemMod) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":627718,"byte_end":627742,"line_start":2282,"line_end":2282,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2588},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":628317,"byte_end":628334,"line_start":2301,"line_end":2301,"column_start":8,"column_end":25},"name":"visit_item_static","qualname":"::gen::visit::visit_item_static","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemStatic) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":628285,"byte_end":628309,"line_start":2300,"line_end":2300,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2591},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":628953,"byte_end":628970,"line_start":2318,"line_end":2318,"column_start":8,"column_end":25},"name":"visit_item_struct","qualname":"::gen::visit::visit_item_struct","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemStruct) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":628921,"byte_end":628945,"line_start":2317,"line_end":2317,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2594},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":629450,"byte_end":629466,"line_start":2332,"line_end":2332,"column_start":8,"column_end":24},"name":"visit_item_trait","qualname":"::gen::visit::visit_item_trait","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemTrait) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":629418,"byte_end":629442,"line_start":2331,"line_end":2331,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2597},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":630337,"byte_end":630359,"line_start":2359,"line_end":2359,"column_start":8,"column_end":30},"name":"visit_item_trait_alias","qualname":"::gen::visit::visit_item_trait_alias","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemTraitAlias) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":630305,"byte_end":630329,"line_start":2358,"line_end":2358,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2600},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":630947,"byte_end":630962,"line_start":2378,"line_end":2378,"column_start":8,"column_end":23},"name":"visit_item_type","qualname":"::gen::visit::visit_item_type","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemType) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":630915,"byte_end":630939,"line_start":2377,"line_end":2377,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2603},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":631441,"byte_end":631457,"line_start":2391,"line_end":2391,"column_start":8,"column_end":24},"name":"visit_item_union","qualname":"::gen::visit::visit_item_union","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemUnion) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":631409,"byte_end":631433,"line_start":2390,"line_end":2390,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2606},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":631849,"byte_end":631863,"line_start":2402,"line_end":2402,"column_start":8,"column_end":22},"name":"visit_item_use","qualname":"::gen::visit::visit_item_use","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemUse) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":631817,"byte_end":631841,"line_start":2401,"line_end":2401,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2609},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":632311,"byte_end":632330,"line_start":2415,"line_end":2415,"column_start":8,"column_end":27},"name":"visit_item_verbatim","qualname":"::gen::visit::visit_item_verbatim","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ItemVerbatim) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":632279,"byte_end":632303,"line_start":2414,"line_end":2414,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2612},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":632470,"byte_end":632481,"line_start":2422,"line_end":2422,"column_start":8,"column_end":19},"name":"visit_label","qualname":"::gen::visit::visit_label","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Label) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":632438,"byte_end":632462,"line_start":2421,"line_end":2421,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2615},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":632650,"byte_end":632664,"line_start":2426,"line_end":2426,"column_start":8,"column_end":22},"name":"visit_lifetime","qualname":"::gen::visit::visit_lifetime","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Lifetime) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2618},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":632873,"byte_end":632891,"line_start":2431,"line_end":2431,"column_start":8,"column_end":26},"name":"visit_lifetime_def","qualname":"::gen::visit::visit_lifetime_def","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast LifetimeDef) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":632816,"byte_end":632865,"line_start":2430,"line_end":2430,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2621},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":633347,"byte_end":633356,"line_start":2445,"line_end":2445,"column_start":8,"column_end":17},"name":"visit_lit","qualname":"::gen::visit::visit_lit","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Lit) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":633290,"byte_end":633339,"line_start":2444,"line_end":2444,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2624},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":634301,"byte_end":634315,"line_start":2474,"line_end":2474,"column_start":8,"column_end":22},"name":"visit_lit_bool","qualname":"::gen::visit::visit_lit_bool","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast LitBool) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":634244,"byte_end":634293,"line_start":2473,"line_end":2473,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2627},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":634501,"byte_end":634515,"line_start":2479,"line_end":2479,"column_start":8,"column_end":22},"name":"visit_lit_byte","qualname":"::gen::visit::visit_lit_byte","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast LitByte) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":634444,"byte_end":634493,"line_start":2478,"line_end":2478,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2630},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":634644,"byte_end":634662,"line_start":2481,"line_end":2481,"column_start":8,"column_end":26},"name":"visit_lit_byte_str","qualname":"::gen::visit::visit_lit_byte_str","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast LitByteStr) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":634587,"byte_end":634636,"line_start":2480,"line_end":2480,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2633},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":634794,"byte_end":634808,"line_start":2483,"line_end":2483,"column_start":8,"column_end":22},"name":"visit_lit_char","qualname":"::gen::visit::visit_lit_char","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast LitChar) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":634737,"byte_end":634786,"line_start":2482,"line_end":2482,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2636},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":634937,"byte_end":634952,"line_start":2485,"line_end":2485,"column_start":8,"column_end":23},"name":"visit_lit_float","qualname":"::gen::visit::visit_lit_float","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast LitFloat) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":634880,"byte_end":634929,"line_start":2484,"line_end":2484,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2639},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":635082,"byte_end":635095,"line_start":2487,"line_end":2487,"column_start":8,"column_end":21},"name":"visit_lit_int","qualname":"::gen::visit::visit_lit_int","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast LitInt) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":635025,"byte_end":635074,"line_start":2486,"line_end":2486,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2642},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":635223,"byte_end":635236,"line_start":2489,"line_end":2489,"column_start":8,"column_end":21},"name":"visit_lit_str","qualname":"::gen::visit::visit_lit_str","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast LitStr) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":635166,"byte_end":635215,"line_start":2488,"line_end":2488,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2645},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":635364,"byte_end":635382,"line_start":2491,"line_end":2491,"column_start":8,"column_end":26},"name":"visit_lit_verbatim","qualname":"::gen::visit::visit_lit_verbatim","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast LitVerbatim) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":635307,"byte_end":635356,"line_start":2490,"line_end":2490,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2648},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":635512,"byte_end":635523,"line_start":2495,"line_end":2495,"column_start":8,"column_end":19},"name":"visit_local","qualname":"::gen::visit::visit_local","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Local) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":635480,"byte_end":635504,"line_start":2494,"line_end":2494,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2651},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":636188,"byte_end":636199,"line_start":2515,"line_end":2515,"column_start":8,"column_end":19},"name":"visit_macro","qualname":"::gen::visit::visit_macro","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Macro) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":636131,"byte_end":636180,"line_start":2514,"line_end":2514,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2654},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":636483,"byte_end":636504,"line_start":2522,"line_end":2522,"column_start":8,"column_end":29},"name":"visit_macro_delimiter","qualname":"::gen::visit::visit_macro_delimiter","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast MacroDelimiter) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":636426,"byte_end":636475,"line_start":2521,"line_end":2521,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2657},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":637024,"byte_end":637036,"line_start":2539,"line_end":2539,"column_start":8,"column_end":20},"name":"visit_member","qualname":"::gen::visit::visit_member","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Member) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":636967,"byte_end":637016,"line_start":2538,"line_end":2538,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2660},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":637387,"byte_end":637397,"line_start":2550,"line_end":2550,"column_start":8,"column_end":18},"name":"visit_meta","qualname":"::gen::visit::visit_meta","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Meta) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":637330,"byte_end":637379,"line_start":2549,"line_end":2549,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2663},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":637853,"byte_end":637868,"line_start":2564,"line_end":2564,"column_start":8,"column_end":23},"name":"visit_meta_list","qualname":"::gen::visit::visit_meta_list","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast MetaList) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":637796,"byte_end":637845,"line_start":2563,"line_end":2563,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":638207,"byte_end":638228,"line_start":2573,"line_end":2573,"column_start":8,"column_end":29},"name":"visit_meta_name_value","qualname":"::gen::visit::visit_meta_name_value","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast MetaNameValue) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":638150,"byte_end":638199,"line_start":2572,"line_end":2572,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2669},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":638469,"byte_end":638485,"line_start":2582,"line_end":2582,"column_start":8,"column_end":24},"name":"visit_method_sig","qualname":"::gen::visit::visit_method_sig","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast MethodSig) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":638437,"byte_end":638461,"line_start":2581,"line_end":2581,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2672},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":639009,"byte_end":639031,"line_start":2599,"line_end":2599,"column_start":8,"column_end":30},"name":"visit_method_turbofish","qualname":"::gen::visit::visit_method_turbofish","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast MethodTurbofish) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":638977,"byte_end":639001,"line_start":2598,"line_end":2598,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2675},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":639461,"byte_end":639478,"line_start":2612,"line_end":2612,"column_start":8,"column_end":25},"name":"visit_nested_meta","qualname":"::gen::visit::visit_nested_meta","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast NestedMeta) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":639404,"byte_end":639453,"line_start":2611,"line_end":2611,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":639837,"byte_end":639874,"line_start":2623,"line_end":2623,"column_start":8,"column_end":45},"name":"visit_parenthesized_generic_arguments","qualname":"::gen::visit::visit_parenthesized_generic_arguments","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ParenthesizedGenericArguments) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":639780,"byte_end":639829,"line_start":2622,"line_end":2622,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2681},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":640220,"byte_end":640229,"line_start":2635,"line_end":2635,"column_start":8,"column_end":17},"name":"visit_pat","qualname":"::gen::visit::visit_pat","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Pat) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":640188,"byte_end":640212,"line_start":2634,"line_end":2634,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2684},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":641657,"byte_end":641670,"line_start":2679,"line_end":2679,"column_start":8,"column_end":21},"name":"visit_pat_box","qualname":"::gen::visit::visit_pat_box","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PatBox) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":641625,"byte_end":641649,"line_start":2678,"line_end":2678,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2687},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":641857,"byte_end":641872,"line_start":2684,"line_end":2684,"column_start":8,"column_end":23},"name":"visit_pat_ident","qualname":"::gen::visit::visit_pat_ident","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PatIdent) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":641825,"byte_end":641849,"line_start":2683,"line_end":2683,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2690},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":642324,"byte_end":642337,"line_start":2698,"line_end":2698,"column_start":8,"column_end":21},"name":"visit_pat_lit","qualname":"::gen::visit::visit_pat_lit","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PatLit) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":642292,"byte_end":642316,"line_start":2697,"line_end":2697,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2693},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":642477,"byte_end":642492,"line_start":2702,"line_end":2702,"column_start":8,"column_end":23},"name":"visit_pat_macro","qualname":"::gen::visit::visit_pat_macro","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PatMacro) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":642445,"byte_end":642469,"line_start":2701,"line_end":2701,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2696},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":642633,"byte_end":642647,"line_start":2706,"line_end":2706,"column_start":8,"column_end":22},"name":"visit_pat_path","qualname":"::gen::visit::visit_pat_path","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PatPath) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":642601,"byte_end":642625,"line_start":2705,"line_end":2705,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2699},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":642864,"byte_end":642879,"line_start":2713,"line_end":2713,"column_start":8,"column_end":23},"name":"visit_pat_range","qualname":"::gen::visit::visit_pat_range","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PatRange) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":642832,"byte_end":642856,"line_start":2712,"line_end":2712,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2702},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":643098,"byte_end":643111,"line_start":2719,"line_end":2719,"column_start":8,"column_end":21},"name":"visit_pat_ref","qualname":"::gen::visit::visit_pat_ref","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PatRef) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":643066,"byte_end":643090,"line_start":2718,"line_end":2718,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2705},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":643390,"byte_end":643405,"line_start":2727,"line_end":2727,"column_start":8,"column_end":23},"name":"visit_pat_slice","qualname":"::gen::visit::visit_pat_slice","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PatSlice) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":643358,"byte_end":643382,"line_start":2726,"line_end":2726,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2708},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":644049,"byte_end":644065,"line_start":2748,"line_end":2748,"column_start":8,"column_end":24},"name":"visit_pat_struct","qualname":"::gen::visit::visit_pat_struct","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PatStruct) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":644017,"byte_end":644041,"line_start":2747,"line_end":2747,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2711},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":644468,"byte_end":644483,"line_start":2760,"line_end":2760,"column_start":8,"column_end":23},"name":"visit_pat_tuple","qualname":"::gen::visit::visit_pat_tuple","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PatTuple) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":644436,"byte_end":644460,"line_start":2759,"line_end":2759,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2714},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":645046,"byte_end":645068,"line_start":2778,"line_end":2778,"column_start":8,"column_end":30},"name":"visit_pat_tuple_struct","qualname":"::gen::visit::visit_pat_tuple_struct","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PatTupleStruct) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":645014,"byte_end":645038,"line_start":2777,"line_end":2777,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2717},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":645265,"byte_end":645283,"line_start":2786,"line_end":2786,"column_start":8,"column_end":26},"name":"visit_pat_verbatim","qualname":"::gen::visit::visit_pat_verbatim","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PatVerbatim) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":645233,"byte_end":645257,"line_start":2785,"line_end":2785,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2720},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":645411,"byte_end":645425,"line_start":2790,"line_end":2790,"column_start":8,"column_end":22},"name":"visit_pat_wild","qualname":"::gen::visit::visit_pat_wild","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PatWild) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":645379,"byte_end":645403,"line_start":2789,"line_end":2789,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2723},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":645612,"byte_end":645622,"line_start":2794,"line_end":2794,"column_start":8,"column_end":18},"name":"visit_path","qualname":"::gen::visit::visit_path","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Path) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":645555,"byte_end":645604,"line_start":2793,"line_end":2793,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2726},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":645967,"byte_end":645987,"line_start":2804,"line_end":2804,"column_start":8,"column_end":28},"name":"visit_path_arguments","qualname":"::gen::visit::visit_path_arguments","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PathArguments) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":645910,"byte_end":645959,"line_start":2803,"line_end":2803,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2729},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":646473,"byte_end":646491,"line_start":2819,"line_end":2819,"column_start":8,"column_end":26},"name":"visit_path_segment","qualname":"::gen::visit::visit_path_segment","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PathSegment) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":646416,"byte_end":646465,"line_start":2818,"line_end":2818,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2732},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":646712,"byte_end":646730,"line_start":2824,"line_end":2824,"column_start":8,"column_end":26},"name":"visit_predicate_eq","qualname":"::gen::visit::visit_predicate_eq","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PredicateEq) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":646655,"byte_end":646704,"line_start":2823,"line_end":2823,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2735},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":646987,"byte_end":647011,"line_start":2830,"line_end":2830,"column_start":8,"column_end":32},"name":"visit_predicate_lifetime","qualname":"::gen::visit::visit_predicate_lifetime","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PredicateLifetime) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":646930,"byte_end":646979,"line_start":2829,"line_end":2829,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2738},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":647374,"byte_end":647394,"line_start":2842,"line_end":2842,"column_start":8,"column_end":28},"name":"visit_predicate_type","qualname":"::gen::visit::visit_predicate_type","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast PredicateType) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":647317,"byte_end":647366,"line_start":2841,"line_end":2841,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2741},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":647850,"byte_end":647861,"line_start":2857,"line_end":2857,"column_start":8,"column_end":19},"name":"visit_qself","qualname":"::gen::visit::visit_qself","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast QSelf) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":647793,"byte_end":647842,"line_start":2856,"line_end":2856,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":648209,"byte_end":648227,"line_start":2867,"line_end":2867,"column_start":8,"column_end":26},"name":"visit_range_limits","qualname":"::gen::visit::visit_range_limits","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast RangeLimits) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":648177,"byte_end":648201,"line_start":2866,"line_end":2866,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2747},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":648615,"byte_end":648632,"line_start":2878,"line_end":2878,"column_start":8,"column_end":25},"name":"visit_return_type","qualname":"::gen::visit::visit_return_type","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast ReturnType) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":648558,"byte_end":648607,"line_start":2877,"line_end":2877,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2750},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":648972,"byte_end":648982,"line_start":2888,"line_end":2888,"column_start":8,"column_end":18},"name":"visit_stmt","qualname":"::gen::visit::visit_stmt","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Stmt) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":648940,"byte_end":648964,"line_start":2887,"line_end":2887,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2753},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":649585,"byte_end":649602,"line_start":2906,"line_end":2906,"column_start":8,"column_end":25},"name":"visit_trait_bound","qualname":"::gen::visit::visit_trait_bound","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TraitBound) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":649528,"byte_end":649577,"line_start":2905,"line_end":2905,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2756},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":650008,"byte_end":650034,"line_start":2917,"line_end":2917,"column_start":8,"column_end":34},"name":"visit_trait_bound_modifier","qualname":"::gen::visit::visit_trait_bound_modifier","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TraitBoundModifier) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":649951,"byte_end":650000,"line_start":2916,"line_end":2916,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2759},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":650343,"byte_end":650359,"line_start":2929,"line_end":2929,"column_start":8,"column_end":24},"name":"visit_trait_item","qualname":"::gen::visit::visit_trait_item","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TraitItem) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":650311,"byte_end":650335,"line_start":2928,"line_end":2928,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2762},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":651059,"byte_end":651081,"line_start":2949,"line_end":2949,"column_start":8,"column_end":30},"name":"visit_trait_item_const","qualname":"::gen::visit::visit_trait_item_const","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TraitItemConst) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":651027,"byte_end":651051,"line_start":2948,"line_end":2948,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2765},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":651629,"byte_end":651651,"line_start":2967,"line_end":2967,"column_start":8,"column_end":30},"name":"visit_trait_item_macro","qualname":"::gen::visit::visit_trait_item_macro","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TraitItemMacro) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":651597,"byte_end":651621,"line_start":2966,"line_end":2966,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2768},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":651970,"byte_end":651993,"line_start":2980,"line_end":2980,"column_start":8,"column_end":31},"name":"visit_trait_item_method","qualname":"::gen::visit::visit_trait_item_method","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TraitItemMethod) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":651938,"byte_end":651962,"line_start":2979,"line_end":2979,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2771},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":652397,"byte_end":652418,"line_start":2996,"line_end":2996,"column_start":8,"column_end":29},"name":"visit_trait_item_type","qualname":"::gen::visit::visit_trait_item_type","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TraitItemType) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":652365,"byte_end":652389,"line_start":2995,"line_end":2995,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2774},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":653140,"byte_end":653165,"line_start":3020,"line_end":3020,"column_start":8,"column_end":33},"name":"visit_trait_item_verbatim","qualname":"::gen::visit::visit_trait_item_verbatim","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TraitItemVerbatim) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":653108,"byte_end":653132,"line_start":3019,"line_end":3019,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2777},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":653335,"byte_end":653345,"line_start":3027,"line_end":3027,"column_start":8,"column_end":18},"name":"visit_type","qualname":"::gen::visit::visit_type","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Type) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":653278,"byte_end":653327,"line_start":3026,"line_end":3026,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2780},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":655057,"byte_end":655073,"line_start":3077,"line_end":3077,"column_start":8,"column_end":24},"name":"visit_type_array","qualname":"::gen::visit::visit_type_array","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TypeArray) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":655000,"byte_end":655049,"line_start":3076,"line_end":3076,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2783},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":655379,"byte_end":655397,"line_start":3084,"line_end":3084,"column_start":8,"column_end":26},"name":"visit_type_bare_fn","qualname":"::gen::visit::visit_type_bare_fn","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TypeBareFn) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":655322,"byte_end":655371,"line_start":3083,"line_end":3083,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2786},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":656136,"byte_end":656152,"line_start":3106,"line_end":3106,"column_start":8,"column_end":24},"name":"visit_type_group","qualname":"::gen::visit::visit_type_group","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TypeGroup) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":656079,"byte_end":656128,"line_start":3105,"line_end":3105,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2789},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":656371,"byte_end":656392,"line_start":3111,"line_end":3111,"column_start":8,"column_end":29},"name":"visit_type_impl_trait","qualname":"::gen::visit::visit_type_impl_trait","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TypeImplTrait) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":656314,"byte_end":656363,"line_start":3110,"line_end":3110,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2792},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":656714,"byte_end":656730,"line_start":3122,"line_end":3122,"column_start":8,"column_end":24},"name":"visit_type_infer","qualname":"::gen::visit::visit_type_infer","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TypeInfer) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":656657,"byte_end":656706,"line_start":3121,"line_end":3121,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2795},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":656919,"byte_end":656935,"line_start":3126,"line_end":3126,"column_start":8,"column_end":24},"name":"visit_type_macro","qualname":"::gen::visit::visit_type_macro","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TypeMacro) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":656862,"byte_end":656911,"line_start":3125,"line_end":3125,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2798},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":657102,"byte_end":657118,"line_start":3130,"line_end":3130,"column_start":8,"column_end":24},"name":"visit_type_never","qualname":"::gen::visit::visit_type_never","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TypeNever) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":657045,"byte_end":657094,"line_start":3129,"line_end":3129,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2801},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":657301,"byte_end":657317,"line_start":3134,"line_end":3134,"column_start":8,"column_end":24},"name":"visit_type_param","qualname":"::gen::visit::visit_type_param","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TypeParam) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":657244,"byte_end":657293,"line_start":3133,"line_end":3133,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2804},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":657941,"byte_end":657963,"line_start":3154,"line_end":3154,"column_start":8,"column_end":30},"name":"visit_type_param_bound","qualname":"::gen::visit::visit_type_param_bound","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TypeParamBound) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":657884,"byte_end":657933,"line_start":3153,"line_end":3153,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2807},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":658359,"byte_end":658375,"line_start":3168,"line_end":3168,"column_start":8,"column_end":24},"name":"visit_type_paren","qualname":"::gen::visit::visit_type_paren","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TypeParen) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":658302,"byte_end":658351,"line_start":3167,"line_end":3167,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2810},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":658594,"byte_end":658609,"line_start":3173,"line_end":3173,"column_start":8,"column_end":23},"name":"visit_type_path","qualname":"::gen::visit::visit_type_path","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TypePath) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":658537,"byte_end":658586,"line_start":3172,"line_end":3172,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2813},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":658852,"byte_end":658866,"line_start":3180,"line_end":3180,"column_start":8,"column_end":22},"name":"visit_type_ptr","qualname":"::gen::visit::visit_type_ptr","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TypePtr) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":658795,"byte_end":658844,"line_start":3179,"line_end":3179,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":659266,"byte_end":659286,"line_start":3191,"line_end":3191,"column_start":8,"column_end":28},"name":"visit_type_reference","qualname":"::gen::visit::visit_type_reference","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TypeReference) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":659209,"byte_end":659258,"line_start":3190,"line_end":3190,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2819},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":659693,"byte_end":659709,"line_start":3205,"line_end":3205,"column_start":8,"column_end":24},"name":"visit_type_slice","qualname":"::gen::visit::visit_type_slice","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TypeSlice) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":659636,"byte_end":659685,"line_start":3204,"line_end":3204,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":659930,"byte_end":659953,"line_start":3210,"line_end":3210,"column_start":8,"column_end":31},"name":"visit_type_trait_object","qualname":"::gen::visit::visit_type_trait_object","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TypeTraitObject) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":659873,"byte_end":659922,"line_start":3209,"line_end":3209,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2825},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":660317,"byte_end":660333,"line_start":3223,"line_end":3223,"column_start":8,"column_end":24},"name":"visit_type_tuple","qualname":"::gen::visit::visit_type_tuple","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TypeTuple) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":660260,"byte_end":660309,"line_start":3222,"line_end":3222,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2828},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":660628,"byte_end":660647,"line_start":3231,"line_end":3231,"column_start":8,"column_end":27},"name":"visit_type_verbatim","qualname":"::gen::visit::visit_type_verbatim","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast TypeVerbatim) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":660571,"byte_end":660620,"line_start":3230,"line_end":3230,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2831},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":660812,"byte_end":660823,"line_start":3238,"line_end":3238,"column_start":8,"column_end":19},"name":"visit_un_op","qualname":"::gen::visit::visit_un_op","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast UnOp) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":660755,"byte_end":660804,"line_start":3237,"line_end":3237,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2834},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":661264,"byte_end":661278,"line_start":3252,"line_end":3252,"column_start":8,"column_end":22},"name":"visit_use_glob","qualname":"::gen::visit::visit_use_glob","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast UseGlob) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":661232,"byte_end":661256,"line_start":3251,"line_end":3251,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2837},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":661434,"byte_end":661449,"line_start":3256,"line_end":3256,"column_start":8,"column_end":23},"name":"visit_use_group","qualname":"::gen::visit::visit_use_group","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast UseGroup) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":661402,"byte_end":661426,"line_start":3255,"line_end":3255,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2840},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":661722,"byte_end":661736,"line_start":3264,"line_end":3264,"column_start":8,"column_end":22},"name":"visit_use_name","qualname":"::gen::visit::visit_use_name","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast UseName) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":661690,"byte_end":661714,"line_start":3263,"line_end":3263,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2843},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":661878,"byte_end":661892,"line_start":3268,"line_end":3268,"column_start":8,"column_end":22},"name":"visit_use_path","qualname":"::gen::visit::visit_use_path","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast UsePath) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":661846,"byte_end":661870,"line_start":3267,"line_end":3267,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2846},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":662127,"byte_end":662143,"line_start":3274,"line_end":3274,"column_start":8,"column_end":24},"name":"visit_use_rename","qualname":"::gen::visit::visit_use_rename","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast UseRename) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":662095,"byte_end":662119,"line_start":3273,"line_end":3273,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":662373,"byte_end":662387,"line_start":3280,"line_end":3280,"column_start":8,"column_end":22},"name":"visit_use_tree","qualname":"::gen::visit::visit_use_tree","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast UseTree) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":662341,"byte_end":662365,"line_start":3279,"line_end":3279,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2852},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":663055,"byte_end":663068,"line_start":3300,"line_end":3300,"column_start":8,"column_end":21},"name":"visit_variant","qualname":"::gen::visit::visit_variant","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Variant) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":662998,"byte_end":663047,"line_start":3299,"line_end":3299,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2855},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":663480,"byte_end":663495,"line_start":3312,"line_end":3312,"column_start":8,"column_end":23},"name":"visit_vis_crate","qualname":"::gen::visit::visit_vis_crate","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast VisCrate) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":663423,"byte_end":663472,"line_start":3311,"line_end":3311,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2858},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":663677,"byte_end":663693,"line_start":3316,"line_end":3316,"column_start":8,"column_end":24},"name":"visit_vis_public","qualname":"::gen::visit::visit_vis_public","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast VisPublic) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":663620,"byte_end":663669,"line_start":3315,"line_end":3315,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2861},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":663874,"byte_end":663894,"line_start":3320,"line_end":3320,"column_start":8,"column_end":28},"name":"visit_vis_restricted","qualname":"::gen::visit::visit_vis_restricted","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast VisRestricted) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":663817,"byte_end":663866,"line_start":3319,"line_end":3319,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2864},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":664266,"byte_end":664282,"line_start":3332,"line_end":3332,"column_start":8,"column_end":24},"name":"visit_visibility","qualname":"::gen::visit::visit_visibility","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Visibility) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":664209,"byte_end":664258,"line_start":3331,"line_end":3331,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2867},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":664806,"byte_end":664824,"line_start":3347,"line_end":3347,"column_start":8,"column_end":26},"name":"visit_where_clause","qualname":"::gen::visit::visit_where_clause","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast WhereClause) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":664749,"byte_end":664798,"line_start":3346,"line_end":3346,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2870},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":665137,"byte_end":665158,"line_start":3355,"line_end":3355,"column_start":8,"column_end":29},"name":"visit_where_predicate","qualname":"::gen::visit::visit_where_predicate","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast WherePredicate) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (feature = \"derive\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":665080,"byte_end":665129,"line_start":3354,"line_end":3354,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2873},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":665627,"byte_end":665637,"line_start":3371,"line_end":3371,"column_start":8,"column_end":18},"name":"visit_span","qualname":"::gen::visit::visit_span","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Span) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\visit.rs","byte_start":665713,"byte_end":665724,"line_start":3372,"line_end":3372,"column_start":8,"column_end":19},"name":"visit_ident","qualname":"::gen::visit::visit_ident","value":"fn <'ast, V> (_visitor: &mut V, _i: &'ast Ident) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2911},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"export","qualname":"::export","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","parent":null,"children":[{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2918},{"krate":0,"index":2922},{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2929},{"krate":0,"index":2932},{"krate":0,"index":2933},{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2943}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2941},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670653,"byte_end":670657,"line_start":28,"line_end":28,"column_start":10,"column_end":14},"name":"bool","qualname":"::export::bool","value":"help::Bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670613,"byte_end":670643,"line_start":27,"line_end":27,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":2942},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670712,"byte_end":670715,"line_start":30,"line_end":30,"column_start":10,"column_end":13},"name":"str","qualname":"::export::str","value":"help::Str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":670672,"byte_end":670702,"line_start":29,"line_end":29,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":2965},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\sealed.rs","byte_start":687221,"byte_end":687227,"line_start":3,"line_end":3,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::lookahead::Sealed","value":"Sealed: Copy","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2978},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":689222,"byte_end":689232,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"Lookahead1","qualname":"::lookahead::Lookahead1","value":"Lookahead1 {  }","parent":null,"children":[{"krate":0,"index":2980},{"krate":0,"index":2981},{"krate":0,"index":2982}],"decl_id":null,"docs":" Support for checking the next token in a stream to decide how to parse.\n\n An important advantage over [`ParseStream::peek`] is that here we\n automatically construct an appropriate error message based on the token\n alternatives that get peeked. If you are producing your own error message,\n go ahead and use `ParseStream::peek` instead.\n\n Use [`ParseStream::lookahead1`] to construct this object.\n\n [`ParseStream::peek`]: crate::parse::ParseBuffer::peek\n [`ParseStream::lookahead1`]: crate::parse::ParseBuffer::lookahead1\n\n # Example\n\n ```edition2018\n use syn::{ConstParam, Ident, Lifetime, LifetimeDef, Result, Token, TypeParam};\n use syn::parse::{Parse, ParseStream};\n\n // A generic parameter, a single one of the comma-separated elements inside\n // angle brackets in:\n //\n //     fn f<T: Clone, 'a, 'b: 'a, const N: usize>() { ... }\n //\n // On invalid input, lookahead gives us a reasonable error message.\n //\n //     error: expected one of: identifier, lifetime, `const`\n //       |\n //     5 |     fn f<!Sized>() {}\n //       |          ^\n enum GenericParam {\n     Type(TypeParam),\n     Lifetime(LifetimeDef),\n     Const(ConstParam),\n }\n\n impl Parse for GenericParam {\n     fn parse(input: ParseStream) -> Result<Self> {\n         let lookahead = input.lookahead1();\n         if lookahead.peek(Ident) {\n             input.parse().map(GenericParam::Type)\n         } else if lookahead.peek(Lifetime) {\n             input.parse().map(GenericParam::Lifetime)\n         } else if lookahead.peek(Token![const]) {\n             input.parse().map(GenericParam::Const)\n         } else {\n             Err(lookahead.error())\n         }\n     }\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2987},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":690308,"byte_end":690312,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"peek","qualname":"<Lookahead1>::peek","value":"fn <T> (&self, token: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Looks at the next token in the parse stream to determine whether it\n matches the requested type of token.\n\n # Syntax\n\n Note that this method does not use turbofish syntax. Pass the peek type\n inside of parentheses.\n\n - `input.peek(Token![struct])`\n - `input.peek(Token![==])`\n - `input.peek(Ident)`&emsp;*(does not accept keywords)*\n - `input.peek(Ident::peek_any)`\n - `input.peek(Lifetime)`\n - `input.peek(token::Brace)`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2989},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":690663,"byte_end":690668,"line_start":111,"line_end":111,"column_start":12,"column_end":17},"name":"error","qualname":"<Lookahead1>::error","value":"fn (self) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Triggers an error at the current position of the parse stream.\n\n The error message will identify all of the expected token types that\n have been peeked against this lookahead instance.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2990},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":691954,"byte_end":691958,"line_start":146,"line_end":146,"column_start":11,"column_end":15},"name":"Peek","qualname":"::lookahead::Peek","value":"Peek: Sealed","parent":null,"children":[{"krate":0,"index":2991}],"decl_id":null,"docs":" Types that can be parsed by looking at just one token.\n\n Use [`ParseStream::peek`] to peek one of these types in a parse stream\n without consuming it from the stream.\n\n This trait is sealed and cannot be implemented for types outside of Syn.\n\n [`ParseStream::peek`]: crate::parse::ParseBuffer::peek\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2991},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":692020,"byte_end":692025,"line_start":149,"line_end":149,"column_start":10,"column_end":15},"name":"Token","qualname":"::lookahead::Peek::Token","value":"type Token: Token;","parent":{"krate":0,"index":2990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2996},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":692133,"byte_end":692144,"line_start":156,"line_end":156,"column_start":10,"column_end":21},"name":"TokenMarker","qualname":"::lookahead::TokenMarker","value":"TokenMarker::{}","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3004},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parse","qualname":"::parse","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","parent":null,"children":[{"krate":0,"index":3005},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3032},{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3043},{"krate":0,"index":3046},{"krate":0,"index":3048},{"krate":0,"index":3050},{"krate":0,"index":3056},{"krate":0,"index":3059},{"krate":0,"index":3062},{"krate":0,"index":7813},{"krate":0,"index":7823},{"krate":0,"index":7819},{"krate":0,"index":3065},{"krate":0,"index":3070},{"krate":0,"index":3075},{"krate":0,"index":3079},{"krate":0,"index":3081},{"krate":0,"index":3084},{"krate":0,"index":3110},{"krate":0,"index":3113},{"krate":0,"index":3116},{"krate":0,"index":3119},{"krate":0,"index":3122},{"krate":0,"index":3125},{"krate":0,"index":3128},{"krate":0,"index":3131},{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3144}],"decl_id":null,"docs":" Parsing interface for parsing a token stream into a syntax tree node.\n\n Parsing in Syn is built on parser functions that take in a [`ParseStream`]\n and produce a [`Result<T>`] where `T` is some syntax tree node. Underlying\n these parser functions is a lower level mechanism built around the\n [`Cursor`] type. `Cursor` is a cheaply copyable cursor over a range of\n tokens in a token stream.\n\n [`ParseStream`]: type.ParseStream.html\n [`Result<T>`]: type.Result.html\n [`Cursor`]: ../buffer/index.html\n\n # Example\n\n Here is a snippet of parsing code to get a feel for the style of the\n library. We define data structures for a subset of Rust syntax including\n enums (not shown) and structs, then provide implementations of the [`Parse`]\n trait to parse these syntax tree data structures from a token stream.\n\n Once `Parse` impls have been defined, they can be called conveniently from a\n procedural macro through [`parse_macro_input!`] as shown at the bottom of\n the snippet. If the caller provides syntactically invalid input to the\n procedural macro, they will receive a helpful compiler error message\n pointing out the exact token that triggered the failure to parse.\n\n [`parse_macro_input!`]: ../macro.parse_macro_input.html\n\n ```edition2018\n extern crate proc_macro;\n\n use proc_macro::TokenStream;\n use syn::{braced, parse_macro_input, token, Field, Ident, Result, Token};\n use syn::parse::{Parse, ParseStream};\n use syn::punctuated::Punctuated;\n\n enum Item {\n     Struct(ItemStruct),\n     Enum(ItemEnum),\n }\n\n struct ItemStruct {\n     struct_token: Token![struct],\n     ident: Ident,\n     brace_token: token::Brace,\n     fields: Punctuated<Field, Token![,]>,\n }\n #\n # enum ItemEnum {}\n\n impl Parse for Item {\n     fn parse(input: ParseStream) -> Result<Self> {\n         let lookahead = input.lookahead1();\n         if lookahead.peek(Token![struct]) {\n             input.parse().map(Item::Struct)\n         } else if lookahead.peek(Token![enum]) {\n             input.parse().map(Item::Enum)\n         } else {\n             Err(lookahead.error())\n         }\n     }\n }\n\n impl Parse for ItemStruct {\n     fn parse(input: ParseStream) -> Result<Self> {\n         let content;\n         Ok(ItemStruct {\n             struct_token: input.parse()?,\n             ident: input.parse()?,\n             brace_token: braced!(content in input),\n             fields: content.parse_terminated(Field::parse_named)?,\n         })\n     }\n }\n #\n # impl Parse for ItemEnum {\n #     fn parse(input: ParseStream) -> Result<Self> {\n #         unimplemented!()\n #     }\n # }\n\n # const IGNORE: &str = stringify! {\n #[proc_macro]\n # };\n pub fn my_macro(tokens: TokenStream) -> TokenStream {\n     let input = parse_macro_input!(tokens as Item);\n\n     /* ... */\n #   \"\".parse().unwrap()\n }\n ```\n\n # The `syn::parse*` functions\n\n The [`syn::parse`], [`syn::parse2`], and [`syn::parse_str`] functions serve\n as an entry point for parsing syntax tree nodes that can be parsed in an\n obvious default way. These functions can return any syntax tree node that\n implements the [`Parse`] trait, which includes most types in Syn.\n\n [`syn::parse`]: ../fn.parse.html\n [`syn::parse2`]: ../fn.parse2.html\n [`syn::parse_str`]: ../fn.parse_str.html\n [`Parse`]: trait.Parse.html\n\n ```edition2018\n use syn::Type;\n\n # fn run_parser() -> syn::Result<()> {\n let t: Type = syn::parse_str(\"std::collections::HashMap<String, Value>\")?;\n #     Ok(())\n # }\n #\n # fn main() {\n #     run_parser().unwrap();\n # }\n ```\n\n The [`parse_quote!`] macro also uses this approach.\n\n [`parse_quote!`]: ../macro.parse_quote.html\n\n # The `Parser` trait\n\n Some types can be parsed in several ways depending on context. For example\n an [`Attribute`] can be either \"outer\" like `#[...]` or \"inner\" like\n `#![...]` and parsing the wrong one would be a bug. Similarly [`Punctuated`]\n may or may not allow trailing punctuation, and parsing it the wrong way\n would either reject valid input or accept invalid input.\n\n [`Attribute`]: ../struct.Attribute.html\n [`Punctuated`]: ../punctuated/index.html\n\n The `Parse` trait is not implemented in these cases because there is no good\n behavior to consider the default.\n\n ```edition2018,compile_fail\n # extern crate proc_macro;\n #\n # use syn::punctuated::Punctuated;\n # use syn::{PathSegment, Result, Token};\n #\n # fn f(tokens: proc_macro::TokenStream) -> Result<()> {\n #\n // Can't parse `Punctuated` without knowing whether trailing punctuation\n // should be allowed in this context.\n let path: Punctuated<PathSegment, Token![::]> = syn::parse(tokens)?;\n #\n #     Ok(())\n # }\n ```\n\n In these cases the types provide a choice of parser functions rather than a\n single `Parse` implementation, and those parser functions can be invoked\n through the [`Parser`] trait.\n\n [`Parser`]: trait.Parser.html\n\n ```edition2018\n extern crate proc_macro;\n\n use proc_macro::TokenStream;\n use syn::parse::Parser;\n use syn::punctuated::Punctuated;\n use syn::{Attribute, Expr, PathSegment, Result, Token};\n\n fn call_some_parser_methods(input: TokenStream) -> Result<()> {\n     // Parse a nonempty sequence of path segments separated by `::` punctuation\n     // with no trailing punctuation.\n     let tokens = input.clone();\n     let parser = Punctuated::<PathSegment, Token![::]>::parse_separated_nonempty;\n     let _path = parser.parse(tokens)?;\n\n     // Parse a possibly empty sequence of expressions terminated by commas with\n     // an optional trailing punctuation.\n     let tokens = input.clone();\n     let parser = Punctuated::<Expr, Token![,]>::parse_terminated;\n     let _args = parser.parse(tokens)?;\n\n     // Parse zero or more outer attributes but not inner attributes.\n     let tokens = input.clone();\n     let parser = Attribute::parse_outer;\n     let _attrs = parser.parse(tokens)?;\n\n     Ok(())\n }\n ```\n\n ---\n\n *This module is available if Syn is built with the `\"parsing\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20021,"byte_end":20048,"line_start":562,"line_end":562,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":3005},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"discouraged","qualname":"::parse::discouraged","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","parent":null,"children":[{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3009}],"decl_id":null,"docs":" Extensions to the parsing API with niche applicability.\n","sig":null,"attributes":[{"value":"path = \"discouraged.rs\"","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":698840,"byte_end":698866,"line_start":191,"line_end":191,"column_start":1,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":3007},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":732047,"byte_end":732058,"line_start":6,"line_end":6,"column_start":11,"column_end":22},"name":"Speculative","qualname":"::parse::discouraged::Speculative","value":"Speculative","parent":null,"children":[{"krate":0,"index":3008}],"decl_id":null,"docs":" Extensions to the `ParseStream` API to support speculative parsing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":738336,"byte_end":738346,"line_start":158,"line_end":158,"column_start":8,"column_end":18},"name":"advance_to","qualname":"::parse::discouraged::Speculative::advance_to","value":"fn (&self, fork: &Self) -> ()","parent":{"krate":0,"index":3007},"children":[],"decl_id":null,"docs":" Advance this parse stream to the position of a forked parse stream.\n\n This is the opposite operation to [`ParseStream::fork`]. You can fork a\n parse stream, perform some speculative parsing, then join the original\n stream to the fork to \"commit\" the parsing from the fork to the main\n stream.\n\n If you can avoid doing this, you should, as it limits the ability to\n generate useful errors. That said, it is often the only way to parse\n syntax of the form `A* B*` for arbitrary syntax `A` and `B`. The problem\n is that when the fork fails to parse an `A`, it's impossible to tell\n whether that was because of a syntax error and the user meant to provide\n an `A`, or that the `A`s are finished and its time to start parsing\n `B`s. Use with care.\n\n Also note that if `A` is a subset of `B`, `A* B*` can be parsed by\n parsing `B*` and removing the leading members of `A` from the\n repetition, bypassing the need to involve the downsides associated with\n speculative parsing.\n\n [`ParseStream::fork`]: ParseBuffer::fork\n\n # Example\n\n There has been chatter about the possibility of making the colons in the\n turbofish syntax like `path::to::<T>` no longer required by accepting\n `path::to<T>` in expression position. Specifically, according to [RFC\n 2544], [`PathSegment`] parsing should always try to consume a following\n `<` token as the start of generic arguments, and reset to the `<` if\n that fails (e.g. the token is acting as a less-than operator).\n\n This is the exact kind of parsing behavior which requires the \"fork,\n try, commit\" behavior that [`ParseStream::fork`] discourages. With\n `advance_to`, we can avoid having to parse the speculatively parsed\n content a second time.\n\n This change in behavior can be implemented in syn by replacing just the\n `Parse` implementation for `PathSegment`:\n\n ```edition2018\n # use syn::ext::IdentExt;\n use syn::parse::discouraged::Speculative;\n # use syn::parse::{Parse, ParseStream};\n # use syn::{Ident, PathArguments, Result, Token};\n\n pub struct PathSegment {\n     pub ident: Ident,\n     pub arguments: PathArguments,\n }\n #\n # impl<T> From<T> for PathSegment\n # where\n #     T: Into<Ident>,\n # {\n #     fn from(ident: T) -> Self {\n #         PathSegment {\n #             ident: ident.into(),\n #             arguments: PathArguments::None,\n #         }\n #     }\n # }\n\n impl Parse for PathSegment {\n     fn parse(input: ParseStream) -> Result<Self> {\n         if input.peek(Token![super])\n             || input.peek(Token![self])\n             || input.peek(Token![Self])\n             || input.peek(Token![crate])\n             || input.peek(Token![extern])\n         {\n             let ident = input.call(Ident::parse_any)?;\n             return Ok(PathSegment::from(ident));\n         }\n\n         let ident = input.parse()?;\n         if input.peek(Token![::]) && input.peek3(Token![<]) {\n             return Ok(PathSegment {\n                 ident: ident,\n                 arguments: PathArguments::AngleBracketed(input.parse()?),\n             });\n         }\n         if input.peek(Token![<]) && !input.peek(Token![<=]) {\n             let fork = input.fork();\n             if let Ok(arguments) = fork.parse() {\n                 input.advance_to(&fork);\n                 return Ok(PathSegment {\n                     ident: ident,\n                     arguments: PathArguments::AngleBracketed(arguments),\n                 });\n             }\n         }\n         Ok(PathSegment::from(ident))\n     }\n }\n\n # syn::parse_str::<PathSegment>(\"a<b,c>\").unwrap();\n ```\n\n # Drawbacks\n\n The main drawback of this style of speculative parsing is in error\n presentation. Even if the lookahead is the \"correct\" parse, the error\n that is shown is that of the \"fallback\" parse. To use the same example\n as the turbofish above, take the following unfinished \"turbofish\":\n\n ```text\n let _ = f<&'a fn(), for<'a> serde::>();\n ```\n\n If this is parsed as generic arguments, we can provide the error message\n\n ```text\n error: expected identifier\n  --> src.rs:L:C\n   |\n L | let _ = f<&'a fn(), for<'a> serde::>();\n   |                                    ^\n ```\n\n but if parsed using the above speculative parsing, it falls back to\n assuming that the `<` is a less-than when it fails to parse the generic\n arguments, and tries to interpret the `&'a` as the start of a labelled\n loop, resulting in the much less helpful error\n\n ```text\n error: expected `:`\n  --> src.rs:L:C\n   |\n L | let _ = f<&'a fn(), for<'a> serde::>();\n   |               ^^\n ```\n\n This can be mitigated with various heuristics (two examples: show both\n forks' parse errors, or show the one that consumed more tokens), but\n when you can control the grammar, sticking to something that can be\n parsed LL(3) and without the LL(*) speculative parsing this makes\n possible, displaying reasonable errors becomes much more simple.\n\n [RFC 2544]: https://github.com/rust-lang/rfcs/pull/2544\n [`PathSegment`]: crate::PathSegment\n\n # Performance\n\n This method performs a cheap fixed amount of work that does not depend\n on how far apart the two streams are positioned.\n\n # Panics\n\n The forked stream in the argument of `advance_to` must have been\n obtained by forking `self`. Attempting to advance to any other stream\n will cause a panic.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3046},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":699599,"byte_end":699604,"line_start":221,"line_end":221,"column_start":11,"column_end":16},"name":"Parse","qualname":"::parse::Parse","value":"Parse: Sized","parent":null,"children":[{"krate":0,"index":3047}],"decl_id":null,"docs":" Parsing interface implemented by all types that can be parsed in a default\n way from a token stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":699621,"byte_end":699626,"line_start":222,"line_end":222,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse::Parse::parse","value":"fn (input: ParseStream) -> Result<Self>","parent":{"krate":0,"index":3046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3048},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":699906,"byte_end":699917,"line_start":231,"line_end":231,"column_start":10,"column_end":21},"name":"ParseStream","qualname":"::parse::ParseStream","value":"&'a ParseBuffer<'a>","parent":null,"children":[],"decl_id":null,"docs":" Input to a Syn parser function.\n\n See the methods of this type under the documentation of [`ParseBuffer`]. For\n an overview of parsing in Syn, refer to the [module documentation].\n\n [module documentation]: self\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3050},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":700767,"byte_end":700778,"line_start":252,"line_end":252,"column_start":12,"column_end":23},"name":"ParseBuffer","qualname":"::parse::ParseBuffer","value":"ParseBuffer {  }","parent":null,"children":[{"krate":0,"index":3052},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3055}],"decl_id":null,"docs":" Cursor position within a buffered token stream.\n\n This type is more commonly used through the type alias [`ParseStream`] which\n is an alias for `&ParseBuffer`.\n\n `ParseStream` is the input type for all parser functions in Syn. They have\n the signature `fn(ParseStream) -> Result<T>`.\n\n ## Calling a parser function\n\n There is no public way to construct a `ParseBuffer`. Instead, if you are\n looking to invoke a parser function that requires `ParseStream` as input,\n you will need to go through one of the public parsing entry points.\n\n - The [`parse_macro_input!`] macro if parsing input of a procedural macro;\n - One of [the `syn::parse*` functions][syn-parse]; or\n - A method of the [`Parser`] trait.\n\n [syn-parse]: index.html#the-synparse-functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7813},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":703569,"byte_end":703579,"line_start":337,"line_end":337,"column_start":12,"column_end":22},"name":"StepCursor","qualname":"::parse::StepCursor","value":"StepCursor {  }","parent":null,"children":[{"krate":0,"index":7816},{"krate":0,"index":7817},{"krate":0,"index":7818}],"decl_id":null,"docs":" Cursor state associated with speculative parsing.\n\n This type is the input of the closure provided to [`ParseStream::step`].\n\n [`ParseStream::step`]: ParseBuffer::step\n\n # Example\n\n ```edition2018\n use proc_macro2::TokenTree;\n use syn::Result;\n use syn::parse::ParseStream;\n\n // This function advances the stream past the next occurrence of `@`. If\n // no `@` is present in the stream, the stream position is unchanged and\n // an error is returned.\n fn skip_past_next_at(input: ParseStream) -> Result<()> {\n     input.step(|cursor| {\n         let mut rest = *cursor;\n         while let Some((tt, next)) = rest.token_tree() {\n             match &tt {\n                 TokenTree::Punct(punct) if punct.as_char() == '@' => {\n                     return Ok(((), next));\n                 }\n                 _ => rest = next,\n             }\n         }\n         Err(cursor.error(\"no `@` was found after this point\"))\n     })\n }\n #\n # fn remainder_after_skipping_past_next_at(\n #     input: ParseStream,\n # ) -> Result<proc_macro2::TokenStream> {\n #     skip_past_next_at(input)?;\n #     input.parse()\n # }\n #\n # fn main() {\n #     use syn::parse::Parser;\n #     let remainder = remainder_after_skipping_past_next_at\n #         .parse_str(\"a @ b c\")\n #         .unwrap();\n #     assert_eq!(remainder.to_string(), \"b c\");\n # }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":704539,"byte_end":704544,"line_start":365,"line_end":365,"column_start":12,"column_end":17},"name":"error","qualname":"<StepCursor>::error","value":"fn <T> (self, message: T) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Triggers an error at the current position of the parse stream.\n\n The `ParseStream::step` invocation will return this same error without\n advancing the stream state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3086},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":706245,"byte_end":706250,"line_start":418,"line_end":418,"column_start":12,"column_end":17},"name":"parse","qualname":"<ParseBuffer>::parse","value":"fn <T> (&self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parses a syntax tree node of type `T`, advancing the position of our\n parse stream past it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3088},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":707483,"byte_end":707487,"line_start":458,"line_end":458,"column_start":12,"column_end":16},"name":"call","qualname":"<ParseBuffer>::call","value":"fn <T> (&self, function: fn(ParseStream) -> Result<T>) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Calls the given parser function to parse a syntax tree node of type `T`\n from this stream.\n\n # Example\n\n The parser below invokes [`Attribute::parse_outer`] to parse a vector of\n zero or more outer attributes.\n\n [`Attribute::parse_outer`]: crate::Attribute::parse_outer\n\n ```edition2018\n use syn::{Attribute, Ident, Result, Token};\n use syn::parse::{Parse, ParseStream};\n\n // Parses a unit struct with attributes.\n //\n //     #[path = \"s.tmpl\"]\n //     struct S;\n struct UnitStruct {\n     attrs: Vec<Attribute>,\n     struct_token: Token![struct],\n     name: Ident,\n     semi_token: Token![;],\n }\n\n impl Parse for UnitStruct {\n     fn parse(input: ParseStream) -> Result<Self> {\n         Ok(UnitStruct {\n             attrs: input.call(Attribute::parse_outer)?,\n             struct_token: input.parse()?,\n             name: input.parse()?,\n             semi_token: input.parse()?,\n         })\n     }\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3090},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":710328,"byte_end":710332,"line_start":534,"line_end":534,"column_start":12,"column_end":16},"name":"peek","qualname":"<ParseBuffer>::peek","value":"fn <T> (&self, token: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Looks at the next token in the parse stream to determine whether it\n matches the requested type of token.\n\n Does not advance the position of the parse stream.\n\n # Syntax\n\n Note that this method does not use turbofish syntax. Pass the peek type\n inside of parentheses.\n\n - `input.peek(Token![struct])`\n - `input.peek(Token![==])`\n - `input.peek(Ident)`&emsp;*(does not accept keywords)*\n - `input.peek(Ident::peek_any)`\n - `input.peek(Lifetime)`\n - `input.peek(token::Brace)`\n\n # Example\n\n In this example we finish parsing the list of supertraits when the next\n token in the input is either `where` or an opening curly brace.\n\n ```edition2018\n use syn::{braced, token, Generics, Ident, Result, Token, TypeParamBound};\n use syn::parse::{Parse, ParseStream};\n use syn::punctuated::Punctuated;\n\n // Parses a trait definition containing no associated items.\n //\n //     trait Marker<'de, T>: A + B<'de> where Box<T>: Clone {}\n struct MarkerTrait {\n     trait_token: Token![trait],\n     ident: Ident,\n     generics: Generics,\n     colon_token: Option<Token![:]>,\n     supertraits: Punctuated<TypeParamBound, Token![+]>,\n     brace_token: token::Brace,\n }\n\n impl Parse for MarkerTrait {\n     fn parse(input: ParseStream) -> Result<Self> {\n         let trait_token: Token![trait] = input.parse()?;\n         let ident: Ident = input.parse()?;\n         let mut generics: Generics = input.parse()?;\n         let colon_token: Option<Token![:]> = input.parse()?;\n\n         let mut supertraits = Punctuated::new();\n         if colon_token.is_some() {\n             loop {\n                 supertraits.push_value(input.parse()?);\n                 if input.peek(Token![where]) || input.peek(token::Brace) {\n                     break;\n                 }\n                 supertraits.push_punct(input.parse()?);\n             }\n         }\n\n         generics.where_clause = input.parse()?;\n         let content;\n         let empty_brace_token = braced!(content in input);\n\n         Ok(MarkerTrait {\n             trait_token: trait_token,\n             ident: ident,\n             generics: generics,\n             colon_token: colon_token,\n             supertraits: supertraits,\n             brace_token: empty_brace_token,\n         })\n     }\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3092},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":711766,"byte_end":711771,"line_start":573,"line_end":573,"column_start":12,"column_end":17},"name":"peek2","qualname":"<ParseBuffer>::peek2","value":"fn <T> (&self, token: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Looks at the second-next token in the parse stream.\n\n This is commonly useful as a way to implement contextual keywords.\n\n # Example\n\n This example needs to use `peek2` because the symbol `union` is not a\n keyword in Rust. We can't use just `peek` and decide to parse a union if\n the very next token is `union`, because someone is free to write a `mod\n union` and a macro invocation that looks like `union::some_macro! { ...\n }`. In other words `union` is a contextual keyword.\n\n ```edition2018\n use syn::{Ident, ItemUnion, Macro, Result, Token};\n use syn::parse::{Parse, ParseStream};\n\n // Parses either a union or a macro invocation.\n enum UnionOrMacro {\n     // union MaybeUninit<T> { uninit: (), value: T }\n     Union(ItemUnion),\n     // lazy_static! { ... }\n     Macro(Macro),\n }\n\n impl Parse for UnionOrMacro {\n     fn parse(input: ParseStream) -> Result<Self> {\n         if input.peek(Token![union]) && input.peek2(Ident) {\n             input.parse().map(UnionOrMacro::Union)\n         } else {\n             input.parse().map(UnionOrMacro::Macro)\n         }\n     }\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3094},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":711960,"byte_end":711965,"line_start":579,"line_end":579,"column_start":12,"column_end":17},"name":"peek3","qualname":"<ParseBuffer>::peek3","value":"fn <T> (&self, token: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Looks at the third-next token in the parse stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3096},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":713659,"byte_end":713675,"line_start":630,"line_end":630,"column_start":12,"column_end":28},"name":"parse_terminated","qualname":"<ParseBuffer>::parse_terminated","value":"fn <T, P> (&self, parser: fn(ParseStream) -> Result<T>) -> Result<Punctuated<T, P>>","parent":null,"children":[],"decl_id":null,"docs":" Parses zero or more occurrences of `T` separated by punctuation of type\n `P`, with optional trailing punctuation.\n\n Parsing continues until the end of this parse stream. The entire content\n of this parse stream must consist of `T` and `P`.\n\n # Example\n\n ```edition2018\n # use quote::quote;\n #\n use syn::{parenthesized, token, Ident, Result, Token, Type};\n use syn::parse::{Parse, ParseStream};\n use syn::punctuated::Punctuated;\n\n // Parse a simplified tuple struct syntax like:\n //\n //     struct S(A, B);\n struct TupleStruct {\n     struct_token: Token![struct],\n     ident: Ident,\n     paren_token: token::Paren,\n     fields: Punctuated<Type, Token![,]>,\n     semi_token: Token![;],\n }\n\n impl Parse for TupleStruct {\n     fn parse(input: ParseStream) -> Result<Self> {\n         let content;\n         Ok(TupleStruct {\n             struct_token: input.parse()?,\n             ident: input.parse()?,\n             paren_token: parenthesized!(content in input),\n             fields: content.parse_terminated(Type::parse)?,\n             semi_token: input.parse()?,\n         })\n     }\n }\n #\n # fn main() {\n #     let input = quote! {\n #         struct S(A, B);\n #     };\n #     syn::parse2::<TupleStruct>(input).unwrap();\n # }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3099},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":715113,"byte_end":715121,"line_start":674,"line_end":674,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ParseBuffer>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether there are tokens remaining in this stream.\n\n This method returns true at the end of the content of a set of\n delimiters, as well as at the very end of the complete macro input.\n\n # Example\n\n ```edition2018\n use syn::{braced, token, Ident, Item, Result, Token};\n use syn::parse::{Parse, ParseStream};\n\n // Parses a Rust `mod m { ... }` containing zero or more items.\n struct Mod {\n     mod_token: Token![mod],\n     name: Ident,\n     brace_token: token::Brace,\n     items: Vec<Item>,\n }\n\n impl Parse for Mod {\n     fn parse(input: ParseStream) -> Result<Self> {\n         let content;\n         Ok(Mod {\n             mod_token: input.parse()?,\n             name: input.parse()?,\n             brace_token: braced!(content in input),\n             items: {\n                 let mut items = Vec::new();\n                 while !content.is_empty() {\n                     items.push(content.parse()?);\n                 }\n                 items\n             },\n         })\n     }\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3100},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":716735,"byte_end":716745,"line_start":719,"line_end":719,"column_start":12,"column_end":22},"name":"lookahead1","qualname":"<ParseBuffer>::lookahead1","value":"fn (&self) -> Lookahead1<'a>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a helper for peeking at the next token in this stream and\n building an error message if it is not one of a set of expected tokens.\n\n # Example\n\n ```edition2018\n use syn::{ConstParam, Ident, Lifetime, LifetimeDef, Result, Token, TypeParam};\n use syn::parse::{Parse, ParseStream};\n\n // A generic parameter, a single one of the comma-separated elements inside\n // angle brackets in:\n //\n //     fn f<T: Clone, 'a, 'b: 'a, const N: usize>() { ... }\n //\n // On invalid input, lookahead gives us a reasonable error message.\n //\n //     error: expected one of: identifier, lifetime, `const`\n //       |\n //     5 |     fn f<!Sized>() {}\n //       |          ^\n enum GenericParam {\n     Type(TypeParam),\n     Lifetime(LifetimeDef),\n     Const(ConstParam),\n }\n\n impl Parse for GenericParam {\n     fn parse(input: ParseStream) -> Result<Self> {\n         let lookahead = input.lookahead1();\n         if lookahead.peek(Ident) {\n             input.parse().map(GenericParam::Type)\n         } else if lookahead.peek(Lifetime) {\n             input.parse().map(GenericParam::Lifetime)\n         } else if lookahead.peek(Token![const]) {\n             input.parse().map(GenericParam::Const)\n         } else {\n             Err(lookahead.error())\n         }\n     }\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3101},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":721636,"byte_end":721640,"line_start":849,"line_end":849,"column_start":12,"column_end":16},"name":"fork","qualname":"<ParseBuffer>::fork","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Forks a parse stream so that parsing tokens out of either the original\n or the fork does not advance the position of the other.\n\n # Performance\n\n Forking a parse stream is a cheap fixed amount of work and does not\n involve copying token buffers. Where you might hit performance problems\n is if your macro ends up parsing a large amount of content more than\n once.\n\n ```edition2018\n # use syn::{Expr, Result};\n # use syn::parse::ParseStream;\n #\n # fn bad(input: ParseStream) -> Result<Expr> {\n // Do not do this.\n if input.fork().parse::<Expr>().is_ok() {\n     return input.parse::<Expr>();\n }\n # unimplemented!()\n # }\n ```\n\n As a rule, avoid parsing an unbounded amount of tokens out of a forked\n parse stream. Only use a fork when the amount of work performed against\n the fork is small and bounded.\n\n When complex speculative parsing against the forked stream is\n unavoidable, use [`parse::discouraged::Speculative`] to advance the\n original stream once the fork's parse is determined to have been\n successful.\n\n For a lower level way to perform speculative parsing at the token level,\n consider using [`ParseStream::step`] instead.\n\n [`parse::discouraged::Speculative`]: discouraged::Speculative\n [`ParseStream::step`]: ParseBuffer::step\n\n # Example\n\n The parse implementation shown here parses possibly restricted `pub`\n visibilities.\n\n - `pub`\n - `pub(crate)`\n - `pub(self)`\n - `pub(super)`\n - `pub(in some::path)`\n\n To handle the case of visibilities inside of tuple structs, the parser\n needs to distinguish parentheses that specify visibility restrictions\n from parentheses that form part of a tuple type.\n\n ```edition2018\n # struct A;\n # struct B;\n # struct C;\n #\n struct S(pub(crate) A, pub (B, C));\n ```\n\n In this example input the first tuple struct element of `S` has\n `pub(crate)` visibility while the second tuple struct element has `pub`\n visibility; the parentheses around `(B, C)` are part of the type rather\n than part of a visibility restriction.\n\n The parser uses a forked parse stream to check the first token inside of\n parentheses after the `pub` keyword. This is a small bounded amount of\n work performed against the forked parse stream.\n\n ```edition2018\n use syn::{parenthesized, token, Ident, Path, Result, Token};\n use syn::ext::IdentExt;\n use syn::parse::{Parse, ParseStream};\n\n struct PubVisibility {\n     pub_token: Token![pub],\n     restricted: Option<Restricted>,\n }\n\n struct Restricted {\n     paren_token: token::Paren,\n     in_token: Option<Token![in]>,\n     path: Path,\n }\n\n impl Parse for PubVisibility {\n     fn parse(input: ParseStream) -> Result<Self> {\n         let pub_token: Token![pub] = input.parse()?;\n\n         if input.peek(token::Paren) {\n             let ahead = input.fork();\n             let mut content;\n             parenthesized!(content in ahead);\n\n             if content.peek(Token![crate])\n                 || content.peek(Token![self])\n                 || content.peek(Token![super])\n             {\n                 return Ok(PubVisibility {\n                     pub_token: pub_token,\n                     restricted: Some(Restricted {\n                         paren_token: parenthesized!(content in input),\n                         in_token: None,\n                         path: Path::from(content.call(Ident::parse_any)?),\n                     }),\n                 });\n             } else if content.peek(Token![in]) {\n                 return Ok(PubVisibility {\n                     pub_token: pub_token,\n                     restricted: Some(Restricted {\n                         paren_token: parenthesized!(content in input),\n                         in_token: Some(content.parse()?),\n                         path: content.call(Path::parse_mod_style)?,\n                     }),\n                 });\n             }\n         }\n\n         Ok(PubVisibility {\n             pub_token: pub_token,\n             restricted: None,\n         })\n     }\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3102},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":722806,"byte_end":722811,"line_start":888,"line_end":888,"column_start":12,"column_end":17},"name":"error","qualname":"<ParseBuffer>::error","value":"fn <T> (&self, message: T) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Triggers an error at the current position of the parse stream.\n\n # Example\n\n ```edition2018\n use syn::{Expr, Result, Token};\n use syn::parse::{Parse, ParseStream};\n\n // Some kind of loop: `while` or `for` or `loop`.\n struct Loop {\n     expr: Expr,\n }\n\n impl Parse for Loop {\n     fn parse(input: ParseStream) -> Result<Self> {\n         if input.peek(Token![while])\n             || input.peek(Token![for])\n             || input.peek(Token![loop])\n         {\n             Ok(Loop {\n                 expr: input.parse()?,\n             })\n         } else {\n             Err(input.error(\"expected some kind of loop\"))\n         }\n     }\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3104},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":724714,"byte_end":724718,"line_start":939,"line_end":939,"column_start":12,"column_end":16},"name":"step","qualname":"<ParseBuffer>::step","value":"fn <F, R> (&self, function: F) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Speculatively parses tokens from this parse stream, advancing the\n position of this stream only if parsing succeeds.\n\n This is a powerful low-level API used for defining the `Parse` impls of\n the basic built-in token types. It is not something that will be used\n widely outside of the Syn codebase.\n\n # Example\n\n ```edition2018\n use proc_macro2::TokenTree;\n use syn::Result;\n use syn::parse::ParseStream;\n\n // This function advances the stream past the next occurrence of `@`. If\n // no `@` is present in the stream, the stream position is unchanged and\n // an error is returned.\n fn skip_past_next_at(input: ParseStream) -> Result<()> {\n     input.step(|cursor| {\n         let mut rest = *cursor;\n         while let Some((tt, next)) = rest.token_tree() {\n             match &tt {\n                 TokenTree::Punct(punct) if punct.as_char() == '@' => {\n                     return Ok(((), next));\n                 }\n                 _ => rest = next,\n             }\n         }\n         Err(cursor.error(\"no `@` was found after this point\"))\n     })\n }\n #\n # fn remainder_after_skipping_past_next_at(\n #     input: ParseStream,\n # ) -> Result<proc_macro2::TokenStream> {\n #     skip_past_next_at(input)?;\n #     input.parse()\n # }\n #\n # fn main() {\n #     use syn::parse::Parser;\n #     let remainder = remainder_after_skipping_past_next_at\n #         .parse_str(\"a @ b c\")\n #         .unwrap();\n #     assert_eq!(remainder.to_string(), \"b c\");\n # }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3108},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":726449,"byte_end":726455,"line_start":974,"line_end":974,"column_start":12,"column_end":18},"name":"cursor","qualname":"<ParseBuffer>::cursor","value":"fn (&self) -> Cursor<'a>","parent":null,"children":[],"decl_id":null,"docs":" Provides low-level access to the token representation underlying this\n parse stream.\n\n Cursors are immutable so no operations you perform against the cursor\n will affect the state of this parse stream.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3131},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":728857,"byte_end":728863,"line_start":1057,"line_end":1057,"column_start":11,"column_end":17},"name":"Parser","qualname":"::parse::Parser","value":"Parser: Sized","parent":null,"children":[{"krate":0,"index":3132},{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":3136}],"decl_id":null,"docs":" Parser that can parse Rust tokens into a particular syntax tree node.\n\n Refer to the [module documentation] for details about parsing in Syn.\n\n [module documentation]: self\n\n *This trait is available if Syn is built with the `\"parsing\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3132},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":728882,"byte_end":728888,"line_start":1058,"line_end":1058,"column_start":10,"column_end":16},"name":"Output","qualname":"::parse::Parser::Output","value":"type Output;","parent":{"krate":0,"index":3131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":729135,"byte_end":729141,"line_start":1064,"line_end":1064,"column_start":8,"column_end":14},"name":"parse2","qualname":"::parse::Parser::parse2","value":"fn (self, tokens: TokenStream) -> Result<Self::Output>","parent":{"krate":0,"index":3131},"children":[],"decl_id":null,"docs":" Parse a proc-macro2 token stream into the chosen syntax tree node.\n\n This function will check that the input is fully parsed. If there are\n any unparsed tokens at the end of the stream, an error is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":729700,"byte_end":729705,"line_start":1077,"line_end":1077,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse::Parser::parse","value":"fn (self, tokens: proc_macro::TokenStream) -> Result<Self::Output>","parent":{"krate":0,"index":3131},"children":[],"decl_id":null,"docs":" Parse tokens of source code into the chosen syntax tree node.\n\n This function will check that the input is fully parsed. If there are\n any unparsed tokens at the end of the stream, an error is returned.\n\n *This method is available if Syn is built with both the `\"parsing\"` and\n `\"proc-macro\"` features.*\n","sig":null,"attributes":[{"value":"cfg(all\n      (not\n       (all\n        (target_arch = \"wasm32\", any\n         (target_os = \"unknown\", target_os = \"wasi\"))), feature =\n       \"proc-macro\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":729553,"byte_end":729692,"line_start":1073,"line_end":1076,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3135},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":730214,"byte_end":730223,"line_start":1090,"line_end":1090,"column_start":8,"column_end":17},"name":"parse_str","qualname":"::parse::Parser::parse_str","value":"fn (self, s: &str) -> Result<Self::Output>","parent":{"krate":0,"index":3131},"children":[],"decl_id":null,"docs":" Parse a string of Rust code into the chosen syntax tree node.\n\n This function will check that the input is fully parsed. If there are\n any unparsed tokens at the end of the string, an error is returned.\n\n # Hygiene\n\n Every span in the resulting syntax tree will be set to resolve at the\n macro call site.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":730381,"byte_end":730395,"line_start":1096,"line_end":1096,"column_start":8,"column_end":22},"name":"__parse_scoped","qualname":"::parse::Parser::__parse_scoped","value":"fn (self, scope: Span, tokens: TokenStream) -> Result<Self::Output>","parent":{"krate":0,"index":3131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3149},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":738811,"byte_end":738820,"line_start":3,"line_end":3,"column_start":11,"column_end":20},"name":"IntoSpans","qualname":"::span::IntoSpans","value":"IntoSpans<S>","parent":null,"children":[{"krate":0,"index":3151}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3151},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":738833,"byte_end":738843,"line_start":4,"line_end":4,"column_start":8,"column_end":18},"name":"into_spans","qualname":"::span::IntoSpans::into_spans","value":"fn (self) -> S","parent":{"krate":0,"index":3149},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3179},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":739524,"byte_end":739533,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"name":"FromSpans","qualname":"::span::FromSpans","value":"FromSpans: Sized","parent":null,"children":[{"krate":0,"index":3180}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":739486,"byte_end":739513,"line_start":43,"line_end":43,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3180},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":739550,"byte_end":739560,"line_start":45,"line_end":45,"column_start":8,"column_end":18},"name":"from_spans","qualname":"::span::FromSpans::from_spans","value":"fn (spans: &[Span]) -> Self","parent":{"krate":0,"index":3179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3249},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":743126,"byte_end":743132,"line_start":18,"line_end":18,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" The result of a Syn parser.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3251},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":743587,"byte_end":743592,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":3254}],"decl_id":null,"docs":" Error returned when a Syn parser cannot parse the input tokens.\n\n Refer to the [module documentation] for details about parsing in Syn.\n\n [module documentation]: index.html\n\n *This type is available if Syn is built with the `\"parsing\"` feature.*\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3256},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":745399,"byte_end":745402,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"fn <T> (span: Span, message: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Usually the [`ParseStream::error`] method will be used instead, which\n automatically uses the correct span from the current position of the\n parse stream.\n\n Use `Error::new` when the error needs to be triggered on some span other\n than where the parse stream is currently positioned.\n\n [`ParseStream::error`]: crate::parse::ParseBuffer::error\n\n # Example\n\n ```edition2018\n use syn::{Error, Ident, LitStr, Result, Token};\n use syn::parse::ParseStream;\n\n // Parses input that looks like `name = \"string\"` where the key must be\n // the identifier `name` and the value may be any string literal.\n // Returns the string literal.\n fn parse_name(input: ParseStream) -> Result<LitStr> {\n     let name_token: Ident = input.parse()?;\n     if name_token != \"name\" {\n         // Trigger an error not on the current position of the stream,\n         // but on the position of the unexpected identifier.\n         return Err(Error::new(name_token.span(), \"expected `name`\"));\n     }\n     input.parse::<Token![=]>()?;\n     let s: LitStr = input.parse()?;\n     Ok(s)\n }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":746349,"byte_end":746360,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"new_spanned","qualname":"<Error>::new_spanned","value":"fn <T, U> (tokens: T, message: U) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an error with the specified message spanning the given syntax\n tree node.\n\n Unlike the `Error::new` constructor, this constructor takes an argument\n `tokens` which is a syntax tree node. This allows the resulting `Error`\n to attempt to span all tokens inside of `tokens`. While you would\n typically be able to use the `Spanned` trait with the above `Error::new`\n constructor, implementation limitations today mean that\n `Error::new_spanned` may provide a higher-quality error message on\n stable Rust.\n\n When in doubt it's recommended to stick to `Error::new` (or\n `ParseStream::error`)!\n","sig":null,"attributes":[{"value":"cfg(feature = \"printing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":746309,"byte_end":746337,"line_start":98,"line_end":98,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3263},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":747034,"byte_end":747038,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"span","qualname":"<Error>::span","value":"fn (&self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" The source location of the error.\n\n Spans are not thread-safe so this function returns `Span::call_site()`\n if called from a different thread than the one on which the `Error` was\n originally created.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3264},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":747851,"byte_end":747867,"line_start":141,"line_end":141,"column_start":12,"column_end":28},"name":"to_compile_error","qualname":"<Error>::to_compile_error","value":"fn (&self) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Render the error as an invocation of [`compile_error!`].\n\n The [`parse_macro_input!`] macro provides a convenient way to invoke\n this method correctly in a procedural macro.\n\n [`compile_error!`]: https://doc.rust-lang.org/std/macro.compile_error.html\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3280},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21981,"byte_end":21986,"line_start":629,"line_end":629,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse","value":"fn <T> (tokens: proc_macro::TokenStream) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse tokens of source code into the chosen syntax tree node.\n\n This is preferred over parsing a string because tokens are able to preserve\n information about where in the user's code they were originally written (the\n \"span\" of the token), possibly allowing the compiler to produce better error\n messages.\n\n This function parses a `proc_macro::TokenStream` which is the type used for\n interop with the compiler in a procedural macro. To parse a\n `proc_macro2::TokenStream`, use [`syn::parse2`] instead.\n\n [`syn::parse2`]: parse2\n\n *This function is available if Syn is built with both the `\"parsing\"` and\n `\"proc-macro\"` features.*\n\n # Examples\n\n ```edition2018\n extern crate proc_macro;\n\n use proc_macro::TokenStream;\n use quote::quote;\n use syn::DeriveInput;\n\n # const IGNORE_TOKENS: &str = stringify! {\n #[proc_macro_derive(MyMacro)]\n # };\n pub fn my_macro(input: TokenStream) -> TokenStream {\n     // Parse the tokens into a syntax tree\n     let ast: DeriveInput = syn::parse(input).unwrap();\n\n     // Build the output, possibly using quasi-quotation\n     let expanded = quote! {\n         /* ... */\n     };\n\n     // Convert into a token stream and return it\n     expanded.into()\n }\n ```\n","sig":null,"attributes":[{"value":"cfg(all\n      (not\n       (all\n        (target_arch = \"wasm32\", any\n         (target_os = \"unknown\", target_os = \"wasi\"))), feature = \"parsing\",\n       feature = \"proc-macro\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21821,"byte_end":21973,"line_start":624,"line_end":628,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":3282},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22635,"byte_end":22641,"line_start":645,"line_end":645,"column_start":8,"column_end":14},"name":"parse2","qualname":"::parse2","value":"fn <T> (tokens: proc_macro2::TokenStream) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse a proc-macro2 token stream into the chosen syntax tree node.\n\n This function parses a `proc_macro2::TokenStream` which is commonly useful\n when the input comes from a node of the Syn syntax tree, for example the tts\n of a [`Macro`] node. When in a procedural macro parsing the\n `proc_macro::TokenStream` provided by the compiler, use [`syn::parse`]\n instead.\n\n [`syn::parse`]: parse()\n\n *This function is available if Syn is built with the `\"parsing\"` feature.*\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22600,"byte_end":22627,"line_start":644,"line_end":644,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":3284},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23385,"byte_end":23394,"line_start":675,"line_end":675,"column_start":8,"column_end":17},"name":"parse_str","qualname":"::parse_str","value":"fn <T> (s: &str) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse a string of Rust code into the chosen syntax tree node.\n\n *This function is available if Syn is built with the `\"parsing\"` feature.*\n\n # Hygiene\n\n Every span in the resulting syntax tree will be set to resolve at the macro\n call site.\n\n # Examples\n\n ```edition2018\n use syn::{Expr, Result};\n\n fn run() -> Result<()> {\n     let code = \"assert_eq!(u8::max_value(), 255)\";\n     let expr = syn::parse_str::<Expr>(code)?;\n     println!(\"{:#?}\", expr);\n     Ok(())\n }\n #\n # fn main() {\n #     run().unwrap();\n # }\n ```\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23350,"byte_end":23377,"line_start":674,"line_end":674,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":3286},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":24697,"byte_end":24707,"line_start":719,"line_end":719,"column_start":8,"column_end":18},"name":"parse_file","qualname":"::parse_file","value":"fn (mut content: &str) -> Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Parse the content of a file of Rust code.\n\n This is different from `syn::parse_str::<File>(content)` in two ways:\n\n - It discards a leading byte order mark `\\u{FEFF}` if the file has one.\n - It preserves the shebang line of the file, such as `#!/usr/bin/env rustx`.\n\n If present, either of these would be an error using `from_str`.\n\n *This function is available if Syn is built with the `\"parsing\"` and\n `\"full\"` features.*\n\n # Examples\n\n ```edition2018,no_run\n use std::error::Error;\n use std::fs::File;\n use std::io::Read;\n\n fn run() -> Result<(), Box<Error>> {\n     let mut file = File::open(\"path/to/code.rs\")?;\n     let mut content = String::new();\n     file.read_to_string(&mut content)?;\n\n     let ast = syn::parse_file(&content)?;\n     if let Some(shebang) = ast.shebang {\n         println!(\"{}\", shebang);\n     }\n     println!(\"{} items\", ast.items.len());\n\n     Ok(())\n }\n #\n # fn main() {\n #     run().unwrap();\n # }\n ```\n","sig":null,"attributes":[{"value":"cfg(all (feature = \"parsing\", feature = \"full\"))","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":24639,"byte_end":24689,"line_start":718,"line_end":718,"column_start":1,"column_end":51}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":31419,"byte_end":31426,"line_start":65,"line_end":65,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":42294,"byte_end":42299,"line_start":156,"line_end":156,"column_start":26,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44301,"byte_end":44302,"line_start":220,"line_end":220,"column_start":42,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44366,"byte_end":44367,"line_start":223,"line_end":223,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":52477,"byte_end":52487,"line_start":504,"line_end":504,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":52645,"byte_end":52655,"line_start":511,"line_end":511,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":53236,"byte_end":53246,"line_start":530,"line_end":530,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":53625,"byte_end":53635,"line_start":547,"line_end":547,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":53683,"byte_end":53688,"line_start":550,"line_end":550,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":53909,"byte_end":53914,"line_start":561,"line_end":561,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54130,"byte_end":54137,"line_start":572,"line_end":572,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54358,"byte_end":54363,"line_start":583,"line_end":583,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":71619,"byte_end":71624,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":72005,"byte_end":72010,"line_start":52,"line_end":52,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":72663,"byte_end":72668,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":72790,"byte_end":72797,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":77530,"byte_end":77539,"line_start":133,"line_end":133,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87053,"byte_end":87057,"line_start":439,"line_end":439,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":89205,"byte_end":89206,"line_start":512,"line_end":512,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":90963,"byte_end":90970,"line_start":573,"line_end":573,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":91182,"byte_end":91186,"line_start":581,"line_end":581,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":91384,"byte_end":91392,"line_start":588,"line_end":588,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":91595,"byte_end":91608,"line_start":595,"line_end":595,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":91817,"byte_end":91827,"line_start":602,"line_end":602,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":93352,"byte_end":93361,"line_start":651,"line_end":651,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":93780,"byte_end":93788,"line_start":664,"line_end":664,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":94047,"byte_end":94060,"line_start":673,"line_end":673,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":96109,"byte_end":96115,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99800,"byte_end":99807,"line_start":185,"line_end":185,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":100754,"byte_end":100765,"line_start":212,"line_end":212,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":101054,"byte_end":101067,"line_start":222,"line_end":222,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":101359,"byte_end":101364,"line_start":232,"line_end":232,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":102150,"byte_end":102160,"line_start":256,"line_end":256,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":102492,"byte_end":102502,"line_start":268,"line_end":268,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":104400,"byte_end":104407,"line_start":324,"line_end":324,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":104804,"byte_end":104815,"line_start":336,"line_end":336,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105032,"byte_end":105045,"line_start":344,"line_end":344,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105264,"byte_end":105269,"line_start":352,"line_end":352,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105665,"byte_end":105674,"line_start":364,"line_end":364,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105817,"byte_end":105825,"line_start":370,"line_end":370,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105971,"byte_end":105984,"line_start":376,"line_end":376,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":124554,"byte_end":124558,"line_start":530,"line_end":530,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":127802,"byte_end":127807,"line_start":603,"line_end":603,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":139843,"byte_end":139853,"line_start":1013,"line_end":1013,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":141031,"byte_end":141035,"line_start":1044,"line_end":1044,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":166132,"byte_end":166139,"line_start":1711,"line_end":1711,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":168016,"byte_end":168022,"line_start":1770,"line_end":1770,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":169228,"byte_end":169239,"line_start":1809,"line_end":1809,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":170230,"byte_end":170238,"line_start":1838,"line_end":1838,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":170964,"byte_end":170973,"line_start":1861,"line_end":1861,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":171760,"byte_end":171771,"line_start":1886,"line_end":1886,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":177839,"byte_end":177848,"line_start":2056,"line_end":2056,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":178664,"byte_end":178669,"line_start":2081,"line_end":2081,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":178913,"byte_end":178919,"line_start":2091,"line_end":2091,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":180970,"byte_end":180980,"line_start":2153,"line_end":2153,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":185321,"byte_end":185332,"line_start":2292,"line_end":2292,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":185929,"byte_end":185937,"line_start":2308,"line_end":2308,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":186435,"byte_end":186440,"line_start":2326,"line_end":2326,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":186731,"byte_end":186736,"line_start":2337,"line_end":2337,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":189619,"byte_end":189623,"line_start":2417,"line_end":2417,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":194569,"byte_end":194572,"line_start":2552,"line_end":2552,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":201895,"byte_end":201901,"line_start":2772,"line_end":2772,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":202304,"byte_end":202307,"line_start":2785,"line_end":2785,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":204003,"byte_end":204008,"line_start":2832,"line_end":2832,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":209545,"byte_end":209551,"line_start":3016,"line_end":3016,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":211216,"byte_end":211223,"line_start":3075,"line_end":3075,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":211493,"byte_end":211504,"line_start":3084,"line_end":3084,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":211819,"byte_end":211828,"line_start":3094,"line_end":3094,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":212162,"byte_end":212170,"line_start":3104,"line_end":3104,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":212511,"byte_end":212525,"line_start":3115,"line_end":3115,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":213006,"byte_end":213021,"line_start":3129,"line_end":3129,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":213328,"byte_end":213349,"line_start":3139,"line_end":3139,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":213667,"byte_end":213676,"line_start":3149,"line_end":3149,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":214297,"byte_end":214307,"line_start":3164,"line_end":3164,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":214583,"byte_end":214592,"line_start":3173,"line_end":3173,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":214826,"byte_end":214833,"line_start":3181,"line_end":3181,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":215027,"byte_end":215035,"line_start":3188,"line_end":3188,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":215343,"byte_end":215351,"line_start":3198,"line_end":3198,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":216374,"byte_end":216381,"line_start":3228,"line_end":3228,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":216746,"byte_end":216752,"line_start":3239,"line_end":3239,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":217134,"byte_end":217143,"line_start":3250,"line_end":3250,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":217657,"byte_end":217668,"line_start":3264,"line_end":3264,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":218265,"byte_end":218273,"line_start":3280,"line_end":3280,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":218736,"byte_end":218745,"line_start":3293,"line_end":3293,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":219644,"byte_end":219653,"line_start":3314,"line_end":3314,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":219970,"byte_end":219982,"line_start":3324,"line_end":3324,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":220253,"byte_end":220262,"line_start":3333,"line_end":3333,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":220534,"byte_end":220545,"line_start":3342,"line_end":3342,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":221518,"byte_end":221528,"line_start":3369,"line_end":3369,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":221953,"byte_end":221962,"line_start":3381,"line_end":3381,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":222380,"byte_end":222390,"line_start":3393,"line_end":3393,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":222701,"byte_end":222713,"line_start":3403,"line_end":3403,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":222989,"byte_end":222998,"line_start":3412,"line_end":3412,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":223282,"byte_end":223288,"line_start":3421,"line_end":3421,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":223566,"byte_end":223571,"line_start":3430,"line_end":3430,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":223812,"byte_end":223821,"line_start":3438,"line_end":3438,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":224166,"byte_end":224175,"line_start":3449,"line_end":3449,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":224591,"byte_end":224599,"line_start":3461,"line_end":3461,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":224848,"byte_end":224861,"line_start":3469,"line_end":3469,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":225178,"byte_end":225187,"line_start":3479,"line_end":3479,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":225501,"byte_end":225513,"line_start":3489,"line_end":3489,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":225789,"byte_end":225799,"line_start":3498,"line_end":3498,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":226072,"byte_end":226081,"line_start":3507,"line_end":3507,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":226304,"byte_end":226314,"line_start":3515,"line_end":3515,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":226898,"byte_end":226908,"line_start":3531,"line_end":3531,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":227365,"byte_end":227374,"line_start":3544,"line_end":3544,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":227646,"byte_end":227655,"line_start":3553,"line_end":3553,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":228016,"byte_end":228023,"line_start":3564,"line_end":3564,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":228269,"byte_end":228281,"line_start":3572,"line_end":3572,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":228448,"byte_end":228453,"line_start":3579,"line_end":3579,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":228669,"byte_end":228679,"line_start":3587,"line_end":3587,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":229073,"byte_end":229076,"line_start":3599,"line_end":3599,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":229637,"byte_end":229644,"line_start":3615,"line_end":3615,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":229824,"byte_end":229832,"line_start":3622,"line_end":3622,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":230259,"byte_end":230268,"line_start":3635,"line_end":3635,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":230851,"byte_end":230865,"line_start":3650,"line_end":3650,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":231073,"byte_end":231080,"line_start":3658,"line_end":3658,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":231273,"byte_end":231281,"line_start":3665,"line_end":3665,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":232213,"byte_end":232219,"line_start":3687,"line_end":3687,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":232432,"byte_end":232438,"line_start":3695,"line_end":3695,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":232698,"byte_end":232704,"line_start":3704,"line_end":3704,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":232872,"byte_end":232880,"line_start":3711,"line_end":3711,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":233267,"byte_end":233275,"line_start":3723,"line_end":3723,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":234576,"byte_end":234584,"line_start":3756,"line_end":3756,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":234751,"byte_end":234762,"line_start":3763,"line_end":3763,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":234929,"byte_end":234937,"line_start":3770,"line_end":3770,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":235274,"byte_end":235279,"line_start":3781,"line_end":3781,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":235527,"byte_end":235531,"line_start":3790,"line_end":3790,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":236051,"byte_end":236056,"line_start":3805,"line_end":3805,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239140,"byte_end":239148,"line_start":75,"line_end":75,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":242359,"byte_end":242369,"line_start":160,"line_end":160,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":242801,"byte_end":242814,"line_start":178,"line_end":178,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":243247,"byte_end":243256,"line_start":196,"line_end":196,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":243689,"byte_end":243701,"line_start":214,"line_end":214,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":244138,"byte_end":244149,"line_start":232,"line_end":232,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":244586,"byte_end":244600,"line_start":250,"line_end":250,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246095,"byte_end":246103,"line_start":294,"line_end":294,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247144,"byte_end":247156,"line_start":328,"line_end":328,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247863,"byte_end":247874,"line_start":352,"line_end":352,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":248117,"byte_end":248126,"line_start":363,"line_end":363,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251809,"byte_end":251817,"line_start":484,"line_end":484,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":253839,"byte_end":253851,"line_start":542,"line_end":542,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":254702,"byte_end":254713,"line_start":568,"line_end":568,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":256023,"byte_end":256037,"line_start":605,"line_end":605,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":256751,"byte_end":256757,"line_start":626,"line_end":626,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":257008,"byte_end":257017,"line_start":636,"line_end":636,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":258984,"byte_end":258998,"line_start":693,"line_end":693,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":259594,"byte_end":259604,"line_start":711,"line_end":711,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":260377,"byte_end":260395,"line_start":733,"line_end":733,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":260669,"byte_end":260679,"line_start":743,"line_end":743,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":261443,"byte_end":261454,"line_start":766,"line_end":766,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":262577,"byte_end":262583,"line_start":796,"line_end":796,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":262833,"byte_end":262847,"line_start":806,"line_end":806,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":265634,"byte_end":265642,"line_start":878,"line_end":878,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":267060,"byte_end":267072,"line_start":915,"line_end":915,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":269429,"byte_end":269441,"line_start":970,"line_end":970,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":271407,"byte_end":271416,"line_start":1018,"line_end":1018,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":271690,"byte_end":271704,"line_start":1027,"line_end":1027,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":271984,"byte_end":271995,"line_start":1036,"line_end":1036,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":272361,"byte_end":272370,"line_start":1047,"line_end":1047,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":272902,"byte_end":272912,"line_start":1062,"line_end":1062,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":273390,"byte_end":273408,"line_start":1076,"line_end":1076,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":273666,"byte_end":273676,"line_start":1085,"line_end":1085,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":274171,"byte_end":274182,"line_start":1099,"line_end":1099,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":274442,"byte_end":274455,"line_start":1108,"line_end":1108,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":274737,"byte_end":274754,"line_start":1117,"line_end":1117,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":274988,"byte_end":274999,"line_start":1125,"line_end":1125,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":286519,"byte_end":286523,"line_start":324,"line_end":324,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":301671,"byte_end":301675,"line_start":786,"line_end":786,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":307816,"byte_end":307825,"line_start":916,"line_end":916,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":308802,"byte_end":308812,"line_start":943,"line_end":943,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":310814,"byte_end":310829,"line_start":997,"line_end":997,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":311790,"byte_end":311797,"line_start":1025,"line_end":1025,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":312200,"byte_end":312207,"line_start":1038,"line_end":1038,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":314209,"byte_end":314219,"line_start":1087,"line_end":1087,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":314787,"byte_end":314796,"line_start":1104,"line_end":1104,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":315615,"byte_end":315621,"line_start":1127,"line_end":1127,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":317902,"byte_end":317907,"line_start":1185,"line_end":1185,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":320407,"byte_end":320414,"line_start":1258,"line_end":1258,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":321858,"byte_end":321872,"line_start":1299,"line_end":1299,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":322579,"byte_end":322590,"line_start":1321,"line_end":1321,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":324260,"byte_end":324273,"line_start":1363,"line_end":1363,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":325976,"byte_end":325993,"line_start":1411,"line_end":1411,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":326488,"byte_end":326503,"line_start":1426,"line_end":1426,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":326869,"byte_end":326885,"line_start":1438,"line_end":1438,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":327402,"byte_end":327410,"line_start":1455,"line_end":1455,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":328048,"byte_end":328063,"line_start":1474,"line_end":1474,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":329129,"byte_end":329139,"line_start":1503,"line_end":1503,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":329986,"byte_end":329994,"line_start":1526,"line_end":1526,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":330838,"byte_end":330847,"line_start":1549,"line_end":1549,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":332566,"byte_end":332575,"line_start":1599,"line_end":1599,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":334819,"byte_end":334833,"line_start":1671,"line_end":1671,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":336622,"byte_end":336631,"line_start":1726,"line_end":1726,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":338862,"byte_end":338876,"line_start":1782,"line_end":1782,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":339635,"byte_end":339650,"line_start":1804,"line_end":1804,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":342186,"byte_end":342199,"line_start":1865,"line_end":1865,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":343703,"byte_end":343717,"line_start":1907,"line_end":1907,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":344232,"byte_end":344240,"line_start":1924,"line_end":1924,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":346686,"byte_end":346694,"line_start":1988,"line_end":1988,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":349655,"byte_end":349668,"line_start":2061,"line_end":2061,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":350239,"byte_end":350253,"line_start":2078,"line_end":2078,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":352422,"byte_end":352434,"line_start":2133,"line_end":2133,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":353121,"byte_end":353140,"line_start":2153,"line_end":2153,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":353677,"byte_end":353690,"line_start":2169,"line_end":2169,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":354194,"byte_end":354204,"line_start":2186,"line_end":2186,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":354389,"byte_end":354403,"line_start":2195,"line_end":2195,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":354855,"byte_end":354870,"line_start":2215,"line_end":2215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":355413,"byte_end":355420,"line_start":2230,"line_end":2230,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":355793,"byte_end":355803,"line_start":2241,"line_end":2241,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":356350,"byte_end":356359,"line_start":2256,"line_end":2256,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":356858,"byte_end":356864,"line_start":2270,"line_end":2270,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":357484,"byte_end":357491,"line_start":2286,"line_end":2286,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":358106,"byte_end":358120,"line_start":2303,"line_end":2303,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":358485,"byte_end":358493,"line_start":2314,"line_end":2314,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":359005,"byte_end":359020,"line_start":2328,"line_end":2328,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":359674,"byte_end":359682,"line_start":2345,"line_end":2345,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":360185,"byte_end":360195,"line_start":2359,"line_end":2359,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":361186,"byte_end":361195,"line_start":2384,"line_end":2384,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":361620,"byte_end":361629,"line_start":2396,"line_end":2396,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":362406,"byte_end":362420,"line_start":2416,"line_end":2416,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":362937,"byte_end":362945,"line_start":2430,"line_end":2430,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":363781,"byte_end":363790,"line_start":2451,"line_end":2451,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":364654,"byte_end":364664,"line_start":2472,"line_end":2472,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":365318,"byte_end":365330,"line_start":2492,"line_end":2492,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":365468,"byte_end":365475,"line_start":2498,"line_end":2498,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":365705,"byte_end":365712,"line_start":2506,"line_end":2506,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":365852,"byte_end":365861,"line_start":2512,"line_end":2512,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":366089,"byte_end":366096,"line_start":2520,"line_end":2520,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":366241,"byte_end":366249,"line_start":2526,"line_end":2526,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":366466,"byte_end":366480,"line_start":2534,"line_end":2534,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":367024,"byte_end":367039,"line_start":2549,"line_end":2549,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":367657,"byte_end":367670,"line_start":2567,"line_end":2567,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":368401,"byte_end":368415,"line_start":2586,"line_end":2586,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":368651,"byte_end":368668,"line_start":2594,"line_end":2594,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":368806,"byte_end":368819,"line_start":2600,"line_end":2600,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":369366,"byte_end":369380,"line_start":2615,"line_end":2615,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":369845,"byte_end":369857,"line_start":2628,"line_end":2628,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":370417,"byte_end":370436,"line_start":2643,"line_end":2643,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":371050,"byte_end":371063,"line_start":2659,"line_end":2659,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":371299,"byte_end":371315,"line_start":2667,"line_end":2667,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":371453,"byte_end":371466,"line_start":2673,"line_end":2673,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":371768,"byte_end":371785,"line_start":2682,"line_end":2682,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":372246,"byte_end":372261,"line_start":2695,"line_end":2695,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":372586,"byte_end":372602,"line_start":2705,"line_end":2705,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":372838,"byte_end":372857,"line_start":2713,"line_end":2713,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":372995,"byte_end":373004,"line_start":2719,"line_end":2719,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":373399,"byte_end":373408,"line_start":2731,"line_end":2731,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":374087,"byte_end":374097,"line_start":2748,"line_end":2748,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":374380,"byte_end":374387,"line_start":2757,"line_end":2757,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":374579,"byte_end":374590,"line_start":2764,"line_end":2764,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\file.rs","byte_start":377128,"byte_end":377132,"line_start":83,"line_end":83,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\file.rs","byte_start":377764,"byte_end":377768,"line_start":107,"line_end":107,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":378760,"byte_end":378768,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":380112,"byte_end":380120,"line_start":83,"line_end":83,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":380281,"byte_end":380289,"line_start":90,"line_end":90,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":380394,"byte_end":380402,"line_start":96,"line_end":96,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":380427,"byte_end":380435,"line_start":98,"line_end":98,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":380556,"byte_end":380564,"line_start":104,"line_end":104,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":380677,"byte_end":380685,"line_start":110,"line_end":110,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":381050,"byte_end":381058,"line_start":129,"line_end":129,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":381490,"byte_end":381498,"line_start":147,"line_end":147,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":385005,"byte_end":385011,"line_start":108,"line_end":108,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1214},{"krate":0,"index":1220},{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":388620,"byte_end":388630,"line_start":221,"line_end":221,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":389072,"byte_end":389079,"line_start":241,"line_end":241,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":389506,"byte_end":389513,"line_start":261,"line_end":261,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":389942,"byte_end":389948,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":391989,"byte_end":391997,"line_start":338,"line_end":338,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393743,"byte_end":393754,"line_start":403,"line_end":403,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":395647,"byte_end":395650,"line_start":485,"line_end":485,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":396518,"byte_end":396524,"line_start":510,"line_end":510,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":396811,"byte_end":396821,"line_start":520,"line_end":520,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":397117,"byte_end":397124,"line_start":530,"line_end":530,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":397410,"byte_end":397417,"line_start":540,"line_end":540,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":397708,"byte_end":397714,"line_start":550,"line_end":550,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":398002,"byte_end":398010,"line_start":560,"line_end":560,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":398307,"byte_end":398314,"line_start":570,"line_end":570,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":398748,"byte_end":398754,"line_start":587,"line_end":587,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":398894,"byte_end":398904,"line_start":593,"line_end":593,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":399044,"byte_end":399051,"line_start":599,"line_end":599,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":399191,"byte_end":399198,"line_start":605,"line_end":605,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":399338,"byte_end":399344,"line_start":611,"line_end":611,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":399484,"byte_end":399492,"line_start":617,"line_end":617,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":399632,"byte_end":399639,"line_start":623,"line_end":623,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":399853,"byte_end":399864,"line_start":630,"line_end":630,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":400115,"byte_end":400118,"line_start":643,"line_end":643,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":417176,"byte_end":417181,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1359},{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":421956,"byte_end":421961,"line_start":199,"line_end":199,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":422554,"byte_end":422559,"line_start":222,"line_end":222,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":425521,"byte_end":425532,"line_start":79,"line_end":79,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":430309,"byte_end":430320,"line_start":216,"line_end":216,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":436439,"byte_end":436444,"line_start":131,"line_end":131,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":437729,"byte_end":437733,"line_start":165,"line_end":165,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1425}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":438356,"byte_end":438361,"line_start":187,"line_end":187,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":440152,"byte_end":440156,"line_start":222,"line_end":222,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":448263,"byte_end":448267,"line_start":251,"line_end":251,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":448385,"byte_end":448389,"line_start":257,"line_end":257,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":458784,"byte_end":458793,"line_start":508,"line_end":508,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1454}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":459055,"byte_end":459064,"line_start":518,"line_end":518,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":459411,"byte_end":459418,"line_start":530,"line_end":530,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":460149,"byte_end":460162,"line_start":552,"line_end":552,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":460565,"byte_end":460575,"line_start":564,"line_end":564,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1462}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":461799,"byte_end":461808,"line_start":598,"line_end":598,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":461988,"byte_end":461997,"line_start":606,"line_end":606,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":462183,"byte_end":462192,"line_start":614,"line_end":614,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":462479,"byte_end":462488,"line_start":624,"line_end":624,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1470}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":462661,"byte_end":462669,"line_start":632,"line_end":632,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":463308,"byte_end":463318,"line_start":651,"line_end":651,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":463821,"byte_end":463831,"line_start":667,"line_end":667,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":463962,"byte_end":463977,"line_start":673,"line_end":673,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":464340,"byte_end":464355,"line_start":688,"line_end":688,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1482},{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":465683,"byte_end":465696,"line_start":723,"line_end":723,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":466448,"byte_end":466457,"line_start":744,"line_end":744,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":466735,"byte_end":466744,"line_start":754,"line_end":754,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":466866,"byte_end":466875,"line_start":760,"line_end":760,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1491}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":467182,"byte_end":467191,"line_start":770,"line_end":770,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":467851,"byte_end":467864,"line_start":790,"line_end":790,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":468280,"byte_end":468283,"line_start":803,"line_end":803,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":468497,"byte_end":468503,"line_start":812,"line_end":812,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":468907,"byte_end":468916,"line_start":832,"line_end":832,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":469134,"byte_end":469143,"line_start":840,"line_end":840,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":469456,"byte_end":469463,"line_start":850,"line_end":850,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":469873,"byte_end":469886,"line_start":863,"line_end":863,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":470163,"byte_end":470173,"line_start":872,"line_end":872,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":470929,"byte_end":470938,"line_start":892,"line_end":892,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":471083,"byte_end":471092,"line_start":898,"line_end":898,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":471309,"byte_end":471317,"line_start":906,"line_end":906,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":471481,"byte_end":471496,"line_start":912,"line_end":912,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":471683,"byte_end":471696,"line_start":919,"line_end":919,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":471884,"byte_end":471893,"line_start":926,"line_end":926,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":472109,"byte_end":472118,"line_start":934,"line_end":934,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":472334,"byte_end":472343,"line_start":942,"line_end":942,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":472494,"byte_end":472503,"line_start":948,"line_end":948,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":472641,"byte_end":472653,"line_start":954,"line_end":954,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":472791,"byte_end":472801,"line_start":960,"line_end":960,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":473143,"byte_end":473152,"line_start":972,"line_end":972,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":473445,"byte_end":473458,"line_start":982,"line_end":982,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":473731,"byte_end":473734,"line_start":991,"line_end":991,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":474301,"byte_end":474305,"line_start":15,"line_end":15,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":474881,"byte_end":474892,"line_start":40,"line_end":40,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":475726,"byte_end":475739,"line_start":74,"line_end":74,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":475811,"byte_end":475824,"line_start":80,"line_end":80,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":479702,"byte_end":479706,"line_start":212,"line_end":212,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":479845,"byte_end":479860,"line_start":218,"line_end":218,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":480940,"byte_end":480970,"line_start":249,"line_end":249,"column_start":20,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":481852,"byte_end":481881,"line_start":275,"line_end":275,"column_start":20,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":482252,"byte_end":482263,"line_start":286,"line_end":286,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":482392,"byte_end":482403,"line_start":292,"line_end":292,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":483412,"byte_end":483419,"line_start":322,"line_end":322,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":483699,"byte_end":483709,"line_start":333,"line_end":333,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":484551,"byte_end":484555,"line_start":358,"line_end":358,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":490876,"byte_end":490880,"line_start":529,"line_end":529,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":491073,"byte_end":491084,"line_start":536,"line_end":536,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":491270,"byte_end":491283,"line_start":543,"line_end":543,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":491728,"byte_end":491743,"line_start":557,"line_end":557,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":492950,"byte_end":492980,"line_start":584,"line_end":584,"column_start":23,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1629}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":495347,"byte_end":495354,"line_start":640,"line_end":640,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":495578,"byte_end":495588,"line_start":648,"line_end":648,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1633}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":495819,"byte_end":495848,"line_start":656,"line_end":656,"column_start":23,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":496096,"byte_end":496103,"line_start":665,"line_end":665,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":499187,"byte_end":499198,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":503388,"byte_end":503394,"line_start":150,"line_end":150,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1691},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":503981,"byte_end":503996,"line_start":161,"line_end":161,"column_start":30,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":510844,"byte_end":510851,"line_start":350,"line_end":350,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1711}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":514610,"byte_end":514615,"line_start":96,"line_end":96,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1726},{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":515136,"byte_end":515142,"line_start":115,"line_end":115,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":515255,"byte_end":515263,"line_start":120,"line_end":120,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":1733}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":515486,"byte_end":515492,"line_start":131,"line_end":131,"column_start":37,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":515585,"byte_end":515590,"line_start":138,"line_end":138,"column_start":21,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":517533,"byte_end":517543,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1767},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":527340,"byte_end":527350,"line_start":363,"line_end":363,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":527551,"byte_end":527561,"line_start":374,"line_end":374,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1797}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":527766,"byte_end":527776,"line_start":385,"line_end":385,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":527973,"byte_end":527983,"line_start":393,"line_end":393,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":528565,"byte_end":528575,"line_start":412,"line_end":412,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":529399,"byte_end":529409,"line_start":446,"line_end":446,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":529800,"byte_end":529805,"line_start":462,"line_end":462,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1845},{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":530103,"byte_end":530108,"line_start":473,"line_end":473,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1853}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":530256,"byte_end":530261,"line_start":480,"line_end":480,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1858}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":530761,"byte_end":530769,"line_start":499,"line_end":499,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1869},{"krate":0,"index":1870}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":531087,"byte_end":531095,"line_start":510,"line_end":510,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1877}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":531503,"byte_end":531512,"line_start":527,"line_end":527,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1881},{"krate":0,"index":1882}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":531785,"byte_end":531794,"line_start":538,"line_end":538,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1888}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":532247,"byte_end":532255,"line_start":557,"line_end":557,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1892},{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":532399,"byte_end":532407,"line_start":565,"line_end":565,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1897}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":533263,"byte_end":533270,"line_start":593,"line_end":593,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":533456,"byte_end":533460,"line_start":602,"line_end":602,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1919}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":533602,"byte_end":533606,"line_start":610,"line_end":610,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1923},{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":533756,"byte_end":533760,"line_start":618,"line_end":618,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1928}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":533861,"byte_end":533872,"line_start":624,"line_end":624,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1933},{"krate":0,"index":1934}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":534116,"byte_end":534127,"line_start":635,"line_end":635,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1941}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":534275,"byte_end":534286,"line_start":642,"line_end":642,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":534490,"byte_end":534491,"line_start":651,"line_end":651,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1951}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":535113,"byte_end":535120,"line_start":675,"line_end":675,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1963}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":535295,"byte_end":535302,"line_start":683,"line_end":683,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1969},{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":535456,"byte_end":535463,"line_start":691,"line_end":691,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":535564,"byte_end":535578,"line_start":697,"line_end":697,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1979},{"krate":0,"index":1980}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":535830,"byte_end":535844,"line_start":708,"line_end":708,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1987}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":536284,"byte_end":536288,"line_start":726,"line_end":726,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":537854,"byte_end":537864,"line_start":777,"line_end":777,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2000},{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":538209,"byte_end":538219,"line_start":792,"line_end":792,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2005}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":538703,"byte_end":538713,"line_start":811,"line_end":811,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":538923,"byte_end":538927,"line_start":821,"line_end":821,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2019}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":542695,"byte_end":542696,"line_start":118,"line_end":118,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2035}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":543116,"byte_end":543125,"line_start":132,"line_end":132,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":543422,"byte_end":543432,"line_start":142,"line_end":142,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2045}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":545565,"byte_end":545566,"line_start":75,"line_end":75,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2060}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":545965,"byte_end":545978,"line_start":88,"line_end":88,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2063}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":549578,"byte_end":549579,"line_start":96,"line_end":96,"column_start":34,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":549606,"byte_end":549607,"line_start":99,"line_end":99,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\..\\gen_helper.rs","byte_start":667989,"byte_end":667993,"line_start":87,"line_end":87,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2892}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":689759,"byte_end":689769,"line_start":87,"line_end":87,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2987},{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":692097,"byte_end":692098,"line_start":152,"line_end":152,"column_start":61,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":692174,"byte_end":692185,"line_start":158,"line_end":158,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2999}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":692421,"byte_end":692422,"line_start":168,"line_end":168,"column_start":63,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":738396,"byte_end":738407,"line_start":161,"line_end":161,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3011}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":701565,"byte_end":701576,"line_start":270,"line_end":270,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3058}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":701774,"byte_end":701785,"line_start":278,"line_end":278,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3061}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":701934,"byte_end":701945,"line_start":284,"line_end":284,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3064}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":704179,"byte_end":704189,"line_start":352,"line_end":352,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3068},{"krate":0,"index":3069}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":704313,"byte_end":704323,"line_start":360,"line_end":360,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":704656,"byte_end":704663,"line_start":370,"line_end":370,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3076}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":705542,"byte_end":705549,"line_start":395,"line_end":395,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3082},{"krate":0,"index":3083}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":706109,"byte_end":706120,"line_start":415,"line_end":415,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3086},{"krate":0,"index":3088},{"krate":0,"index":3090},{"krate":0,"index":3092},{"krate":0,"index":3094},{"krate":0,"index":3096},{"krate":0,"index":3099},{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3104},{"krate":0,"index":3108},{"krate":0,"index":3109}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":726736,"byte_end":726739,"line_start":986,"line_end":986,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3112}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":726874,"byte_end":726880,"line_start":992,"line_end":992,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3115}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":727083,"byte_end":727094,"line_start":1002,"line_end":1002,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3117}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":727246,"byte_end":727255,"line_start":1008,"line_end":1008,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3120}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":727510,"byte_end":727515,"line_start":1017,"line_end":1017,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3123}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":728053,"byte_end":728058,"line_start":1032,"line_end":1032,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3126}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":728321,"byte_end":728328,"line_start":1041,"line_end":1041,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3129}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":730784,"byte_end":730785,"line_start":1109,"line_end":1109,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3141},{"krate":0,"index":3142},{"krate":0,"index":3143}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":731732,"byte_end":731739,"line_start":1143,"line_end":1143,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3145}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":738889,"byte_end":738893,"line_start":7,"line_end":7,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3154}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":738989,"byte_end":738993,"line_start":13,"line_end":13,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3158}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":739095,"byte_end":739099,"line_start":19,"line_end":19,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3162}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\print.rs","byte_start":740148,"byte_end":740163,"line_start":6,"line_end":6,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\thread.rs","byte_start":740724,"byte_end":740735,"line_start":13,"line_end":13,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\thread.rs","byte_start":740850,"byte_end":740861,"line_start":16,"line_end":16,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\thread.rs","byte_start":740877,"byte_end":740888,"line_start":18,"line_end":18,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3217},{"krate":0,"index":3218}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\thread.rs","byte_start":741237,"byte_end":741248,"line_start":35,"line_end":35,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3221}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":744112,"byte_end":744117,"line_start":46,"line_end":46,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3256},{"krate":0,"index":3258},{"krate":0,"index":3263},{"krate":0,"index":3264}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":749325,"byte_end":749330,"line_start":185,"line_end":185,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3268}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":749495,"byte_end":749500,"line_start":191,"line_end":191,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3270}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":749637,"byte_end":749642,"line_start":197,"line_end":197,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3272}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":750090,"byte_end":750095,"line_start":213,"line_end":213,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3274}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":750189,"byte_end":750194,"line_start":219,"line_end":219,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3276}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10778,"byte_end":10783,"line_start":296,"line_end":296,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10807,"byte_end":10812,"line_start":299,"line_end":299,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":57}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14974,"byte_end":14980,"line_start":410,"line_end":410,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1649}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":15018,"byte_end":15021,"line_start":412,"line_end":412,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1712}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":15031,"byte_end":15041,"line_start":413,"line_end":413,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":1741}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":15235,"byte_end":15246,"line_start":420,"line_end":420,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":2020}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":15482,"byte_end":15499,"line_start":429,"line_end":429,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":2046}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":15565,"byte_end":15572,"line_start":432,"line_end":432,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2064}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":16869,"byte_end":16874,"line_start":468,"line_end":468,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":2082}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":19911,"byte_end":19917,"line_start":553,"line_end":553,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2911}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20057,"byte_end":20062,"line_start":563,"line_end":563,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3004}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":698875,"byte_end":698886,"line_start":192,"line_end":192,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":3005}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":31419,"byte_end":31426,"line_start":65,"line_end":65,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":41791,"byte_end":41797,"line_start":131,"line_end":131,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":92},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":42294,"byte_end":42299,"line_start":156,"line_end":156,"column_start":26,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":15,"index":765},"to":{"krate":0,"index":92}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44301,"byte_end":44302,"line_start":220,"line_end":220,"column_start":42,"column_end":43},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":104},"to":{"krate":0,"index":92}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44366,"byte_end":44367,"line_start":223,"line_end":223,"column_start":32,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":106},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":52477,"byte_end":52487,"line_start":504,"line_end":504,"column_start":19,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3339},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":52645,"byte_end":52655,"line_start":511,"line_end":511,"column_start":16,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3339},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":53236,"byte_end":53246,"line_start":530,"line_end":530,"column_start":16,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3339},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":53625,"byte_end":53635,"line_start":547,"line_end":547,"column_start":26,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3339},"to":{"krate":0,"index":92}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":53683,"byte_end":53688,"line_start":550,"line_end":550,"column_start":16,"column_end":21},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":5404},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":53909,"byte_end":53914,"line_start":561,"line_end":561,"column_start":16,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":5394},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54130,"byte_end":54137,"line_start":572,"line_end":572,"column_start":16,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":5399},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54358,"byte_end":54363,"line_start":583,"line_end":583,"column_start":16,"column_end":21},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":5409},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":71619,"byte_end":71624,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":12}},"from":{"krate":15,"index":765},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":72005,"byte_end":72010,"line_start":52,"line_end":52,"column_start":16,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":15,"index":765},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":72663,"byte_end":72668,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":15,"index":765},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":72790,"byte_end":72797,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":77530,"byte_end":77539,"line_start":133,"line_end":133,"column_start":6,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":5425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87053,"byte_end":87057,"line_start":439,"line_end":439,"column_start":6,"column_end":10},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":5448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":89205,"byte_end":89206,"line_start":512,"line_end":512,"column_start":33,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":222},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":90963,"byte_end":90970,"line_start":573,"line_end":573,"column_start":10,"column_end":17},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":91182,"byte_end":91186,"line_start":581,"line_end":581,"column_start":20,"column_end":24},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":5448},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":91384,"byte_end":91392,"line_start":588,"line_end":588,"column_start":20,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":5460},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":91595,"byte_end":91608,"line_start":595,"line_end":595,"column_start":20,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":5466},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":91817,"byte_end":91827,"line_start":602,"line_end":602,"column_start":20,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":5478},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":93352,"byte_end":93361,"line_start":651,"line_end":651,"column_start":23,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":5425},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":93780,"byte_end":93788,"line_start":664,"line_end":664,"column_start":23,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":5460},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":94047,"byte_end":94060,"line_start":673,"line_end":673,"column_start":23,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":5466},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":96109,"byte_end":96115,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":5500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99800,"byte_end":99807,"line_start":185,"line_end":185,"column_start":20,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":5489},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":100754,"byte_end":100765,"line_start":212,"line_end":212,"column_start":20,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":5511},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":101054,"byte_end":101067,"line_start":222,"line_end":222,"column_start":20,"column_end":33},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":5516},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":101359,"byte_end":101364,"line_start":232,"line_end":232,"column_start":10,"column_end":15},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":5523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":102150,"byte_end":102160,"line_start":256,"line_end":256,"column_start":20,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":5537},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":102492,"byte_end":102502,"line_start":268,"line_end":268,"column_start":10,"column_end":20},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":5537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":104400,"byte_end":104407,"line_start":324,"line_end":324,"column_start":23,"column_end":30},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":5489},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":104804,"byte_end":104815,"line_start":336,"line_end":336,"column_start":23,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":5511},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105032,"byte_end":105045,"line_start":344,"line_end":344,"column_start":23,"column_end":36},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":5516},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105264,"byte_end":105269,"line_start":352,"line_end":352,"column_start":23,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":5523},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105665,"byte_end":105674,"line_start":364,"line_end":364,"column_start":23,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":5551},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105817,"byte_end":105825,"line_start":370,"line_end":370,"column_start":23,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":5555},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105971,"byte_end":105984,"line_start":376,"line_end":376,"column_start":23,"column_end":36},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":5559},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":124554,"byte_end":124558,"line_start":530,"line_end":530,"column_start":6,"column_end":10},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":5648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":127802,"byte_end":127807,"line_start":603,"line_end":603,"column_start":22,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":6059},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":139843,"byte_end":139853,"line_start":1013,"line_end":1013,"column_start":10,"column_end":20},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":6299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":141031,"byte_end":141035,"line_start":1044,"line_end":1044,"column_start":20,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5648},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":166132,"byte_end":166139,"line_start":1711,"line_end":1711,"column_start":20,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5826},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":168016,"byte_end":168022,"line_start":1770,"line_end":1770,"column_start":20,"column_end":26},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":5853},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":169228,"byte_end":169239,"line_start":1809,"line_end":1809,"column_start":20,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":5869},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":170230,"byte_end":170238,"line_start":1838,"line_end":1838,"column_start":20,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":5879},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":170964,"byte_end":170973,"line_start":1861,"line_end":1861,"column_start":20,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":5886},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":171760,"byte_end":171771,"line_start":1886,"line_end":1886,"column_start":20,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":5777},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":177839,"byte_end":177848,"line_start":2056,"line_end":2056,"column_start":20,"column_end":29},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":5861},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":178664,"byte_end":178669,"line_start":2081,"line_end":2081,"column_start":20,"column_end":25},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":6087},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":178913,"byte_end":178919,"line_start":2091,"line_end":2091,"column_start":20,"column_end":26},"kind":{"Impl":{"id":83}},"from":{"krate":2,"index":29426},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":180970,"byte_end":180980,"line_start":2153,"line_end":2153,"column_start":20,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":6080},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":185321,"byte_end":185332,"line_start":2292,"line_end":2292,"column_start":20,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":6276},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":185929,"byte_end":185937,"line_start":2308,"line_end":2308,"column_start":20,"column_end":28},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":5953},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":186435,"byte_end":186440,"line_start":2326,"line_end":2326,"column_start":20,"column_end":25},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":6092},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":186731,"byte_end":186736,"line_start":2337,"line_end":2337,"column_start":10,"column_end":15},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":6092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":189619,"byte_end":189623,"line_start":2417,"line_end":2417,"column_start":20,"column_end":24},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":6097},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":194569,"byte_end":194572,"line_start":2552,"line_end":2552,"column_start":20,"column_end":23},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":6148},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":201895,"byte_end":201901,"line_start":2772,"line_end":2772,"column_start":20,"column_end":26},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":6050},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":202304,"byte_end":202307,"line_start":2785,"line_end":2785,"column_start":20,"column_end":23},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":6266},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":204003,"byte_end":204008,"line_start":2832,"line_end":2832,"column_start":20,"column_end":25},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":6059},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":209545,"byte_end":209551,"line_start":3016,"line_end":3016,"column_start":10,"column_end":16},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":6050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":211216,"byte_end":211223,"line_start":3075,"line_end":3075,"column_start":23,"column_end":30},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":5771},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":211493,"byte_end":211504,"line_start":3084,"line_end":3084,"column_start":23,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":5777},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":211819,"byte_end":211828,"line_start":3094,"line_end":3094,"column_start":23,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":5784},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":212162,"byte_end":212170,"line_start":3104,"line_end":3104,"column_start":23,"column_end":31},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":5790},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":212511,"byte_end":212525,"line_start":3115,"line_end":3115,"column_start":23,"column_end":37},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":5797},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":213006,"byte_end":213021,"line_start":3129,"line_end":3129,"column_start":23,"column_end":38},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":6064},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":213328,"byte_end":213349,"line_start":3139,"line_end":3139,"column_start":23,"column_end":44},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":6071},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":213667,"byte_end":213676,"line_start":3149,"line_end":3149,"column_start":23,"column_end":32},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":5807},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":214297,"byte_end":214307,"line_start":3164,"line_end":3164,"column_start":23,"column_end":33},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":5813},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":214583,"byte_end":214592,"line_start":3173,"line_end":3173,"column_start":23,"column_end":32},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":5820},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":214826,"byte_end":214833,"line_start":3181,"line_end":3181,"column_start":23,"column_end":30},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":5826},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":215027,"byte_end":215035,"line_start":3188,"line_end":3188,"column_start":23,"column_end":31},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":5831},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":215343,"byte_end":215351,"line_start":3198,"line_end":3198,"column_start":23,"column_end":31},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":5838},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":216374,"byte_end":216381,"line_start":3228,"line_end":3228,"column_start":23,"column_end":30},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":5845},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":216746,"byte_end":216752,"line_start":3239,"line_end":3239,"column_start":23,"column_end":29},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":5853},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":217134,"byte_end":217143,"line_start":3250,"line_end":3250,"column_start":23,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":5861},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":217657,"byte_end":217668,"line_start":3264,"line_end":3264,"column_start":23,"column_end":34},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":5869},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":218265,"byte_end":218273,"line_start":3280,"line_end":3280,"column_start":23,"column_end":31},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5879},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":218736,"byte_end":218745,"line_start":3293,"line_end":3293,"column_start":23,"column_end":32},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5886},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":219644,"byte_end":219653,"line_start":3314,"line_end":3314,"column_start":23,"column_end":32},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":6025},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":219970,"byte_end":219982,"line_start":3324,"line_end":3324,"column_start":23,"column_end":35},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":6032},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":220253,"byte_end":220262,"line_start":3333,"line_end":3333,"column_start":23,"column_end":32},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":6038},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":220534,"byte_end":220545,"line_start":3342,"line_end":3342,"column_start":23,"column_end":34},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":5894},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":221518,"byte_end":221528,"line_start":3369,"line_end":3369,"column_start":23,"column_end":33},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":5906},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":221953,"byte_end":221962,"line_start":3381,"line_end":3381,"column_start":23,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":5912},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":222380,"byte_end":222390,"line_start":3393,"line_end":3393,"column_start":23,"column_end":33},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":5918},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":222701,"byte_end":222713,"line_start":3403,"line_end":3403,"column_start":23,"column_end":35},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":5925},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":222989,"byte_end":222998,"line_start":3412,"line_end":3412,"column_start":23,"column_end":32},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":5932},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":223282,"byte_end":223288,"line_start":3421,"line_end":3421,"column_start":23,"column_end":29},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":6050},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":223566,"byte_end":223571,"line_start":3430,"line_end":3430,"column_start":23,"column_end":28},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":6059},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":223812,"byte_end":223821,"line_start":3438,"line_end":3438,"column_start":23,"column_end":32},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":5939},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":224166,"byte_end":224175,"line_start":3449,"line_end":3449,"column_start":23,"column_end":32},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":5946},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":224591,"byte_end":224599,"line_start":3461,"line_end":3461,"column_start":23,"column_end":31},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":5953},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":224848,"byte_end":224861,"line_start":3469,"line_end":3469,"column_start":23,"column_end":36},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":5959},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":225178,"byte_end":225187,"line_start":3479,"line_end":3479,"column_start":23,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":5966},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":225501,"byte_end":225513,"line_start":3489,"line_end":3489,"column_start":23,"column_end":35},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":5973},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":225789,"byte_end":225799,"line_start":3498,"line_end":3498,"column_start":23,"column_end":33},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":5979},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":226072,"byte_end":226081,"line_start":3507,"line_end":3507,"column_start":23,"column_end":32},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":5985},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":226304,"byte_end":226314,"line_start":3515,"line_end":3515,"column_start":23,"column_end":33},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":5990},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":226898,"byte_end":226908,"line_start":3531,"line_end":3531,"column_start":23,"column_end":33},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5999},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":227365,"byte_end":227374,"line_start":3544,"line_end":3544,"column_start":23,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":6013},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":227646,"byte_end":227655,"line_start":3553,"line_end":3553,"column_start":23,"column_end":32},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":6007},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":228016,"byte_end":228023,"line_start":3564,"line_end":3564,"column_start":23,"column_end":30},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":6019},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":228269,"byte_end":228281,"line_start":3572,"line_end":3572,"column_start":23,"column_end":35},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":6044},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":228448,"byte_end":228453,"line_start":3579,"line_end":3579,"column_start":23,"column_end":28},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":6087},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":228669,"byte_end":228679,"line_start":3587,"line_end":3587,"column_start":23,"column_end":33},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":6080},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":229073,"byte_end":229076,"line_start":3599,"line_end":3599,"column_start":23,"column_end":26},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":6266},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":229637,"byte_end":229644,"line_start":3615,"line_end":3615,"column_start":23,"column_end":30},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":6190},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":229824,"byte_end":229832,"line_start":3622,"line_end":3622,"column_start":23,"column_end":31},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":6194},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":230259,"byte_end":230268,"line_start":3635,"line_end":3635,"column_start":23,"column_end":32},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":6201},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":230851,"byte_end":230865,"line_start":3650,"line_end":3650,"column_start":23,"column_end":37},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":6208},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":231073,"byte_end":231080,"line_start":3658,"line_end":3658,"column_start":23,"column_end":30},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":6213},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":231273,"byte_end":231281,"line_start":3665,"line_end":3665,"column_start":23,"column_end":31},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":6218},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":232213,"byte_end":232219,"line_start":3687,"line_end":3687,"column_start":23,"column_end":29},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":6226},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":232432,"byte_end":232438,"line_start":3695,"line_end":3695,"column_start":23,"column_end":29},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":6231},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":232698,"byte_end":232704,"line_start":3704,"line_end":3704,"column_start":23,"column_end":29},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":6237},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":232872,"byte_end":232880,"line_start":3711,"line_end":3711,"column_start":23,"column_end":31},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":6241},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":233267,"byte_end":233275,"line_start":3723,"line_end":3723,"column_start":23,"column_end":31},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":6247},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":234576,"byte_end":234584,"line_start":3756,"line_end":3756,"column_start":23,"column_end":31},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":6256},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":234751,"byte_end":234762,"line_start":3763,"line_end":3763,"column_start":23,"column_end":34},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":6260},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":234929,"byte_end":234937,"line_start":3770,"line_end":3770,"column_start":23,"column_end":31},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":6286},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":235274,"byte_end":235279,"line_start":3781,"line_end":3781,"column_start":23,"column_end":28},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":6092},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":235527,"byte_end":235531,"line_start":3790,"line_end":3790,"column_start":23,"column_end":27},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":6097},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":236051,"byte_end":236056,"line_start":3805,"line_end":3805,"column_start":23,"column_end":28},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":6113},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239140,"byte_end":239148,"line_start":75,"line_end":75,"column_start":6,"column_end":14},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":6394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":242359,"byte_end":242369,"line_start":160,"line_end":160,"column_start":23,"column_end":33},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":242801,"byte_end":242814,"line_start":178,"line_end":178,"column_start":23,"column_end":36},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":708},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":243247,"byte_end":243256,"line_start":196,"line_end":196,"column_start":23,"column_end":32},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":243689,"byte_end":243701,"line_start":214,"line_end":214,"column_start":23,"column_end":35},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":724},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":244138,"byte_end":244149,"line_start":232,"line_end":232,"column_start":23,"column_end":34},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":244586,"byte_end":244600,"line_start":250,"line_end":250,"column_start":23,"column_end":37},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":740},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246095,"byte_end":246103,"line_start":294,"line_end":294,"column_start":6,"column_end":14},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":6394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247144,"byte_end":247156,"line_start":328,"line_end":328,"column_start":10,"column_end":22},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":6456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247863,"byte_end":247874,"line_start":352,"line_end":352,"column_start":6,"column_end":17},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":6430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":248117,"byte_end":248126,"line_start":363,"line_end":363,"column_start":22,"column_end":31},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":6421},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251809,"byte_end":251817,"line_start":484,"line_end":484,"column_start":20,"column_end":28},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":6394},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":253839,"byte_end":253851,"line_start":542,"line_end":542,"column_start":20,"column_end":32},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":6409},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":254702,"byte_end":254713,"line_start":568,"line_end":568,"column_start":20,"column_end":31},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":6430},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":256023,"byte_end":256037,"line_start":605,"line_end":605,"column_start":20,"column_end":34},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":6470},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":256751,"byte_end":256757,"line_start":626,"line_end":626,"column_start":20,"column_end":26},"kind":{"Impl":{"id":174}},"from":{"krate":2,"index":29426},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":257008,"byte_end":257017,"line_start":636,"line_end":636,"column_start":20,"column_end":29},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":6421},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":258984,"byte_end":258998,"line_start":693,"line_end":693,"column_start":20,"column_end":34},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":6483},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":259594,"byte_end":259604,"line_start":711,"line_end":711,"column_start":20,"column_end":30},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":6494},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":260377,"byte_end":260395,"line_start":733,"line_end":733,"column_start":20,"column_end":38},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":6501},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":260669,"byte_end":260679,"line_start":743,"line_end":743,"column_start":20,"column_end":30},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":6437},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":261443,"byte_end":261454,"line_start":766,"line_end":766,"column_start":20,"column_end":31},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":6510},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":262577,"byte_end":262583,"line_start":796,"line_end":796,"column_start":20,"column_end":26},"kind":{"Impl":{"id":181}},"from":{"krate":2,"index":29426},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":262833,"byte_end":262847,"line_start":806,"line_end":806,"column_start":20,"column_end":34},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":6521},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":265634,"byte_end":265642,"line_start":878,"line_end":878,"column_start":23,"column_end":31},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":6394},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":267060,"byte_end":267072,"line_start":915,"line_end":915,"column_start":27,"column_end":39},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":6449},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":269429,"byte_end":269441,"line_start":970,"line_end":970,"column_start":27,"column_end":39},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":6456},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":271407,"byte_end":271416,"line_start":1018,"line_end":1018,"column_start":27,"column_end":36},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":6463},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":271690,"byte_end":271704,"line_start":1027,"line_end":1027,"column_start":23,"column_end":37},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":6470},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":271984,"byte_end":271995,"line_start":1036,"line_end":1036,"column_start":23,"column_end":34},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":6430},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":272361,"byte_end":272370,"line_start":1047,"line_end":1047,"column_start":23,"column_end":32},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":6421},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":272902,"byte_end":272912,"line_start":1062,"line_end":1062,"column_start":23,"column_end":33},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":6494},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":273390,"byte_end":273408,"line_start":1076,"line_end":1076,"column_start":23,"column_end":41},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":6501},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":273666,"byte_end":273676,"line_start":1085,"line_end":1085,"column_start":23,"column_end":33},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":6437},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":274171,"byte_end":274182,"line_start":1099,"line_end":1099,"column_start":23,"column_end":34},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":6510},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":274442,"byte_end":274455,"line_start":1108,"line_end":1108,"column_start":23,"column_end":36},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":6533},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":274737,"byte_end":274754,"line_start":1117,"line_end":1117,"column_start":23,"column_end":40},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":6540},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":274988,"byte_end":274999,"line_start":1125,"line_end":1125,"column_start":23,"column_end":34},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":6546},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":286519,"byte_end":286523,"line_start":324,"line_end":324,"column_start":28,"column_end":32},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":6590},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":301671,"byte_end":301675,"line_start":786,"line_end":786,"column_start":20,"column_end":24},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":6590},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":307816,"byte_end":307825,"line_start":916,"line_end":916,"column_start":20,"column_end":29},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":6808},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":308802,"byte_end":308812,"line_start":943,"line_end":943,"column_start":20,"column_end":30},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":6815},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":310814,"byte_end":310829,"line_start":997,"line_end":997,"column_start":20,"column_end":35},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":6647},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":311790,"byte_end":311797,"line_start":1025,"line_end":1025,"column_start":20,"column_end":27},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":6657},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":312200,"byte_end":312207,"line_start":1038,"line_end":1038,"column_start":20,"column_end":27},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":6842},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":314209,"byte_end":314219,"line_start":1087,"line_end":1087,"column_start":20,"column_end":30},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":6666},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":314787,"byte_end":314796,"line_start":1104,"line_end":1104,"column_start":20,"column_end":29},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":6679},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":315615,"byte_end":315621,"line_start":1127,"line_end":1127,"column_start":20,"column_end":26},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":6691},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":317902,"byte_end":317907,"line_start":1185,"line_end":1185,"column_start":20,"column_end":25},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":7139},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":320407,"byte_end":320414,"line_start":1258,"line_end":1258,"column_start":20,"column_end":27},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":6703},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":321858,"byte_end":321872,"line_start":1299,"line_end":1299,"column_start":20,"column_end":34},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":6712},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":322579,"byte_end":322590,"line_start":1321,"line_end":1321,"column_start":20,"column_end":31},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":6897},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":324260,"byte_end":324273,"line_start":1363,"line_end":1363,"column_start":20,"column_end":33},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":6915},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":325976,"byte_end":325993,"line_start":1411,"line_end":1411,"column_start":20,"column_end":37},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":6923},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":326488,"byte_end":326503,"line_start":1426,"line_end":1426,"column_start":20,"column_end":35},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":6934},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":326869,"byte_end":326885,"line_start":1438,"line_end":1438,"column_start":20,"column_end":36},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":6942},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":327402,"byte_end":327410,"line_start":1455,"line_end":1455,"column_start":20,"column_end":28},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":6719},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":328048,"byte_end":328063,"line_start":1474,"line_end":1474,"column_start":20,"column_end":35},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":6730},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":329129,"byte_end":329139,"line_start":1503,"line_end":1503,"column_start":20,"column_end":30},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":6742},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":329986,"byte_end":329994,"line_start":1526,"line_end":1526,"column_start":20,"column_end":28},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":6752},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":330838,"byte_end":330847,"line_start":1549,"line_end":1549,"column_start":20,"column_end":29},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":6762},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":332566,"byte_end":332575,"line_start":1599,"line_end":1599,"column_start":20,"column_end":29},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":6771},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":334819,"byte_end":334833,"line_start":1671,"line_end":1671,"column_start":20,"column_end":34},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":6785},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":336622,"byte_end":336631,"line_start":1726,"line_end":1726,"column_start":20,"column_end":29},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":6964},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":338862,"byte_end":338876,"line_start":1782,"line_end":1782,"column_start":20,"column_end":34},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":6982},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":339635,"byte_end":339650,"line_start":1804,"line_end":1804,"column_start":20,"column_end":35},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":6992},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":342186,"byte_end":342199,"line_start":1865,"line_end":1865,"column_start":20,"column_end":33},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":6999},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":343703,"byte_end":343717,"line_start":1907,"line_end":1907,"column_start":20,"column_end":34},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":7010},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":344232,"byte_end":344240,"line_start":1924,"line_end":1924,"column_start":20,"column_end":28},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":6796},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":346686,"byte_end":346694,"line_start":1988,"line_end":1988,"column_start":20,"column_end":28},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":7034},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":349655,"byte_end":349668,"line_start":2061,"line_end":2061,"column_start":20,"column_end":33},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":7055},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":350239,"byte_end":350253,"line_start":2078,"line_end":2078,"column_start":20,"column_end":34},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":7068},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":352422,"byte_end":352434,"line_start":2133,"line_end":2133,"column_start":20,"column_end":32},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":7076},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":353121,"byte_end":353140,"line_start":2153,"line_end":2153,"column_start":20,"column_end":39},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":7088},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":353677,"byte_end":353690,"line_start":2169,"line_end":2169,"column_start":20,"column_end":33},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":7099},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":354194,"byte_end":354204,"line_start":2186,"line_end":2186,"column_start":10,"column_end":20},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":5537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":354389,"byte_end":354403,"line_start":2195,"line_end":2195,"column_start":10,"column_end":24},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":7327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":354855,"byte_end":354870,"line_start":2215,"line_end":2215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":6647},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":355413,"byte_end":355420,"line_start":2230,"line_end":2230,"column_start":23,"column_end":30},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":6657},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":355793,"byte_end":355803,"line_start":2241,"line_end":2241,"column_start":23,"column_end":33},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":6666},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":356350,"byte_end":356359,"line_start":2256,"line_end":2256,"column_start":23,"column_end":32},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":6679},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":356858,"byte_end":356864,"line_start":2270,"line_end":2270,"column_start":23,"column_end":29},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":6691},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":357484,"byte_end":357491,"line_start":2286,"line_end":2286,"column_start":23,"column_end":30},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":6703},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":358106,"byte_end":358120,"line_start":2303,"line_end":2303,"column_start":23,"column_end":37},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":6712},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":358485,"byte_end":358493,"line_start":2314,"line_end":2314,"column_start":23,"column_end":31},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":6719},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":359005,"byte_end":359020,"line_start":2328,"line_end":2328,"column_start":23,"column_end":38},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":6730},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":359674,"byte_end":359682,"line_start":2345,"line_end":2345,"column_start":23,"column_end":31},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":6752},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":360185,"byte_end":360195,"line_start":2359,"line_end":2359,"column_start":23,"column_end":33},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":6742},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":361186,"byte_end":361195,"line_start":2384,"line_end":2384,"column_start":23,"column_end":32},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":6762},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":361620,"byte_end":361629,"line_start":2396,"line_end":2396,"column_start":23,"column_end":32},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":6771},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":362406,"byte_end":362420,"line_start":2416,"line_end":2416,"column_start":23,"column_end":37},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":6785},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":362937,"byte_end":362945,"line_start":2430,"line_end":2430,"column_start":23,"column_end":31},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":6796},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":363781,"byte_end":363790,"line_start":2451,"line_end":2451,"column_start":23,"column_end":32},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":6808},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":364654,"byte_end":364664,"line_start":2472,"line_end":2472,"column_start":23,"column_end":33},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":6815},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":365318,"byte_end":365330,"line_start":2492,"line_end":2492,"column_start":23,"column_end":35},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":6826},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":365468,"byte_end":365475,"line_start":2498,"line_end":2498,"column_start":23,"column_end":30},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":6860},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":365705,"byte_end":365712,"line_start":2506,"line_end":2506,"column_start":23,"column_end":30},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":6866},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":365852,"byte_end":365861,"line_start":2512,"line_end":2512,"column_start":23,"column_end":32},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":6870},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":366089,"byte_end":366096,"line_start":2520,"line_end":2520,"column_start":23,"column_end":30},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":6876},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":366241,"byte_end":366249,"line_start":2526,"line_end":2526,"column_start":23,"column_end":31},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":6880},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":366466,"byte_end":366480,"line_start":2534,"line_end":2534,"column_start":23,"column_end":37},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":6982},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":367024,"byte_end":367039,"line_start":2549,"line_end":2549,"column_start":23,"column_end":38},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":6992},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":367657,"byte_end":367670,"line_start":2567,"line_end":2567,"column_start":23,"column_end":36},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":6999},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":368401,"byte_end":368415,"line_start":2586,"line_end":2586,"column_start":23,"column_end":37},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":7010},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":368651,"byte_end":368668,"line_start":2594,"line_end":2594,"column_start":23,"column_end":40},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":7016},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":368806,"byte_end":368819,"line_start":2600,"line_end":2600,"column_start":23,"column_end":36},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":7055},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":369366,"byte_end":369380,"line_start":2615,"line_end":2615,"column_start":23,"column_end":37},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":7068},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":369845,"byte_end":369857,"line_start":2628,"line_end":2628,"column_start":23,"column_end":35},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":7076},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":370417,"byte_end":370436,"line_start":2643,"line_end":2643,"column_start":23,"column_end":42},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":7088},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":371050,"byte_end":371063,"line_start":2659,"line_end":2659,"column_start":23,"column_end":36},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":7099},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":371299,"byte_end":371315,"line_start":2667,"line_end":2667,"column_start":23,"column_end":39},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":7105},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":371453,"byte_end":371466,"line_start":2673,"line_end":2673,"column_start":23,"column_end":36},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":6915},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":371768,"byte_end":371785,"line_start":2682,"line_end":2682,"column_start":23,"column_end":40},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":6923},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":372246,"byte_end":372261,"line_start":2695,"line_end":2695,"column_start":23,"column_end":38},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":6934},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":372586,"byte_end":372602,"line_start":2705,"line_end":2705,"column_start":23,"column_end":39},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":6942},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":372838,"byte_end":372857,"line_start":2713,"line_end":2713,"column_start":23,"column_end":42},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":6948},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":372995,"byte_end":373004,"line_start":2719,"line_end":2719,"column_start":23,"column_end":32},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":7111},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":373399,"byte_end":373408,"line_start":2731,"line_end":2731,"column_start":27,"column_end":36},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":1059},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":374087,"byte_end":374097,"line_start":2748,"line_end":2748,"column_start":23,"column_end":33},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":7157},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":374380,"byte_end":374387,"line_start":2757,"line_end":2757,"column_start":23,"column_end":30},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":7164},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\item.rs","byte_start":374579,"byte_end":374590,"line_start":2764,"line_end":2764,"column_start":23,"column_end":34},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":7169},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\file.rs","byte_start":377128,"byte_end":377132,"line_start":83,"line_end":83,"column_start":20,"column_end":24},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":7177},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\file.rs","byte_start":377764,"byte_end":377768,"line_start":107,"line_end":107,"column_start":23,"column_end":27},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":7177},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":378760,"byte_end":378768,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":7183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":380112,"byte_end":380120,"line_start":83,"line_end":83,"column_start":18,"column_end":26},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":7183},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":380281,"byte_end":380289,"line_start":90,"line_end":90,"column_start":20,"column_end":28},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":7183},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":380394,"byte_end":380402,"line_start":96,"line_end":96,"column_start":13,"column_end":21},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":7183},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":380427,"byte_end":380435,"line_start":98,"line_end":98,"column_start":21,"column_end":29},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":7183},"to":{"krate":2,"index":2077}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":380556,"byte_end":380564,"line_start":104,"line_end":104,"column_start":14,"column_end":22},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":7183},"to":{"krate":2,"index":2066}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":380677,"byte_end":380685,"line_start":110,"line_end":110,"column_start":15,"column_end":23},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":7183},"to":{"krate":2,"index":7285}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":381050,"byte_end":381058,"line_start":129,"line_end":129,"column_start":20,"column_end":28},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":7183},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":381490,"byte_end":381498,"line_start":147,"line_end":147,"column_start":23,"column_end":31},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":7183},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":385005,"byte_end":385011,"line_start":108,"line_end":108,"column_start":6,"column_end":12},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":7231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":388620,"byte_end":388630,"line_start":221,"line_end":221,"column_start":6,"column_end":16},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":7235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":389072,"byte_end":389079,"line_start":241,"line_end":241,"column_start":6,"column_end":13},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":7239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":389506,"byte_end":389513,"line_start":261,"line_end":261,"column_start":6,"column_end":13},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":7243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":389942,"byte_end":389948,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":7247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":391989,"byte_end":391997,"line_start":338,"line_end":338,"column_start":6,"column_end":14},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":7251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":393743,"byte_end":393754,"line_start":403,"line_end":403,"column_start":6,"column_end":17},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":7260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":395647,"byte_end":395650,"line_start":485,"line_end":485,"column_start":20,"column_end":23},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":7204},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":396518,"byte_end":396524,"line_start":510,"line_end":510,"column_start":20,"column_end":26},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":7231},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":396811,"byte_end":396821,"line_start":520,"line_end":520,"column_start":20,"column_end":30},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":7235},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":397117,"byte_end":397124,"line_start":530,"line_end":530,"column_start":20,"column_end":27},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":7239},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":397410,"byte_end":397417,"line_start":540,"line_end":540,"column_start":20,"column_end":27},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":7243},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":397708,"byte_end":397714,"line_start":550,"line_end":550,"column_start":20,"column_end":26},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":7247},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":398002,"byte_end":398010,"line_start":560,"line_end":560,"column_start":20,"column_end":28},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":7251},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":398307,"byte_end":398314,"line_start":570,"line_end":570,"column_start":20,"column_end":27},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":7255},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":398748,"byte_end":398754,"line_start":587,"line_end":587,"column_start":23,"column_end":29},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":7231},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":398894,"byte_end":398904,"line_start":593,"line_end":593,"column_start":23,"column_end":33},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":7235},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":399044,"byte_end":399051,"line_start":599,"line_end":599,"column_start":23,"column_end":30},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":7239},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":399191,"byte_end":399198,"line_start":605,"line_end":605,"column_start":23,"column_end":30},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":7243},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":399338,"byte_end":399344,"line_start":611,"line_end":611,"column_start":23,"column_end":29},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":7247},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":399484,"byte_end":399492,"line_start":617,"line_end":617,"column_start":23,"column_end":31},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":7251},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":399632,"byte_end":399639,"line_start":623,"line_end":623,"column_start":23,"column_end":30},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":7255},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":399853,"byte_end":399864,"line_start":630,"line_end":630,"column_start":23,"column_end":34},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":7260},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":400115,"byte_end":400118,"line_start":643,"line_end":643,"column_start":10,"column_end":13},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":7204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":417176,"byte_end":417181,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":7320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":421956,"byte_end":421961,"line_start":199,"line_end":199,"column_start":20,"column_end":25},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":7320},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":422554,"byte_end":422559,"line_start":222,"line_end":222,"column_start":23,"column_end":28},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":7320},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":425521,"byte_end":425532,"line_start":79,"line_end":79,"column_start":20,"column_end":31},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":7339},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":430309,"byte_end":430320,"line_start":216,"line_end":216,"column_start":23,"column_end":34},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":7339},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":436439,"byte_end":436444,"line_start":131,"line_end":131,"column_start":20,"column_end":25},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":7382},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":437729,"byte_end":437733,"line_start":165,"line_end":165,"column_start":20,"column_end":24},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":7470},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":438356,"byte_end":438361,"line_start":187,"line_end":187,"column_start":23,"column_end":28},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":7382},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":440152,"byte_end":440156,"line_start":222,"line_end":222,"column_start":23,"column_end":27},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":7470},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":448263,"byte_end":448267,"line_start":251,"line_end":251,"column_start":20,"column_end":24},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":7513},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":448385,"byte_end":448389,"line_start":257,"line_end":257,"column_start":10,"column_end":14},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":7513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":458784,"byte_end":458793,"line_start":508,"line_end":508,"column_start":20,"column_end":29},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":7561},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":459055,"byte_end":459064,"line_start":518,"line_end":518,"column_start":20,"column_end":29},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":7566},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":459411,"byte_end":459418,"line_start":530,"line_end":530,"column_start":20,"column_end":27},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":7573},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":460149,"byte_end":460162,"line_start":552,"line_end":552,"column_start":20,"column_end":33},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":7580},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":460565,"byte_end":460575,"line_start":564,"line_end":564,"column_start":20,"column_end":30},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":7587},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":461799,"byte_end":461808,"line_start":598,"line_end":598,"column_start":20,"column_end":29},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":7598},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":461988,"byte_end":461997,"line_start":606,"line_end":606,"column_start":20,"column_end":29},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":7632},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":462183,"byte_end":462192,"line_start":614,"line_end":614,"column_start":20,"column_end":29},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":7602},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":462479,"byte_end":462488,"line_start":624,"line_end":624,"column_start":20,"column_end":29},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":7636},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":462661,"byte_end":462669,"line_start":632,"line_end":632,"column_start":20,"column_end":28},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":7607},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":463308,"byte_end":463318,"line_start":651,"line_end":651,"column_start":10,"column_end":20},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":7665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":463821,"byte_end":463831,"line_start":667,"line_end":667,"column_start":20,"column_end":30},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":7665},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":463962,"byte_end":463977,"line_start":673,"line_end":673,"column_start":20,"column_end":35},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":7612},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":464340,"byte_end":464355,"line_start":688,"line_end":688,"column_start":10,"column_end":25},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":7612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":465683,"byte_end":465696,"line_start":723,"line_end":723,"column_start":20,"column_end":33},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":7617},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":466448,"byte_end":466457,"line_start":744,"line_end":744,"column_start":20,"column_end":29},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":7627},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":466735,"byte_end":466744,"line_start":754,"line_end":754,"column_start":20,"column_end":29},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":7622},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":466866,"byte_end":466875,"line_start":760,"line_end":760,"column_start":10,"column_end":19},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":7622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":467182,"byte_end":467191,"line_start":770,"line_end":770,"column_start":20,"column_end":29},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":7651},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":467851,"byte_end":467864,"line_start":790,"line_end":790,"column_start":20,"column_end":33},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":7656},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":468280,"byte_end":468283,"line_start":803,"line_end":803,"column_start":20,"column_end":23},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":7646},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":468497,"byte_end":468503,"line_start":812,"line_end":812,"column_start":20,"column_end":26},"kind":{"Impl":{"id":347}},"from":{"krate":2,"index":29426},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":468907,"byte_end":468916,"line_start":832,"line_end":832,"column_start":23,"column_end":32},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":7561},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":469134,"byte_end":469143,"line_start":840,"line_end":840,"column_start":23,"column_end":32},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":7566},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":469456,"byte_end":469463,"line_start":850,"line_end":850,"column_start":23,"column_end":30},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":7573},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":469873,"byte_end":469886,"line_start":863,"line_end":863,"column_start":23,"column_end":36},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":7580},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":470163,"byte_end":470173,"line_start":872,"line_end":872,"column_start":23,"column_end":33},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":7587},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":470929,"byte_end":470938,"line_start":892,"line_end":892,"column_start":23,"column_end":32},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":7598},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":471083,"byte_end":471092,"line_start":898,"line_end":898,"column_start":23,"column_end":32},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":7602},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":471309,"byte_end":471317,"line_start":906,"line_end":906,"column_start":23,"column_end":31},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":7607},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":471481,"byte_end":471496,"line_start":912,"line_end":912,"column_start":23,"column_end":38},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":7612},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":471683,"byte_end":471696,"line_start":919,"line_end":919,"column_start":23,"column_end":36},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":7617},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":471884,"byte_end":471893,"line_start":926,"line_end":926,"column_start":23,"column_end":32},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":7627},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":472109,"byte_end":472118,"line_start":934,"line_end":934,"column_start":23,"column_end":32},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":7622},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":472334,"byte_end":472343,"line_start":942,"line_end":942,"column_start":23,"column_end":32},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":7632},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":472494,"byte_end":472503,"line_start":948,"line_end":948,"column_start":23,"column_end":32},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":7636},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":472641,"byte_end":472653,"line_start":954,"line_end":954,"column_start":23,"column_end":35},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":7640},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":472791,"byte_end":472801,"line_start":960,"line_end":960,"column_start":23,"column_end":33},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":7665},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":473143,"byte_end":473152,"line_start":972,"line_end":972,"column_start":23,"column_end":32},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":7651},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":473445,"byte_end":473458,"line_start":982,"line_end":982,"column_start":23,"column_end":36},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":7656},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":473731,"byte_end":473734,"line_start":991,"line_end":991,"column_start":23,"column_end":26},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":7646},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":474301,"byte_end":474305,"line_start":15,"line_end":15,"column_start":21,"column_end":25},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":7674},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":474881,"byte_end":474892,"line_start":40,"line_end":40,"column_start":21,"column_end":32},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":7679},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":475726,"byte_end":475739,"line_start":74,"line_end":74,"column_start":18,"column_end":31},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":7684},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":475811,"byte_end":475824,"line_start":80,"line_end":80,"column_start":6,"column_end":19},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":7684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":479702,"byte_end":479706,"line_start":212,"line_end":212,"column_start":20,"column_end":24},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":7674},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":479845,"byte_end":479860,"line_start":218,"line_end":218,"column_start":20,"column_end":35},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":7695},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":480940,"byte_end":480970,"line_start":249,"line_end":249,"column_start":20,"column_end":50},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":7713},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":481852,"byte_end":481881,"line_start":275,"line_end":275,"column_start":20,"column_end":49},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":7732},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":482252,"byte_end":482263,"line_start":286,"line_end":286,"column_start":20,"column_end":31},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":7679},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":482392,"byte_end":482403,"line_start":292,"line_end":292,"column_start":10,"column_end":21},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":7679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":483412,"byte_end":483419,"line_start":322,"line_end":322,"column_start":20,"column_end":27},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":7720},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":483699,"byte_end":483709,"line_start":333,"line_end":333,"column_start":20,"column_end":30},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":7726},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":484551,"byte_end":484555,"line_start":358,"line_end":358,"column_start":10,"column_end":14},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":7674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":490876,"byte_end":490880,"line_start":529,"line_end":529,"column_start":23,"column_end":27},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":7674},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":491073,"byte_end":491084,"line_start":536,"line_end":536,"column_start":23,"column_end":34},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":7679},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":491270,"byte_end":491283,"line_start":543,"line_end":543,"column_start":23,"column_end":36},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":7684},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":491728,"byte_end":491743,"line_start":557,"line_end":557,"column_start":23,"column_end":38},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":7695},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":492950,"byte_end":492980,"line_start":584,"line_end":584,"column_start":23,"column_end":53},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":7713},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":495347,"byte_end":495354,"line_start":640,"line_end":640,"column_start":23,"column_end":30},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":7720},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":495578,"byte_end":495588,"line_start":648,"line_end":648,"column_start":23,"column_end":33},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":7726},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":495819,"byte_end":495848,"line_start":656,"line_end":656,"column_start":23,"column_end":52},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":7732},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":496096,"byte_end":496103,"line_start":665,"line_end":665,"column_start":10,"column_end":17},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":3226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":499187,"byte_end":499198,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":1682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":503388,"byte_end":503394,"line_start":150,"line_end":150,"column_start":10,"column_end":16},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":7746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":503981,"byte_end":503996,"line_start":161,"line_end":161,"column_start":30,"column_end":45},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":1692},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":510844,"byte_end":510851,"line_start":350,"line_end":350,"column_start":6,"column_end":13},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":3226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":512188,"byte_end":512193,"line_start":24,"line_end":24,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":1721}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":512205,"byte_end":512211,"line_start":24,"line_end":24,"column_start":38,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":1737},"to":{"krate":0,"index":1721}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":514610,"byte_end":514615,"line_start":96,"line_end":96,"column_start":19,"column_end":24},"kind":{"Impl":{"id":393}},"from":{"krate":15,"index":765},"to":{"krate":0,"index":1721}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":515136,"byte_end":515142,"line_start":115,"line_end":115,"column_start":24,"column_end":30},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":7767},"to":{"krate":0,"index":2990}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":515255,"byte_end":515263,"line_start":120,"line_end":120,"column_start":31,"column_end":39},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":1739},"to":{"krate":0,"index":100}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":515486,"byte_end":515492,"line_start":131,"line_end":131,"column_start":37,"column_end":43},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":7767},"to":{"krate":0,"index":2965}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":515585,"byte_end":515590,"line_start":138,"line_end":138,"column_start":21,"column_end":26},"kind":{"Impl":{"id":397}},"from":{"krate":15,"index":765},"to":{"krate":0,"index":1737}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":517533,"byte_end":517543,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":7772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":527340,"byte_end":527350,"line_start":363,"line_end":363,"column_start":32,"column_end":42},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":7772},"to":{"krate":2,"index":3947}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":527551,"byte_end":527561,"line_start":374,"line_end":374,"column_start":26,"column_end":36},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":7772},"to":{"krate":2,"index":3960}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":527766,"byte_end":527776,"line_start":385,"line_end":385,"column_start":41,"column_end":51},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":7772},"to":{"krate":2,"index":3947}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":527973,"byte_end":527983,"line_start":393,"line_end":393,"column_start":35,"column_end":45},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":7772},"to":{"krate":2,"index":3960}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":528565,"byte_end":528575,"line_start":412,"line_end":412,"column_start":29,"column_end":39},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":7772},"to":{"krate":2,"index":3951}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":529399,"byte_end":529409,"line_start":446,"line_end":446,"column_start":24,"column_end":34},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":7772},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":529800,"byte_end":529805,"line_start":462,"line_end":462,"column_start":29,"column_end":34},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":1835},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":530103,"byte_end":530108,"line_start":473,"line_end":473,"column_start":38,"column_end":43},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":1835},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":530256,"byte_end":530261,"line_start":480,"line_end":480,"column_start":26,"column_end":31},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":1835},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":530761,"byte_end":530769,"line_start":499,"line_end":499,"column_start":29,"column_end":37},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":1859},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":531087,"byte_end":531095,"line_start":510,"line_end":510,"column_start":38,"column_end":46},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":1859},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":531503,"byte_end":531512,"line_start":527,"line_end":527,"column_start":25,"column_end":34},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":7781},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":531785,"byte_end":531794,"line_start":538,"line_end":538,"column_start":34,"column_end":43},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":7781},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":532247,"byte_end":532255,"line_start":557,"line_end":557,"column_start":25,"column_end":33},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":7790},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":532399,"byte_end":532407,"line_start":565,"line_end":565,"column_start":34,"column_end":42},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":7790},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":532989,"byte_end":533006,"line_start":583,"line_end":583,"column_start":29,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":3939},"to":{"krate":0,"index":1902}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":533263,"byte_end":533270,"line_start":593,"line_end":593,"column_start":6,"column_end":13},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":3226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":533456,"byte_end":533460,"line_start":602,"line_end":602,"column_start":23,"column_end":27},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":1898},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":533602,"byte_end":533606,"line_start":610,"line_end":610,"column_start":26,"column_end":30},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":1898},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":533756,"byte_end":533760,"line_start":618,"line_end":618,"column_start":35,"column_end":39},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":1898},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":533861,"byte_end":533872,"line_start":624,"line_end":624,"column_start":29,"column_end":40},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":1906},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":534116,"byte_end":534127,"line_start":635,"line_end":635,"column_start":38,"column_end":49},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":1906},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":534275,"byte_end":534286,"line_start":642,"line_end":642,"column_start":26,"column_end":37},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":1906},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":534490,"byte_end":534491,"line_start":651,"line_end":651,"column_start":45,"column_end":46},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":1950},"to":{"krate":0,"index":1902}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":535113,"byte_end":535120,"line_start":675,"line_end":675,"column_start":6,"column_end":13},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":3226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":535295,"byte_end":535302,"line_start":683,"line_end":683,"column_start":26,"column_end":33},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":1952},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":535456,"byte_end":535463,"line_start":691,"line_end":691,"column_start":35,"column_end":42},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":1952},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":535564,"byte_end":535578,"line_start":697,"line_end":697,"column_start":29,"column_end":43},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":1956},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":535830,"byte_end":535844,"line_start":708,"line_end":708,"column_start":38,"column_end":52},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":1956},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":536284,"byte_end":536288,"line_start":726,"line_end":726,"column_start":12,"column_end":16},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":7799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":537854,"byte_end":537864,"line_start":777,"line_end":777,"column_start":29,"column_end":39},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":7772},"to":{"krate":2,"index":1780}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":538209,"byte_end":538219,"line_start":792,"line_end":792,"column_start":32,"column_end":42},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":7772},"to":{"krate":2,"index":1784}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":538703,"byte_end":538713,"line_start":811,"line_end":811,"column_start":29,"column_end":39},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":7772},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":538923,"byte_end":538927,"line_start":821,"line_end":821,"column_start":29,"column_end":33},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":7799},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":542604,"byte_end":542609,"line_start":114,"line_end":114,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":2031}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":542695,"byte_end":542696,"line_start":118,"line_end":118,"column_start":31,"column_end":32},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":2034},"to":{"krate":0,"index":2031}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":543116,"byte_end":543125,"line_start":132,"line_end":132,"column_start":21,"column_end":30},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5425},"to":{"krate":0,"index":2031}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":543422,"byte_end":543432,"line_start":142,"line_end":142,"column_start":41,"column_end":51},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":7772},"to":{"krate":0,"index":2031}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":545469,"byte_end":545474,"line_start":71,"line_end":71,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":2056}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":545565,"byte_end":545566,"line_start":75,"line_end":75,"column_start":36,"column_end":37},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":2059},"to":{"krate":0,"index":2056}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":545965,"byte_end":545978,"line_start":88,"line_end":88,"column_start":26,"column_end":39},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":214},"to":{"krate":0,"index":2056}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":549236,"byte_end":549242,"line_start":85,"line_end":85,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":2073},"to":{"krate":0,"index":2069}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":549578,"byte_end":549579,"line_start":96,"line_end":96,"column_start":34,"column_end":35},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":2075},"to":{"krate":0,"index":2073}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":549606,"byte_end":549607,"line_start":99,"line_end":99,"column_start":21,"column_end":22},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":2077},"to":{"krate":0,"index":2069}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\gen\\..\\gen_helper.rs","byte_start":667989,"byte_end":667993,"line_start":87,"line_end":87,"column_start":20,"column_end":24},"kind":{"Impl":{"id":439}},"from":{"krate":15,"index":698},"to":{"krate":0,"index":2887}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\sealed.rs","byte_start":687229,"byte_end":687233,"line_start":3,"line_end":3,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":2965}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":689759,"byte_end":689769,"line_start":87,"line_end":87,"column_start":10,"column_end":20},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":2978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":691960,"byte_end":691966,"line_start":146,"line_end":146,"column_start":17,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":2965},"to":{"krate":0,"index":2990}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":692097,"byte_end":692098,"line_start":152,"line_end":152,"column_start":61,"column_end":62},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":2993},"to":{"krate":0,"index":2990}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":692174,"byte_end":692185,"line_start":158,"line_end":158,"column_start":26,"column_end":37},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":2996},"to":{"krate":0,"index":3149}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":692421,"byte_end":692422,"line_start":168,"line_end":168,"column_start":63,"column_end":64},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":3002},"to":{"krate":0,"index":2965}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":738396,"byte_end":738407,"line_start":161,"line_end":161,"column_start":26,"column_end":37},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":3050},"to":{"krate":0,"index":3007}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":699606,"byte_end":699611,"line_start":221,"line_end":221,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":701565,"byte_end":701576,"line_start":270,"line_end":270,"column_start":19,"column_end":30},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":3050},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":701774,"byte_end":701785,"line_start":278,"line_end":278,"column_start":22,"column_end":33},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":3050},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":701934,"byte_end":701945,"line_start":284,"line_end":284,"column_start":20,"column_end":31},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":3050},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":704179,"byte_end":704189,"line_start":352,"line_end":352,"column_start":24,"column_end":34},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":7813},"to":{"krate":2,"index":1704}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":704313,"byte_end":704323,"line_start":360,"line_end":360,"column_start":14,"column_end":24},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":7813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":704656,"byte_end":704663,"line_start":370,"line_end":370,"column_start":6,"column_end":13},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":3226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":705542,"byte_end":705549,"line_start":395,"line_end":395,"column_start":6,"column_end":13},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":3226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":706109,"byte_end":706120,"line_start":415,"line_end":415,"column_start":10,"column_end":21},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":3050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":726736,"byte_end":726739,"line_start":986,"line_end":986,"column_start":26,"column_end":29},"kind":{"Impl":{"id":453}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":726874,"byte_end":726880,"line_start":992,"line_end":992,"column_start":34,"column_end":40},"kind":{"Impl":{"id":454}},"from":{"krate":2,"index":29426},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":727083,"byte_end":727094,"line_start":1002,"line_end":1002,"column_start":16,"column_end":27},"kind":{"Impl":{"id":455}},"from":{"krate":15,"index":693},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":727246,"byte_end":727255,"line_start":1008,"line_end":1008,"column_start":16,"column_end":25},"kind":{"Impl":{"id":456}},"from":{"krate":15,"index":704},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":727510,"byte_end":727515,"line_start":1017,"line_end":1017,"column_start":16,"column_end":21},"kind":{"Impl":{"id":457}},"from":{"krate":15,"index":719},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":728053,"byte_end":728058,"line_start":1032,"line_end":1032,"column_start":16,"column_end":21},"kind":{"Impl":{"id":458}},"from":{"krate":15,"index":743},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":728321,"byte_end":728328,"line_start":1041,"line_end":1041,"column_start":16,"column_end":23},"kind":{"Impl":{"id":459}},"from":{"krate":15,"index":770},"to":{"krate":0,"index":3046}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":728865,"byte_end":728870,"line_start":1057,"line_end":1057,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":3131}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":730784,"byte_end":730785,"line_start":1109,"line_end":1109,"column_start":23,"column_end":24},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":3139},"to":{"krate":0,"index":3131}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":731732,"byte_end":731739,"line_start":1143,"line_end":1143,"column_start":6,"column_end":13},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":3226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":738889,"byte_end":738893,"line_start":7,"line_end":7,"column_start":31,"column_end":35},"kind":{"Impl":{"id":462}},"from":{"krate":15,"index":698},"to":{"krate":0,"index":3149}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":738989,"byte_end":738993,"line_start":13,"line_end":13,"column_start":31,"column_end":35},"kind":{"Impl":{"id":463}},"from":{"krate":15,"index":698},"to":{"krate":0,"index":3149}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":739095,"byte_end":739099,"line_start":19,"line_end":19,"column_start":31,"column_end":35},"kind":{"Impl":{"id":464}},"from":{"krate":15,"index":698},"to":{"krate":0,"index":3149}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":739535,"byte_end":739540,"line_start":44,"line_end":44,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":3179}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\print.rs","byte_start":740148,"byte_end":740163,"line_start":6,"line_end":6,"column_start":26,"column_end":41},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":3193},"to":{"krate":17,"index":57}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\thread.rs","byte_start":740724,"byte_end":740735,"line_start":13,"line_end":13,"column_start":25,"column_end":36},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":3207},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\thread.rs","byte_start":740850,"byte_end":740861,"line_start":16,"line_end":16,"column_start":31,"column_end":42},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":3207},"to":{"krate":2,"index":1533}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\thread.rs","byte_start":740877,"byte_end":740888,"line_start":18,"line_end":18,"column_start":9,"column_end":20},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":3207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\thread.rs","byte_start":741237,"byte_end":741248,"line_start":35,"line_end":35,"column_start":26,"column_end":37},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":3207},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":744112,"byte_end":744117,"line_start":46,"line_end":46,"column_start":6,"column_end":11},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":3251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":749325,"byte_end":749330,"line_start":185,"line_end":185,"column_start":16,"column_end":21},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":3251},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":749495,"byte_end":749500,"line_start":191,"line_end":191,"column_start":18,"column_end":23},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":3251},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":749637,"byte_end":749642,"line_start":197,"line_end":197,"column_start":16,"column_end":21},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":3251},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":750090,"byte_end":750095,"line_start":213,"line_end":213,"column_start":28,"column_end":33},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":3251},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":750189,"byte_end":750194,"line_start":219,"line_end":219,"column_start":25,"column_end":30},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":3251},"to":{"krate":2,"index":2258}}]}