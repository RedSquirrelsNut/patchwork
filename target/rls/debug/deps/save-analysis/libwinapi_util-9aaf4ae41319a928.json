{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","winapi_util","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","-C","metadata=9aaf4ae41319a928","-C","extra-filename=-9aaf4ae41319a928","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--extern","winapi=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libwinapi-8be9264c61ebaba4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libwinapi_util-9aaf4ae41319a928.rmeta"},"prelude":{"crate_id":{"name":"winapi_util","disambiguator":[4610850028362120735,4711611260241363649]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","num":14,"id":{"name":"winapi","disambiguator":[16884225663357164607,15698575546599551137]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","byte_start":0,"byte_end":1201,"line_start":1,"line_end":32,"column_start":1,"column_end":9}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","byte_start":989,"byte_end":990,"line_start":23,"line_end":23,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"AsHandleRef, HandleRef","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","byte_start":0,"byte_end":1201,"line_start":1,"line_end":32,"column_start":1,"column_end":9},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":64},{"krate":0,"index":97}],"decl_id":null,"docs":"This crate provides a smattering of safe routines for parts of winapi. The\nprimary purpose of this crate is to serve as a dumping ground for various\nutility functions that make interactions with winapi safe. This permits the\ncentralization of `unsafe` when dealing with Windows APIs, and thus makes it\neasier to audit.\n\nA key abstraction in this crate is the combination of the\n[`Handle`](struct.Handle.html)\nand\n[`HandleRef`](struct.HandleRef.html)\ntypes. Both represent a valid Windows handle to an I/O-like object, where\n`Handle` is owned (the resource is closed when the handle is dropped) and\n`HandleRef` is borrowed (the resource is not closed when the handle is\ndropped). Many of the routines in this crate work on handles and accept\nanything that can be safely converted into a `HandleRef`. This includes\nstandard library types such as `File`, `Stdin`, `Stdout` and `Stderr`.\n\nNote that this crate is completely empty on non-Windows platforms.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"console","qualname":"::console","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":35},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":182},{"krate":0,"index":181},{"krate":0,"index":179},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":184},{"krate":0,"index":200},{"krate":0,"index":198},{"krate":0,"index":196},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":51},{"krate":0,"index":201},{"krate":0,"index":215},{"krate":0,"index":214},{"krate":0,"index":212},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":54},{"krate":0,"index":217},{"krate":0,"index":243},{"krate":0,"index":242},{"krate":0,"index":240},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":59}],"decl_id":null,"docs":" Safe routines for dealing with the Windows console.\n","sig":null,"attributes":[{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","byte_start":1049,"byte_end":1064,"line_start":26,"line_end":26,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":2163,"byte_end":2181,"line_start":28,"line_end":28,"column_start":8,"column_end":26},"name":"screen_buffer_info","qualname":"::console::screen_buffer_info","value":"fn <H> (h: H) -> io::Result<ScreenBufferInfo>","parent":null,"children":[],"decl_id":null,"docs":" Query the given handle for information about the console's screen buffer.\n\n The given handle should represent a console. Otherwise, an error is\n returned.\n\n This corresponds to calling [`GetConsoleScreenBufferInfo`].\n\n [`GetConsoleScreenBufferInfo`]: https://docs.microsoft.com/en-us/windows/console/getconsolescreenbufferinfo\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":2777,"byte_end":2796,"line_start":46,"line_end":46,"column_start":8,"column_end":27},"name":"set_text_attributes","qualname":"::console::set_text_attributes","value":"fn <H> (h: H, attributes: u16) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the text attributes of the console represented by the given handle.\n\n This corresponds to calling [`SetConsoleTextAttribute`].\n\n [`SetConsoleTextAttribute`]: https://docs.microsoft.com/en-us/windows/console/setconsoletextattribute\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":3277,"byte_end":3281,"line_start":63,"line_end":63,"column_start":8,"column_end":12},"name":"mode","qualname":"::console::mode","value":"fn <H> (h: H) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Query the mode of the console represented by the given handle.\n\n This corresponds to calling [`GetConsoleMode`], which describes the return\n value.\n\n [`GetConsoleMode`]: https://docs.microsoft.com/en-us/windows/console/getconsolemode\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":3763,"byte_end":3771,"line_start":78,"line_end":78,"column_start":8,"column_end":16},"name":"set_mode","qualname":"::console::set_mode","value":"fn <H> (h: H, mode: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the mode of the console represented by the given handle.\n\n This corresponds to calling [`SetConsoleMode`], which describes the format\n of the mode parameter.\n\n [`SetConsoleMode`]: https://docs.microsoft.com/en-us/windows/console/setconsolemode\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":4268,"byte_end":4284,"line_start":93,"line_end":93,"column_start":12,"column_end":28},"name":"ScreenBufferInfo","qualname":"::console::ScreenBufferInfo","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents console screen buffer information such as size, cursor position\n and styling attributes.\n\n This wraps a [`CONSOLE_SCREEN_BUFFER_INFO`].\n\n [`CONSOLE_SCREEN_BUFFER_INFO`]: https://docs.microsoft.com/en-us/windows/console/console-screen-buffer-info-str\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":4490,"byte_end":4494,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"size","qualname":"<ScreenBufferInfo>::size","value":"fn (&self) -> (i16, i16)","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the console screen buffer, in character columns and\n rows.\n\n This corresponds to `dwSize`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":4755,"byte_end":4770,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"cursor_position","qualname":"<ScreenBufferInfo>::cursor_position","value":"fn (&self) -> (i16, i16)","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of the cursor in terms of column and row\n coordinates of the console screen buffer.\n\n This corresponds to `dwCursorPosition`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":5143,"byte_end":5153,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"attributes","qualname":"<ScreenBufferInfo>::attributes","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the character attributes associated with this console.\n\n This corresponds to `wAttributes`.\n\n See [`char info`] for more details.\n\n [`char info`]: https://docs.microsoft.com/en-us/windows/console/char-info-str\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":5385,"byte_end":5400,"line_start":126,"line_end":126,"column_start":12,"column_end":27},"name":"max_window_size","qualname":"<ScreenBufferInfo>::max_window_size","value":"fn (&self) -> (i16, i16)","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum size of the console window, in character columns\n and rows, given the current screen buffer size and font and the screen\n size.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":6472,"byte_end":6479,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"Console","qualname":"::console::Console","value":"Console {  }","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"decl_id":null,"docs":" A Windows console.\n\n This represents a very limited set of functionality available to a Windows\n console. In particular, it can only change text attributes such as color\n and intensity. This may grow over time. If you need more routines, please\n file an issue and/or PR.\n\n There is no way to \"write\" to this console. Simply write to\n stdout or stderr instead, while interleaving instructions to the console\n to change text attributes.\n\n A common pitfall when using a console is to forget to flush writes to\n stdout before setting new text attributes.\n\n # Example\n ```no_run\n # #[cfg(windows)]\n # {\n use winapi_util::console::{Console, Color, Intense};\n\n let mut con = Console::stdout().unwrap();\n con.fg(Intense::Yes, Color::Cyan).unwrap();\n println!(\"This text will be intense cyan.\");\n con.reset().unwrap();\n println!(\"This text will be normal.\");\n # }\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":7336,"byte_end":7342,"line_start":192,"line_end":192,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Console>::stdout","value":"fn () -> io::Result<Console>","parent":null,"children":[],"decl_id":null,"docs":" Create a new Console to stdout.\n\n If there was a problem creating the console, then an error is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":7568,"byte_end":7574,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Console>::stderr","value":"fn () -> io::Result<Console>","parent":null,"children":[],"decl_id":null,"docs":" Create a new Console to stderr.\n\n If there was a problem creating the console, then an error is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":8038,"byte_end":8040,"line_start":213,"line_end":213,"column_start":12,"column_end":14},"name":"fg","qualname":"<Console>::fg","value":"fn (&mut self, intense: Intense, color: Color) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Apply the given intensity and color attributes to the console\n foreground.\n\n If there was a problem setting attributes on the console, then an error\n is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":8424,"byte_end":8426,"line_start":224,"line_end":224,"column_start":12,"column_end":14},"name":"bg","qualname":"<Console>::bg","value":"fn (&mut self, intense: Intense, color: Color) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Apply the given intensity and color attributes to the console\n background.\n\n If there was a problem setting attributes on the console, then an error\n is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":8924,"byte_end":8929,"line_start":237,"line_end":237,"column_start":12,"column_end":17},"name":"reset","qualname":"<Console>::reset","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Reset the console text attributes to their original settings.\n\n The original settings correspond to the text attributes on the console\n when this `Console` value was created.\n\n If there was a problem setting attributes on the console, then an error\n is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":9540,"byte_end":9571,"line_start":251,"line_end":251,"column_start":12,"column_end":43},"name":"set_virtual_terminal_processing","qualname":"<Console>::set_virtual_terminal_processing","value":"fn (&mut self, yes: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Toggle virtual terminal processing.\n\n This method attempts to toggle virtual terminal processing for this\n console. If there was a problem toggling it, then an error returned.\n On success, the caller may assume that toggling it was successful.\n\n When virtual terminal processing is enabled, characters emitted to the\n console are parsed for VT100 and similar control character sequences\n that control color and other similar operations.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":10849,"byte_end":10852,"line_start":300,"line_end":300,"column_start":5,"column_end":8},"name":"Yes","qualname":"::console::Intense::Yes","value":"Intense::Yes","parent":{"krate":0,"index":201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":10858,"byte_end":10860,"line_start":301,"line_end":301,"column_start":5,"column_end":7},"name":"No","qualname":"::console::Intense::No","value":"Intense::No","parent":{"krate":0,"index":201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":10835,"byte_end":10842,"line_start":299,"line_end":299,"column_start":10,"column_end":17},"name":"Intense","qualname":"::console::Intense","value":"Intense::{Yes, No}","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":204}],"decl_id":null,"docs":" Whether to use intense colors or not.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":10758,"byte_end":10780,"line_start":297,"line_end":297,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":11482,"byte_end":11487,"line_start":333,"line_end":333,"column_start":5,"column_end":10},"name":"Black","qualname":"::console::Color::Black","value":"Color::Black","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":11493,"byte_end":11497,"line_start":334,"line_end":334,"column_start":5,"column_end":9},"name":"Blue","qualname":"::console::Color::Blue","value":"Color::Blue","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":11503,"byte_end":11508,"line_start":335,"line_end":335,"column_start":5,"column_end":10},"name":"Green","qualname":"::console::Color::Green","value":"Color::Green","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":11514,"byte_end":11517,"line_start":336,"line_end":336,"column_start":5,"column_end":8},"name":"Red","qualname":"::console::Color::Red","value":"Color::Red","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":11523,"byte_end":11527,"line_start":337,"line_end":337,"column_start":5,"column_end":9},"name":"Cyan","qualname":"::console::Color::Cyan","value":"Color::Cyan","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":11533,"byte_end":11540,"line_start":338,"line_end":338,"column_start":5,"column_end":12},"name":"Magenta","qualname":"::console::Color::Magenta","value":"Color::Magenta","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":11546,"byte_end":11552,"line_start":339,"line_end":339,"column_start":5,"column_end":11},"name":"Yellow","qualname":"::console::Color::Yellow","value":"Color::Yellow","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":11558,"byte_end":11563,"line_start":340,"line_end":340,"column_start":5,"column_end":10},"name":"White","qualname":"::console::Color::White","value":"Color::White","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":11470,"byte_end":11475,"line_start":332,"line_end":332,"column_start":10,"column_end":15},"name":"Color","qualname":"::console::Color","value":"Color::{Black, Blue, Green, Red, Cyan, Magenta, Yellow, White}","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232}],"decl_id":null,"docs":" The set of available colors for use with a Windows console.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":11393,"byte_end":11415,"line_start":330,"line_end":330,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"file","qualname":"::file","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":81},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":91},{"krate":0,"index":96}],"decl_id":null,"docs":" Safe routines for dealing with files and handles on Windows.\n","sig":null,"attributes":[{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","byte_start":1147,"byte_end":1162,"line_start":29,"line_end":29,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":13148,"byte_end":13159,"line_start":22,"line_end":22,"column_start":8,"column_end":19},"name":"information","qualname":"::file::information","value":"fn <H> (h: H) -> io::Result<Information>","parent":null,"children":[],"decl_id":null,"docs":" Return various pieces of information about a file.\n\n This includes information such as a file's size, unique identifier and\n time related fields.\n\n This corresponds to calling [`GetFileInformationByHandle`].\n\n [`GetFileInformationByHandle`]: https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/nf-fileapi-getfileinformationbyhandle\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":13779,"byte_end":13782,"line_start":40,"line_end":40,"column_start":8,"column_end":11},"name":"typ","qualname":"::file::typ","value":"fn <H> (h: H) -> io::Result<Type>","parent":null,"children":[],"decl_id":null,"docs":" Returns the file type of the given handle.\n\n If there was a problem querying the file type, then an error is returned.\n\n This corresponds to calling [`GetFileType`].\n\n [`GetFileType`]: https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/nf-fileapi-getfiletype\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":14141,"byte_end":14150,"line_start":52,"line_end":52,"column_start":8,"column_end":17},"name":"is_hidden","qualname":"::file::is_hidden","value":"fn (file_attributes: u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the given file attributes contain the\n `FILE_ATTRIBUTE_HIDDEN` attribute.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":14542,"byte_end":14553,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"Information","qualname":"::file::Information","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents file information such as creation time, file size, etc.\n\n This wraps a [`BY_HANDLE_FILE_INFORMATION`].\n\n [`BY_HANDLE_FILE_INFORMATION`]: https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/ns-fileapi-_by_handle_file_information\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":14703,"byte_end":14718,"line_start":68,"line_end":68,"column_start":12,"column_end":27},"name":"file_attributes","qualname":"<Information>::file_attributes","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns file attributes.\n\n This corresponds to `dwFileAttributes`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":14901,"byte_end":14910,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"is_hidden","qualname":"<Information>::is_hidden","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this file information has the\n `FILE_ATTRIBUTE_HIDDEN` attribute.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":15091,"byte_end":15104,"line_start":81,"line_end":81,"column_start":12,"column_end":25},"name":"creation_time","qualname":"<Information>::creation_time","value":"fn (&self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Return the creation time, if one exists.\n\n This corresponds to `ftCreationTime`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":15302,"byte_end":15318,"line_start":88,"line_end":88,"column_start":12,"column_end":28},"name":"last_access_time","qualname":"<Information>::last_access_time","value":"fn (&self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Return the last access time, if one exists.\n\n This corresponds to `ftLastAccessTime`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":15516,"byte_end":15531,"line_start":95,"line_end":95,"column_start":12,"column_end":27},"name":"last_write_time","qualname":"<Information>::last_write_time","value":"fn (&self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Return the last write time, if one exists.\n\n This corresponds to `ftLastWriteTime`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":15750,"byte_end":15770,"line_start":102,"line_end":102,"column_start":12,"column_end":32},"name":"volume_serial_number","qualname":"<Information>::volume_serial_number","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the serial number of the volume that the file is on.\n\n This corresponds to `dwVolumeSerialNumber`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":15960,"byte_end":15969,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"file_size","qualname":"<Information>::file_size","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the file size, in bytes.\n\n This corresponds to `nFileSizeHigh` and `nFileSizeLow`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":16184,"byte_end":16199,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"number_of_links","qualname":"<Information>::number_of_links","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the number of links to this file.\n\n This corresponds to `nNumberOfLinks`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":16411,"byte_end":16421,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"file_index","qualname":"<Information>::file_index","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the index of this file. The index of a file is a purpotedly\n unique identifier for a file within a particular volume.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":16749,"byte_end":16753,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"Type","qualname":"::file::Type","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Windows file type.\n\n This wraps the result of [`GetFileType`].\n\n [`GetFileType`]: https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/nf-fileapi-getfiletype\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":16902,"byte_end":16909,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"is_char","qualname":"<Type>::is_char","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this type represents a character file, which is\n typically an LPT device or a console.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":17059,"byte_end":17066,"line_start":143,"line_end":143,"column_start":12,"column_end":19},"name":"is_disk","qualname":"<Type>::is_disk","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this type represents a disk file.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":17252,"byte_end":17259,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"is_pipe","qualname":"<Type>::is_pipe","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this type represents a sock, named pipe or an\n anonymous pipe.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":17462,"byte_end":17472,"line_start":156,"line_end":156,"column_start":12,"column_end":22},"name":"is_unknown","qualname":"<Type>::is_unknown","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this type is not known.\n\n Note that this never corresponds to a failure.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":18152,"byte_end":18158,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Handle","qualname":"::win::Handle","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle represents an owned and valid Windows handle to a file-like\n object.\n\n When an owned handle is dropped, then the underlying raw handle is closed.\n To get a borrowed handle, use `HandleRef`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":19184,"byte_end":19193,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"from_file","qualname":"<Handle>::from_file","value":"fn (file: File) -> Handle","parent":null,"children":[],"decl_id":null,"docs":" Create an owned handle to the given file.\n\n When the returned handle is dropped, the file is closed.\n\n Note that if the given file represents a handle to a directory, then\n it is generally required that it have been opened with the\n [`FILE_FLAG_BACKUP_SEMANTICS`] flag in order to use it in various\n calls such as `information` or `typ`. To have this done automatically\n for you, use the `from_path_any` constructor.\n\n [`FILE_FLAG_BACKUP_SEMANTICS`]: https://docs.microsoft.com/en-us/windows/desktop/api/FileAPI/nf-fileapi-createfilea\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":19530,"byte_end":19539,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"from_path","qualname":"<Handle>::from_path","value":"fn <P> (path: P) -> io::Result<Handle>","parent":null,"children":[],"decl_id":null,"docs":" Open a file to the given file path, and return an owned handle to that\n file.\n\n When the returned handle is dropped, the file is closed.\n\n If there was a problem opening the file, then the corresponding error\n is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":19846,"byte_end":19859,"line_start":66,"line_end":66,"column_start":12,"column_end":25},"name":"from_path_any","qualname":"<Handle>::from_path_any","value":"fn <P> (path: P) -> io::Result<Handle>","parent":null,"children":[],"decl_id":null,"docs":" Like `from_path`, but supports opening directory handles as well.\n\n If you use `from_path` on a directory, then subsequent queries using\n that handle will fail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":20310,"byte_end":20317,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"as_file","qualname":"<Handle>::as_file","value":"fn (&self) -> &File","parent":null,"children":[],"decl_id":null,"docs":" Return this handle as a standard `File` reference.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":20437,"byte_end":20448,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"as_file_mut","qualname":"<Handle>::as_file_mut","value":"fn (&mut self) -> &mut File","parent":null,"children":[],"decl_id":null,"docs":" Return this handle as a standard `File` mutable reference.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":20792,"byte_end":20801,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"HandleRef","qualname":"::win::HandleRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a borrowed and valid Windows handle to a file-like object, such\n as stdin/stdout/stderr or an actual file.\n\n When a borrowed handle is dropped, then the underlying raw handle is\n **not** closed. To get an owned handle, use `Handle`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":21526,"byte_end":21531,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"name":"stdin","qualname":"<HandleRef>::stdin","value":"fn () -> HandleRef","parent":null,"children":[],"decl_id":null,"docs":" Create a borrowed handle to stdin.\n\n When the returned handle is dropped, stdin is not closed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":21752,"byte_end":21758,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"stdout","qualname":"<HandleRef>::stdout","value":"fn () -> HandleRef","parent":null,"children":[],"decl_id":null,"docs":" Create a handle to stdout.\n\n When the returned handle is dropped, stdout is not closed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":21980,"byte_end":21986,"line_start":138,"line_end":138,"column_start":12,"column_end":18},"name":"stderr","qualname":"<HandleRef>::stderr","value":"fn () -> HandleRef","parent":null,"children":[],"decl_id":null,"docs":" Create a handle to stderr.\n\n When the returned handle is dropped, stderr is not closed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":22227,"byte_end":22236,"line_start":145,"line_end":145,"column_start":12,"column_end":21},"name":"from_file","qualname":"<HandleRef>::from_file","value":"fn (file: &File) -> HandleRef","parent":null,"children":[],"decl_id":null,"docs":" Create a borrowed handle to the given file.\n\n When the returned handle is dropped, the file is not closed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":22904,"byte_end":22919,"line_start":161,"line_end":161,"column_start":19,"column_end":34},"name":"from_raw_handle","qualname":"<HandleRef>::from_raw_handle","value":"fn (handle: RawHandle) -> HandleRef","parent":null,"children":[],"decl_id":null,"docs":" Create a borrowed handle from the given raw handle.\n\n Note that unlike the `FromRawHandle` trait, this constructor does\n **not** consume ownership of the given handle. That is, when the\n borrowed handle created by this constructor is dropped, the underlying\n handle will not be closed.\n\n # Safety\n\n This is unsafe because there is no guarantee that the given raw handle\n is a valid handle. The caller must ensure this is true before invoking\n this constructor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":23102,"byte_end":23109,"line_start":166,"line_end":166,"column_start":12,"column_end":19},"name":"as_file","qualname":"<HandleRef>::as_file","value":"fn (&self) -> &File","parent":null,"children":[],"decl_id":null,"docs":" Return this handle as a standard `File` reference.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":23250,"byte_end":23261,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"as_file_mut","qualname":"<HandleRef>::as_file_mut","value":"fn (&mut self) -> &mut File","parent":null,"children":[],"decl_id":null,"docs":" Return this handle as a standard `File` mutable reference.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":23417,"byte_end":23428,"line_start":177,"line_end":177,"column_start":11,"column_end":22},"name":"AsHandleRef","qualname":"::win::AsHandleRef","value":"AsHandleRef","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"decl_id":null,"docs":" Construct borrowed and valid Windows handles from file-like objects.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":23512,"byte_end":23525,"line_start":179,"line_end":179,"column_start":8,"column_end":21},"name":"as_handle_ref","qualname":"::win::AsHandleRef::as_handle_ref","value":"fn (&self) -> HandleRef","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" A borrowed handle that wraps the raw handle of the `Self` object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":23690,"byte_end":23696,"line_start":183,"line_end":183,"column_start":8,"column_end":14},"name":"as_raw","qualname":"::win::AsHandleRef::as_raw","value":"fn (&self) -> RawHandle","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" A convenience routine for extracting a `HandleRef` from `Self`, and\n then extracting a raw handle from the `HandleRef`.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":4320,"byte_end":4336,"line_start":95,"line_end":95,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":6649,"byte_end":6659,"line_start":171,"line_end":171,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":6854,"byte_end":6861,"line_start":180,"line_end":180,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":10202,"byte_end":10216,"line_start":276,"line_end":276,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":10870,"byte_end":10877,"line_start":304,"line_end":304,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":11573,"byte_end":11578,"line_start":343,"line_end":343,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":14589,"byte_end":14600,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":16766,"byte_end":16770,"line_start":135,"line_end":135,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":18188,"byte_end":18194,"line_start":17,"line_end":17,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":18303,"byte_end":18309,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":18451,"byte_end":18457,"line_start":29,"line_end":29,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":18551,"byte_end":18557,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":21017,"byte_end":21031,"line_start":102,"line_end":102,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":21139,"byte_end":21148,"line_start":108,"line_end":108,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":21257,"byte_end":21266,"line_start":114,"line_end":114,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":21386,"byte_end":21395,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":23928,"byte_end":23934,"line_start":194,"line_end":194,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":24078,"byte_end":24087,"line_start":200,"line_end":200,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":24184,"byte_end":24188,"line_start":206,"line_end":206,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":24303,"byte_end":24308,"line_start":212,"line_end":212,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":24456,"byte_end":24462,"line_start":218,"line_end":218,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":24610,"byte_end":24616,"line_start":224,"line_end":224,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":24769,"byte_end":24779,"line_start":230,"line_end":230,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":24932,"byte_end":24943,"line_start":236,"line_end":236,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":25096,"byte_end":25107,"line_start":242,"line_end":242,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","byte_start":1073,"byte_end":1080,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\lib.rs","byte_start":1171,"byte_end":1175,"line_start":30,"line_end":30,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":64}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":4320,"byte_end":4336,"line_start":95,"line_end":95,"column_start":6,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":6649,"byte_end":6659,"line_start":171,"line_end":171,"column_start":6,"column_end":16},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":6854,"byte_end":6861,"line_start":180,"line_end":180,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":10202,"byte_end":10216,"line_start":276,"line_end":276,"column_start":6,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":10870,"byte_end":10877,"line_start":304,"line_end":304,"column_start":6,"column_end":13},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\console.rs","byte_start":11573,"byte_end":11578,"line_start":343,"line_end":343,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":14589,"byte_end":14600,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\file.rs","byte_start":16766,"byte_end":16770,"line_start":135,"line_end":135,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":18188,"byte_end":18194,"line_start":17,"line_end":17,"column_start":22,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":255},"to":{"krate":1,"index":8561}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":18303,"byte_end":18309,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":255},"to":{"krate":1,"index":8563}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":18451,"byte_end":18457,"line_start":29,"line_end":29,"column_start":24,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":255},"to":{"krate":1,"index":8565}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":18551,"byte_end":18557,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":21017,"byte_end":21031,"line_start":102,"line_end":102,"column_start":15,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":265},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":21139,"byte_end":21148,"line_start":108,"line_end":108,"column_start":22,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":260},"to":{"krate":1,"index":8561}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":21257,"byte_end":21266,"line_start":114,"line_end":114,"column_start":16,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":260},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":21386,"byte_end":21395,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":23928,"byte_end":23934,"line_start":194,"line_end":194,"column_start":22,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":255},"to":{"krate":0,"index":138}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":24078,"byte_end":24087,"line_start":200,"line_end":200,"column_start":22,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":260},"to":{"krate":0,"index":138}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":24184,"byte_end":24188,"line_start":206,"line_end":206,"column_start":22,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":1,"index":2087},"to":{"krate":0,"index":138}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":24303,"byte_end":24308,"line_start":212,"line_end":212,"column_start":26,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":1,"index":2685},"to":{"krate":0,"index":138}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":24456,"byte_end":24462,"line_start":218,"line_end":218,"column_start":26,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":2715},"to":{"krate":0,"index":138}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":24610,"byte_end":24616,"line_start":224,"line_end":224,"column_start":26,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":1,"index":2740},"to":{"krate":0,"index":138}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":24769,"byte_end":24779,"line_start":230,"line_end":230,"column_start":31,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":1,"index":4109},"to":{"krate":0,"index":138}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":24932,"byte_end":24943,"line_start":236,"line_end":236,"column_start":31,"column_end":42},"kind":{"Impl":{"id":23}},"from":{"krate":1,"index":4123},"to":{"krate":0,"index":138}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\winapi-util-0.1.3\\src\\win.rs","byte_start":25096,"byte_end":25107,"line_start":242,"line_end":242,"column_start":31,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":4137},"to":{"krate":0,"index":138}}]}