{"config":{"output_file":null,"full_docs":true,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0","program":"C:\\Users\\chapm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","xi_unicode","C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=a71b4c7f44f6b665","-C","extra-filename=-a71b4c7f44f6b665","--out-dir","c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\chapm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\chapm\\Documents\\Projects\\git\\mosaic\\target\\rls\\debug\\deps\\libxi_unicode-a71b4c7f44f6b665.rmeta"},"prelude":{"crate_id":{"name":"xi_unicode","disambiguator":[232587236240704448,12212771976639670304]},"crate_root":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src","external_crates":[{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}}],"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":600,"byte_end":27053,"line_start":15,"line_end":580,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":600,"byte_end":27053,"line_start":15,"line_end":580,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":60},{"krate":0,"index":68},{"krate":0,"index":65},{"krate":0,"index":8},{"krate":0,"index":12},{"krate":0,"index":70},{"krate":0,"index":75},{"krate":0,"index":73},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":32},{"krate":0,"index":41}],"decl_id":null,"docs":" Unicode utilities useful for text editing, including a line breaking iterator.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":726,"byte_end":744,"line_start":20,"line_end":20,"column_start":8,"column_end":26},"name":"linebreak_property","qualname":"::linebreak_property","value":"fn (cp: char) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":1291,"byte_end":1313,"line_start":36,"line_end":36,"column_start":8,"column_end":30},"name":"linebreak_property_str","qualname":"::linebreak_property_str","value":"fn (s: &str, ix: usize) -> (u8, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":2569,"byte_end":2586,"line_start":63,"line_end":63,"column_start":12,"column_end":29},"name":"LineBreakIterator","qualname":"::LineBreakIterator","value":"LineBreakIterator {  }","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"decl_id":null,"docs":" An iterator which produces line breaks according to the UAX 14 line\n breaking algorithm. For each break, return a tuple consisting of the offset\n within the source string and a bool indicating whether it's a hard break.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":3812,"byte_end":3815,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<LineBreakIterator>::new","value":"fn (s: &str) -> LineBreakIterator","parent":null,"children":[],"decl_id":null,"docs":" Create a new iterator for the given string slice.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":4793,"byte_end":4810,"line_start":124,"line_end":124,"column_start":12,"column_end":29},"name":"LineBreakLeafIter","qualname":"::LineBreakLeafIter","value":"LineBreakLeafIter {  }","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"decl_id":null,"docs":" A class (TODO, not right word) useful for computing line breaks in a rope or\n other non-contiguous string representation. This is a trickier problem than\n iterating in a string for a few reasons, the trickiest of which is that in\n the general case, line breaks require an indeterminate amount of look-behind.\n\n This is something of an \"expert-level\" interface, and should only be used if\n the caller is prepared to respect all the invariants. Otherwise, you might\n get inconsistent breaks depending on start positiona and leaf boundaries.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":5280,"byte_end":5283,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<LineBreakLeafIter>::new","value":"fn (s: &str, ix: usize) -> LineBreakLeafIter","parent":null,"children":[],"decl_id":null,"docs":" Create a new line break iterator suitable for leaves in a rope.\n Precondition: ix is at a code point boundary within s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":6133,"byte_end":6137,"line_start":155,"line_end":155,"column_start":12,"column_end":16},"name":"next","qualname":"<LineBreakLeafIter>::next","value":"fn (&mut self, s: &str) -> (usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Return break pos and whether it's a hard break. Note: hard break\n indication may go away, this may not be useful in actual application.\n If end of leaf is found, return leaf's len. This does not indicate\n a break, as that requires at least one more codepoint of context.\n If it is a break, then subsequent next call will return an offset of 0.\n EOT is always a break, so in the EOT case it's up to the caller\n to figure that out.\n\n For consistent results, always supply same `s` until end of leaf is\n reached (and initially this should be the same as in the `new` call).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":7348,"byte_end":7369,"line_start":195,"line_end":195,"column_start":8,"column_end":29},"name":"is_variation_selector","qualname":"::is_variation_selector","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":7485,"byte_end":7493,"line_start":199,"line_end":199,"column_start":11,"column_end":19},"name":"EmojiExt","qualname":"::EmojiExt","value":"EmojiExt","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":7503,"byte_end":7531,"line_start":200,"line_end":200,"column_start":8,"column_end":36},"name":"is_regional_indicator_symbol","qualname":"::EmojiExt::is_regional_indicator_symbol","value":"fn (self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":7554,"byte_end":7571,"line_start":201,"line_end":201,"column_start":8,"column_end":25},"name":"is_emoji_modifier","qualname":"::EmojiExt::is_emoji_modifier","value":"fn (self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":7594,"byte_end":7629,"line_start":202,"line_end":202,"column_start":8,"column_end":43},"name":"is_emoji_combining_enclosing_keycap","qualname":"::EmojiExt::is_emoji_combining_enclosing_keycap","value":"fn (self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":7652,"byte_end":7660,"line_start":203,"line_end":203,"column_start":8,"column_end":16},"name":"is_emoji","qualname":"::EmojiExt::is_emoji","value":"fn (self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":7683,"byte_end":7705,"line_start":204,"line_end":204,"column_start":8,"column_end":30},"name":"is_emoji_modifier_base","qualname":"::EmojiExt::is_emoji_modifier_base","value":"fn (self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":7728,"byte_end":7744,"line_start":205,"line_end":205,"column_start":8,"column_end":24},"name":"is_tag_spec_char","qualname":"::EmojiExt::is_tag_spec_char","value":"fn (self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":7767,"byte_end":7786,"line_start":206,"line_end":206,"column_start":8,"column_end":27},"name":"is_emoji_cancel_tag","qualname":"::EmojiExt::is_emoji_cancel_tag","value":"fn (self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":7809,"byte_end":7815,"line_start":207,"line_end":207,"column_start":8,"column_end":14},"name":"is_zwj","qualname":"::EmojiExt::is_zwj","value":"fn (self) -> bool","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":8661,"byte_end":8675,"line_start":237,"line_end":237,"column_start":8,"column_end":22},"name":"is_keycap_base","qualname":"::is_keycap_base","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":2664,"byte_end":2681,"line_start":69,"line_end":69,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":3719,"byte_end":3736,"line_start":99,"line_end":99,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":4863,"byte_end":4880,"line_start":129,"line_end":129,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":5114,"byte_end":5131,"line_start":137,"line_end":137,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":2664,"byte_end":2681,"line_start":69,"line_end":69,"column_start":23,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":3719,"byte_end":3736,"line_start":99,"line_end":99,"column_start":10,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":60},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":4863,"byte_end":4880,"line_start":129,"line_end":129,"column_start":18,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":70},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\chapm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xi-unicode-0.2.0\\src\\lib.rs","byte_start":5114,"byte_end":5131,"line_start":137,"line_end":137,"column_start":6,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":70},"to":{"krate":4294967295,"index":4294967295}}]}